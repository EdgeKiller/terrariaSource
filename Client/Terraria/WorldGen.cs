using Microsoft.Xna.Framework;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;
namespace Terraria
{
	internal class WorldGen
	{
		private static int lAltarX;
		private static int lAltarY;
		public static int tileReframeCount = 0;
		public static bool noMapUpdate = false;
		public static double worldSurfaceLow;
		public static int tLeft;
		public static int tRight;
		public static int tTop;
		public static int tBottom;
		public static int tRooms;
		public static int[] mossType = new int[3];
		public static int c = 0;
		public static int m = 0;
		public static int a = 0;
		public static int co = 0;
		public static int ir = 0;
		public static int si = 0;
		public static int go = 0;
		public static int copperBar = 20;
		public static int ironBar = 22;
		public static int silverBar = 21;
		public static int goldBar = 19;
		public static int treeBG = 0;
		public static int corruptBG = 0;
		public static int jungleBG = 0;
		public static int snowBG = 0;
		public static int hallowBG = 0;
		public static int crimsonBG = 0;
		public static int desertBG = 0;
		public static int oceanBG = 0;
		public static int oreTier1 = -1;
		public static int oreTier2 = -1;
		public static int oreTier3 = -1;
		public static bool crimson = false;
		public static byte mossTile = 179;
		public static byte mossWall = 54;
		private static int dWallCount = 0;
		private static bool dWallBroke = false;
		public static bool[] gem = new bool[6];
		public static int[] tileCounts = new int[340];
		public static int totalEvil = 0;
		public static int totalBlood = 0;
		public static int totalGood = 0;
		public static int totalSolid = 0;
		public static int totalEvil2 = 0;
		public static int totalBlood2 = 0;
		public static int totalGood2 = 0;
		public static int totalSolid2 = 0;
		public static byte tEvil = 0;
		public static byte tBlood = 0;
		public static byte tGood = 0;
		public static int totalX = 0;
		public static int totalD = 0;
		public static bool hardLock = false;
		private static Vector2[] heartPos = new Vector2[100];
		private static int heartCount = 0;
		public static int lavaLine;
		public static int waterLine;
		public static bool noTileActions = false;
		public static bool spawnEye = false;
		public static int spawnHardBoss = 0;
		public static bool gen = false;
		public static bool shadowOrbSmashed = false;
		public static int shadowOrbCount = 0;
		public static int altarCount = 0;
		public static bool spawnMeteor = false;
		public static bool loadFailed = false;
		public static bool loadSuccess = false;
		public static bool worldCleared = false;
		public static bool worldBackup = false;
		public static bool loadBackup = false;
		private static int lastMaxTilesX = 0;
		private static int lastMaxTilesY = 0;
		public static bool saveLock = false;
		private static bool mergeUp = false;
		private static bool mergeDown = false;
		private static bool mergeLeft = false;
		private static bool mergeRight = false;
		private static bool stopDrops = false;
		private static bool mudWall = false;
		private static int grassSpread = 0;
		public static bool noLiquidCheck = false;
		[ThreadStatic]
		public static Random genRand = new Random();
		public static string statusText = "";
		public static bool destroyObject = false;
		public static int spawnDelay = 0;
		public static int spawnNPC = 0;
		public static int numTileCount = 0;
		public static int maxTileCount = 3500;
		public static int maxWallOut2 = 5000;
		public static int numWallOut2 = 0;
		public static int[] countX = new int[WorldGen.maxTileCount];
		public static int[] countY = new int[WorldGen.maxTileCount];
		public static int lavaCount = 0;
		public static int iceCount = 0;
		public static int rockCount = 0;
		public static int maxRoomTiles = 750;
		public static int numRoomTiles;
		public static int[] roomX = new int[WorldGen.maxRoomTiles];
		public static int[] roomY = new int[WorldGen.maxRoomTiles];
		public static int roomX1;
		public static int roomX2;
		public static int roomY1;
		public static int roomY2;
		public static bool canSpawn;
		public static bool[] houseTile = new bool[340];
		public static int bestX = 0;
		public static int bestY = 0;
		public static int hiScore = 0;
		public static int dungeonX;
		public static int dungeonY;
		public static Vector2 lastDungeonHall = Vector2.Zero;
		public static int maxDRooms = 100;
		public static int numDRooms = 0;
		public static int[] dRoomX = new int[WorldGen.maxDRooms];
		public static int[] dRoomY = new int[WorldGen.maxDRooms];
		public static int[] dRoomSize = new int[WorldGen.maxDRooms];
		private static bool[] dRoomTreasure = new bool[WorldGen.maxDRooms];
		private static int[] dRoomL = new int[WorldGen.maxDRooms];
		private static int[] dRoomR = new int[WorldGen.maxDRooms];
		private static int[] dRoomT = new int[WorldGen.maxDRooms];
		private static int[] dRoomB = new int[WorldGen.maxDRooms];
		private static int numDDoors;
		private static int[] DDoorX = new int[300];
		private static int[] DDoorY = new int[300];
		private static int[] DDoorPos = new int[300];
		private static int numDPlats;
		private static int[] DPlatX = new int[300];
		private static int[] DPlatY = new int[300];
		private static int[] JChestX = new int[100];
		private static int[] JChestY = new int[100];
		private static int numJChests = 0;
		private static int[] HiveX = new int[100];
		private static int[] HiveY = new int[100];
		private static int numHives = 0;
		public static int dEnteranceX = 0;
		public static bool dSurface = false;
		private static double dxStrength1;
		private static double dyStrength1;
		private static double dxStrength2;
		private static double dyStrength2;
		private static int dMinX;
		private static int dMaxX;
		private static int dMinY;
		private static int dMaxY;
		private static int numIslandHouses = 0;
		private static int houseCount = 0;
		private static int[] fihX = new int[300];
		private static int[] fihY = new int[300];
		private static int numMCaves = 0;
		private static int[] mCaveX = new int[300];
		private static int[] mCaveY = new int[300];
		private static int JungleX = 0;
		private static int hellChest = 0;
		private static bool roomTorch;
		private static bool roomDoor;
		private static bool roomChair;
		private static bool roomTable;
		private static bool roomOccupied;
		private static bool roomEvil;
		private static int tileCounterNum = 0;
		private static int tileCounterMax = 20;
		private static int[] tileCounterX = new int[WorldGen.tileCounterMax];
		private static int[] tileCounterY = new int[WorldGen.tileCounterMax];
		public static bool MoveNPC(int x, int y, int n)
		{
			if (!WorldGen.StartRoomCheck(x, y))
			{
				Main.NewText(Lang.inter[40], 255, 240, 20, false);
				return false;
			}
			if (!WorldGen.RoomNeeds(WorldGen.spawnNPC))
			{
				if (Lang.lang <= 1)
				{
					int num = 0;
					string[] array = new string[4];
					if (!WorldGen.roomTorch)
					{
						array[num] = "a light source";
						num++;
					}
					if (!WorldGen.roomDoor)
					{
						array[num] = "a door";
						num++;
					}
					if (!WorldGen.roomTable)
					{
						array[num] = "a table";
						num++;
					}
					if (!WorldGen.roomChair)
					{
						array[num] = "a chair";
						num++;
					}
					string text = "";
					for (int i = 0; i < num; i++)
					{
						if (num == 2 && i == 1)
						{
							text += " and ";
						}
						else if (i > 0 && i != num - 1)
						{
							text += ", and ";
						}
						else if (i > 0)
						{
							text += ", ";
						}
						text += array[i];
					}
					Main.NewText("This housing is missing " + text + ".", 255, 240, 20, false);
				}
				else
				{
					Main.NewText(Lang.inter[39], 255, 240, 20, false);
				}
				return false;
			}
			WorldGen.ScoreRoom(-1);
			if (WorldGen.hiScore <= 0)
			{
				if (WorldGen.roomOccupied)
				{
					Main.NewText(Lang.inter[41], 255, 240, 20, false);
				}
				else if (WorldGen.roomEvil)
				{
					Main.NewText(Lang.inter[42], 255, 240, 20, false);
				}
				else
				{
					Main.NewText(Lang.inter[40], 255, 240, 20, false);
				}
				return false;
			}
			if (n > 0 && !WorldGen.CheckConditions(Main.npc[n].type))
			{
				Main.NewText(Lang.inter[55] + " " + Main.npc[n].name, 255, 240, 20, false);
				return false;
			}
			return true;
		}
		public static void moveRoom(int x, int y, int n)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(60, -1, -1, "", n, (float)x, (float)y, 1f, 0);
				return;
			}
			WorldGen.spawnNPC = Main.npc[n].type;
			Main.npc[n].homeless = true;
			WorldGen.SpawnNPC(x, y);
		}
		public static void kickOut(int n)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(60, -1, -1, "", n, 0f, 0f, 0f, 0);
				return;
			}
			Main.npc[n].homeless = true;
		}
		public static bool NextNPC()
		{
			if (WorldGen.CheckConditions(WorldGen.spawnNPC))
			{
				bool flag = false;
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].type == WorldGen.spawnNPC)
					{
						flag = true;
					}
				}
				if (flag)
				{
					return true;
				}
			}
			for (int j = 0; j < 378; j++)
			{
				if (Main.nextNPC[j] && WorldGen.CheckConditions(j))
				{
					bool flag2 = false;
					for (int k = 0; k < 200; k++)
					{
						if (Main.npc[k].type == j)
						{
							flag2 = true;
						}
					}
					if (!flag2)
					{
						WorldGen.spawnNPC = j;
						return true;
					}
					Main.nextNPC[j] = false;
				}
			}
			return false;
		}
		public static bool CheckConditions(int type)
		{
			if (type != 160)
			{
				return true;
			}
			if ((double)WorldGen.roomY2 > Main.worldSurface)
			{
				return false;
			}
			int num = 0;
			int num2 = WorldGen.roomX1 - Main.zoneX / 2 / 16 - 1 - Lighting.offScreenTiles;
			int num3 = WorldGen.roomX2 + Main.zoneX / 2 / 16 + 1 + Lighting.offScreenTiles;
			int num4 = WorldGen.roomY1 - Main.zoneY / 2 / 16 - 1 - Lighting.offScreenTiles;
			int num5 = WorldGen.roomY2 + Main.zoneY / 2 / 16 + 1 + Lighting.offScreenTiles;
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num3 >= Main.maxTilesX)
			{
				num3 = Main.maxTilesX - 1;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num5 > Main.maxTilesX)
			{
				num5 = Main.maxTilesX;
			}
			for (int i = num2 + 1; i < num3; i++)
			{
				for (int j = num4 + 2; j < num5 + 2; j++)
				{
					if (Main.tile[i, j].active() && (Main.tile[i, j].type == 70 || Main.tile[i, j].type == 71 || Main.tile[i, j].type == 72))
					{
						num++;
					}
				}
			}
			return num >= 100;
		}
		public static void UnspawnTravelNPC()
		{
			int num = -1;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 368)
				{
					num = i;
					break;
				}
			}
			if (num < 0)
			{
				return;
			}
			int num2 = (int)(Main.npc[num].center().X / 16f);
			int num3 = (int)(Main.npc[num].center().Y / 16f);
			bool flag = true;
			Rectangle value = new Rectangle(num2 * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num3 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					Rectangle rectangle = new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height);
					if (rectangle.Intersects(value))
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				string str = Main.npc[num].name;
				if (Main.npc[num].displayName != "")
				{
					if (Lang.lang <= 1)
					{
						str = Main.npc[num].displayName + " " + Lang.the + Main.npc[num].name;
					}
					else
					{
						str = Main.npc[num].displayName;
					}
				}
				if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[35], 50, 125, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[35], 255, 50f, 125f, 255f, 0);
				}
				Main.npc[num].active = false;
				Main.npc[num].netSkip = -1;
				Main.npc[num].life = 0;
				NetMessage.SendData(23, -1, -1, "", num, 0f, 0f, 0f, 0);
			}
		}
		public static void SpawnTravelNPC()
		{
			if (Main.eclipse || !Main.dayTime)
			{
				return;
			}
			if (Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0)
			{
				return;
			}
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 368)
				{
					return;
				}
			}
			Chest.SetupTravelShop();
			NetMessage.SendTravelShop();
			int[] array = new int[200];
			int num = 0;
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active && Main.npc[j].townNPC && Main.npc[j].type != 37 && !Main.npc[j].homeless)
				{
					array[num] = j;
					num++;
				}
			}
			if (num == 0)
			{
				return;
			}
			int num2 = array[Main.rand.Next(num)];
			WorldGen.bestX = Main.npc[num2].homeTileX;
			WorldGen.bestY = Main.npc[num2].homeTileY;
			int minValue = WorldGen.bestX;
			int num3 = WorldGen.bestX;
			int num4 = WorldGen.bestY;
			int num5 = WorldGen.bestX;
			while (num5 > WorldGen.bestX - 10 && (WorldGen.SolidTile(num5, num4) || Main.tileSolidTop[(int)Main.tile[num5, num4].type]) && (!Main.tile[num5, num4 - 1].active() || !Main.tileSolid[(int)Main.tile[num5, num4 - 1].type] || Main.tileSolidTop[(int)Main.tile[num5, num4 - 1].type]) && (!Main.tile[num5, num4 - 2].active() || !Main.tileSolid[(int)Main.tile[num5, num4 - 2].type] || Main.tileSolidTop[(int)Main.tile[num5, num4 - 2].type]) && (!Main.tile[num5, num4 - 3].active() || !Main.tileSolid[(int)Main.tile[num5, num4 - 3].type] || Main.tileSolidTop[(int)Main.tile[num5, num4 - 3].type]))
			{
				minValue = num5;
				num5--;
			}
			int num6 = WorldGen.bestX;
			while (num6 < WorldGen.bestX + 10 && (WorldGen.SolidTile(num6, num4) || Main.tileSolidTop[(int)Main.tile[num6, num4].type]) && (!Main.tile[num6, num4 - 1].active() || !Main.tileSolid[(int)Main.tile[num6, num4 - 1].type] || Main.tileSolidTop[(int)Main.tile[num6, num4 - 1].type]) && (!Main.tile[num6, num4 - 2].active() || !Main.tileSolid[(int)Main.tile[num6, num4 - 2].type] || Main.tileSolidTop[(int)Main.tile[num6, num4 - 2].type]) && (!Main.tile[num6, num4 - 3].active() || !Main.tileSolid[(int)Main.tile[num6, num4 - 3].type] || Main.tileSolidTop[(int)Main.tile[num6, num4 - 3].type]))
			{
				num3 = num6;
				num6++;
			}
			for (int k = 0; k < 30; k++)
			{
				int num7 = Main.rand.Next(minValue, num3 + 1);
				if (k < 20)
				{
					if (num7 < WorldGen.bestX - 1 || num7 > WorldGen.bestX + 1)
					{
						WorldGen.bestX = num7;
						break;
					}
				}
				else if (num7 != WorldGen.bestX)
				{
					WorldGen.bestX = num7;
					break;
				}
			}
			int num8 = WorldGen.bestX;
			int num9 = WorldGen.bestY;
			bool flag = false;
			if (!flag && (double)num9 <= Main.worldSurface)
			{
				for (int l = 20; l < 500; l++)
				{
					for (int m = 0; m < 2; m++)
					{
						if (m == 0)
						{
							num8 = WorldGen.bestX + l * 2;
						}
						else
						{
							num8 = WorldGen.bestX - l * 2;
						}
						if (num8 > 10 && num8 < Main.maxTilesX - 10)
						{
							int num10 = WorldGen.bestY - l;
							double num11 = (double)(WorldGen.bestY + l);
							if (num10 < 10)
							{
								num10 = 10;
							}
							if (num11 > Main.worldSurface)
							{
								num11 = Main.worldSurface;
							}
							int num12 = num10;
							while ((double)num12 < num11)
							{
								num9 = num12;
								if (Main.tile[num8, num9].nactive() && Main.tileSolid[(int)Main.tile[num8, num9].type])
								{
									if (Main.tile[num8, num9 - 1].liquid == 0 && !Collision.SolidTiles(num8 - 1, num8 + 1, num9 - 3, num9 - 1))
									{
										flag = true;
										Rectangle value = new Rectangle(num8 * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num9 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
										for (int n = 0; n < 255; n++)
										{
											if (Main.player[n].active)
											{
												Rectangle rectangle = new Rectangle((int)Main.player[n].position.X, (int)Main.player[n].position.Y, Main.player[n].width, Main.player[n].height);
												if (rectangle.Intersects(value))
												{
													flag = false;
													break;
												}
											}
										}
										break;
									}
									break;
								}
								else
								{
									num12++;
								}
							}
						}
						if (flag)
						{
							break;
						}
					}
					if (flag)
					{
						break;
					}
				}
			}
			int num13 = NPC.NewNPC(num8 * 16, num9 * 16, 368, 1);
			Main.npc[num13].homeTileX = WorldGen.bestX;
			Main.npc[num13].homeTileY = WorldGen.bestY;
			Main.npc[num13].homeless = true;
			if (num8 < WorldGen.bestX)
			{
				Main.npc[num13].direction = 1;
			}
			else if (num8 > WorldGen.bestX)
			{
				Main.npc[num13].direction = -1;
			}
			Main.npc[num13].netUpdate = true;
			string str = Main.npc[num13].name;
			if (Main.npc[num13].displayName != "")
			{
				if (Lang.lang <= 1)
				{
					str = Main.npc[num13].displayName + " " + Lang.the + Main.npc[num13].name;
				}
				else
				{
					str = Main.npc[num13].displayName;
				}
			}
			if (Main.netMode == 0)
			{
				Main.NewText(str + " " + Lang.misc[18], 50, 125, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[18], 255, 50f, 125f, 255f, 0);
			}
		}
		public static void SpawnNPC(int x, int y)
		{
			if (Main.wallHouse[(int)Main.tile[x, y].wall])
			{
				WorldGen.canSpawn = true;
			}
			if (!WorldGen.canSpawn)
			{
				return;
			}
			if (!WorldGen.StartRoomCheck(x, y))
			{
				return;
			}
			if (!WorldGen.RoomNeeds(WorldGen.spawnNPC))
			{
				return;
			}
			WorldGen.ScoreRoom(-1);
			if (WorldGen.hiScore > 0)
			{
				int num = -1;
				for (int i = 0; i < 200; i++)
				{
					if (Main.npc[i].active && Main.npc[i].homeless && Main.npc[i].type == WorldGen.spawnNPC && WorldGen.CheckConditions(Main.npc[i].type))
					{
						num = i;
						break;
					}
				}
				if (!WorldGen.NextNPC())
				{
					return;
				}
				if (num == -1)
				{
					int num2 = WorldGen.bestX;
					int num3 = WorldGen.bestY;
					bool flag = false;
					if (!flag)
					{
						flag = true;
						Rectangle value = new Rectangle(num2 * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num3 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						for (int j = 0; j < 255; j++)
						{
							if (Main.player[j].active)
							{
								Rectangle rectangle = new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height);
								if (rectangle.Intersects(value))
								{
									flag = false;
									break;
								}
							}
						}
					}
					if (!flag && (double)num3 <= Main.worldSurface)
					{
						for (int k = 1; k < 500; k++)
						{
							for (int l = 0; l < 2; l++)
							{
								if (l == 0)
								{
									num2 = WorldGen.bestX + k;
								}
								else
								{
									num2 = WorldGen.bestX - k;
								}
								if (num2 > 10 && num2 < Main.maxTilesX - 10)
								{
									int num4 = WorldGen.bestY - k;
									double num5 = (double)(WorldGen.bestY + k);
									if (num4 < 10)
									{
										num4 = 10;
									}
									if (num5 > Main.worldSurface)
									{
										num5 = Main.worldSurface;
									}
									int num6 = num4;
									while ((double)num6 < num5)
									{
										num3 = num6;
										if (Main.tile[num2, num3].nactive() && Main.tileSolid[(int)Main.tile[num2, num3].type])
										{
											if (!Collision.SolidTiles(num2 - 1, num2 + 1, num3 - 3, num3 - 1))
											{
												flag = true;
												Rectangle value2 = new Rectangle(num2 * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num3 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
												for (int m = 0; m < 255; m++)
												{
													if (Main.player[m].active)
													{
														Rectangle rectangle2 = new Rectangle((int)Main.player[m].position.X, (int)Main.player[m].position.Y, Main.player[m].width, Main.player[m].height);
														if (rectangle2.Intersects(value2))
														{
															flag = false;
															break;
														}
													}
												}
												break;
											}
											break;
										}
										else
										{
											num6++;
										}
									}
								}
								if (flag)
								{
									break;
								}
							}
							if (flag)
							{
								break;
							}
						}
					}
					int num7 = NPC.NewNPC(num2 * 16, num3 * 16, WorldGen.spawnNPC, 1);
					Main.nextNPC[WorldGen.spawnNPC] = false;
					Main.npc[num7].homeTileX = WorldGen.bestX;
					Main.npc[num7].homeTileY = WorldGen.bestY;
					if (num2 < WorldGen.bestX)
					{
						Main.npc[num7].direction = 1;
					}
					else if (num2 > WorldGen.bestX)
					{
						Main.npc[num7].direction = -1;
					}
					Main.npc[num7].netUpdate = true;
					string str = Main.npc[num7].name;
					if (Main.npc[num7].displayName != "")
					{
						if (Lang.lang <= 1)
						{
							str = Main.npc[num7].displayName + " " + Lang.the + Main.npc[num7].name;
						}
						else
						{
							str = Main.npc[num7].displayName;
						}
					}
					if (Main.netMode == 0)
					{
						Main.NewText(str + " " + Lang.misc[18], 50, 125, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[18], 255, 50f, 125f, 255f, 0);
					}
				}
				else
				{
					Main.nextNPC[WorldGen.spawnNPC] = false;
					WorldGen.spawnNPC = 0;
					Main.npc[num].homeTileX = WorldGen.bestX;
					Main.npc[num].homeTileY = WorldGen.bestY;
					Main.npc[num].homeless = false;
				}
				WorldGen.spawnNPC = 0;
			}
		}
		public static bool RoomNeeds(int npcType)
		{
			WorldGen.roomChair = false;
			WorldGen.roomDoor = false;
			WorldGen.roomTable = false;
			WorldGen.roomTorch = false;
			if (WorldGen.houseTile[15] || WorldGen.houseTile[79] || WorldGen.houseTile[89] || WorldGen.houseTile[102])
			{
				WorldGen.roomChair = true;
			}
			if (WorldGen.houseTile[14] || WorldGen.houseTile[18] || WorldGen.houseTile[87] || WorldGen.houseTile[88] || WorldGen.houseTile[90] || WorldGen.houseTile[101])
			{
				WorldGen.roomTable = true;
			}
			if (WorldGen.houseTile[4] || WorldGen.houseTile[33] || WorldGen.houseTile[34] || WorldGen.houseTile[35] || WorldGen.houseTile[42] || WorldGen.houseTile[49] || WorldGen.houseTile[93] || WorldGen.houseTile[95] || WorldGen.houseTile[98] || WorldGen.houseTile[100] || WorldGen.houseTile[149] || WorldGen.houseTile[173] || WorldGen.houseTile[174] || WorldGen.houseTile[270] || WorldGen.houseTile[271] || WorldGen.houseTile[316] || WorldGen.houseTile[317] || WorldGen.houseTile[318])
			{
				WorldGen.roomTorch = true;
			}
			if (WorldGen.houseTile[10] || WorldGen.houseTile[11] || WorldGen.houseTile[19])
			{
				WorldGen.roomDoor = true;
			}
			if (WorldGen.roomChair && WorldGen.roomTable && WorldGen.roomDoor && WorldGen.roomTorch)
			{
				WorldGen.canSpawn = true;
			}
			else
			{
				WorldGen.canSpawn = false;
			}
			return WorldGen.canSpawn;
		}
		public static void QuickFindHome(int npc)
		{
			if (Main.npc[npc].homeTileX > 10 && Main.npc[npc].homeTileY > 10 && Main.npc[npc].homeTileX < Main.maxTilesX - 10 && Main.npc[npc].homeTileY < Main.maxTilesY)
			{
				WorldGen.canSpawn = false;
				WorldGen.StartRoomCheck(Main.npc[npc].homeTileX, Main.npc[npc].homeTileY - 1);
				if (!WorldGen.canSpawn)
				{
					for (int i = Main.npc[npc].homeTileX - 1; i < Main.npc[npc].homeTileX + 2; i++)
					{
						int num = Main.npc[npc].homeTileY - 1;
						while (num < Main.npc[npc].homeTileY + 2 && !WorldGen.StartRoomCheck(i, num))
						{
							num++;
						}
					}
				}
				if (!WorldGen.canSpawn)
				{
					int num2 = 10;
					for (int j = Main.npc[npc].homeTileX - num2; j <= Main.npc[npc].homeTileX + num2; j += 2)
					{
						int num3 = Main.npc[npc].homeTileY - num2;
						while (num3 <= Main.npc[npc].homeTileY + num2 && !WorldGen.StartRoomCheck(j, num3))
						{
							num3 += 2;
						}
					}
				}
				if (WorldGen.canSpawn)
				{
					WorldGen.RoomNeeds(Main.npc[npc].type);
					if (WorldGen.canSpawn)
					{
						WorldGen.ScoreRoom(npc);
					}
					if (WorldGen.canSpawn && WorldGen.hiScore > 0)
					{
						Main.npc[npc].homeTileX = WorldGen.bestX;
						Main.npc[npc].homeTileY = WorldGen.bestY;
						Main.npc[npc].homeless = false;
						WorldGen.canSpawn = false;
						return;
					}
					Main.npc[npc].homeless = true;
					return;
				}
				else
				{
					Main.npc[npc].homeless = true;
				}
			}
		}
		public static void ScoreRoom(int ignoreNPC = -1)
		{
			WorldGen.roomOccupied = false;
			WorldGen.roomEvil = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].townNPC && ignoreNPC != i && !Main.npc[i].homeless)
				{
					for (int j = 0; j < WorldGen.numRoomTiles; j++)
					{
						if (Main.npc[i].homeTileX == WorldGen.roomX[j] && Main.npc[i].homeTileY == WorldGen.roomY[j])
						{
							bool flag = false;
							for (int k = 0; k < WorldGen.numRoomTiles; k++)
							{
								if (Main.npc[i].homeTileX == WorldGen.roomX[k] && Main.npc[i].homeTileY - 1 == WorldGen.roomY[k])
								{
									flag = true;
									break;
								}
							}
							if (flag)
							{
								WorldGen.roomOccupied = true;
								WorldGen.hiScore = -1;
								return;
							}
						}
					}
				}
			}
			WorldGen.hiScore = 0;
			int num = 50;
			int num2 = 0;
			int num3 = WorldGen.roomX1 - Main.zoneX / 2 / 16 - 1 - Lighting.offScreenTiles;
			int num4 = WorldGen.roomX2 + Main.zoneX / 2 / 16 + 1 + Lighting.offScreenTiles;
			int num5 = WorldGen.roomY1 - Main.zoneY / 2 / 16 - 1 - Lighting.offScreenTiles;
			int num6 = WorldGen.roomY2 + Main.zoneY / 2 / 16 + 1 + Lighting.offScreenTiles;
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num4 >= Main.maxTilesX)
			{
				num4 = Main.maxTilesX - 1;
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			for (int l = num3 + 1; l < num4; l++)
			{
				for (int m = num5 + 2; m < num6 + 2; m++)
				{
					if (Main.tile[l, m].active())
					{
						if (Main.tile[l, m].type == 23 || Main.tile[l, m].type == 24 || Main.tile[l, m].type == 25 || Main.tile[l, m].type == 32 || Main.tile[l, m].type == 112 || Main.tile[l, m].type == 163)
						{
							num2++;
						}
						else if (Main.tile[l, m].type == 199 || Main.tile[l, m].type == 201 || Main.tile[l, m].type == 200 || Main.tile[l, m].type == 203 || Main.tile[l, m].type == 234)
						{
							num2++;
						}
						else if (Main.tile[l, m].type == 27)
						{
							num2 -= 5;
						}
						else if (Main.tile[l, m].type == 109 || Main.tile[l, m].type == 110 || Main.tile[l, m].type == 113 || Main.tile[l, m].type == 116 || Main.tile[l, m].type == 164)
						{
							num2--;
						}
					}
				}
			}
			if (num2 < 50)
			{
				num2 = 0;
			}
			num -= num2;
			if (num <= -250)
			{
				WorldGen.hiScore = num;
				WorldGen.roomEvil = true;
				return;
			}
			num3 = WorldGen.roomX1;
			num4 = WorldGen.roomX2;
			num5 = WorldGen.roomY1;
			num6 = WorldGen.roomY2;
			for (int n = num3 + 1; n < num4; n++)
			{
				for (int num7 = num5 + 2; num7 < num6 + 2; num7++)
				{
					if (Main.tile[n, num7].nactive())
					{
						int num8 = num;
						if (Main.tileSolid[(int)Main.tile[n, num7].type] && !Main.tileSolidTop[(int)Main.tile[n, num7].type] && !Collision.SolidTiles(n - 1, n + 1, num7 - 3, num7 - 1) && Main.tile[n - 1, num7].nactive() && Main.tileSolid[(int)Main.tile[n - 1, num7].type] && Main.tile[n + 1, num7].nactive() && Main.tileSolid[(int)Main.tile[n + 1, num7].type])
						{
							for (int num9 = n - 2; num9 < n + 3; num9++)
							{
								for (int num10 = num7 - 4; num10 < num7; num10++)
								{
									if (Main.tile[num9, num10].nactive())
									{
										if (num9 == n)
										{
											num8 -= 15;
										}
										else if (Main.tile[num9, num10].type == 10 || Main.tile[num9, num10].type == 11)
										{
											num8 -= 20;
										}
										else if (Main.tileSolid[(int)Main.tile[num9, num10].type])
										{
											num8 -= 5;
										}
										else
										{
											num8 += 5;
										}
									}
								}
							}
							if (num8 > WorldGen.hiScore)
							{
								bool flag2 = false;
								for (int num11 = 0; num11 < WorldGen.numRoomTiles; num11++)
								{
									if (WorldGen.roomX[num11] == n && WorldGen.roomY[num11] == num7)
									{
										flag2 = true;
										break;
									}
								}
								if (flag2)
								{
									WorldGen.hiScore = num8;
									WorldGen.bestX = n;
									WorldGen.bestY = num7;
								}
							}
						}
					}
				}
			}
		}
		public static bool StartRoomCheck(int x, int y)
		{
			WorldGen.roomX1 = x;
			WorldGen.roomX2 = x;
			WorldGen.roomY1 = y;
			WorldGen.roomY2 = y;
			WorldGen.numRoomTiles = 0;
			for (int i = 0; i < 340; i++)
			{
				WorldGen.houseTile[i] = false;
			}
			WorldGen.canSpawn = true;
			if (Main.tile[x, y].nactive() && Main.tileSolid[(int)Main.tile[x, y].type])
			{
				WorldGen.canSpawn = false;
			}
			WorldGen.CheckRoom(x, y);
			if (WorldGen.numRoomTiles < 60)
			{
				WorldGen.canSpawn = false;
			}
			return WorldGen.canSpawn;
		}
		public static void CheckRoom(int x, int y)
		{
			if (!WorldGen.canSpawn)
			{
				return;
			}
			if (x < 10 || y < 10 || x >= Main.maxTilesX - 10 || y >= WorldGen.lastMaxTilesY - 10)
			{
				WorldGen.canSpawn = false;
				return;
			}
			for (int i = 0; i < WorldGen.numRoomTiles; i++)
			{
				if (WorldGen.roomX[i] == x && WorldGen.roomY[i] == y)
				{
					return;
				}
			}
			WorldGen.roomX[WorldGen.numRoomTiles] = x;
			WorldGen.roomY[WorldGen.numRoomTiles] = y;
			WorldGen.numRoomTiles++;
			if (WorldGen.numRoomTiles >= WorldGen.maxRoomTiles)
			{
				WorldGen.canSpawn = false;
				return;
			}
			if (Main.tile[x, y].nactive())
			{
				WorldGen.houseTile[(int)Main.tile[x, y].type] = true;
				if (Main.tileSolid[(int)Main.tile[x, y].type])
				{
					return;
				}
				if (Main.tile[x, y].type == 11 && (Main.tile[x, y].frameX == 0 || Main.tile[x, y].frameX == 54))
				{
					return;
				}
			}
			if (x < WorldGen.roomX1)
			{
				WorldGen.roomX1 = x;
			}
			if (x > WorldGen.roomX2)
			{
				WorldGen.roomX2 = x;
			}
			if (y < WorldGen.roomY1)
			{
				WorldGen.roomY1 = y;
			}
			if (y > WorldGen.roomY2)
			{
				WorldGen.roomY2 = y;
			}
			bool flag = false;
			bool flag2 = false;
			for (int j = -2; j < 3; j++)
			{
				if (Main.wallHouse[(int)Main.tile[x + j, y].wall])
				{
					flag = true;
				}
				if (Main.tile[x + j, y].nactive() && (Main.tileSolid[(int)Main.tile[x + j, y].type] || Main.tile[x + j, y].type == 11))
				{
					flag = true;
				}
				if (Main.wallHouse[(int)Main.tile[x, y + j].wall])
				{
					flag2 = true;
				}
				if (Main.tile[x, y + j].nactive() && (Main.tileSolid[(int)Main.tile[x, y + j].type] || Main.tile[x, y + j].type == 11))
				{
					flag2 = true;
				}
			}
			if (!flag || !flag2)
			{
				WorldGen.canSpawn = false;
				return;
			}
			for (int k = x - 1; k < x + 2; k++)
			{
				for (int l = y - 1; l < y + 2; l++)
				{
					if ((k != x || l != y) && WorldGen.canSpawn)
					{
						WorldGen.CheckRoom(k, l);
					}
				}
			}
		}
		public static void dropMeteor()
		{
			bool flag = true;
			int num = 0;
			if (Main.netMode == 1)
			{
				return;
			}
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					flag = false;
					break;
				}
			}
			int num2 = 0;
			float num3 = (float)(Main.maxTilesX / 4200);
			int num4 = (int)(400f * num3);
			for (int j = 5; j < Main.maxTilesX - 5; j++)
			{
				int num5 = 5;
				while ((double)num5 < Main.worldSurface)
				{
					if (Main.tile[j, num5].active() && Main.tile[j, num5].type == 37)
					{
						num2++;
						if (num2 > num4)
						{
							return;
						}
					}
					num5++;
				}
			}
			while (!flag)
			{
				float num6 = (float)Main.maxTilesX * 0.08f;
				int num7 = Main.rand.Next(50, Main.maxTilesX - 50);
				while ((float)num7 > (float)Main.spawnTileX - num6 && (float)num7 < (float)Main.spawnTileX + num6)
				{
					num7 = Main.rand.Next(50, Main.maxTilesX - 50);
				}
				for (int k = Main.rand.Next(100); k < Main.maxTilesY; k++)
				{
					if (Main.tile[num7, k].active() && Main.tileSolid[(int)Main.tile[num7, k].type])
					{
						flag = WorldGen.meteor(num7, k);
						break;
					}
				}
				num++;
				if (num >= 100)
				{
					return;
				}
			}
		}
		public static bool meteor(int i, int j)
		{
			if (i < 50 || i > Main.maxTilesX - 50)
			{
				return false;
			}
			if (j < 50 || j > Main.maxTilesY - 50)
			{
				return false;
			}
			int num = 25;
			Rectangle rectangle = new Rectangle((i - num) * 16, (j - num) * 16, num * 2 * 16, num * 2 * 16);
			for (int k = 0; k < 255; k++)
			{
				if (Main.player[k].active)
				{
					Rectangle value = new Rectangle((int)(Main.player[k].position.X + (float)(Main.player[k].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[k].position.Y + (float)(Main.player[k].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
					if (rectangle.Intersects(value))
					{
						return false;
					}
				}
			}
			for (int l = 0; l < 200; l++)
			{
				if (Main.npc[l].active)
				{
					Rectangle value2 = new Rectangle((int)Main.npc[l].position.X, (int)Main.npc[l].position.Y, Main.npc[l].width, Main.npc[l].height);
					if (rectangle.Intersects(value2))
					{
						return false;
					}
				}
			}
			for (int m = i - num; m < i + num; m++)
			{
				for (int n = j - num; n < j + num; n++)
				{
					if (Main.tile[m, n].active() && Main.tile[m, n].type == 21)
					{
						return false;
					}
				}
			}
			WorldGen.stopDrops = true;
			num = 15;
			for (int num2 = i - num; num2 < i + num; num2++)
			{
				for (int num3 = j - num; num3 < j + num; num3++)
				{
					if (num3 > j + Main.rand.Next(-2, 3) - 5 && (double)(Math.Abs(i - num2) + Math.Abs(j - num3)) < (double)num * 1.5 + (double)Main.rand.Next(-5, 5))
					{
						if (!Main.tileSolid[(int)Main.tile[num2, num3].type])
						{
							Main.tile[num2, num3].active(false);
						}
						Main.tile[num2, num3].type = 37;
					}
				}
			}
			num = 10;
			for (int num4 = i - num; num4 < i + num; num4++)
			{
				for (int num5 = j - num; num5 < j + num; num5++)
				{
					if (num5 > j + Main.rand.Next(-2, 3) - 5 && Math.Abs(i - num4) + Math.Abs(j - num5) < num + Main.rand.Next(-3, 4))
					{
						Main.tile[num4, num5].active(false);
					}
				}
			}
			num = 16;
			for (int num6 = i - num; num6 < i + num; num6++)
			{
				for (int num7 = j - num; num7 < j + num; num7++)
				{
					if (Main.tile[num6, num7].type == 5 || Main.tile[num6, num7].type == 32)
					{
						WorldGen.KillTile(num6, num7, false, false, false);
					}
					WorldGen.SquareTileFrame(num6, num7, true);
					WorldGen.SquareWallFrame(num6, num7, true);
				}
			}
			num = 23;
			for (int num8 = i - num; num8 < i + num; num8++)
			{
				for (int num9 = j - num; num9 < j + num; num9++)
				{
					if (Main.tile[num8, num9].active() && Main.rand.Next(10) == 0 && (double)(Math.Abs(i - num8) + Math.Abs(j - num9)) < (double)num * 1.3)
					{
						if (Main.tile[num8, num9].type == 5 || Main.tile[num8, num9].type == 32)
						{
							WorldGen.KillTile(num8, num9, false, false, false);
						}
						Main.tile[num8, num9].type = 37;
						WorldGen.SquareTileFrame(num8, num9, true);
					}
				}
			}
			WorldGen.stopDrops = false;
			if (Main.netMode == 0)
			{
				Main.NewText(Lang.gen[59], 50, 255, 130, false);
			}
			else if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Lang.gen[59], 255, 50f, 255f, 130f, 0);
			}
			if (Main.netMode != 1)
			{
				NetMessage.SendTileSquare(-1, i, j, 30);
			}
			return true;
		}
		public static void setWorldSize()
		{
			Main.bottomWorld = (float)(Main.maxTilesY * 16);
			Main.rightWorld = (float)(Main.maxTilesX * 16);
			Main.maxSectionsX = Main.maxTilesX / 200;
			Main.maxSectionsY = Main.maxTilesY / 150;
		}
		public static void worldGenCallBack(object threadContext)
		{
			Main.PlaySound(10, -1, -1, 1);
			WorldGen.clearWorld();
			WorldGen.generateWorld(-1);
			WorldFile.saveWorld(true);
			Main.LoadWorlds();
			if (Main.menuMode == 10)
			{
				Main.menuMode = 6;
			}
			Main.PlaySound(10, -1, -1, 1);
		}
		public static void CreateNewWorld()
		{
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.worldGenCallBack), 1);
		}
		public static void SaveAndQuitCallBack(object threadContext)
		{
			try
			{
				Main.PlaySound(34, -1, -1, 0);
				Main.PlaySound(35, -1, -1, 0);
			}
			catch
			{
			}
			Main.menuMode = 10;
			Main.gameMenu = true;
			Player.SavePlayer(Main.player[Main.myPlayer], Main.playerPathName, false, false);
			if (Main.netMode == 0)
			{
				WorldFile.saveWorld(false);
				Main.PlaySound(10, -1, -1, 1);
			}
			else
			{
				Netplay.disconnect = true;
				Main.netMode = 0;
			}
			Main.menuMode = 0;
		}
		public static void SaveAndQuit()
		{
			Main.PlaySound(11, -1, -1, 1);
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.SaveAndQuitCallBack), 1);
		}
		public static void playWorldCallBack(object threadContext)
		{
			if (Main.rand == null)
			{
				Main.rand = new Random((int)DateTime.Now.Ticks);
			}
			for (int i = 0; i < 255; i++)
			{
				if (i != Main.myPlayer)
				{
					Main.player[i].active = false;
				}
			}
			WorldGen.noMapUpdate = true;
			WorldFile.loadWorld();
			if (WorldGen.loadFailed || !WorldGen.loadSuccess)
			{
				WorldFile.loadWorld();
				if (WorldGen.loadFailed || !WorldGen.loadSuccess)
				{
					if (File.Exists(Main.worldPathName + ".bak"))
					{
						WorldGen.worldBackup = true;
					}
					else
					{
						WorldGen.worldBackup = false;
					}
					if (!Main.dedServ)
					{
						if (WorldGen.worldBackup)
						{
							Main.menuMode = 200;
							return;
						}
						Main.menuMode = 201;
						return;
					}
					else
					{
						if (!WorldGen.worldBackup)
						{
							Console.WriteLine("Load failed!  No backup found.");
							return;
						}
						File.Copy(Main.worldPathName, Main.worldPathName + ".bad", true);
						File.Copy(Main.worldPathName + ".bak", Main.worldPathName, true);
						File.Delete(Main.worldPathName + ".bak");
						WorldFile.loadWorld();
						if (WorldGen.loadFailed || !WorldGen.loadSuccess)
						{
							WorldFile.loadWorld();
							if (WorldGen.loadFailed || !WorldGen.loadSuccess)
							{
								File.Copy(Main.worldPathName, Main.worldPathName + ".bak", true);
								File.Copy(Main.worldPathName + ".bad", Main.worldPathName, true);
								File.Delete(Main.worldPathName + ".bad");
								Console.WriteLine("Load failed!");
								return;
							}
						}
					}
				}
			}
			if (Main.mapEnabled)
			{
				Map.loadMap();
			}
			if (Main.netMode != 2)
			{
				Main.sectionManager.SetAllFramesLoaded();
			}
			while (Main.loadMapLock)
			{
				float num = (float)Main.loadMapLastX / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[68],
					" ",
					(int)(num * 100f + 1f),
					"%"
				});
				Thread.Sleep(0);
				if (!Main.mapEnabled)
				{
					break;
				}
			}
			if (Main.gameMenu)
			{
				Main.gameMenu = false;
			}
			if (Main.netMode == 0 && Main.anglerWhoFinishedToday.Contains(Main.player[Main.myPlayer].name))
			{
				Main.anglerQuestFinished = true;
			}
			Main.player[Main.myPlayer].Spawn();
			Main.player[Main.myPlayer].UpdatePlayer(Main.myPlayer);
			Main.dayTime = WorldFile.tempDayTime;
			Main.time = WorldFile.tempTime;
			Main.moonPhase = WorldFile.tempMoonPhase;
			Main.bloodMoon = WorldFile.tempBloodMoon;
			Main.raining = WorldFile.tempRaining;
			Main.rainTime = WorldFile.tempRainTime;
			Main.maxRaining = WorldFile.tempMaxRain;
			Main.cloudAlpha = WorldFile.tempMaxRain;
			Main.PlaySound(11, -1, -1, 1);
			Main.resetClouds = true;
			WorldGen.noMapUpdate = false;
		}
		public static void playWorld()
		{
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.playWorldCallBack), 1);
		}
		public static void saveAndPlayCallBack(object threadContext)
		{
			WorldFile.saveWorld(false);
		}
		public static void saveAndPlay()
		{
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.saveAndPlayCallBack), 1);
		}
		public static void saveToonWhilePlayingCallBack(object threadContext)
		{
			Player.SavePlayer(Main.player[Main.myPlayer], Main.playerPathName, false, false);
		}
		public static void saveToonWhilePlaying()
		{
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.saveToonWhilePlayingCallBack), 1);
		}
		public static void serverLoadWorldCallBack(object threadContext)
		{
			WorldFile.loadWorld();
			if (WorldGen.loadFailed || !WorldGen.loadSuccess)
			{
				WorldFile.loadWorld();
				if (WorldGen.loadFailed || !WorldGen.loadSuccess)
				{
					if (File.Exists(Main.worldPathName + ".bak"))
					{
						WorldGen.worldBackup = true;
					}
					else
					{
						WorldGen.worldBackup = false;
					}
					if (!Main.dedServ)
					{
						if (WorldGen.worldBackup)
						{
							Main.menuMode = 200;
							return;
						}
						Main.menuMode = 201;
						return;
					}
					else
					{
						if (!WorldGen.worldBackup)
						{
							Console.WriteLine("Load failed!  No backup found.");
							return;
						}
						File.Copy(Main.worldPathName + ".bak", Main.worldPathName, true);
						File.Delete(Main.worldPathName + ".bak");
						WorldFile.loadWorld();
						if (WorldGen.loadFailed || !WorldGen.loadSuccess)
						{
							WorldFile.loadWorld();
							if (WorldGen.loadFailed || !WorldGen.loadSuccess)
							{
								Console.WriteLine("Load failed!");
								return;
							}
						}
					}
				}
			}
			Main.PlaySound(10, -1, -1, 1);
			Netplay.StartServer();
			Main.dayTime = WorldFile.tempDayTime;
			Main.time = WorldFile.tempTime;
			Main.raining = WorldFile.tempRaining;
			Main.rainTime = WorldFile.tempRainTime;
			Main.maxRaining = WorldFile.tempMaxRain;
			Main.cloudAlpha = WorldFile.tempMaxRain;
			Main.moonPhase = WorldFile.tempMoonPhase;
			Main.bloodMoon = WorldFile.tempBloodMoon;
			Main.eclipse = WorldFile.tempEclipse;
		}
		public static void serverLoadWorld()
		{
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.serverLoadWorldCallBack), 1);
		}
		public static void clearWorld()
		{
			Main.checkXMas();
			Main.checkHalloween();
			if (Main.mapReady)
			{
				for (int i = 0; i < WorldGen.lastMaxTilesX; i++)
				{
					float num = (float)i / (float)WorldGen.lastMaxTilesX;
					Main.statusText = string.Concat(new object[]
					{
						Lang.gen[65],
						" ",
						(int)(num * 100f + 1f),
						"%"
					});
					for (int j = 0; j < WorldGen.lastMaxTilesY; j++)
					{
						if (Main.map[i, j] != null)
						{
							Main.map[i, j] = null;
						}
					}
				}
			}
			Main.pumpkinMoon = false;
			Main.clearMap = true;
			Main.mapTime = 0;
			Main.updateMap = false;
			Main.mapReady = false;
			Main.refreshMap = false;
			Main.eclipse = false;
			NPC.waveKills = 0f;
			WorldGen.spawnHardBoss = 0;
			WorldGen.totalSolid2 = 0;
			WorldGen.totalGood2 = 0;
			WorldGen.totalEvil2 = 0;
			WorldGen.totalBlood2 = 0;
			WorldGen.totalSolid = 0;
			WorldGen.totalGood = 0;
			WorldGen.totalEvil = 0;
			WorldGen.totalBlood = 0;
			WorldFile.ResetTemps();
			Main.maxRaining = 0f;
			WorldGen.totalX = 0;
			WorldGen.totalD = 0;
			WorldGen.tEvil = 0;
			WorldGen.tBlood = 0;
			WorldGen.tGood = 0;
			Main.trashItem = new Item();
			WorldGen.spawnEye = false;
			WorldGen.spawnNPC = 0;
			WorldGen.shadowOrbCount = 0;
			WorldGen.altarCount = 0;
			WorldGen.oreTier1 = -1;
			WorldGen.oreTier2 = -1;
			WorldGen.oreTier3 = -1;
			Main.cloudBGActive = 0f;
			Main.raining = false;
			Main.hardMode = false;
			Main.helpText = 0;
			Main.dungeonX = 0;
			Main.dungeonY = 0;
			NPC.downedBoss1 = false;
			NPC.downedBoss2 = false;
			NPC.downedBoss3 = false;
			NPC.downedQueenBee = false;
			NPC.downedMechBossAny = false;
			NPC.downedMechBoss1 = false;
			NPC.downedMechBoss2 = false;
			NPC.downedMechBoss3 = false;
			NPC.downedPlantBoss = false;
			NPC.savedStylist = false;
			NPC.savedGoblin = false;
			NPC.savedWizard = false;
			NPC.savedMech = false;
			NPC.downedGoblins = false;
			NPC.downedClown = false;
			NPC.downedFrost = false;
			NPC.downedPirates = false;
			NPC.savedAngler = false;
			WorldGen.shadowOrbSmashed = false;
			WorldGen.spawnMeteor = false;
			WorldGen.stopDrops = false;
			Main.invasionDelay = 0;
			Main.invasionType = 0;
			Main.invasionSize = 0;
			Main.invasionWarn = 0;
			Main.invasionX = 0.0;
			Main.treeX[0] = Main.maxTilesX;
			Main.treeX[1] = Main.maxTilesX;
			Main.treeX[2] = Main.maxTilesX;
			Main.treeStyle[0] = 0;
			Main.treeStyle[1] = 0;
			Main.treeStyle[2] = 0;
			Main.treeStyle[3] = 0;
			WorldGen.noLiquidCheck = false;
			Liquid.numLiquid = 0;
			LiquidBuffer.numLiquidBuffer = 0;
			if (Main.netMode == 1 || WorldGen.lastMaxTilesX > Main.maxTilesX || WorldGen.lastMaxTilesY > Main.maxTilesY)
			{
				for (int k = 0; k < WorldGen.lastMaxTilesX; k++)
				{
					float num2 = (float)k / (float)WorldGen.lastMaxTilesX;
					Main.statusText = string.Concat(new object[]
					{
						Lang.gen[46],
						" ",
						(int)(num2 * 100f + 1f),
						"%"
					});
					for (int l = 0; l < WorldGen.lastMaxTilesY; l++)
					{
						Main.tile[k, l] = null;
					}
				}
			}
			WorldGen.lastMaxTilesX = Main.maxTilesX;
			WorldGen.lastMaxTilesY = Main.maxTilesY;
			if (Main.netMode != 2)
			{
				Main.sectionManager = new WorldSections(Main.maxTilesX / 200, Main.maxTilesY / 150);
			}
			if (Main.netMode != 1)
			{
				for (int m = 0; m < Main.maxTilesX; m++)
				{
					float num3 = (float)m / (float)Main.maxTilesX;
					Main.statusText = string.Concat(new object[]
					{
						Lang.gen[47],
						" ",
						(int)(num3 * 100f + 1f),
						"%"
					});
					for (int n = 0; n < Main.maxTilesY; n++)
					{
						if (Main.tile[m, n] == null)
						{
							Main.tile[m, n] = new Tile();
						}
						else
						{
							Main.tile[m, n].Clear();
						}
					}
				}
			}
			for (int num4 = 0; num4 < 6000; num4++)
			{
				Main.dust[num4] = new Dust();
			}
			for (int num5 = 0; num5 < 500; num5++)
			{
				Main.gore[num5] = new Gore();
			}
			for (int num6 = 0; num6 < 400; num6++)
			{
				Main.item[num6] = new Item();
			}
			for (int num7 = 0; num7 < 200; num7++)
			{
				Main.npc[num7] = new NPC();
			}
			for (int num8 = 0; num8 < 1000; num8++)
			{
				Main.projectile[num8] = new Projectile();
			}
			for (int num9 = 0; num9 < 1000; num9++)
			{
				Main.chest[num9] = null;
			}
			for (int num10 = 0; num10 < 1000; num10++)
			{
				Main.sign[num10] = null;
			}
			for (int num11 = 0; num11 < Liquid.resLiquid; num11++)
			{
				Main.liquid[num11] = new Liquid();
			}
			for (int num12 = 0; num12 < 10000; num12++)
			{
				Main.liquidBuffer[num12] = new LiquidBuffer();
			}
			WorldGen.setWorldSize();
			WorldGen.worldCleared = true;
		}
		public static void randMoon()
		{
			Main.moonType = WorldGen.genRand.Next(Main.maxMoons);
		}
		public static void setBG(int bg, int style)
		{
			if (bg == 0)
			{
				WorldGen.treeBG = style;
				Main.treeMntBG[0] = 7;
				Main.treeMntBG[1] = 8;
				if (style == 1)
				{
					Main.treeBG[0] = 50;
					Main.treeBG[1] = 51;
					Main.treeBG[2] = 52;
					return;
				}
				if (style == 2)
				{
					Main.treeBG[0] = 53;
					Main.treeBG[1] = 54;
					Main.treeBG[2] = 55;
					return;
				}
				if (style == 3)
				{
					Main.treeMntBG[1] = 90;
					Main.treeBG[0] = 91;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 92;
					return;
				}
				if (style == 31)
				{
					Main.treeMntBG[1] = 90;
					Main.treeBG[0] = 91;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 11;
					return;
				}
				if (style == 4)
				{
					Main.treeMntBG[0] = 93;
					Main.treeMntBG[1] = 94;
					Main.treeBG[0] = -1;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = -1;
					return;
				}
				if (style == 5)
				{
					Main.treeMntBG[0] = 93;
					Main.treeMntBG[1] = 94;
					Main.treeBG[0] = -1;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 55;
					return;
				}
				if (style == 51)
				{
					Main.treeMntBG[0] = 93;
					Main.treeMntBG[1] = 94;
					Main.treeBG[0] = -1;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 11;
					return;
				}
				if (style == 6)
				{
					Main.treeMntBG[0] = 171;
					Main.treeMntBG[1] = 172;
					Main.treeBG[0] = 173;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = -1;
					return;
				}
				if (style == 7)
				{
					Main.treeMntBG[0] = 176;
					Main.treeMntBG[1] = 177;
					Main.treeBG[0] = 178;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = -1;
					return;
				}
				if (style == 71)
				{
					Main.treeMntBG[0] = 176;
					Main.treeMntBG[1] = 177;
					Main.treeBG[0] = 178;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 11;
					return;
				}
				if (style == 72)
				{
					Main.treeMntBG[0] = 176;
					Main.treeMntBG[1] = 177;
					Main.treeBG[0] = 178;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 52;
					return;
				}
				if (style == 73)
				{
					Main.treeMntBG[0] = 176;
					Main.treeMntBG[1] = 177;
					Main.treeBG[0] = 178;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = 55;
					return;
				}
				if (style == 8)
				{
					Main.treeMntBG[0] = 179;
					Main.treeMntBG[1] = 180;
					Main.treeBG[0] = 184;
					Main.treeBG[1] = -1;
					Main.treeBG[2] = -1;
					return;
				}
				Main.treeBG[0] = 9;
				Main.treeBG[1] = 10;
				Main.treeBG[2] = 11;
				return;
			}
			else if (bg == 1)
			{
				WorldGen.corruptBG = style;
				if (style == 1)
				{
					Main.corruptBG[0] = 56;
					Main.corruptBG[1] = 57;
					Main.corruptBG[2] = 58;
					return;
				}
				Main.corruptBG[0] = 12;
				Main.corruptBG[1] = 13;
				Main.corruptBG[2] = 14;
				return;
			}
			else if (bg == 2)
			{
				WorldGen.jungleBG = style;
				if (style == 1)
				{
					Main.jungleBG[0] = 59;
					Main.jungleBG[1] = 60;
					Main.jungleBG[2] = 61;
					return;
				}
				Main.jungleBG[0] = 15;
				Main.jungleBG[1] = 16;
				Main.jungleBG[2] = 17;
				return;
			}
			else if (bg == 3)
			{
				WorldGen.snowBG = style;
				Main.snowMntBG[0] = 35;
				Main.snowMntBG[1] = 36;
				if (style == 1)
				{
					Main.snowBG[0] = 95;
					Main.snowBG[1] = 96;
					Main.snowBG[2] = 97;
					return;
				}
				if (style == 2)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 99;
					Main.snowBG[0] = -1;
					Main.snowBG[1] = -1;
					Main.snowBG[2] = -1;
					return;
				}
				if (style == 21)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 99;
					Main.snowBG[0] = 95;
					Main.snowBG[1] = 96;
					Main.snowBG[2] = 97;
					return;
				}
				if (style == 22)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 99;
					Main.snowBG[0] = 37;
					Main.snowBG[1] = 38;
					Main.snowBG[2] = 39;
					return;
				}
				if (style == 3)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 100;
					Main.snowBG[0] = -1;
					Main.snowBG[1] = -1;
					Main.snowBG[2] = -1;
					return;
				}
				if (style == 31)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 100;
					Main.snowBG[0] = 95;
					Main.snowBG[1] = 96;
					Main.snowBG[2] = 97;
					return;
				}
				if (style == 32)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 100;
					Main.snowBG[0] = 37;
					Main.snowBG[1] = 38;
					Main.snowBG[2] = 39;
					return;
				}
				if (style == 4)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 101;
					Main.snowBG[0] = -1;
					Main.snowBG[1] = -1;
					Main.snowBG[2] = -1;
					return;
				}
				if (style == 41)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 101;
					Main.snowBG[0] = 95;
					Main.snowBG[1] = 96;
					Main.snowBG[2] = 97;
					return;
				}
				if (style == 42)
				{
					Main.snowMntBG[0] = 98;
					Main.snowMntBG[1] = 101;
					Main.snowBG[0] = 37;
					Main.snowBG[1] = 38;
					Main.snowBG[2] = 39;
					return;
				}
				Main.snowBG[0] = 37;
				Main.snowBG[1] = 38;
				Main.snowBG[2] = 39;
				return;
			}
			else if (bg == 4)
			{
				WorldGen.hallowBG = style;
				if (style == 1)
				{
					Main.hallowBG[0] = 102;
					Main.hallowBG[1] = 103;
					Main.hallowBG[2] = 104;
					return;
				}
				Main.hallowBG[0] = 29;
				Main.hallowBG[1] = 30;
				Main.hallowBG[2] = 31;
				return;
			}
			else if (bg == 5)
			{
				WorldGen.crimsonBG = style;
				if (style == 1)
				{
					Main.crimsonBG[0] = 105;
					Main.crimsonBG[1] = 106;
					Main.crimsonBG[2] = 107;
				}
				if (style == 2)
				{
					Main.crimsonBG[0] = 174;
					Main.crimsonBG[1] = -1;
					Main.crimsonBG[2] = 175;
					return;
				}
				Main.crimsonBG[0] = 43;
				Main.crimsonBG[1] = 44;
				Main.crimsonBG[2] = 45;
				return;
			}
			else
			{
				if (bg != 6)
				{
					if (bg == 7)
					{
						WorldGen.oceanBG = style;
						if (style == 1)
						{
							Main.oceanBG = 110;
							return;
						}
						if (style == 2)
						{
							Main.oceanBG = 111;
							return;
						}
						Main.oceanBG = 28;
					}
					return;
				}
				WorldGen.desertBG = style;
				if (style == 1)
				{
					Main.desertBG[0] = 108;
					Main.desertBG[1] = 109;
					return;
				}
				Main.desertBG[0] = 21;
				Main.desertBG[1] = 20;
				return;
			}
		}
		public static void RandomWeather()
		{
			if (Main.cloudLimit < 10)
			{
				return;
			}
			Main.numClouds = WorldGen.genRand.Next(10, Main.cloudLimit);
			Main.windSpeed = 0f;
			while (Main.windSpeed == 0f)
			{
				Main.windSpeed = (float)WorldGen.genRand.Next(-100, 101) * 0.01f;
				Main.windSpeedSet = Main.windSpeed;
			}
			Cloud.resetClouds();
		}
		private static void resetGen()
		{
			WorldGen.mudWall = false;
			WorldGen.hellChest = 0;
			WorldGen.JungleX = 0;
			WorldGen.numMCaves = 0;
			WorldGen.numIslandHouses = 0;
			WorldGen.houseCount = 0;
			WorldGen.dEnteranceX = 0;
			WorldGen.numDRooms = 0;
			WorldGen.numDDoors = 0;
			WorldGen.numDPlats = 0;
			WorldGen.numJChests = 0;
			WorldGen.numHives = 0;
		}
		public static bool mayanTrap(int x2, int y2)
		{
			int num = 1;
			if (WorldGen.genRand.Next(3) == 0)
			{
				num = 0;
			}
			int num2 = y2;
			while (!WorldGen.SolidTile(x2, num2))
			{
				num2++;
				if (num2 >= Main.maxTilesY - 300)
				{
					return false;
				}
			}
			if (Main.tile[x2, num2].type == 232)
			{
				return false;
			}
			num2--;
			if (Main.tile[x2, num2].liquid > 0 && Main.tile[x2, num2].lava())
			{
				return false;
			}
			if (num == -1 && Main.rand.Next(20) == 0)
			{
				num = 2;
			}
			else if (num == -1)
			{
				num = Main.rand.Next(2);
			}
			if (Main.tile[x2, num2].nactive() || Main.tile[x2 - 1, num2].nactive() || Main.tile[x2 + 1, num2].nactive() || Main.tile[x2, num2 - 1].nactive() || Main.tile[x2 - 1, num2 - 1].nactive() || Main.tile[x2 + 1, num2 - 1].nactive() || Main.tile[x2, num2 - 2].nactive() || Main.tile[x2 - 1, num2 - 2].nactive() || Main.tile[x2 + 1, num2 - 2].nactive())
			{
				return false;
			}
			if (Main.tile[x2, num2 + 1].type == 48)
			{
				return false;
			}
			if (Main.tile[x2, num2 + 1].type == 232)
			{
				return false;
			}
			if (num == 0)
			{
				int num3 = x2;
				int num4 = num2;
				num4 -= WorldGen.genRand.Next(3);
				while (!WorldGen.SolidTile(num3, num4))
				{
					num3--;
				}
				int num5 = num3;
				num3 = x2;
				while (!WorldGen.SolidTile(num3, num4))
				{
					num3++;
				}
				int num6 = num3;
				int num7 = x2 - num5;
				int num8 = num6 - x2;
				bool flag = false;
				bool flag2 = false;
				if (num7 > 5 && num7 < 50)
				{
					flag = true;
				}
				if (num8 > 5 && num8 < 50)
				{
					flag2 = true;
				}
				if (flag && !WorldGen.SolidTile(num5, num4 + 1))
				{
					flag = false;
				}
				if (flag2 && !WorldGen.SolidTile(num6, num4 + 1))
				{
					flag2 = false;
				}
				if (flag && (Main.tile[num5, num4].type == 10 || Main.tile[num5, num4].type == 48 || Main.tile[num5, num4 + 1].type == 10 || Main.tile[num5, num4 + 1].type == 48))
				{
					flag = false;
				}
				if (flag2 && (Main.tile[num6, num4].type == 10 || Main.tile[num6, num4].type == 48 || Main.tile[num6, num4 + 1].type == 10 || Main.tile[num6, num4 + 1].type == 48))
				{
					flag2 = false;
				}
				int num9;
				if (flag && flag2)
				{
					num9 = 1;
					num3 = num5;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num3 = num6;
						num9 = -1;
					}
				}
				else if (flag2)
				{
					num3 = num6;
					num9 = -1;
				}
				else
				{
					if (!flag)
					{
						return false;
					}
					num3 = num5;
					num9 = 1;
				}
				if (Main.tile[num3, num4].wall != 87)
				{
					return false;
				}
				if (Main.tile[num3, num4].type == 190)
				{
					return false;
				}
				if (Main.tile[num3, num4].type == 135)
				{
					return false;
				}
				if (Main.tile[num3, num4].type == 137)
				{
					return false;
				}
				if (Main.tile[num3, num4].type == 232)
				{
					return false;
				}
				WorldGen.PlaceTile(x2, num2, 135, true, true, -1, 6);
				WorldGen.KillTile(num3, num4, false, false, false);
				int num10 = WorldGen.genRand.Next(3);
				if (Main.tile[x2, num2].wire())
				{
					num10 = 0;
				}
				if (Main.tile[x2, num2].wire2())
				{
					num10 = 1;
				}
				if (Main.tile[x2, num2].wire3())
				{
					num10 = 2;
				}
				int num11 = Math.Abs(num3 - x2);
				int style = 1;
				if (num11 < 10 && WorldGen.genRand.Next(3) != 0)
				{
					style = 2;
				}
				WorldGen.PlaceTile(num3, num4, 137, true, true, -1, style);
				if (num9 == 1)
				{
					Tile expr_482 = Main.tile[num3, num4];
					expr_482.frameX = (short)(expr_482.frameX + 18);
				}
				int i = WorldGen.genRand.Next(5);
				int num12 = num4;
				while (i > 0)
				{
					i--;
					num12--;
					if (!WorldGen.SolidTile(num3, num12) || !WorldGen.SolidTile(num3 - num9, num12) || WorldGen.SolidTile(num3 + num9, num12))
					{
						break;
					}
					WorldGen.PlaceTile(num3, num12, 137, true, true, -1, style);
					if (num9 == 1)
					{
						Tile expr_505 = Main.tile[num3, num12];
						expr_505.frameX = (short)(expr_505.frameX + 18);
					}
					if (num10 == 0)
					{
						Main.tile[num3, num12].wire(true);
					}
					else if (num10 == 1)
					{
						Main.tile[num3, num12].wire2(true);
					}
					else if (num10 == 2)
					{
						Main.tile[num3, num12].wire3(true);
					}
				}
				int num13 = x2;
				int num14 = num2;
				while (num13 != num3 || num14 != num4)
				{
					if (num10 == 0)
					{
						Main.tile[num13, num14].wire(true);
					}
					else if (num10 == 1)
					{
						Main.tile[num13, num14].wire2(true);
					}
					else if (num10 == 2)
					{
						Main.tile[num13, num14].wire3(true);
					}
					if (num13 > num3)
					{
						num13--;
					}
					if (num13 < num3)
					{
						num13++;
					}
					if (num10 == 0)
					{
						Main.tile[num13, num14].wire(true);
					}
					else if (num10 == 1)
					{
						Main.tile[num13, num14].wire2(true);
					}
					else if (num10 == 2)
					{
						Main.tile[num13, num14].wire3(true);
					}
					if (num14 > num4)
					{
						num14--;
					}
					if (num14 < num4)
					{
						num14++;
					}
					if (num10 == 0)
					{
						Main.tile[num13, num14].wire(true);
					}
					else if (num10 == 1)
					{
						Main.tile[num13, num14].wire2(true);
					}
					else if (num10 == 2)
					{
						Main.tile[num13, num14].wire3(true);
					}
				}
				return true;
			}
			else
			{
				if (num != 1)
				{
					return false;
				}
				int num15 = num2;
				while (!WorldGen.SolidTile(x2, num15))
				{
					num15--;
					if ((double)num15 < Main.worldSurface)
					{
						return false;
					}
				}
				int num16 = Math.Abs(num15 - num2);
				if (num16 < 3)
				{
					return false;
				}
				int num17 = WorldGen.genRand.Next(3);
				if (Main.tile[x2, num2].wire())
				{
					num17 = 0;
				}
				if (Main.tile[x2, num2].wire2())
				{
					num17 = 1;
				}
				if (Main.tile[x2, num2].wire3())
				{
					num17 = 2;
				}
				int style2 = 3;
				if (num16 < 16 && Main.rand.Next(3) != 0)
				{
					style2 = 4;
				}
				if (Main.tile[x2, num15].type == 135)
				{
					return false;
				}
				if (Main.tile[x2, num15].type == 137)
				{
					return false;
				}
				if (Main.tile[x2, num15].type == 232)
				{
					return false;
				}
				if (Main.tile[x2, num15].wall != 87)
				{
					return false;
				}
				WorldGen.PlaceTile(x2, num2, 135, true, true, -1, 6);
				WorldGen.PlaceTile(x2, num15, 137, true, true, -1, style2);
				for (int j = 0; j < 2; j++)
				{
					int k = WorldGen.genRand.Next(1, 5);
					int num18 = x2;
					int num19 = -1;
					if (j == 1)
					{
						num19 = 1;
					}
					while (k > 0)
					{
						k--;
						num18 += num19;
						if (!WorldGen.SolidTile(num18, num15 - 1) || WorldGen.SolidTile(num18, num15 + 1))
						{
							break;
						}
						WorldGen.PlaceTile(num18, num15, 137, true, true, -1, style2);
						if (num17 == 0)
						{
							Main.tile[num18, num15].wire(true);
						}
						else if (num17 == 1)
						{
							Main.tile[num18, num15].wire2(true);
						}
						else if (num17 == 2)
						{
							Main.tile[num18, num15].wire3(true);
						}
					}
				}
				int num20 = x2;
				int num21 = num2;
				while (num20 != x2 || num21 != num15)
				{
					if (num17 == 0)
					{
						Main.tile[num20, num21].wire(true);
					}
					else if (num17 == 1)
					{
						Main.tile[num20, num21].wire2(true);
					}
					else if (num17 == 2)
					{
						Main.tile[num20, num21].wire3(true);
					}
					if (num20 > x2)
					{
						num20--;
					}
					if (num20 < x2)
					{
						num20++;
					}
					if (num17 == 0)
					{
						Main.tile[num20, num21].wire(true);
					}
					else if (num17 == 1)
					{
						Main.tile[num20, num21].wire2(true);
					}
					else if (num17 == 2)
					{
						Main.tile[num20, num21].wire3(true);
					}
					if (num21 > num15)
					{
						num21--;
					}
					if (num21 < num15)
					{
						num21++;
					}
					if (num17 == 0)
					{
						Main.tile[num20, num21].wire(true);
					}
					else if (num17 == 1)
					{
						Main.tile[num20, num21].wire2(true);
					}
					else if (num17 == 2)
					{
						Main.tile[num20, num21].wire3(true);
					}
				}
				return true;
			}
		}
		public static bool placeTrap(int x2, int y2, int type = -1)
		{
			int num = y2;
			while (!WorldGen.SolidTile(x2, num))
			{
				num++;
				if (num >= Main.maxTilesY - 300)
				{
					return false;
				}
			}
			num--;
			if (Main.tile[x2, num].wall == 87)
			{
				return false;
			}
			if (Main.tile[x2, num].liquid > 0 && Main.tile[x2, num].lava())
			{
				return false;
			}
			if (type == -1 && Main.rand.Next(20) == 0)
			{
				type = 2;
			}
			else if (type == -1)
			{
				type = Main.rand.Next(2);
			}
			if (Main.tile[x2, num].nactive() || Main.tile[x2 - 1, num].nactive() || Main.tile[x2 + 1, num].nactive() || Main.tile[x2, num - 1].nactive() || Main.tile[x2 - 1, num - 1].nactive() || Main.tile[x2 + 1, num - 1].nactive() || Main.tile[x2, num - 2].nactive() || Main.tile[x2 - 1, num - 2].nactive() || Main.tile[x2 + 1, num - 2].nactive())
			{
				return false;
			}
			if (Main.tile[x2, num + 1].type == 48)
			{
				return false;
			}
			if (Main.tile[x2, num + 1].type == 232)
			{
				return false;
			}
			if (type == 1)
			{
				for (int i = x2 - 3; i <= x2 + 3; i++)
				{
					for (int j = num - 3; j <= num + 3; j++)
					{
						if (Main.tile[i, j].type == 147 || Main.tile[i, j].type == 161)
						{
							type = 0;
						}
					}
				}
			}
			if (type == 0)
			{
				int num2 = x2;
				int num3 = num;
				num3 -= WorldGen.genRand.Next(3);
				while (!WorldGen.SolidTile(num2, num3))
				{
					num2--;
				}
				int num4 = num2;
				num2 = x2;
				while (!WorldGen.SolidTile(num2, num3))
				{
					num2++;
				}
				int num5 = num2;
				int num6 = x2 - num4;
				int num7 = num5 - x2;
				bool flag = false;
				bool flag2 = false;
				if (num6 > 5 && num6 < 50)
				{
					flag = true;
				}
				if (num7 > 5 && num7 < 50)
				{
					flag2 = true;
				}
				if (flag && !WorldGen.SolidTile(num4, num3 + 1))
				{
					flag = false;
				}
				if (flag2 && !WorldGen.SolidTile(num5, num3 + 1))
				{
					flag2 = false;
				}
				if (flag && (Main.tile[num4, num3].type == 10 || Main.tile[num4, num3].type == 48 || Main.tile[num4, num3 + 1].type == 10 || Main.tile[num4, num3 + 1].type == 48))
				{
					flag = false;
				}
				if (flag2 && (Main.tile[num5, num3].type == 10 || Main.tile[num5, num3].type == 48 || Main.tile[num5, num3 + 1].type == 10 || Main.tile[num5, num3 + 1].type == 48))
				{
					flag2 = false;
				}
				int num8;
				if (flag && flag2)
				{
					num8 = 1;
					num2 = num4;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num2 = num5;
						num8 = -1;
					}
				}
				else if (flag2)
				{
					num2 = num5;
					num8 = -1;
				}
				else
				{
					if (!flag)
					{
						return false;
					}
					num2 = num4;
					num8 = 1;
				}
				if (Main.tile[num2, num3].type == 190)
				{
					return false;
				}
				if (Main.tile[x2, num].wall > 0)
				{
					WorldGen.PlaceTile(x2, num, 135, true, true, -1, 2);
				}
				else
				{
					WorldGen.PlaceTile(x2, num, 135, true, true, -1, WorldGen.genRand.Next(2, 4));
				}
				WorldGen.KillTile(num2, num3, false, false, false);
				WorldGen.PlaceTile(num2, num3, 137, true, true, -1, 0);
				if (num8 == 1)
				{
					Tile expr_42F = Main.tile[num2, num3];
					expr_42F.frameX = (short)(expr_42F.frameX + 18);
				}
				int num9 = x2;
				int num10 = num;
				while (num9 != num2 || num10 != num3)
				{
					Main.tile[num9, num10].wire(true);
					if (num9 > num2)
					{
						num9--;
					}
					if (num9 < num2)
					{
						num9++;
					}
					Main.tile[num9, num10].wire(true);
					if (num10 > num3)
					{
						num10--;
					}
					if (num10 < num3)
					{
						num10++;
					}
					Main.tile[num9, num10].wire(true);
				}
				return true;
			}
			else
			{
				if (type != 1)
				{
					if (type == 2)
					{
						int num11 = Main.rand.Next(4, 7);
						int num12 = x2 + Main.rand.Next(-1, 2);
						int num13 = num;
						for (int k = 0; k < num11; k++)
						{
							num13++;
							if (!WorldGen.SolidTile(num12, num13))
							{
								return false;
							}
						}
						for (int l = num12 - 2; l <= num12 + 2; l++)
						{
							for (int m = num13 - 2; m <= num13 + 2; m++)
							{
								if (!WorldGen.SolidTile(l, m))
								{
									return false;
								}
							}
						}
						WorldGen.KillTile(num12, num13, false, false, false);
						Main.tile[num12, num13].active(true);
						Main.tile[num12, num13].type = 141;
						Main.tile[num12, num13].frameX = 0;
						Main.tile[num12, num13].frameY = (short)(18 * Main.rand.Next(2));
						WorldGen.PlaceTile(x2, num, 135, true, true, -1, WorldGen.genRand.Next(2, 4));
						int num14 = x2;
						int num15 = num;
						while (num14 != num12 || num15 != num13)
						{
							Main.tile[num14, num15].wire(true);
							if (num14 > num12)
							{
								num14--;
							}
							if (num14 < num12)
							{
								num14++;
							}
							Main.tile[num14, num15].wire(true);
							if (num15 > num13)
							{
								num15--;
							}
							if (num15 < num13)
							{
								num15++;
							}
							Main.tile[num14, num15].wire(true);
						}
					}
					return false;
				}
				int num16 = num - 8;
				int num17 = x2 + WorldGen.genRand.Next(-1, 2);
				bool flag3 = true;
				while (flag3)
				{
					bool flag4 = true;
					int num18 = 0;
					for (int n = num17 - 2; n <= num17 + 3; n++)
					{
						for (int num19 = num16; num19 <= num16 + 3; num19++)
						{
							if (!WorldGen.SolidTile(n, num19))
							{
								flag4 = false;
							}
							if (Main.tile[n, num19].active() && (Main.tile[n, num19].type == 0 || Main.tile[n, num19].type == 1 || Main.tile[n, num19].type == 59))
							{
								num18++;
							}
						}
					}
					num16--;
					if ((double)num16 < Main.worldSurface)
					{
						return false;
					}
					if (flag4 && num18 > 2)
					{
						flag3 = false;
					}
				}
				if (num - num16 <= 5 || num - num16 >= 40)
				{
					return false;
				}
				for (int num20 = num17; num20 <= num17 + 1; num20++)
				{
					for (int num21 = num16; num21 <= num; num21++)
					{
						if (WorldGen.SolidTile(num20, num21))
						{
							WorldGen.KillTile(num20, num21, false, false, false);
						}
					}
				}
				for (int num22 = num17 - 2; num22 <= num17 + 3; num22++)
				{
					for (int num23 = num16 - 2; num23 <= num16 + 3; num23++)
					{
						if (WorldGen.SolidTile(num22, num23))
						{
							Main.tile[num22, num23].type = 1;
						}
					}
				}
				WorldGen.PlaceTile(x2, num, 135, true, true, -1, WorldGen.genRand.Next(2, 4));
				WorldGen.PlaceTile(num17, num16 + 2, 130, true, false, -1, 0);
				WorldGen.PlaceTile(num17 + 1, num16 + 2, 130, true, false, -1, 0);
				WorldGen.PlaceTile(num17 + 1, num16 + 1, 138, true, false, -1, 0);
				num16 += 2;
				Main.tile[num17, num16].wire(true);
				Main.tile[num17 + 1, num16].wire(true);
				num16++;
				WorldGen.PlaceTile(num17, num16, 130, true, false, -1, 0);
				WorldGen.PlaceTile(num17 + 1, num16, 130, true, false, -1, 0);
				Main.tile[num17, num16].wire(true);
				Main.tile[num17 + 1, num16].wire(true);
				WorldGen.PlaceTile(num17, num16 + 1, 130, true, false, -1, 0);
				WorldGen.PlaceTile(num17 + 1, num16 + 1, 130, true, false, -1, 0);
				Main.tile[num17, num16 + 1].wire(true);
				Main.tile[num17 + 1, num16 + 1].wire(true);
				int num24 = x2;
				int num25 = num;
				while (num24 != num17 || num25 != num16)
				{
					Main.tile[num24, num25].wire(true);
					if (num24 > num17)
					{
						num24--;
					}
					if (num24 < num17)
					{
						num24++;
					}
					Main.tile[num24, num25].wire(true);
					if (num25 > num16)
					{
						num25--;
					}
					if (num25 < num16)
					{
						num25++;
					}
					Main.tile[num24, num25].wire(true);
				}
				return true;
			}
		}
		public static int countTiles(int x, int y, bool jungle = false, bool lavaOk = false)
		{
			WorldGen.numTileCount = 0;
			WorldGen.lavaCount = 0;
			WorldGen.iceCount = 0;
			WorldGen.rockCount = 0;
			WorldGen.nextCount(x, y, jungle, lavaOk);
			return WorldGen.numTileCount;
		}
		public static void nextCount(int x, int y, bool jungle = false, bool lavaOk = false)
		{
			if (WorldGen.numTileCount >= WorldGen.maxTileCount)
			{
				return;
			}
			if (x <= 1 || x >= Main.maxTilesX - 1 || y <= 1 || y >= Main.maxTilesY - 1)
			{
				WorldGen.numTileCount = WorldGen.maxTileCount;
				return;
			}
			for (int i = 0; i < WorldGen.numTileCount; i++)
			{
				if (WorldGen.countX[i] == x && WorldGen.countY[i] == y)
				{
					return;
				}
			}
			if (!jungle)
			{
				if (Main.tile[x, y].wall != 0)
				{
					WorldGen.numTileCount = WorldGen.maxTileCount;
					return;
				}
				if (!lavaOk)
				{
					if (Main.tile[x, y].lava() && Main.tile[x, y].liquid > 0)
					{
						WorldGen.lavaCount++;
						WorldGen.numTileCount = WorldGen.maxTileCount;
						return;
					}
				}
				else if (Main.tile[x, y].lava() && Main.tile[x, y].liquid > 0)
				{
					WorldGen.lavaCount++;
				}
			}
			if (Main.tile[x, y].active())
			{
				if (Main.tile[x, y].type == 1)
				{
					WorldGen.rockCount++;
				}
				if (Main.tile[x, y].type == 147 || Main.tile[x, y].type == 161)
				{
					WorldGen.iceCount++;
				}
			}
			if (!WorldGen.SolidTile(x, y))
			{
				WorldGen.countX[WorldGen.numTileCount] = x;
				WorldGen.countY[WorldGen.numTileCount] = y;
				WorldGen.numTileCount++;
				WorldGen.nextCount(x - 1, y, jungle, lavaOk);
				WorldGen.nextCount(x + 1, y, jungle, lavaOk);
				WorldGen.nextCount(x, y - 1, jungle, lavaOk);
				WorldGen.nextCount(x, y + 1, jungle, lavaOk);
			}
		}
		public static int countDirtTiles(int x, int y)
		{
			WorldGen.numTileCount = 0;
			WorldGen.nextDirtCount(x, y);
			return WorldGen.numTileCount;
		}
		public static void nextDirtCount(int x, int y)
		{
			if (WorldGen.numTileCount >= WorldGen.maxTileCount)
			{
				return;
			}
			if (x <= 1 || x >= Main.maxTilesX - 1 || y <= 1 || y >= Main.maxTilesY - 1)
			{
				WorldGen.numTileCount = WorldGen.maxTileCount;
				return;
			}
			for (int i = 0; i < WorldGen.numTileCount; i++)
			{
				if (WorldGen.countX[i] == x && WorldGen.countY[i] == y)
				{
					return;
				}
			}
			if (Main.tile[x, y].active() && (Main.tile[x, y].type == 147 || Main.tile[x, y].type == 161))
			{
				WorldGen.numTileCount = WorldGen.maxTileCount;
				return;
			}
			if (Main.tile[x, y].wall == 78 || Main.tile[x, y].wall == 83 || Main.tile[x, y].wall == 3)
			{
				WorldGen.numTileCount = WorldGen.maxTileCount;
				return;
			}
			if (!WorldGen.SolidTile(x, y) && (Main.tile[x, y].wall == 2 || Main.tile[x, y].wall == 59))
			{
				WorldGen.countX[WorldGen.numTileCount] = x;
				WorldGen.countY[WorldGen.numTileCount] = y;
				WorldGen.numTileCount++;
				WorldGen.nextDirtCount(x - 1, y);
				WorldGen.nextDirtCount(x + 1, y);
				WorldGen.nextDirtCount(x, y - 1);
				WorldGen.nextDirtCount(x, y + 1);
				WorldGen.nextDirtCount(x - 1, y - 1);
				WorldGen.nextDirtCount(x - 1, y + 1);
				WorldGen.nextDirtCount(x + 1, y - 1);
				WorldGen.nextDirtCount(x + 1, y + 1);
				WorldGen.nextDirtCount(x - 2, y);
				WorldGen.nextDirtCount(x + 2, y);
			}
		}
		public static void mossCave(int x, int y)
		{
			WorldGen.mossOut(x, y);
		}
		public static void mossOut(int x, int y)
		{
			if (!WorldGen.SolidTile(x, y) && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = WorldGen.mossWall;
				WorldGen.mossOut(x - 1, y);
				WorldGen.mossOut(x + 1, y);
				WorldGen.mossOut(x, y - 1);
				WorldGen.mossOut(x, y + 1);
				return;
			}
			if (Main.tile[x, y].active())
			{
				if (Main.tile[x, y].wall == 0)
				{
					Main.tile[x, y].wall = WorldGen.mossWall;
				}
				int type = (int)Main.tile[x, y].type;
				if (type == 1)
				{
					Main.tile[x, y].type = (ushort)WorldGen.mossTile;
				}
			}
		}
		public static void wallOut(int x, int y, int wall)
		{
			if (!WorldGen.SolidTile(x, y) && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = (byte)wall;
				WorldGen.wallOut(x - 1, y, wall);
				WorldGen.wallOut(x + 1, y, wall);
				WorldGen.wallOut(x, y - 1, wall);
				WorldGen.wallOut(x, y + 1, wall);
				return;
			}
			if (Main.tile[x, y].active() && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = (byte)wall;
			}
		}
		public static void wallOut2(int x, int y, int wall)
		{
			try
			{
				if (!WorldGen.SolidTile(x, y) && (int)Main.tile[x, y].wall != wall && Main.tile[x, y].wall != 4 && Main.tile[x, y].wall != 40 && Main.tile[x, y].wall != 3)
				{
					if (wall != 63 || Main.tile[x, y].wall != 0)
					{
						WorldGen.numWallOut2++;
						if (WorldGen.numWallOut2 < WorldGen.maxWallOut2)
						{
							Main.tile[x, y].wall = (byte)wall;
							WorldGen.wallOut2(x - 1, y, wall);
							WorldGen.wallOut2(x + 1, y, wall);
							WorldGen.wallOut2(x, y - 1, wall);
							WorldGen.wallOut2(x, y + 1, wall);
							if (wall == 63)
							{
								WorldGen.wallOut2(x - 1, y - 1, wall);
								WorldGen.wallOut2(x - 1, y + 1, wall);
								WorldGen.wallOut2(x + 1, y - 1, wall);
								WorldGen.wallOut2(x + 1, y + 1, wall);
								WorldGen.wallOut2(x - 2, y, wall);
								WorldGen.wallOut2(x + 2, y, wall);
							}
						}
					}
				}
				else if (Main.tile[x, y].active() && (int)Main.tile[x, y].wall != wall && Main.tile[x, y].wall != 4 && Main.tile[x, y].wall != 40 && Main.tile[x, y].wall != 3)
				{
					Main.tile[x, y].wall = (byte)wall;
				}
			}
			catch
			{
			}
		}
		public static void gemCave(int x, int y)
		{
			WorldGen.countTiles(x, y, false, false);
			for (int i = 0; i < 6; i++)
			{
				WorldGen.gem[i] = false;
			}
			WorldGen.gem[WorldGen.genRand.Next(6)] = true;
			for (int j = 0; j < 6; j++)
			{
				if (WorldGen.genRand.Next(6) == 0)
				{
					WorldGen.gem[j] = true;
				}
			}
			WorldGen.gemOut(x, y);
		}
		public static int randGem()
		{
			int num = WorldGen.genRand.Next(6);
			while (!WorldGen.gem[num])
			{
				num = WorldGen.genRand.Next(6);
			}
			return num;
		}
		public static ushort randGemTile()
		{
			if (WorldGen.genRand.Next(20) != 0)
			{
				return 1;
			}
			ushort num = (ushort)WorldGen.randGem();
			if (num == 0)
			{
				return 67;
			}
			if (num == 1)
			{
				return 66;
			}
			if (num == 2)
			{
				return 63;
			}
			if (num == 3)
			{
				return 65;
			}
			if (num == 4)
			{
				return 64;
			}
			return 68;
		}
		public static void gemOut(int x, int y)
		{
			if (!WorldGen.SolidTile(x, y) && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = (byte)(48 + WorldGen.randGem());
				if (!Main.tile[x, y].active() && WorldGen.genRand.Next(2) == 0)
				{
					WorldGen.PlaceTile(x, y, 178, true, false, -1, WorldGen.randGem());
				}
				WorldGen.gemOut(x - 1, y);
				WorldGen.gemOut(x + 1, y);
				WorldGen.gemOut(x, y - 1);
				WorldGen.gemOut(x, y + 1);
				return;
			}
			if (Main.tile[x, y].active())
			{
				int type = (int)Main.tile[x, y].type;
				if (type == 0 || type == 1 || type == 40 || type == 59 || type == 60 || type == 70 || type == 147 || type == 161)
				{
					Main.tile[x, y].type = WorldGen.randGemTile();
				}
				for (int i = 0; i < 4; i++)
				{
					int num = x;
					int num2 = y;
					if (i == 0)
					{
						x--;
					}
					if (i == 1)
					{
						x++;
					}
					if (i == 2)
					{
						y--;
					}
					if (i == 3)
					{
						y++;
					}
					type = (int)Main.tile[num, num2].type;
					if (type == 0 || type == 1 || type == 40 || type == 59 || type == 60 || type == 70 || type == 147 || type == 161)
					{
						Main.tile[num, num2].type = WorldGen.randGemTile();
					}
				}
			}
		}
		public static void spiderOut(int x, int y)
		{
			if (!WorldGen.SolidTile(x, y) && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = 62;
				WorldGen.SquareWallFrame(x, y, true);
				if (!Main.tile[x, y].active())
				{
					Main.tile[x, y].liquid = 0;
					Main.tile[x, y].lava(false);
					if (WorldGen.SolidTile(x, y + 1) && WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(15) == 0)
						{
							WorldGen.AddBuriedChest(x, y, 939, true, 15);
						}
						else
						{
							WorldGen.PlacePot(x, y, 28, WorldGen.genRand.Next(19, 21));
						}
					}
					if (!Main.tile[x, y].active())
					{
						if (WorldGen.SolidTile(x, y - 1) && WorldGen.genRand.Next(3) == 0)
						{
							WorldGen.PlaceTight(x, y, 165, true);
						}
						else if (WorldGen.SolidTile(x, y + 1))
						{
							WorldGen.PlaceTile(x, y, 187, true, false, -1, 9 + WorldGen.genRand.Next(5));
							if (WorldGen.genRand.Next(3) == 0)
							{
								if (!Main.tile[x, y].active())
								{
									WorldGen.PlaceSmallPile(x, y, 34 + WorldGen.genRand.Next(4), 1, 185);
								}
								if (!Main.tile[x, y].active())
								{
									WorldGen.PlaceSmallPile(x, y, 48 + WorldGen.genRand.Next(6), 0, 185);
								}
							}
						}
					}
				}
				WorldGen.spiderOut(x - 1, y);
				WorldGen.spiderOut(x + 1, y);
				WorldGen.spiderOut(x, y - 1);
				WorldGen.spiderOut(x, y + 1);
				return;
			}
			if (Main.tile[x, y].active() && Main.tile[x, y].wall == 0)
			{
				Main.tile[x, y].wall = 62;
			}
		}
		public static void randMoss()
		{
			WorldGen.mossType[0] = WorldGen.genRand.Next(5);
			WorldGen.mossType[1] = WorldGen.genRand.Next(5);
			while (WorldGen.mossType[1] == WorldGen.mossType[0])
			{
				WorldGen.mossType[1] = WorldGen.genRand.Next(5);
			}
			WorldGen.mossType[2] = WorldGen.genRand.Next(5);
			while (WorldGen.mossType[2] == WorldGen.mossType[0] || WorldGen.mossType[2] == WorldGen.mossType[1])
			{
				WorldGen.mossType[2] = WorldGen.genRand.Next(5);
			}
		}
		public static void setMoss(int x, int y)
		{
			int num;
			if ((double)x < (double)Main.maxTilesX * 0.334)
			{
				num = 0;
			}
			else if ((double)x < (double)Main.maxTilesX * 0.667)
			{
				num = 1;
			}
			else
			{
				num = 2;
			}
			WorldGen.mossWall = (byte)(54 + WorldGen.mossType[num]);
			WorldGen.mossTile = (byte)(179 + WorldGen.mossType[num]);
		}
		public static void setCaveBacks()
		{
			int maxValue = 8;
			if (Main.maxTilesX == 4200)
			{
				Main.caveBackX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.5 - (double)((float)Main.maxTilesX * 0.25f)), (int)((double)Main.maxTilesX * 0.5 + (double)((float)Main.maxTilesX * 0.25f)));
				Main.caveBackX[1] = Main.maxTilesX;
				Main.caveBackX[2] = Main.maxTilesX;
				Main.caveBackStyle[0] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				while (Main.caveBackStyle[1] == Main.caveBackStyle[0])
				{
					Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				}
			}
			else if (Main.maxTilesX == 6400)
			{
				Main.caveBackX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.334 - (double)((float)Main.maxTilesX * 0.2f)), (int)((double)Main.maxTilesX * 0.334 + (double)((float)Main.maxTilesX * 0.2f)));
				Main.caveBackX[1] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.667 - (double)((float)Main.maxTilesX * 0.2f)), (int)((double)Main.maxTilesX * 0.667 + (double)((float)Main.maxTilesX * 0.2f)));
				Main.caveBackX[2] = Main.maxTilesX;
				Main.caveBackStyle[0] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[2] = WorldGen.genRand.Next(maxValue);
				while (Main.caveBackStyle[1] == Main.caveBackStyle[0])
				{
					Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				}
				while (Main.caveBackStyle[2] == Main.caveBackStyle[0] || Main.caveBackStyle[2] == Main.caveBackStyle[1])
				{
					Main.caveBackStyle[2] = WorldGen.genRand.Next(maxValue);
				}
			}
			else
			{
				Main.caveBackX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.25 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.25 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.caveBackX[1] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.5 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.5 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.caveBackX[2] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.75 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.75 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.caveBackStyle[0] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[2] = WorldGen.genRand.Next(maxValue);
				Main.caveBackStyle[3] = WorldGen.genRand.Next(maxValue);
				while (Main.caveBackStyle[1] == Main.caveBackStyle[0])
				{
					Main.caveBackStyle[1] = WorldGen.genRand.Next(maxValue);
				}
				while (Main.caveBackStyle[2] == Main.caveBackStyle[0] || Main.caveBackStyle[2] == Main.caveBackStyle[1])
				{
					Main.caveBackStyle[2] = WorldGen.genRand.Next(maxValue);
				}
				while (Main.caveBackStyle[3] == Main.caveBackStyle[0] || Main.caveBackStyle[3] == Main.caveBackStyle[1] || Main.caveBackStyle[3] == Main.caveBackStyle[2])
				{
					Main.caveBackStyle[3] = WorldGen.genRand.Next(maxValue);
				}
			}
			Main.iceBackStyle = WorldGen.genRand.Next(4);
			Main.hellBackStyle = WorldGen.genRand.Next(3);
			Main.jungleBackStyle = WorldGen.genRand.Next(2);
		}
		public static void randomBackgrounds()
		{
			WorldGen.treeBG = WorldGen.genRand.Next(9);
			if ((WorldGen.treeBG == 1 || WorldGen.treeBG == 2) && WorldGen.genRand.Next(2) == 0)
			{
				WorldGen.treeBG = WorldGen.genRand.Next(7);
			}
			if (WorldGen.treeBG == 0)
			{
				WorldGen.treeBG = WorldGen.genRand.Next(7);
			}
			if (WorldGen.treeBG == 3 && WorldGen.genRand.Next(3) == 0)
			{
				WorldGen.treeBG = 31;
			}
			if (WorldGen.treeBG == 5 && WorldGen.genRand.Next(2) == 0)
			{
				WorldGen.treeBG = 51;
			}
			if (WorldGen.treeBG == 7 && WorldGen.genRand.Next(4) == 0)
			{
				WorldGen.treeBG = WorldGen.genRand.Next(71, 74);
			}
			WorldGen.setBG(0, WorldGen.treeBG);
			WorldGen.setBG(1, WorldGen.genRand.Next(2));
			WorldGen.setBG(2, WorldGen.genRand.Next(2));
			WorldGen.snowBG = WorldGen.genRand.Next(6);
			if (WorldGen.snowBG == 2 && WorldGen.genRand.Next(2) == 0)
			{
				if (WorldGen.genRand.Next(2) == 0)
				{
					WorldGen.snowBG = 21;
				}
				else
				{
					WorldGen.snowBG = 22;
				}
			}
			if (WorldGen.snowBG == 3 && WorldGen.genRand.Next(2) == 0)
			{
				if (WorldGen.genRand.Next(2) == 0)
				{
					WorldGen.snowBG = 31;
				}
				else
				{
					WorldGen.snowBG = 32;
				}
			}
			if (WorldGen.snowBG == 4 && WorldGen.genRand.Next(2) == 0)
			{
				if (WorldGen.genRand.Next(2) == 0)
				{
					WorldGen.snowBG = 41;
				}
				else
				{
					WorldGen.snowBG = 42;
				}
			}
			WorldGen.setBG(3, WorldGen.snowBG);
			WorldGen.setBG(4, WorldGen.genRand.Next(2));
			WorldGen.setBG(5, WorldGen.genRand.Next(3));
			WorldGen.setBG(6, WorldGen.genRand.Next(2));
			WorldGen.setBG(7, WorldGen.genRand.Next(3));
		}
		public static void tileCountAndDestroy()
		{
			for (int i = 10; i < Main.maxTilesX - 10; i++)
			{
				for (int j = 10; j < Main.maxTilesY - 10; j++)
				{
					if (Main.tile[i, j].active())
					{
						int num = WorldGen.tileCounter(i, j);
						if (num < WorldGen.tileCounterMax)
						{
							WorldGen.tileCounterKill();
						}
					}
				}
			}
		}
		public static int tileCounter(int x, int y)
		{
			WorldGen.tileCounterNum = 0;
			WorldGen.tileCounterNext(x, y);
			return WorldGen.tileCounterNum;
		}
		public static void tileCounterNext(int x, int y)
		{
			if (WorldGen.tileCounterNum >= WorldGen.tileCounterMax)
			{
				return;
			}
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			if (Main.tile[x, y].active() && Main.tileSolid[(int)Main.tile[x, y].type])
			{
				for (int i = 0; i < WorldGen.tileCounterNum; i++)
				{
					if (WorldGen.tileCounterX[i] == x && WorldGen.tileCounterY[i] == y)
					{
						return;
					}
				}
				WorldGen.tileCounterX[WorldGen.tileCounterNum] = x;
				WorldGen.tileCounterY[WorldGen.tileCounterNum] = y;
				WorldGen.tileCounterNum++;
				WorldGen.tileCounterNext(x - 1, y);
				WorldGen.tileCounterNext(x + 1, y);
				WorldGen.tileCounterNext(x, y - 1);
				WorldGen.tileCounterNext(x, y + 1);
			}
		}
		public static void tileCounterKill()
		{
			for (int i = 0; i < WorldGen.tileCounterNum; i++)
			{
				int num = WorldGen.tileCounterX[i];
				int num2 = WorldGen.tileCounterY[i];
				Main.tile[num, num2].active(false);
			}
		}
		public static void generateWorld(int seed = -1)
		{
			if (seed > 0)
			{
				WorldGen.genRand = new Random(seed);
			}
			else
			{
				WorldGen.genRand = new Random((int)DateTime.Now.Ticks);
			}
			WorldGen.randMoon();
			WorldGen.RandomWeather();
			Main.cloudAlpha = 0f;
			Main.maxRaining = 0f;
			WorldFile.tempMaxRain = 0f;
			Main.raining = false;
			WorldGen.crimson = false;
			WorldGen.heartCount = 0;
			Main.checkXMas();
			Main.checkHalloween();
			WorldGen.gen = true;
			WorldGen.resetGen();
			WorldGen.worldSurfaceLow = 0.0;
			int type = 7;
			int type2 = 6;
			int type3 = 9;
			int type4 = 8;
			Main.cloudBGActive = (float)(-(float)WorldGen.genRand.Next(8640, 86400));
			WorldGen.copperBar = 20;
			WorldGen.ironBar = 22;
			WorldGen.silverBar = 21;
			WorldGen.goldBar = 19;
			if (WorldGen.genRand.Next(2) == 0)
			{
				type = 166;
				WorldGen.copperBar = 703;
			}
			if (WorldGen.genRand.Next(2) == 0)
			{
				type2 = 167;
				WorldGen.ironBar = 704;
			}
			if (WorldGen.genRand.Next(2) == 0)
			{
				type3 = 168;
				WorldGen.silverBar = 705;
			}
			if (WorldGen.genRand.Next(2) == 0)
			{
				type4 = 169;
				WorldGen.goldBar = 706;
			}
			WorldGen.randomBackgrounds();
			if (WorldGen.genRand.Next(2) == 0)
			{
				WorldGen.crimson = true;
			}
			ushort num = (ushort)WorldGen.genRand.Next(5);
			if (num == 0)
			{
				num = 119;
			}
			else if (num == 1)
			{
				num = 120;
			}
			else if (num == 2)
			{
				num = 158;
			}
			else if (num == 3)
			{
				num = 175;
			}
			else if (num == 4)
			{
				num = 45;
			}
			Main.worldID = WorldGen.genRand.Next(2147483647);
			int num2 = 0;
			int num3 = 0;
			double num4 = (double)Main.maxTilesY * 0.3;
			num4 *= (double)WorldGen.genRand.Next(90, 110) * 0.005;
			double num5 = num4 + (double)Main.maxTilesY * 0.2;
			num5 *= (double)WorldGen.genRand.Next(90, 110) * 0.01;
			if (Main.maxTilesX == 4200)
			{
				Main.treeX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.5 - (double)((float)Main.maxTilesX * 0.25f)), (int)((double)Main.maxTilesX * 0.5 + (double)((float)Main.maxTilesX * 0.25f)));
				Main.treeStyle[0] = WorldGen.genRand.Next(6);
				Main.treeStyle[1] = WorldGen.genRand.Next(6);
				while (Main.treeStyle[1] == Main.treeStyle[0])
				{
					Main.treeStyle[1] = WorldGen.genRand.Next(6);
				}
				Main.treeX[1] = Main.maxTilesX;
				Main.treeX[2] = Main.maxTilesX;
			}
			else if (Main.maxTilesX == 6400)
			{
				Main.treeX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.334 - (double)((float)Main.maxTilesX * 0.2f)), (int)((double)Main.maxTilesX * 0.334 + (double)((float)Main.maxTilesX * 0.2f)));
				Main.treeX[1] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.667 - (double)((float)Main.maxTilesX * 0.2f)), (int)((double)Main.maxTilesX * 0.667 + (double)((float)Main.maxTilesX * 0.2f)));
				Main.treeStyle[0] = WorldGen.genRand.Next(6);
				Main.treeStyle[1] = WorldGen.genRand.Next(6);
				Main.treeStyle[2] = WorldGen.genRand.Next(6);
				while (Main.treeStyle[1] == Main.treeStyle[0])
				{
					Main.treeStyle[1] = WorldGen.genRand.Next(6);
				}
				while (Main.treeStyle[2] == Main.treeStyle[0] || Main.treeStyle[2] == Main.treeStyle[1])
				{
					Main.treeStyle[2] = WorldGen.genRand.Next(6);
				}
				Main.treeX[2] = Main.maxTilesX;
			}
			else
			{
				Main.treeX[0] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.25 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.25 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.treeX[1] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.5 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.5 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.treeX[2] = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.75 - (double)((float)Main.maxTilesX * 0.15f)), (int)((double)Main.maxTilesX * 0.75 + (double)((float)Main.maxTilesX * 0.15f)));
				Main.treeStyle[0] = WorldGen.genRand.Next(6);
				Main.treeStyle[1] = WorldGen.genRand.Next(6);
				Main.treeStyle[2] = WorldGen.genRand.Next(6);
				Main.treeStyle[3] = WorldGen.genRand.Next(6);
				while (Main.treeStyle[1] == Main.treeStyle[0])
				{
					Main.treeStyle[1] = WorldGen.genRand.Next(6);
				}
				while (Main.treeStyle[2] == Main.treeStyle[0] || Main.treeStyle[2] == Main.treeStyle[1])
				{
					Main.treeStyle[2] = WorldGen.genRand.Next(6);
				}
				while (Main.treeStyle[3] == Main.treeStyle[0] || Main.treeStyle[3] == Main.treeStyle[1] || Main.treeStyle[3] == Main.treeStyle[2])
				{
					Main.treeStyle[3] = WorldGen.genRand.Next(6);
				}
			}
			WorldGen.setCaveBacks();
			WorldGen.worldSurfaceLow = num4;
			double num6 = num4;
			double num7 = num5;
			double num8 = num5;
			int num9 = 0;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num9 = -1;
			}
			else
			{
				num9 = 1;
			}
			for (int i = 0; i < Main.maxTilesX; i++)
			{
				float num10 = (float)i / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[0],
					" ",
					(int)(num10 * 100f + 1f),
					"%"
				});
				if (num4 < WorldGen.worldSurfaceLow)
				{
					WorldGen.worldSurfaceLow = num4;
				}
				if (num4 > num6)
				{
					num6 = num4;
				}
				if (num5 < num7)
				{
					num7 = num5;
				}
				if (num5 > num8)
				{
					num8 = num5;
				}
				if (num3 <= 0)
				{
					num2 = WorldGen.genRand.Next(0, 5);
					num3 = WorldGen.genRand.Next(5, 40);
					if (num2 == 0)
					{
						num3 *= (int)((double)WorldGen.genRand.Next(5, 30) * 0.2);
					}
				}
				num3--;
				if ((double)i > (double)Main.maxTilesX * 0.43 && (double)i < (double)Main.maxTilesX * 0.57 && num2 >= 3)
				{
					num2 = WorldGen.genRand.Next(3);
				}
				if ((double)i > (double)Main.maxTilesX * 0.47 && (double)i < (double)Main.maxTilesX * 0.53)
				{
					num2 = 0;
				}
				if (num2 == 0)
				{
					while (WorldGen.genRand.Next(0, 7) == 0)
					{
						num4 += (double)WorldGen.genRand.Next(-1, 2);
					}
				}
				else if (num2 == 1)
				{
					while (WorldGen.genRand.Next(0, 4) == 0)
					{
						num4 -= 1.0;
					}
					while (WorldGen.genRand.Next(0, 10) == 0)
					{
						num4 += 1.0;
					}
				}
				else if (num2 == 2)
				{
					while (WorldGen.genRand.Next(0, 4) == 0)
					{
						num4 += 1.0;
					}
					while (WorldGen.genRand.Next(0, 10) == 0)
					{
						num4 -= 1.0;
					}
				}
				else if (num2 == 3)
				{
					while (WorldGen.genRand.Next(0, 2) == 0)
					{
						num4 -= 1.0;
					}
					while (WorldGen.genRand.Next(0, 6) == 0)
					{
						num4 += 1.0;
					}
				}
				else if (num2 == 4)
				{
					while (WorldGen.genRand.Next(0, 2) == 0)
					{
						num4 += 1.0;
					}
					while (WorldGen.genRand.Next(0, 5) == 0)
					{
						num4 -= 1.0;
					}
				}
				if (num4 < (double)Main.maxTilesY * 0.17)
				{
					num4 = (double)Main.maxTilesY * 0.17;
					num3 = 0;
				}
				else if (num4 > (double)Main.maxTilesY * 0.3)
				{
					num4 = (double)Main.maxTilesY * 0.3;
					num3 = 0;
				}
				if ((i < 275 || i > Main.maxTilesX - 275) && num4 > (double)Main.maxTilesY * 0.25)
				{
					num4 = (double)Main.maxTilesY * 0.25;
					num3 = 1;
				}
				while (WorldGen.genRand.Next(0, 3) == 0)
				{
					num5 += (double)WorldGen.genRand.Next(-2, 3);
				}
				if (num5 < num4 + (double)Main.maxTilesY * 0.05)
				{
					num5 += 1.0;
				}
				if (num5 > num4 + (double)Main.maxTilesY * 0.35)
				{
					num5 -= 1.0;
				}
				int num11 = 0;
				while ((double)num11 < num4)
				{
					Main.tile[i, num11].active(false);
					Main.tile[i, num11].frameX = -1;
					Main.tile[i, num11].frameY = -1;
					num11++;
				}
				for (int j = (int)num4; j < Main.maxTilesY; j++)
				{
					if ((double)j < num5)
					{
						Main.tile[i, j].active(true);
						Main.tile[i, j].type = 0;
						Main.tile[i, j].frameX = -1;
						Main.tile[i, j].frameY = -1;
					}
					else
					{
						Main.tile[i, j].active(true);
						Main.tile[i, j].type = 1;
						Main.tile[i, j].frameX = -1;
						Main.tile[i, j].frameY = -1;
					}
				}
			}
			Main.worldSurface = num6 + 25.0;
			Main.rockLayer = num8;
			double num12 = (double)((int)((Main.rockLayer - Main.worldSurface) / 6.0) * 6);
			Main.rockLayer = Main.worldSurface + num12;
			WorldGen.waterLine = (int)(Main.rockLayer + (double)Main.maxTilesY) / 2;
			WorldGen.waterLine += WorldGen.genRand.Next(-100, 20);
			WorldGen.lavaLine = WorldGen.waterLine + WorldGen.genRand.Next(50, 80);
			int num13 = 0;
			for (int k = 0; k < (int)((double)Main.maxTilesX * 0.0015); k++)
			{
				int[] array = new int[10];
				int[] array2 = new int[10];
				int num14 = WorldGen.genRand.Next(450, Main.maxTilesX - 450);
				int num15 = 0;
				for (int l = 0; l < 10; l++)
				{
					while (!Main.tile[num14, num15].active())
					{
						num15++;
					}
					array[l] = num14;
					array2[l] = num15 - WorldGen.genRand.Next(11, 16);
					num14 += WorldGen.genRand.Next(5, 11);
				}
				for (int m = 0; m < 10; m++)
				{
					WorldGen.TileRunner(array[m], array2[m], (double)WorldGen.genRand.Next(5, 8), WorldGen.genRand.Next(6, 9), 0, true, -2f, -0.3f, false, true);
					WorldGen.TileRunner(array[m], array2[m], (double)WorldGen.genRand.Next(5, 8), WorldGen.genRand.Next(6, 9), 0, true, 2f, -0.3f, false, true);
				}
			}
			Main.statusText = Lang.gen[1];
			int num16 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.0008), (int)((double)Main.maxTilesX * 0.0025));
			num16 += 2;
			int[] array3 = new int[num16];
			int[] array4 = new int[num16];
			int num17 = 0;
			for (int n = 0; n < num16; n++)
			{
				int num18 = WorldGen.genRand.Next(Main.maxTilesX);
				while ((float)num18 > (float)Main.maxTilesX * 0.4f && (float)num18 < (float)Main.maxTilesX * 0.6f)
				{
					num18 = WorldGen.genRand.Next(Main.maxTilesX);
				}
				int num19 = WorldGen.genRand.Next(35, 90);
				if (n == 1)
				{
					float num20 = (float)(Main.maxTilesX / 4200);
					num19 += (int)((float)WorldGen.genRand.Next(20, 40) * num20);
				}
				if (WorldGen.genRand.Next(3) == 0)
				{
					num19 *= 2;
				}
				if (n == 1)
				{
					num19 *= 2;
				}
				int num21 = num18 - num19;
				num19 = WorldGen.genRand.Next(35, 90);
				if (WorldGen.genRand.Next(3) == 0)
				{
					num19 *= 2;
				}
				if (n == 1)
				{
					num19 *= 2;
				}
				int num22 = num18 + num19;
				if (num21 < 0)
				{
					num21 = 0;
				}
				if (num22 > Main.maxTilesX)
				{
					num22 = Main.maxTilesX;
				}
				if (n == 0)
				{
					num21 = 0;
					num22 = WorldGen.genRand.Next(260, 300);
					if (num9 == 1)
					{
						num22 += 40;
					}
				}
				else if (n == 2)
				{
					num21 = Main.maxTilesX - WorldGen.genRand.Next(260, 300);
					num22 = Main.maxTilesX;
					if (num9 == -1)
					{
						num21 -= 40;
					}
				}
				int num23 = WorldGen.genRand.Next(50, 100);
				for (int num24 = num21; num24 < num22; num24++)
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num23 += WorldGen.genRand.Next(-1, 2);
						if (num23 < 50)
						{
							num23 = 50;
						}
						if (num23 > 100)
						{
							num23 = 100;
						}
					}
					int num25 = 0;
					while ((double)num25 < Main.worldSurface)
					{
						if (Main.tile[num24, num25].active())
						{
							if (num24 == (num21 + num22) / 2 && WorldGen.genRand.Next(6) == 0)
							{
								array3[num17] = num24;
								array4[num17] = num25;
								num17++;
							}
							int num26 = num23;
							if (num24 - num21 < num26)
							{
								num26 = num24 - num21;
							}
							if (num22 - num24 < num26)
							{
								num26 = num22 - num24;
							}
							num26 += WorldGen.genRand.Next(5);
							for (int num27 = num25; num27 < num25 + num26; num27++)
							{
								if (num24 > num21 + WorldGen.genRand.Next(5) && num24 < num22 - WorldGen.genRand.Next(5))
								{
									Main.tile[num24, num27].type = 53;
								}
							}
							break;
						}
						num25++;
					}
				}
			}
			for (int num28 = 0; num28 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 8E-06); num28++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)Main.worldSurface, (int)Main.rockLayer), (double)WorldGen.genRand.Next(15, 70), WorldGen.genRand.Next(20, 130), 53, false, 0f, 0f, false, true);
			}
			WorldGen.numMCaves = 0;
			Main.statusText = Lang.gen[2];
			for (int num29 = 0; num29 < (int)((double)Main.maxTilesX * 0.0008); num29++)
			{
				int num30 = 0;
				bool flag = false;
				bool flag2 = false;
				int num31 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.25), (int)((double)Main.maxTilesX * 0.75));
				while (!flag2)
				{
					flag2 = true;
					while (num31 > Main.maxTilesX / 2 - 100 && num31 < Main.maxTilesX / 2 + 100)
					{
						num31 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.25), (int)((double)Main.maxTilesX * 0.75));
					}
					for (int num32 = 0; num32 < WorldGen.numMCaves; num32++)
					{
						if (num31 > WorldGen.mCaveX[num32] - 50 && num31 < WorldGen.mCaveX[num32] + 50)
						{
							num30++;
							flag2 = false;
							break;
						}
					}
					if (num30 >= 200)
					{
						flag = true;
						break;
					}
				}
				if (!flag)
				{
					int num33 = 0;
					while ((double)num33 < Main.worldSurface)
					{
						if (Main.tile[num31, num33].active())
						{
							for (int num34 = num31 - 50; num34 < num31 + 50; num34++)
							{
								for (int num35 = num33 - 25; num35 < num33 + 25; num35++)
								{
									if (Main.tile[num34, num35].active() && (Main.tile[num34, num35].type == 53 || Main.tile[num34, num35].type == 151 || Main.tile[num34, num35].type == 274))
									{
										flag = true;
									}
								}
							}
							if (!flag)
							{
								WorldGen.Mountinater(num31, num33);
								WorldGen.mCaveX[WorldGen.numMCaves] = num31;
								WorldGen.mCaveY[WorldGen.numMCaves] = num33;
								WorldGen.numMCaves++;
								break;
							}
						}
						num33++;
					}
				}
			}
			for (int num36 = 1; num36 < Main.maxTilesX - 1; num36++)
			{
				byte wall = 2;
				float num37 = (float)num36 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[3],
					" ",
					(int)(num37 * 100f + 1f),
					"%"
				});
				bool flag3 = false;
				num13 += WorldGen.genRand.Next(-1, 2);
				if (num13 < 0)
				{
					num13 = 0;
				}
				if (num13 > 10)
				{
					num13 = 10;
				}
				int num38 = 0;
				while ((double)num38 < Main.worldSurface + 10.0 && (double)num38 <= Main.worldSurface + (double)num13)
				{
					if (Main.tile[num36, num38].active())
					{
						if (Main.tile[num36, num38].type == 147)
						{
							wall = 40;
						}
						else
						{
							wall = 2;
						}
					}
					if (flag3 && Main.tile[num36, num38].wall != 64)
					{
						Main.tile[num36, num38].wall = wall;
					}
					if (Main.tile[num36, num38].active() && Main.tile[num36 - 1, num38].active() && Main.tile[num36 + 1, num38].active() && Main.tile[num36, num38 + 1].active() && Main.tile[num36 - 1, num38 + 1].active() && Main.tile[num36 + 1, num38 + 1].active())
					{
						flag3 = true;
					}
					num38++;
				}
			}
			Main.statusText = Lang.gen[4];
			for (int num39 = 0; num39 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00015); num39++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next(0, (int)WorldGen.worldSurfaceLow + 1), (double)WorldGen.genRand.Next(4, 15), WorldGen.genRand.Next(5, 40), 1, false, 0f, 0f, false, true);
			}
			for (int num40 = 0; num40 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0002); num40++)
			{
				int num41 = WorldGen.genRand.Next(0, Main.maxTilesX);
				int num42 = WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6 + 1);
				if (!Main.tile[num41, num42 - 10].active())
				{
					num42 = WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6 + 1);
				}
				WorldGen.TileRunner(num41, num42, (double)WorldGen.genRand.Next(4, 10), WorldGen.genRand.Next(5, 30), 1, false, 0f, 0f, false, true);
			}
			for (int num43 = 0; num43 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0045); num43++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, (int)num8 + 1), (double)WorldGen.genRand.Next(2, 7), WorldGen.genRand.Next(2, 23), 1, false, 0f, 0f, false, true);
			}
			Main.statusText = Lang.gen[5];
			for (int num44 = 0; num44 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.005); num44++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 6), WorldGen.genRand.Next(2, 40), 0, false, 0f, 0f, false, true);
			}
			Main.statusText = Lang.gen[6];
			for (int num45 = 0; num45 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num45++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next(0, (int)WorldGen.worldSurfaceLow), (double)WorldGen.genRand.Next(4, 14), WorldGen.genRand.Next(10, 50), 40, false, 0f, 0f, false, true);
			}
			for (int num46 = 0; num46 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 5E-05); num46++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6 + 1), (double)WorldGen.genRand.Next(8, 14), WorldGen.genRand.Next(15, 45), 40, false, 0f, 0f, false, true);
			}
			for (int num47 = 0; num47 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num47++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, (int)num8 + 1), (double)WorldGen.genRand.Next(8, 15), WorldGen.genRand.Next(5, 50), 40, false, 0f, 0f, false, true);
			}
			for (int num48 = 5; num48 < Main.maxTilesX - 5; num48++)
			{
				int num49 = 1;
				while ((double)num49 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num48, num49].active())
					{
						for (int num50 = num49; num50 < num49 + 5; num50++)
						{
							if (Main.tile[num48, num50].type == 40)
							{
								Main.tile[num48, num50].type = 0;
							}
						}
						break;
					}
					num49++;
				}
			}
			int num51 = 0;
			for (int num52 = 0; num52 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0015); num52++)
			{
				float num53 = (float)((double)num52 / ((double)(Main.maxTilesX * Main.maxTilesY) * 0.0015));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[7],
					" ",
					(int)(num53 * 100f + 1f),
					"%"
				});
				int type5 = -1;
				if (WorldGen.genRand.Next(5) == 0)
				{
					type5 = -2;
				}
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 5), WorldGen.genRand.Next(2, 20), type5, false, 0f, 0f, false, true);
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, Main.maxTilesY), (double)WorldGen.genRand.Next(8, 15), WorldGen.genRand.Next(7, 30), type5, false, 0f, 0f, false, true);
			}
			for (int num54 = 0; num54 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 3E-05); num54++)
			{
				float num55 = (float)((double)num54 / ((double)(Main.maxTilesX * Main.maxTilesY) * 3E-05));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[8],
					" ",
					(int)(num55 * 100f + 1f),
					"%"
				});
				if (num8 <= (double)Main.maxTilesY)
				{
					int type6 = -1;
					if (WorldGen.genRand.Next(6) == 0)
					{
						type6 = -2;
					}
					WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num8 + 1), (double)WorldGen.genRand.Next(5, 15), WorldGen.genRand.Next(30, 200), type6, false, 0f, 0f, false, true);
				}
			}
			for (int num56 = 0; num56 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00013); num56++)
			{
				float num57 = (float)((double)num56 / ((double)(Main.maxTilesX * Main.maxTilesY) * 0.00013));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[9],
					" ",
					(int)(num57 * 100f + 1f),
					"%"
				});
				if (num8 <= (double)Main.maxTilesY)
				{
					int type7 = -1;
					if (WorldGen.genRand.Next(10) == 0)
					{
						type7 = -2;
					}
					WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num8, Main.maxTilesY), (double)WorldGen.genRand.Next(6, 20), WorldGen.genRand.Next(50, 300), type7, false, 0f, 0f, false, true);
				}
			}
			Main.statusText = Lang.gen[10];
			for (int num58 = 0; num58 < (int)((double)Main.maxTilesX * 0.002); num58++)
			{
				num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				while ((double)num51 > (double)Main.maxTilesX * 0.45 && (double)num51 < (double)Main.maxTilesX * 0.55)
				{
					num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				}
				int num59 = 0;
				while ((double)num59 < num6)
				{
					if (Main.tile[num51, num59].active())
					{
						WorldGen.TileRunner(num51, num59, (double)WorldGen.genRand.Next(3, 6), WorldGen.genRand.Next(5, 50), -1, false, (float)WorldGen.genRand.Next(-10, 11) * 0.1f, 1f, false, true);
						break;
					}
					num59++;
				}
			}
			for (int num60 = 0; num60 < (int)((double)Main.maxTilesX * 0.0007); num60++)
			{
				num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				while ((double)num51 > (double)Main.maxTilesX * 0.43 && (double)num51 < (double)Main.maxTilesX * 0.58)
				{
					num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				}
				int num61 = 0;
				while ((double)num61 < num6)
				{
					if (Main.tile[num51, num61].active())
					{
						WorldGen.TileRunner(num51, num61, (double)WorldGen.genRand.Next(10, 15), WorldGen.genRand.Next(50, 130), -1, false, (float)WorldGen.genRand.Next(-10, 11) * 0.1f, 2f, false, true);
						break;
					}
					num61++;
				}
			}
			for (int num62 = 0; num62 < (int)((double)Main.maxTilesX * 0.0003); num62++)
			{
				num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				while ((double)num51 > (double)Main.maxTilesX * 0.4 && (double)num51 < (double)Main.maxTilesX * 0.6)
				{
					num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				}
				int num63 = 0;
				while ((double)num63 < num6)
				{
					if (Main.tile[num51, num63].active())
					{
						WorldGen.TileRunner(num51, num63, (double)WorldGen.genRand.Next(12, 25), WorldGen.genRand.Next(150, 500), -1, false, (float)WorldGen.genRand.Next(-10, 11) * 0.1f, 4f, false, true);
						WorldGen.TileRunner(num51, num63, (double)WorldGen.genRand.Next(8, 17), WorldGen.genRand.Next(60, 200), -1, false, (float)WorldGen.genRand.Next(-10, 11) * 0.1f, 2f, false, true);
						WorldGen.TileRunner(num51, num63, (double)WorldGen.genRand.Next(5, 13), WorldGen.genRand.Next(40, 170), -1, false, (float)WorldGen.genRand.Next(-10, 11) * 0.1f, 2f, false, true);
						break;
					}
					num63++;
				}
			}
			for (int num64 = 0; num64 < (int)((double)Main.maxTilesX * 0.0004); num64++)
			{
				num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				while ((double)num51 > (double)Main.maxTilesX * 0.4 && (double)num51 < (double)Main.maxTilesX * 0.6)
				{
					num51 = WorldGen.genRand.Next(0, Main.maxTilesX);
				}
				int num65 = 0;
				while ((double)num65 < num6)
				{
					if (Main.tile[num51, num65].active())
					{
						WorldGen.TileRunner(num51, num65, (double)WorldGen.genRand.Next(7, 12), WorldGen.genRand.Next(150, 250), -1, false, 0f, 1f, true, true);
						break;
					}
					num65++;
				}
			}
			float num66 = (float)(Main.maxTilesX / 4200);
			int num67 = 0;
			while ((float)num67 < 5f * num66)
			{
				try
				{
					WorldGen.Caverer(WorldGen.genRand.Next(100, Main.maxTilesX - 100), WorldGen.genRand.Next((int)Main.rockLayer, Main.maxTilesY - 400));
				}
				catch
				{
				}
				num67++;
			}
			int[] array5 = new int[Main.maxTilesY];
			int[] array6 = new int[Main.maxTilesY];
			int num68 = (int)Main.worldSurface;
			int num69 = 0;
			Main.statusText = Lang.gen[56];
			int num70 = WorldGen.genRand.Next(Main.maxTilesX);
			if (num9 == 1)
			{
				while ((float)num70 < (float)Main.maxTilesX * 0.55f || (float)num70 > (float)Main.maxTilesX * 0.7f)
				{
					num70 = WorldGen.genRand.Next(Main.maxTilesX);
				}
			}
			else
			{
				while ((float)num70 < (float)Main.maxTilesX * 0.3f || (float)num70 > (float)Main.maxTilesX * 0.45f)
				{
					num70 = WorldGen.genRand.Next(Main.maxTilesX);
				}
			}
			int num71 = WorldGen.genRand.Next(50, 90);
			float num72 = (float)(Main.maxTilesX / 4200);
			num71 += (int)((float)WorldGen.genRand.Next(20, 40) * num72);
			num71 += (int)((float)WorldGen.genRand.Next(20, 40) * num72);
			int num73 = num70 - num71;
			num71 = WorldGen.genRand.Next(50, 90);
			num71 += (int)((float)WorldGen.genRand.Next(20, 40) * num72);
			num71 += (int)((float)WorldGen.genRand.Next(20, 40) * num72);
			int num74 = num70 + num71;
			if (num73 < 0)
			{
				num73 = 0;
			}
			if (num74 > Main.maxTilesX)
			{
				num74 = Main.maxTilesX;
			}
			int num75 = WorldGen.lavaLine - 60;
			for (int num76 = 0; num76 < WorldGen.lavaLine - 100; num76++)
			{
				num73 += WorldGen.genRand.Next(-4, 4);
				num74 += WorldGen.genRand.Next(-3, 5);
				array5[num76] = num73;
				array6[num76] = num74;
				for (int num77 = num73; num77 < num74; num77++)
				{
					if (num76 < num75)
					{
						num75 += WorldGen.genRand.Next(-2, 3);
						if (num75 < WorldGen.lavaLine - 140)
						{
							num75 = WorldGen.lavaLine - 140;
						}
						if (num75 > WorldGen.lavaLine - 100)
						{
							num75 = WorldGen.lavaLine - 100;
						}
						if (Main.tile[num77, num76].wall == 2)
						{
							Main.tile[num77, num76].wall = 40;
						}
						int type8 = (int)Main.tile[num77, num76].type;
						if (type8 == 0 || type8 == 2 || type8 == 23 || type8 == 40 || type8 == 53)
						{
							Main.tile[num77, num76].type = 147;
						}
						else if (type8 == 1)
						{
							Main.tile[num77, num76].type = 161;
						}
					}
					else
					{
						num75 += WorldGen.genRand.Next(1, 3);
					}
				}
				if (num69 < num75)
				{
					num69 = num75;
				}
			}
			for (int num78 = 0; num78 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.002); num78++)
			{
				int num79 = WorldGen.genRand.Next(1, Main.maxTilesX - 1);
				int num80 = WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6);
				if (num80 >= Main.maxTilesY)
				{
					num80 = Main.maxTilesY - 2;
				}
				if (Main.tile[num79 - 1, num80].active() && Main.tile[num79 - 1, num80].type == 0 && Main.tile[num79 + 1, num80].active() && Main.tile[num79 + 1, num80].type == 0 && Main.tile[num79, num80 - 1].active() && Main.tile[num79, num80 - 1].type == 0 && Main.tile[num79, num80 + 1].active() && Main.tile[num79, num80 + 1].type == 0)
				{
					Main.tile[num79, num80].active(true);
					Main.tile[num79, num80].type = 2;
				}
				num79 = WorldGen.genRand.Next(1, Main.maxTilesX - 1);
				num80 = WorldGen.genRand.Next(0, (int)WorldGen.worldSurfaceLow);
				if (num80 >= Main.maxTilesY)
				{
					num80 = Main.maxTilesY - 2;
				}
				if (Main.tile[num79 - 1, num80].active() && Main.tile[num79 - 1, num80].type == 0 && Main.tile[num79 + 1, num80].active() && Main.tile[num79 + 1, num80].type == 0 && Main.tile[num79, num80 - 1].active() && Main.tile[num79, num80 - 1].type == 0 && Main.tile[num79, num80 + 1].active() && Main.tile[num79, num80 + 1].type == 0)
				{
					Main.tile[num79, num80].active(true);
					Main.tile[num79, num80].type = 2;
				}
			}
			Main.statusText = Lang.gen[11] + " 0%";
			float num81 = (float)(Main.maxTilesX / 4200);
			num81 *= 1.5f;
			float num82 = (float)WorldGen.genRand.Next(15, 30) * 0.01f;
			int num83;
			if (num9 == -1)
			{
				num82 = 1f - num82;
				num83 = (int)((float)Main.maxTilesX * num82);
			}
			else
			{
				num83 = (int)((float)Main.maxTilesX * num82);
			}
			int num84 = (int)((double)Main.maxTilesY + Main.rockLayer) / 2;
			num83 += WorldGen.genRand.Next((int)(-100f * num81), (int)(101f * num81));
			num84 += WorldGen.genRand.Next((int)(-100f * num81), (int)(101f * num81));
			int num85 = num83;
			int num86 = num84;
			WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next((int)(250f * num81), (int)(500f * num81)), WorldGen.genRand.Next(50, 150), 59, false, (float)(num9 * 3), 0f, false, true);
			int num87 = 0;
			while ((float)num87 < 6f * num81)
			{
				WorldGen.TileRunner(num83 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), num84 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(3, 8), WorldGen.genRand.Next(63, 65), false, 0f, 0f, false, true);
				num87++;
			}
			WorldGen.mudWall = true;
			Main.statusText = Lang.gen[11] + " 15%";
			num83 += WorldGen.genRand.Next((int)(-250f * num81), (int)(251f * num81));
			num84 += WorldGen.genRand.Next((int)(-150f * num81), (int)(151f * num81));
			int num88 = num83;
			int num89 = num84;
			int num90 = num83;
			int num91 = num84;
			WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next((int)(250f * num81), (int)(500f * num81)), WorldGen.genRand.Next(50, 150), 59, false, 0f, 0f, false, true);
			WorldGen.mudWall = false;
			int num92 = 0;
			while ((float)num92 < 6f * num81)
			{
				WorldGen.TileRunner(num83 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), num84 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(3, 8), WorldGen.genRand.Next(65, 67), false, 0f, 0f, false, true);
				num92++;
			}
			WorldGen.mudWall = true;
			Main.statusText = Lang.gen[11] + " 30%";
			num83 += WorldGen.genRand.Next((int)(-400f * num81), (int)(401f * num81));
			num84 += WorldGen.genRand.Next((int)(-150f * num81), (int)(151f * num81));
			int num93 = num83;
			int num94 = num84;
			WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next((int)(250f * num81), (int)(500f * num81)), WorldGen.genRand.Next(50, 150), 59, false, (float)(num9 * -3), 0f, false, true);
			WorldGen.mudWall = false;
			int num95 = 0;
			while ((float)num95 < 6f * num81)
			{
				WorldGen.TileRunner(num83 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), num84 + WorldGen.genRand.Next(-(int)(125f * num81), (int)(125f * num81)), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(3, 8), WorldGen.genRand.Next(67, 69), false, 0f, 0f, false, true);
				num95++;
			}
			WorldGen.mudWall = true;
			Main.statusText = Lang.gen[11] + " 45%";
			num83 = (num85 + num88 + num93) / 3;
			num84 = (num86 + num89 + num94) / 3;
			WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next((int)(400f * num81), (int)(600f * num81)), 10000, 59, false, 0f, -20f, true, true);
			WorldGen.JungleRunner(num83, num84);
			Main.statusText = Lang.gen[11] + " 60%";
			WorldGen.mudWall = false;
			for (int num96 = 0; num96 < Main.maxTilesX / 4; num96++)
			{
				num83 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
				num84 = WorldGen.genRand.Next((int)num4 + 10, Main.maxTilesY - 200);
				while (Main.tile[num83, num84].wall != 64 && Main.tile[num83, num84].wall != 15)
				{
					num83 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
					num84 = WorldGen.genRand.Next((int)num4 + 10, Main.maxTilesY - 200);
				}
				WorldGen.MudWallRunner(num83, num84);
			}
			num83 = num90;
			num84 = num91;
			int num97 = 0;
			while ((float)num97 <= 20f * num81)
			{
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[11],
					" ",
					(int)(60f + (float)num97 / num81),
					"%"
				});
				num83 += WorldGen.genRand.Next((int)(-5f * num81), (int)(6f * num81));
				num84 += WorldGen.genRand.Next((int)(-5f * num81), (int)(6f * num81));
				WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next(40, 100), WorldGen.genRand.Next(300, 500), 59, false, 0f, 0f, false, true);
				num97++;
			}
			int num98 = 0;
			while ((float)num98 <= 10f * num81)
			{
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[11],
					" ",
					(int)(80f + (float)num98 / num81 * 2f),
					"%"
				});
				num83 = num90 + WorldGen.genRand.Next((int)(-600f * num81), (int)(600f * num81));
				num84 = num91 + WorldGen.genRand.Next((int)(-200f * num81), (int)(200f * num81));
				while (num83 < 1 || num83 >= Main.maxTilesX - 1 || num84 < 1 || num84 >= Main.maxTilesY - 1 || Main.tile[num83, num84].type != 59)
				{
					num83 = num90 + WorldGen.genRand.Next((int)(-600f * num81), (int)(600f * num81));
					num84 = num91 + WorldGen.genRand.Next((int)(-200f * num81), (int)(200f * num81));
				}
				int num99 = 0;
				while ((float)num99 < 8f * num81)
				{
					num83 += WorldGen.genRand.Next(-30, 31);
					num84 += WorldGen.genRand.Next(-30, 31);
					int type9 = -1;
					if (WorldGen.genRand.Next(7) == 0)
					{
						type9 = -2;
					}
					WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next(10, 20), WorldGen.genRand.Next(30, 70), type9, false, 0f, 0f, false, true);
					num99++;
				}
				num98++;
			}
			int num100 = 0;
			while ((float)num100 <= 300f * num81)
			{
				num83 = num90 + WorldGen.genRand.Next((int)(-600f * num81), (int)(600f * num81));
				num84 = num91 + WorldGen.genRand.Next((int)(-200f * num81), (int)(200f * num81));
				while (num83 < 1 || num83 >= Main.maxTilesX - 1 || num84 < 1 || num84 >= Main.maxTilesY - 1 || Main.tile[num83, num84].type != 59)
				{
					num83 = num90 + WorldGen.genRand.Next((int)(-600f * num81), (int)(600f * num81));
					num84 = num91 + WorldGen.genRand.Next((int)(-200f * num81), (int)(200f * num81));
				}
				WorldGen.TileRunner(num83, num84, (double)WorldGen.genRand.Next(4, 10), WorldGen.genRand.Next(5, 30), 1, false, 0f, 0f, false, true);
				if (WorldGen.genRand.Next(4) == 0)
				{
					int type10 = WorldGen.genRand.Next(63, 69);
					WorldGen.TileRunner(num83 + WorldGen.genRand.Next(-1, 2), num84 + WorldGen.genRand.Next(-1, 2), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(4, 8), type10, false, 0f, 0f, false, true);
				}
				num100++;
			}
			float num101 = (float)(Main.maxTilesX / 4200);
			float num102 = (float)(1 + WorldGen.genRand.Next((int)(5f * num101), (int)(8f * num101)));
			int num103 = 0;
			while ((float)num103 < num102)
			{
				bool flag4 = true;
				while (flag4)
				{
					num83 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
					num84 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 300);
					if (Main.tile[num83, num84].type == 59)
					{
						flag4 = false;
						int num104 = 100;
						for (int num105 = num83 - num104; num105 < num83 + num104; num105 += 5)
						{
							if (Main.tile[num83, num84].wall == 3 || Main.tile[num83, num84].wall == 83)
							{
								flag4 = true;
								break;
							}
						}
						if (!flag4)
						{
							WorldGen.HiveX[WorldGen.numHives] = num83;
							WorldGen.HiveY[WorldGen.numHives] = num84;
							WorldGen.numHives++;
						}
					}
				}
				num103++;
			}
			for (int num106 = 0; num106 < Main.maxTilesX; num106++)
			{
				for (int num107 = 0; num107 < Main.maxTilesY; num107++)
				{
					if (Main.tile[num106, num107].active())
					{
						try
						{
							WorldGen.grassSpread = 0;
							WorldGen.SpreadGrass(num106, num107, 59, 60, true, 0);
						}
						catch
						{
							WorldGen.grassSpread = 0;
							WorldGen.SpreadGrass(num106, num107, 59, 60, false, 0);
						}
					}
				}
			}
			WorldGen.tileCountAndDestroy();
			WorldGen.numIslandHouses = 0;
			WorldGen.houseCount = 0;
			Main.statusText = Lang.gen[12];
			for (int num108 = 0; num108 < (int)((double)Main.maxTilesX * 0.0008); num108++)
			{
				int num109 = 0;
				bool flag5 = false;
				int num110 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.1), (int)((double)Main.maxTilesX * 0.9));
				bool flag6 = false;
				while (!flag6)
				{
					flag6 = true;
					while (num110 > Main.maxTilesX / 2 - 80 && num110 < Main.maxTilesX / 2 + 80)
					{
						num110 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.1), (int)((double)Main.maxTilesX * 0.9));
					}
					for (int num111 = 0; num111 < WorldGen.numIslandHouses; num111++)
					{
						if (num110 > WorldGen.fihX[num111] - 180 && num110 < WorldGen.fihX[num111] + 180)
						{
							num109++;
							flag6 = false;
							break;
						}
					}
					if (num109 >= 200)
					{
						flag5 = true;
						break;
					}
				}
				if (!flag5)
				{
					int num112 = 200;
					while ((double)num112 < Main.worldSurface)
					{
						if (Main.tile[num110, num112].active())
						{
							int num113 = num110;
							int num114 = WorldGen.genRand.Next(90, num112 - 100);
							while ((double)num114 > WorldGen.worldSurfaceLow - 50.0)
							{
								num114--;
							}
							WorldGen.CloudIsland(num113, num114);
							WorldGen.fihX[WorldGen.numIslandHouses] = num113;
							WorldGen.fihY[WorldGen.numIslandHouses] = num114;
							WorldGen.numIslandHouses++;
							break;
						}
						num112++;
					}
				}
			}
			Main.statusText = Lang.gen[13];
			for (int num115 = 0; num115 < Main.maxTilesX / 500; num115++)
			{
				int num116 = 0;
				bool flag7 = true;
				while (flag7)
				{
					int num117 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.3), (int)((double)Main.maxTilesX * 0.7));
					int num118 = WorldGen.genRand.Next((int)Main.rockLayer, Main.maxTilesY - 350);
					flag7 = false;
					int num119 = 60;
					for (int num120 = num117 - num119; num120 < num117 + num119; num120 += 3)
					{
						for (int num121 = num118 - num119; num121 < num118 + num119; num121 += 3)
						{
							if (Main.tile[num120, num121].type == 147 || Main.tile[num120, num121].type == 161 || Main.tile[num120, num121].type == 162)
							{
								flag7 = true;
								break;
							}
						}
					}
					if (!flag7)
					{
						WorldGen.ShroomPatch(num117, num118);
					}
					num116++;
					if (num116 > 100)
					{
						break;
					}
				}
			}
			for (int num122 = 0; num122 < Main.maxTilesX; num122++)
			{
				for (int num123 = (int)Main.worldSurface; num123 < Main.maxTilesY; num123++)
				{
					if (Main.tile[num122, num123].active())
					{
						WorldGen.grassSpread = 0;
						WorldGen.SpreadGrass(num122, num123, 59, 70, false, 0);
						if (Main.tile[num122, num123].type == 70 && WorldGen.genRand.Next(20) == 0)
						{
							int num124;
							if (WorldGen.genRand.Next(5) == 0)
							{
								num124 = 2;
							}
							else
							{
								num124 = 1;
							}
							int num125 = WorldGen.genRand.Next(2, 6);
							int num126 = num123 - num125;
							bool flag8 = true;
							for (int num127 = num122 - num124; num127 <= num122 + num124; num127++)
							{
								if (Main.tile[num127, num126].active())
								{
									flag8 = false;
								}
								if (Main.tileBrick[(int)Main.tile[num127, num126 - 1].type])
								{
									flag8 = false;
								}
								if (Main.tileBrick[(int)Main.tile[num127, num126 + 1].type])
								{
									flag8 = false;
								}
							}
							if (Main.tile[num122 - num124 - 1, num126].type == 190)
							{
								flag8 = false;
							}
							if (Main.tile[num122 + num124 + 1, num126].type == 190)
							{
								flag8 = false;
							}
							for (int num128 = num126; num128 < num123; num128++)
							{
								if (Main.tile[num122, num128].active())
								{
									flag8 = false;
								}
								if (Main.tileBrick[(int)Main.tile[num122 - 1, num128].type])
								{
									flag8 = false;
								}
								if (Main.tileBrick[(int)Main.tile[num122 + 1, num128].type])
								{
									flag8 = false;
								}
							}
							if (flag8)
							{
								for (int num129 = num122 - num124; num129 <= num122 + num124; num129++)
								{
									WorldGen.PlaceTile(num129, num126, 190, true, true, -1, 0);
								}
								for (int num130 = num126; num130 < num123; num130++)
								{
									WorldGen.PlaceTile(num122, num130, 190, true, true, -1, 0);
								}
							}
						}
					}
				}
			}
			Main.statusText = Lang.gen[14];
			for (int num131 = 0; num131 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.001); num131++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 6), WorldGen.genRand.Next(2, 40), 59, false, 0f, 0f, false, true);
			}
			Main.statusText = Lang.gen[15];
			for (int num132 = 0; num132 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0001); num132++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num8, Main.maxTilesY), (double)WorldGen.genRand.Next(5, 12), WorldGen.genRand.Next(15, 50), 123, false, 0f, 0f, false, true);
			}
			for (int num133 = 0; num133 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0005); num133++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num8, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 5), WorldGen.genRand.Next(2, 5), 123, false, 0f, 0f, false, true);
			}
			Main.statusText = Lang.gen[16];
			for (int num134 = 0; num134 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 6E-05); num134++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6), (double)WorldGen.genRand.Next(3, 6), WorldGen.genRand.Next(2, 6), type, false, 0f, 0f, false, true);
			}
			for (int num135 = 0; num135 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 8E-05); num135++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, (int)num8), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(3, 7), type, false, 0f, 0f, false, true);
			}
			for (int num136 = 0; num136 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0002); num136++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(4, 9), WorldGen.genRand.Next(4, 8), type, false, 0f, 0f, false, true);
			}
			for (int num137 = 0; num137 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 3E-05); num137++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)num6), (double)WorldGen.genRand.Next(3, 7), WorldGen.genRand.Next(2, 5), type2, false, 0f, 0f, false, true);
			}
			for (int num138 = 0; num138 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 8E-05); num138++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, (int)num8), (double)WorldGen.genRand.Next(3, 6), WorldGen.genRand.Next(3, 6), type2, false, 0f, 0f, false, true);
			}
			for (int num139 = 0; num139 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0002); num139++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(4, 9), WorldGen.genRand.Next(4, 8), type2, false, 0f, 0f, false, true);
			}
			for (int num140 = 0; num140 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2.6E-05); num140++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num6, (int)num8), (double)WorldGen.genRand.Next(3, 6), WorldGen.genRand.Next(3, 6), type3, false, 0f, 0f, false, true);
			}
			for (int num141 = 0; num141 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00015); num141++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(4, 9), WorldGen.genRand.Next(4, 8), type3, false, 0f, 0f, false, true);
			}
			for (int num142 = 0; num142 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00017); num142++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next(0, (int)WorldGen.worldSurfaceLow), (double)WorldGen.genRand.Next(4, 9), WorldGen.genRand.Next(4, 8), type3, false, 0f, 0f, false, true);
			}
			for (int num143 = 0; num143 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00012); num143++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(4, 8), WorldGen.genRand.Next(4, 8), type4, false, 0f, 0f, false, true);
			}
			for (int num144 = 0; num144 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.00012); num144++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next(0, (int)WorldGen.worldSurfaceLow - 20), (double)WorldGen.genRand.Next(4, 8), WorldGen.genRand.Next(4, 8), type4, false, 0f, 0f, false, true);
			}
			if (WorldGen.crimson)
			{
				for (int num145 = 0; num145 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num145++)
				{
					WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 4), WorldGen.genRand.Next(3, 6), 204, false, 0f, 0f, false, true);
				}
			}
			else
			{
				for (int num146 = 0; num146 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num146++)
				{
					WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next((int)num7, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 4), WorldGen.genRand.Next(3, 6), 22, false, 0f, 0f, false, true);
				}
			}
			Main.statusText = Lang.gen[17];
			for (int num147 = 0; num147 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0006); num147++)
			{
				int num148 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
				int num149 = WorldGen.genRand.Next((int)num6, Main.maxTilesY - 20);
				if (num147 < WorldGen.numMCaves)
				{
					num148 = WorldGen.mCaveX[num147];
					num149 = WorldGen.mCaveY[num147];
				}
				if (!Main.tile[num148, num149].active())
				{
					if ((double)num149 <= Main.worldSurface)
					{
						if (Main.tile[num148, num149].wall <= 0)
						{
							goto IL_3E86;
						}
					}
					while (!Main.tile[num148, num149].active() && num149 > (int)WorldGen.worldSurfaceLow)
					{
						num149--;
					}
					num149++;
					int num150 = 1;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num150 = -1;
					}
					while (!Main.tile[num148, num149].active() && num148 > 10 && num148 < Main.maxTilesX - 10)
					{
						num148 += num150;
					}
					num148 -= num150;
					if ((double)num149 > Main.worldSurface || Main.tile[num148, num149].wall > 0)
					{
						WorldGen.TileRunner(num148, num149, (double)WorldGen.genRand.Next(4, 11), WorldGen.genRand.Next(2, 4), 51, true, (float)num150, -1f, false, false);
					}
				}
				IL_3E86:;
			}
			Main.statusText = Lang.gen[18] + " 0%";
			int num151 = Main.maxTilesY - WorldGen.genRand.Next(150, 190);
			for (int num152 = 0; num152 < Main.maxTilesX; num152++)
			{
				num151 += WorldGen.genRand.Next(-3, 4);
				if (num151 < Main.maxTilesY - 190)
				{
					num151 = Main.maxTilesY - 190;
				}
				if (num151 > Main.maxTilesY - 160)
				{
					num151 = Main.maxTilesY - 160;
				}
				for (int num153 = num151 - 20 - WorldGen.genRand.Next(3); num153 < Main.maxTilesY; num153++)
				{
					if (num153 >= num151)
					{
						Main.tile[num152, num153].active(false);
						Main.tile[num152, num153].lava(false);
						Main.tile[num152, num153].liquid = 0;
					}
					else
					{
						Main.tile[num152, num153].type = 57;
					}
				}
			}
			int num154 = Main.maxTilesY - WorldGen.genRand.Next(40, 70);
			for (int num155 = 10; num155 < Main.maxTilesX - 10; num155++)
			{
				num154 += WorldGen.genRand.Next(-10, 11);
				if (num154 > Main.maxTilesY - 60)
				{
					num154 = Main.maxTilesY - 60;
				}
				if (num154 < Main.maxTilesY - 100)
				{
					num154 = Main.maxTilesY - 120;
				}
				for (int num156 = num154; num156 < Main.maxTilesY - 10; num156++)
				{
					if (!Main.tile[num155, num156].active())
					{
						Main.tile[num155, num156].lava(true);
						Main.tile[num155, num156].liquid = 255;
					}
				}
			}
			for (int num157 = 0; num157 < Main.maxTilesX; num157++)
			{
				if (WorldGen.genRand.Next(50) == 0)
				{
					int num158 = Main.maxTilesY - 65;
					while (!Main.tile[num157, num158].active() && num158 > Main.maxTilesY - 135)
					{
						num158--;
					}
					WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), num158 + WorldGen.genRand.Next(20, 50), (double)WorldGen.genRand.Next(15, 20), 1000, 57, true, 0f, (float)WorldGen.genRand.Next(1, 3), true, true);
				}
			}
			Liquid.QuickWater(-2, -1, -1);
			for (int num159 = 0; num159 < Main.maxTilesX; num159++)
			{
				float num160 = (float)num159 / (float)(Main.maxTilesX - 1);
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[18],
					" ",
					(int)(num160 * 100f / 2f + 50f),
					"%"
				});
				if (WorldGen.genRand.Next(13) == 0)
				{
					int num161 = Main.maxTilesY - 65;
					while ((Main.tile[num159, num161].liquid > 0 || Main.tile[num159, num161].active()) && num161 > Main.maxTilesY - 140)
					{
						num161--;
					}
					WorldGen.TileRunner(num159, num161 - WorldGen.genRand.Next(2, 5), (double)WorldGen.genRand.Next(5, 30), 1000, 57, true, 0f, (float)WorldGen.genRand.Next(1, 3), true, true);
					float num162 = (float)WorldGen.genRand.Next(1, 3);
					if (WorldGen.genRand.Next(3) == 0)
					{
						num162 *= 0.5f;
					}
					if (WorldGen.genRand.Next(2) == 0)
					{
						WorldGen.TileRunner(num159, num161 - WorldGen.genRand.Next(2, 5), (double)((int)((float)WorldGen.genRand.Next(5, 15) * num162)), (int)((float)WorldGen.genRand.Next(10, 15) * num162), 57, true, 1f, 0.3f, false, true);
					}
					if (WorldGen.genRand.Next(2) == 0)
					{
						num162 = (float)WorldGen.genRand.Next(1, 3);
						WorldGen.TileRunner(num159, num161 - WorldGen.genRand.Next(2, 5), (double)((int)((float)WorldGen.genRand.Next(5, 15) * num162)), (int)((float)WorldGen.genRand.Next(10, 15) * num162), 57, true, -1f, 0.3f, false, true);
					}
					WorldGen.TileRunner(num159 + WorldGen.genRand.Next(-10, 10), num161 + WorldGen.genRand.Next(-10, 10), (double)WorldGen.genRand.Next(5, 15), WorldGen.genRand.Next(5, 10), -2, false, (float)WorldGen.genRand.Next(-1, 3), (float)WorldGen.genRand.Next(-1, 3), false, true);
					if (WorldGen.genRand.Next(3) == 0)
					{
						WorldGen.TileRunner(num159 + WorldGen.genRand.Next(-10, 10), num161 + WorldGen.genRand.Next(-10, 10), (double)WorldGen.genRand.Next(10, 30), WorldGen.genRand.Next(10, 20), -2, false, (float)WorldGen.genRand.Next(-1, 3), (float)WorldGen.genRand.Next(-1, 3), false, true);
					}
					if (WorldGen.genRand.Next(5) == 0)
					{
						WorldGen.TileRunner(num159 + WorldGen.genRand.Next(-15, 15), num161 + WorldGen.genRand.Next(-15, 10), (double)WorldGen.genRand.Next(15, 30), WorldGen.genRand.Next(5, 20), -2, false, (float)WorldGen.genRand.Next(-1, 3), (float)WorldGen.genRand.Next(-1, 3), false, true);
					}
				}
			}
			for (int num163 = 0; num163 < Main.maxTilesX; num163++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(20, Main.maxTilesX - 20), WorldGen.genRand.Next(Main.maxTilesY - 180, Main.maxTilesY - 10), (double)WorldGen.genRand.Next(2, 7), WorldGen.genRand.Next(2, 7), -2, false, 0f, 0f, false, true);
			}
			for (int num164 = 0; num164 < Main.maxTilesX; num164++)
			{
				if (!Main.tile[num164, Main.maxTilesY - 145].active())
				{
					Main.tile[num164, Main.maxTilesY - 145].liquid = 255;
					Main.tile[num164, Main.maxTilesY - 145].lava(true);
				}
				if (!Main.tile[num164, Main.maxTilesY - 144].active())
				{
					Main.tile[num164, Main.maxTilesY - 144].liquid = 255;
					Main.tile[num164, Main.maxTilesY - 144].lava(true);
				}
			}
			for (int num165 = 0; num165 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0008); num165++)
			{
				WorldGen.TileRunner(WorldGen.genRand.Next(0, Main.maxTilesX), WorldGen.genRand.Next(Main.maxTilesY - 140, Main.maxTilesY), (double)WorldGen.genRand.Next(2, 7), WorldGen.genRand.Next(3, 7), 58, false, 0f, 0f, false, true);
			}
			WorldGen.AddHellHouses();
			int num166 = WorldGen.genRand.Next(2, (int)((double)Main.maxTilesX * 0.005));
			for (int num167 = 0; num167 < num166; num167++)
			{
				float num168 = (float)num167 / (float)num166;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[19],
					" ",
					(int)(num168 * 100f),
					"%"
				});
				int num169 = WorldGen.genRand.Next(300, Main.maxTilesX - 300);
				while (num169 > Main.maxTilesX / 2 - 100 && num169 < Main.maxTilesX / 2 + 100)
				{
					num169 = WorldGen.genRand.Next(300, Main.maxTilesX - 300);
				}
				int num170 = (int)WorldGen.worldSurfaceLow - 20;
				while (!Main.tile[num169, num170].active())
				{
					num170++;
				}
				WorldGen.Lakinater(num169, num170);
			}
			int x;
			if (num9 == -1)
			{
				x = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.05), (int)((double)Main.maxTilesX * 0.2));
				num9 = -1;
			}
			else
			{
				x = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.8), (int)((double)Main.maxTilesX * 0.95));
				num9 = 1;
			}
			int y = (int)((Main.worldSurface + Main.rockLayer) / 2.0) + WorldGen.genRand.Next(-200, 200);
			WorldGen.MakeDungeon(x, y);
			if (WorldGen.crimson)
			{
				int num171 = 0;
				while ((double)num171 < (double)Main.maxTilesX * 0.00045)
				{
					float num172 = (float)((double)num171 / ((double)Main.maxTilesX * 0.00045));
					Main.statusText = string.Concat(new object[]
					{
						Lang.gen[72],
						" ",
						(int)(num172 * 100f),
						"%"
					});
					bool flag9 = false;
					int num173 = 0;
					int num174 = 0;
					int num175 = 0;
					while (!flag9)
					{
						int num176 = 0;
						flag9 = true;
						int num177 = Main.maxTilesX / 2;
						int num178 = 200;
						if (num9 < 0)
						{
							num173 = WorldGen.genRand.Next(600, Main.maxTilesX - 320);
						}
						else
						{
							num173 = WorldGen.genRand.Next(320, Main.maxTilesX - 600);
						}
						num174 = num173 - WorldGen.genRand.Next(200) - 100;
						num175 = num173 + WorldGen.genRand.Next(200) + 100;
						if (num174 < 285)
						{
							num174 = 285;
						}
						if (num175 > Main.maxTilesX - 285)
						{
							num175 = Main.maxTilesX - 285;
						}
						if (num9 < 0 && num174 < 400)
						{
							num174 = 400;
						}
						else if (num9 > 0 && num174 > Main.maxTilesX - 400)
						{
							num174 = Main.maxTilesX - 400;
						}
						if (num173 > num177 - num178 && num173 < num177 + num178)
						{
							flag9 = false;
						}
						if (num174 > num177 - num178 && num174 < num177 + num178)
						{
							flag9 = false;
						}
						if (num175 > num177 - num178 && num175 < num177 + num178)
						{
							flag9 = false;
						}
						for (int num179 = num174; num179 < num175; num179++)
						{
							for (int num180 = 0; num180 < (int)Main.worldSurface; num180 += 5)
							{
								if (Main.tile[num179, num180].active() && Main.tileDungeon[(int)Main.tile[num179, num180].type])
								{
									flag9 = false;
									break;
								}
								if (!flag9)
								{
									break;
								}
							}
						}
						if (num176 < 200 && WorldGen.JungleX > num174 && WorldGen.JungleX < num175)
						{
							num176++;
							flag9 = false;
						}
					}
					WorldGen.CrimStart(num173, (int)WorldGen.worldSurfaceLow - 10);
					for (int num181 = num174; num181 < num175; num181++)
					{
						int num182 = (int)WorldGen.worldSurfaceLow;
						while ((double)num182 < Main.worldSurface - 1.0)
						{
							if (Main.tile[num181, num182].active())
							{
								int num183 = num182 + WorldGen.genRand.Next(10, 14);
								for (int num184 = num182; num184 < num183; num184++)
								{
									if ((Main.tile[num181, num184].type == 59 || Main.tile[num181, num184].type == 60) && num181 >= num174 + WorldGen.genRand.Next(5) && num181 < num175 - WorldGen.genRand.Next(5))
									{
										Main.tile[num181, num184].type = 0;
									}
								}
								break;
							}
							num182++;
						}
					}
					double num185 = Main.worldSurface + 40.0;
					for (int num186 = num174; num186 < num175; num186++)
					{
						num185 += (double)WorldGen.genRand.Next(-2, 3);
						if (num185 < Main.worldSurface + 30.0)
						{
							num185 = Main.worldSurface + 30.0;
						}
						if (num185 > Main.worldSurface + 50.0)
						{
							num185 = Main.worldSurface + 50.0;
						}
						num51 = num186;
						bool flag10 = false;
						int num187 = (int)WorldGen.worldSurfaceLow;
						while ((double)num187 < num185)
						{
							if (Main.tile[num51, num187].active())
							{
								if (Main.tile[num51, num187].type == 53 && num51 >= num174 + WorldGen.genRand.Next(5) && num51 <= num175 - WorldGen.genRand.Next(5))
								{
									Main.tile[num51, num187].type = 234;
								}
								if (Main.tile[num51, num187].type == 0 && (double)num187 < Main.worldSurface - 1.0 && !flag10)
								{
									WorldGen.grassSpread = 0;
									WorldGen.SpreadGrass(num51, num187, 0, 199, true, 0);
								}
								flag10 = true;
								if (Main.tile[num51, num187].type == 1 && num51 >= num174 + WorldGen.genRand.Next(5) && num51 <= num175 - WorldGen.genRand.Next(5))
								{
									Main.tile[num51, num187].type = 203;
								}
								if (Main.tile[num51, num187].type == 2)
								{
									Main.tile[num51, num187].type = 199;
								}
								if (Main.tile[num51, num187].type == 161)
								{
									Main.tile[num51, num187].type = 200;
								}
							}
							num187++;
						}
					}
					int num188 = WorldGen.genRand.Next(10, 15);
					for (int num189 = 0; num189 < num188; num189++)
					{
						int num190 = 0;
						bool flag11 = false;
						int num191 = 0;
						while (!flag11)
						{
							num190++;
							int num192 = WorldGen.genRand.Next(num174 - num191, num175 + num191);
							int num193 = WorldGen.genRand.Next((int)(Main.worldSurface - (double)(num191 / 2)), (int)(Main.worldSurface + 100.0 + (double)num191));
							if (num190 > 100)
							{
								num191++;
								num190 = 0;
							}
							if (!Main.tile[num192, num193].active())
							{
								while (!Main.tile[num192, num193].active())
								{
									num193++;
								}
								num193--;
							}
							else
							{
								while (Main.tile[num192, num193].active() && (double)num193 > Main.worldSurface)
								{
									num193--;
								}
							}
							if (num191 > 10 || (Main.tile[num192, num193 + 1].active() && Main.tile[num192, num193 + 1].type == 203))
							{
								WorldGen.Place3x2(num192, num193, 26, 1);
								if (Main.tile[num192, num193].type == 26)
								{
									flag11 = true;
								}
							}
							if (num191 > 100)
							{
								flag11 = true;
							}
						}
					}
					num171++;
				}
			}
			else
			{
				int num194 = 0;
				while ((double)num194 < (double)Main.maxTilesX * 0.00045)
				{
					float num195 = (float)((double)num194 / ((double)Main.maxTilesX * 0.00045));
					Main.statusText = string.Concat(new object[]
					{
						Lang.gen[20],
						" ",
						(int)(num195 * 100f),
						"%"
					});
					bool flag12 = false;
					int num196 = 0;
					int num197 = 0;
					int num198 = 0;
					while (!flag12)
					{
						int num199 = 0;
						flag12 = true;
						int num200 = Main.maxTilesX / 2;
						int num201 = 200;
						num196 = WorldGen.genRand.Next(320, Main.maxTilesX - 320);
						num197 = num196 - WorldGen.genRand.Next(200) - 100;
						num198 = num196 + WorldGen.genRand.Next(200) + 100;
						if (num197 < 285)
						{
							num197 = 285;
						}
						if (num198 > Main.maxTilesX - 285)
						{
							num198 = Main.maxTilesX - 285;
						}
						if (num196 > num200 - num201 && num196 < num200 + num201)
						{
							flag12 = false;
						}
						if (num197 > num200 - num201 && num197 < num200 + num201)
						{
							flag12 = false;
						}
						if (num198 > num200 - num201 && num198 < num200 + num201)
						{
							flag12 = false;
						}
						for (int num202 = num197; num202 < num198; num202++)
						{
							for (int num203 = 0; num203 < (int)Main.worldSurface; num203 += 5)
							{
								if (Main.tile[num202, num203].active() && Main.tileDungeon[(int)Main.tile[num202, num203].type])
								{
									flag12 = false;
									break;
								}
								if (!flag12)
								{
									break;
								}
							}
						}
						if (num199 < 200 && WorldGen.JungleX > num197 && WorldGen.JungleX < num198)
						{
							num199++;
							flag12 = false;
						}
					}
					int num204 = 0;
					for (int num205 = num197; num205 < num198; num205++)
					{
						if (num204 > 0)
						{
							num204--;
						}
						if (num205 == num196 || num204 == 0)
						{
							int num206 = (int)WorldGen.worldSurfaceLow;
							while ((double)num206 < Main.worldSurface - 1.0)
							{
								if (Main.tile[num205, num206].active() || Main.tile[num205, num206].wall > 0)
								{
									if (num205 == num196)
									{
										num204 = 20;
										WorldGen.ChasmRunner(num205, num206, WorldGen.genRand.Next(150) + 150, true);
										break;
									}
									if (WorldGen.genRand.Next(35) == 0 && num204 == 0)
									{
										num204 = 30;
										bool makeOrb = true;
										WorldGen.ChasmRunner(num205, num206, WorldGen.genRand.Next(50) + 50, makeOrb);
										break;
									}
									break;
								}
								else
								{
									num206++;
								}
							}
						}
						int num207 = (int)WorldGen.worldSurfaceLow;
						while ((double)num207 < Main.worldSurface - 1.0)
						{
							if (Main.tile[num205, num207].active())
							{
								int num208 = num207 + WorldGen.genRand.Next(10, 14);
								for (int num209 = num207; num209 < num208; num209++)
								{
									if ((Main.tile[num205, num209].type == 59 || Main.tile[num205, num209].type == 60) && num205 >= num197 + WorldGen.genRand.Next(5) && num205 < num198 - WorldGen.genRand.Next(5))
									{
										Main.tile[num205, num209].type = 0;
									}
								}
								break;
							}
							num207++;
						}
					}
					double num210 = Main.worldSurface + 40.0;
					for (int num211 = num197; num211 < num198; num211++)
					{
						num210 += (double)WorldGen.genRand.Next(-2, 3);
						if (num210 < Main.worldSurface + 30.0)
						{
							num210 = Main.worldSurface + 30.0;
						}
						if (num210 > Main.worldSurface + 50.0)
						{
							num210 = Main.worldSurface + 50.0;
						}
						num51 = num211;
						bool flag13 = false;
						int num212 = (int)WorldGen.worldSurfaceLow;
						while ((double)num212 < num210)
						{
							if (Main.tile[num51, num212].active())
							{
								if (Main.tile[num51, num212].type == 53 && num51 >= num197 + WorldGen.genRand.Next(5) && num51 <= num198 - WorldGen.genRand.Next(5))
								{
									Main.tile[num51, num212].type = 112;
								}
								if (Main.tile[num51, num212].type == 0 && (double)num212 < Main.worldSurface - 1.0 && !flag13)
								{
									WorldGen.grassSpread = 0;
									WorldGen.SpreadGrass(num51, num212, 0, 23, true, 0);
								}
								flag13 = true;
								if (Main.tile[num51, num212].type == 1 && num51 >= num197 + WorldGen.genRand.Next(5) && num51 <= num198 - WorldGen.genRand.Next(5))
								{
									Main.tile[num51, num212].type = 25;
								}
								if (Main.tile[num51, num212].type == 2)
								{
									Main.tile[num51, num212].type = 23;
								}
								if (Main.tile[num51, num212].type == 161)
								{
									Main.tile[num51, num212].type = 163;
								}
							}
							num212++;
						}
					}
					for (int num213 = num197; num213 < num198; num213++)
					{
						for (int num214 = 0; num214 < Main.maxTilesY - 50; num214++)
						{
							if (Main.tile[num213, num214].active() && Main.tile[num213, num214].type == 31)
							{
								int num215 = num213 - 13;
								int num216 = num213 + 13;
								int num217 = num214 - 13;
								int num218 = num214 + 13;
								for (int num219 = num215; num219 < num216; num219++)
								{
									if (num219 > 10 && num219 < Main.maxTilesX - 10)
									{
										for (int num220 = num217; num220 < num218; num220++)
										{
											if (Math.Abs(num219 - num213) + Math.Abs(num220 - num214) < 9 + WorldGen.genRand.Next(11) && WorldGen.genRand.Next(3) != 0 && Main.tile[num219, num220].type != 31)
											{
												Main.tile[num219, num220].active(true);
												Main.tile[num219, num220].type = 25;
												if (Math.Abs(num219 - num213) <= 1 && Math.Abs(num220 - num214) <= 1)
												{
													Main.tile[num219, num220].active(false);
												}
											}
											if (Main.tile[num219, num220].type != 31 && Math.Abs(num219 - num213) <= 2 + WorldGen.genRand.Next(3) && Math.Abs(num220 - num214) <= 2 + WorldGen.genRand.Next(3))
											{
												Main.tile[num219, num220].active(false);
											}
										}
									}
								}
							}
						}
					}
					num194++;
				}
			}
			for (int num221 = num68; num221 < num69; num221++)
			{
				for (int num222 = array5[num221]; num222 < array6[num221]; num222++)
				{
					int type11 = (int)Main.tile[num222, num221].type;
					if (type11 == 123)
					{
						Main.tile[num222, num221].type = 224;
					}
					else if (type11 == 59)
					{
						bool flag14 = true;
						int num223 = 3;
						for (int num224 = num222 - num223; num224 <= num222 + num223; num224++)
						{
							for (int num225 = num221 - num223; num225 <= num221 + num223; num225++)
							{
								if (Main.tile[num224, num225].type == 60 || Main.tile[num224, num225].type == 70 || Main.tile[num224, num225].type == 71 || Main.tile[num224, num225].type == 72)
								{
									flag14 = false;
									break;
								}
							}
						}
						if (flag14)
						{
							Main.tile[num222, num221].type = 224;
						}
					}
					else if (type11 == 1)
					{
						Main.tile[num222, num221].type = 161;
					}
				}
			}
			Main.statusText = Lang.gen[21];
			for (int num226 = 0; num226 < WorldGen.numMCaves; num226++)
			{
				int i2 = WorldGen.mCaveX[num226];
				int j2 = WorldGen.mCaveY[num226];
				WorldGen.CaveOpenater(i2, j2);
				WorldGen.Cavinator(i2, j2, WorldGen.genRand.Next(40, 50));
			}
			int num227 = 0;
			int num228 = 0;
			int num229 = 20;
			int num230 = Main.maxTilesX - 20;
			Main.statusText = Lang.gen[22];
			for (int num231 = 0; num231 < 2; num231++)
			{
				if (num231 == 0)
				{
					int num232 = 0;
					int num233 = WorldGen.genRand.Next(125, 200) + 50;
					if (num9 == 1)
					{
						num233 = 275;
					}
					int num234 = 0;
					float num235 = 1f;
					int num236 = 0;
					while (!Main.tile[num233 - 1, num236].active())
					{
						num236++;
					}
					num227 = num236;
					num236 += WorldGen.genRand.Next(1, 5);
					for (int num237 = num233 - 1; num237 >= num232; num237--)
					{
						num234++;
						if (num234 < 3)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.2f;
						}
						else if (num234 < 6)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.15f;
						}
						else if (num234 < 9)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else if (num234 < 15)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.07f;
						}
						else if (num234 < 50)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num234 < 75)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.04f;
						}
						else if (num234 < 100)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.03f;
						}
						else if (num234 < 125)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.02f;
						}
						else if (num234 < 150)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						else if (num234 < 175)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.005f;
						}
						else if (num234 < 200)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.001f;
						}
						else if (num234 < 230)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						else if (num234 < 235)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num234 < 240)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else if (num234 < 245)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num234 < 255)
						{
							num235 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						if (num234 == 235)
						{
							num230 = num237;
						}
						if (num234 == 235)
						{
							num229 = num237;
						}
						int num238 = WorldGen.genRand.Next(15, 20);
						int num239 = 0;
						while ((float)num239 < (float)num236 + num235 + (float)num238)
						{
							if ((float)num239 < (float)num236 + num235 * 0.75f - 3f)
							{
								Main.tile[num237, num239].active(false);
								if (num239 > num236)
								{
									Main.tile[num237, num239].liquid = 255;
								}
								else if (num239 == num236)
								{
									Main.tile[num237, num239].liquid = 127;
								}
							}
							else if (num239 > num236)
							{
								Main.tile[num237, num239].type = 53;
								Main.tile[num237, num239].active(true);
							}
							Main.tile[num237, num239].wall = 0;
							num239++;
						}
					}
				}
				else
				{
					int num232 = Main.maxTilesX - WorldGen.genRand.Next(125, 200) - 50;
					int num233 = Main.maxTilesX;
					if (num9 == -1)
					{
						num232 = Main.maxTilesX - 275;
					}
					float num240 = 1f;
					int num241 = 0;
					int num242 = 0;
					while (!Main.tile[num232, num242].active())
					{
						num242++;
					}
					num228 = num242;
					num242 += WorldGen.genRand.Next(1, 5);
					for (int num243 = num232; num243 < num233; num243++)
					{
						num241++;
						if (num241 < 3)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.2f;
						}
						else if (num241 < 6)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.15f;
						}
						else if (num241 < 9)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else if (num241 < 15)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.07f;
						}
						else if (num241 < 50)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num241 < 75)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.04f;
						}
						else if (num241 < 100)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.03f;
						}
						else if (num241 < 125)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.02f;
						}
						else if (num241 < 150)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						else if (num241 < 175)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.005f;
						}
						else if (num241 < 200)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.001f;
						}
						else if (num241 < 230)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						else if (num241 < 235)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num241 < 240)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else if (num241 < 245)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.05f;
						}
						else if (num241 < 255)
						{
							num240 += (float)WorldGen.genRand.Next(10, 20) * 0.01f;
						}
						if (num241 == 235)
						{
							num230 = num243;
						}
						int num244 = WorldGen.genRand.Next(15, 20);
						int num245 = 0;
						while ((float)num245 < (float)num242 + num240 + (float)num244)
						{
							if ((float)num245 < (float)num242 + num240 * 0.75f - 3f && (double)num245 < Main.worldSurface - 2.0)
							{
								Main.tile[num243, num245].active(false);
								if (num245 > num242)
								{
									Main.tile[num243, num245].liquid = 255;
								}
								else if (num245 == num242)
								{
									Main.tile[num243, num245].liquid = 127;
								}
							}
							else if (num245 > num242)
							{
								Main.tile[num243, num245].type = 53;
								Main.tile[num243, num245].active(true);
							}
							Main.tile[num243, num245].wall = 0;
							num245++;
						}
					}
				}
			}
			while (!Main.tile[num229, num227].active())
			{
				num227++;
			}
			num227++;
			while (!Main.tile[num230, num228].active())
			{
				num228++;
			}
			num228++;
			Main.statusText = Lang.gen[23];
			for (int num246 = 63; num246 <= 68; num246++)
			{
				float num247 = 0f;
				if (num246 == 67)
				{
					num247 = (float)Main.maxTilesX * 0.5f;
				}
				else if (num246 == 66)
				{
					num247 = (float)Main.maxTilesX * 0.45f;
				}
				else if (num246 == 63)
				{
					num247 = (float)Main.maxTilesX * 0.3f;
				}
				else if (num246 == 65)
				{
					num247 = (float)Main.maxTilesX * 0.25f;
				}
				else if (num246 == 64)
				{
					num247 = (float)Main.maxTilesX * 0.1f;
				}
				else if (num246 == 68)
				{
					num247 = (float)Main.maxTilesX * 0.05f;
				}
				num247 *= 0.2f;
				int num248 = 0;
				while ((float)num248 < num247)
				{
					int num249 = WorldGen.genRand.Next(0, Main.maxTilesX);
					int num250 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY);
					while (Main.tile[num249, num250].type != 1)
					{
						num249 = WorldGen.genRand.Next(0, Main.maxTilesX);
						num250 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY);
					}
					WorldGen.TileRunner(num249, num250, (double)WorldGen.genRand.Next(2, 6), WorldGen.genRand.Next(3, 7), num246, false, 0f, 0f, false, true);
					num248++;
				}
			}
			for (int num251 = 0; num251 < 2; num251++)
			{
				int num252 = 1;
				int num253 = 5;
				int num254 = Main.maxTilesX - 5;
				if (num251 == 1)
				{
					num252 = -1;
					num253 = Main.maxTilesX - 5;
					num254 = 5;
				}
				for (int num255 = num253; num255 != num254; num255 += num252)
				{
					for (int num256 = 10; num256 < Main.maxTilesY - 10; num256++)
					{
						if (Main.tile[num255, num256].active() && Main.tile[num255, num256 + 1].active() && Main.tileSand[(int)Main.tile[num255, num256].type] && Main.tileSand[(int)Main.tile[num255, num256 + 1].type])
						{
							ushort type12 = Main.tile[num255, num256].type;
							int num257 = num255 + num252;
							int num258 = num256 + 1;
							if (!Main.tile[num257, num256].active() && !Main.tile[num257, num256 + 1].active())
							{
								while (!Main.tile[num257, num258].active())
								{
									num258++;
								}
								num258--;
								Main.tile[num255, num256].active(false);
								Main.tile[num257, num258].active(true);
								Main.tile[num257, num258].type = type12;
							}
						}
					}
				}
			}
			for (int num259 = 0; num259 < Main.maxTilesX; num259++)
			{
				float num260 = (float)num259 / (float)(Main.maxTilesX - 1);
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[24],
					" ",
					(int)(num260 * 100f),
					"%"
				});
				for (int num261 = Main.maxTilesY - 5; num261 > 0; num261--)
				{
					if (Main.tile[num259, num261].active())
					{
						if (Main.tile[num259, num261].type == 53)
						{
							int num262 = num261;
							while (!Main.tile[num259, num262 + 1].active())
							{
								if (num262 >= Main.maxTilesY - 5)
								{
									break;
								}
								Main.tile[num259, num262 + 1].active(true);
								Main.tile[num259, num262 + 1].type = 53;
								num262++;
							}
						}
						else if (Main.tile[num259, num261].type == 123)
						{
							int num263 = num261;
							while (!Main.tile[num259, num263 + 1].active())
							{
								if (num263 >= Main.maxTilesY - 5)
								{
									break;
								}
								Main.tile[num259, num263 + 1].active(true);
								Main.tile[num259, num263 + 1].type = 123;
								Main.tile[num259, num263].active(false);
								num263++;
							}
						}
						else if (Main.tile[num259, num261].type == 224)
						{
							int num264 = num261;
							while (!Main.tile[num259, num264 + 1].active())
							{
								if (num264 >= Main.maxTilesY - 5)
								{
									break;
								}
								Main.tile[num259, num264 + 1].active(true);
								Main.tile[num259, num264 + 1].type = 224;
								Main.tile[num259, num264].active(false);
								num264++;
							}
						}
						else if (Main.tile[num259, num261].type == 234)
						{
							int num265 = num261;
							while (!Main.tile[num259, num265 + 1].active())
							{
								if (num265 >= Main.maxTilesY - 5)
								{
									break;
								}
								Main.tile[num259, num265 + 1].active(true);
								Main.tile[num259, num265 + 1].type = 234;
								Main.tile[num259, num265].active(false);
								num265++;
							}
						}
						else if (Main.tile[num259, num261].type == 112)
						{
							int num266 = num261;
							while (!Main.tile[num259, num266 + 1].active() && num266 < Main.maxTilesY - 5)
							{
								Main.tile[num259, num266 + 1].active(true);
								Main.tile[num259, num266 + 1].type = 112;
								Main.tile[num259, num266].active(false);
								num266++;
							}
						}
					}
				}
			}
			for (int num267 = 3; num267 < Main.maxTilesX - 3; num267++)
			{
				float num268 = (float)num267 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[25],
					" ",
					(int)(num268 * 100f + 1f),
					"%"
				});
				bool flag15 = true;
				int num269 = 0;
				while ((double)num269 < Main.worldSurface)
				{
					if (flag15)
					{
						if (Main.tile[num267, num269].wall == 2 || Main.tile[num267, num269].wall == 40 || Main.tile[num267, num269].wall == 64)
						{
							Main.tile[num267, num269].wall = 0;
						}
						if (Main.tile[num267, num269].type != 53 && Main.tile[num267, num269].type != 112 && Main.tile[num267, num269].type != 234)
						{
							if (Main.tile[num267 - 1, num269].wall == 2 || Main.tile[num267 - 1, num269].wall == 40 || Main.tile[num267 - 1, num269].wall == 40)
							{
								Main.tile[num267 - 1, num269].wall = 0;
							}
							if ((Main.tile[num267 - 2, num269].wall == 2 || Main.tile[num267 - 2, num269].wall == 40 || Main.tile[num267 - 2, num269].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num267 - 2, num269].wall = 0;
							}
							if ((Main.tile[num267 - 3, num269].wall == 2 || Main.tile[num267 - 3, num269].wall == 40 || Main.tile[num267 - 3, num269].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num267 - 3, num269].wall = 0;
							}
							if (Main.tile[num267 + 1, num269].wall == 2 || Main.tile[num267 + 1, num269].wall == 40 || Main.tile[num267 + 1, num269].wall == 40)
							{
								Main.tile[num267 + 1, num269].wall = 0;
							}
							if ((Main.tile[num267 + 2, num269].wall == 2 || Main.tile[num267 + 2, num269].wall == 40 || Main.tile[num267 + 2, num269].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num267 + 2, num269].wall = 0;
							}
							if ((Main.tile[num267 + 3, num269].wall == 2 || Main.tile[num267 + 3, num269].wall == 40 || Main.tile[num267 + 3, num269].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num267 + 3, num269].wall = 0;
							}
							if (Main.tile[num267, num269].active())
							{
								flag15 = false;
							}
						}
					}
					else if (Main.tile[num267, num269].wall == 0 && Main.tile[num267, num269 + 1].wall == 0 && Main.tile[num267, num269 + 2].wall == 0 && Main.tile[num267, num269 + 3].wall == 0 && Main.tile[num267, num269 + 4].wall == 0 && Main.tile[num267 - 1, num269].wall == 0 && Main.tile[num267 + 1, num269].wall == 0 && Main.tile[num267 - 2, num269].wall == 0 && Main.tile[num267 + 2, num269].wall == 0 && !Main.tile[num267, num269].active() && !Main.tile[num267, num269 + 1].active() && !Main.tile[num267, num269 + 2].active() && !Main.tile[num267, num269 + 3].active())
					{
						flag15 = true;
					}
					num269++;
				}
			}
			for (int num270 = Main.maxTilesX - 5; num270 >= 5; num270--)
			{
				float num271 = (float)num270 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[25],
					" ",
					(int)(num271 * 100f + 1f),
					"%"
				});
				bool flag16 = true;
				int num272 = 0;
				while ((double)num272 < Main.worldSurface)
				{
					if (flag16)
					{
						if (Main.tile[num270, num272].wall == 2 || Main.tile[num270, num272].wall == 40 || Main.tile[num270, num272].wall == 64)
						{
							Main.tile[num270, num272].wall = 0;
						}
						if (Main.tile[num270, num272].type != 53)
						{
							if (Main.tile[num270 - 1, num272].wall == 2 || Main.tile[num270 - 1, num272].wall == 40 || Main.tile[num270 - 1, num272].wall == 40)
							{
								Main.tile[num270 - 1, num272].wall = 0;
							}
							if ((Main.tile[num270 - 2, num272].wall == 2 || Main.tile[num270 - 2, num272].wall == 40 || Main.tile[num270 - 2, num272].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num270 - 2, num272].wall = 0;
							}
							if ((Main.tile[num270 - 3, num272].wall == 2 || Main.tile[num270 - 3, num272].wall == 40 || Main.tile[num270 - 3, num272].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num270 - 3, num272].wall = 0;
							}
							if (Main.tile[num270 + 1, num272].wall == 2 || Main.tile[num270 + 1, num272].wall == 40 || Main.tile[num270 + 1, num272].wall == 40)
							{
								Main.tile[num270 + 1, num272].wall = 0;
							}
							if ((Main.tile[num270 + 2, num272].wall == 2 || Main.tile[num270 + 2, num272].wall == 40 || Main.tile[num270 + 2, num272].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num270 + 2, num272].wall = 0;
							}
							if ((Main.tile[num270 + 3, num272].wall == 2 || Main.tile[num270 + 3, num272].wall == 40 || Main.tile[num270 + 3, num272].wall == 40) && WorldGen.genRand.Next(2) == 0)
							{
								Main.tile[num270 + 3, num272].wall = 0;
							}
							if (Main.tile[num270, num272].active())
							{
								flag16 = false;
							}
						}
					}
					else if (Main.tile[num270, num272].wall == 0 && Main.tile[num270, num272 + 1].wall == 0 && Main.tile[num270, num272 + 2].wall == 0 && Main.tile[num270, num272 + 3].wall == 0 && Main.tile[num270, num272 + 4].wall == 0 && Main.tile[num270 - 1, num272].wall == 0 && Main.tile[num270 + 1, num272].wall == 0 && Main.tile[num270 - 2, num272].wall == 0 && Main.tile[num270 + 2, num272].wall == 0 && !Main.tile[num270, num272].active() && !Main.tile[num270, num272 + 1].active() && !Main.tile[num270, num272 + 2].active() && !Main.tile[num270, num272 + 3].active())
					{
						flag16 = true;
					}
					num272++;
				}
			}
			for (int num273 = 0; num273 < num17; num273++)
			{
				int num274 = array3[num273];
				int num275 = array4[num273];
				if (num274 > 300 && num274 < Main.maxTilesX - 300 && (num9 >= 0 || (double)num274 >= (double)WorldGen.dungeonX + (double)Main.maxTilesX * 0.15))
				{
					if (num9 <= 0 || (double)num274 <= (double)WorldGen.dungeonX - (double)Main.maxTilesX * 0.15)
					{
						while (!Main.tile[num274, num275].active() && (double)num275 < Main.worldSurface)
						{
							num275++;
						}
						if ((double)num275 < Main.worldSurface && Main.tile[num274, num275].type == 53)
						{
							int num276 = Main.maxTilesX;
							for (int num277 = 0; num277 < num273; num277++)
							{
								int num278 = Math.Abs(num274 - array3[num277]);
								if (num278 < num276)
								{
									num276 = num278;
								}
							}
							if (num276 >= 250)
							{
								num275--;
								WorldGen.Pyramid(num274, num275);
							}
						}
					}
				}
			}
			for (int num279 = 0; num279 < Main.maxTilesX; num279++)
			{
				int num280 = WorldGen.genRand.Next(10, Main.maxTilesX - 10);
				int num281 = WorldGen.genRand.Next(10, (int)Main.worldSurface);
				if (Main.tile[num280, num281].wall == 2)
				{
					WorldGen.DirtyRockRunner(num280, num281);
				}
			}
			float num282 = (float)(Main.maxTilesX / 4200);
			int num283 = WorldGen.genRand.Next(0, (int)(3f * num282));
			for (int num284 = 0; num284 < num283; num284++)
			{
				bool flag17 = false;
				int num285 = 0;
				while (!flag17)
				{
					num285++;
					if (num285 > 1000)
					{
						flag17 = true;
					}
					int num286 = WorldGen.genRand.Next(300, Main.maxTilesX - 300);
					if (num286 <= Main.maxTilesX / 2 - 100 || num286 >= Main.maxTilesX / 2 + 100)
					{
						int num287 = 0;
						while (!Main.tile[num286, num287].active() && (double)num287 < Main.worldSurface)
						{
							num287++;
						}
						if (Main.tile[num286, num287].type == 0)
						{
							num287--;
							if (num287 > 150)
							{
								bool flag18 = true;
								for (int num288 = num286 - 50; num288 < num286 + 50; num288++)
								{
									for (int num289 = num287 - 50; num289 < num287 + 50; num289++)
									{
										if (Main.tile[num288, num289].active())
										{
											int type13 = (int)Main.tile[num288, num289].type;
											if (type13 == 41 || type13 == 43 || type13 == 44 || type13 == 189 || type13 == 196)
											{
												flag18 = false;
											}
										}
									}
								}
								if (flag18)
								{
									flag17 = WorldGen.GrowLivingTree(num286, num287);
								}
							}
						}
					}
				}
			}
			Main.tileSolid[192] = false;
			for (int num290 = 25; num290 < Main.maxTilesX - 25; num290++)
			{
				int num291 = 25;
				while ((double)num291 < Main.worldSurface)
				{
					if (Main.tile[num290, num291].type == 191 || Main.tile[num290, num291 - 1].type == 191 || Main.tile[num290 - 1, num291].type == 191 || Main.tile[num290 + 1, num291].type == 191 || Main.tile[num290, num291 + 1].type == 191)
					{
						bool flag19 = true;
						for (int num292 = num290 - 1; num292 <= num290 + 1; num292++)
						{
							for (int num293 = num291 - 1; num293 <= num291 + 1; num293++)
							{
								if (num292 != num290 && num293 != num291 && Main.tile[num292, num293].type != 191 && Main.tile[num292, num293].wall != 78)
								{
									flag19 = false;
								}
							}
						}
						if (flag19)
						{
							Main.tile[num290, num291].wall = 78;
						}
					}
					num291++;
				}
			}
			for (int num294 = 0; num294 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num294++)
			{
				float num295 = (float)((double)num294 / ((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[26],
					" ",
					(int)(num295 * 100f + 1f),
					"%"
				});
				bool flag20 = false;
				int num296 = 0;
				while (!flag20)
				{
					int num297 = WorldGen.genRand.Next(1, Main.maxTilesX);
					int num298 = (int)(num6 + 20.0);
					int style = 0;
					if (WorldGen.crimson)
					{
						style = 1;
					}
					WorldGen.Place3x2(num297, num298, 26, style);
					if (Main.tile[num297, num298].type == 26)
					{
						flag20 = true;
					}
					else
					{
						num296++;
						if (num296 >= 10000)
						{
							flag20 = true;
						}
					}
				}
			}
			for (int num299 = 0; num299 < Main.maxTilesX; num299++)
			{
				num51 = num299;
				int num300 = (int)WorldGen.worldSurfaceLow;
				while ((double)num300 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num51, num300].active())
					{
						if (Main.tile[num51, num300].type == 60)
						{
							Main.tile[num51, num300 - 1].liquid = 255;
							Main.tile[num51, num300 - 2].liquid = 255;
							break;
						}
						break;
					}
					else
					{
						num300++;
					}
				}
			}
			for (int num301 = 400; num301 < Main.maxTilesX - 400; num301++)
			{
				num51 = num301;
				int num302 = (int)WorldGen.worldSurfaceLow;
				while ((double)num302 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num51, num302].active())
					{
						if (Main.tile[num51, num302].type == 53)
						{
							int num303 = num302;
							while ((double)num303 > WorldGen.worldSurfaceLow)
							{
								num303--;
								Main.tile[num51, num303].liquid = 0;
							}
							break;
						}
						break;
					}
					else
					{
						num302++;
					}
				}
			}
			Main.tileSolid[192] = true;
			Main.statusText = Lang.gen[70];
			bool flag21 = true;
			while (flag21)
			{
				int num304 = WorldGen.genRand.Next((int)Main.rockLayer, Main.maxTilesY - 500);
				int num305;
				if (num9 < 0)
				{
					num305 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.6), (int)((double)Main.maxTilesX * 0.85));
				}
				else
				{
					num305 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.15), (int)((double)Main.maxTilesX * 0.4));
				}
				if (Main.tile[num305, num304].active() && Main.tile[num305, num304].type == 60)
				{
					flag21 = false;
					WorldGen.makeTemple(num305, num304);
				}
			}
			int num306 = 0;
			int[] array7 = new int[50];
			int[] array8 = new int[50];
			Main.statusText = Lang.gen[71];
			for (int num307 = 0; num307 < WorldGen.numHives; num307++)
			{
				bool flag22 = false;
				int num308 = WorldGen.HiveX[num307];
				int num309 = WorldGen.HiveY[num307];
				int num310 = 150;
				for (int num311 = num308 - num310; num311 < num308 + num310; num311 += 10)
				{
					if (num311 > 0 && num311 <= Main.maxTilesX - 1)
					{
						for (int num312 = num309 - num310; num312 < num309 + num310; num312 += 10)
						{
							if (num312 > 0 && num312 <= Main.maxTilesY - 1)
							{
								if (Main.tile[num311, num312].active() && Main.tile[num311, num312].type == 226)
								{
									flag22 = true;
									break;
								}
								if (Main.tile[num311, num312].wall == 87 || Main.tile[num311, num312].wall == 3 || Main.tile[num311, num312].wall == 83)
								{
									flag22 = true;
									break;
								}
							}
						}
					}
				}
				if (!flag22)
				{
					int num313 = WorldGen.HiveX[num307];
					int num314 = WorldGen.HiveY[num307];
					int num315 = 0;
					int[] array9 = new int[10];
					int[] array10 = new int[10];
					Vector2 vector = new Vector2((float)num313, (float)num314);
					Vector2 vector2 = vector;
					int num316 = WorldGen.genRand.Next(2, 5);
					for (int num317 = 0; num317 < num316; num317++)
					{
						int num318 = WorldGen.genRand.Next(2, 5);
						for (int num319 = 0; num319 < num318; num319++)
						{
							vector2 = WorldGen.Hive((int)vector.X, (int)vector.Y);
						}
						vector = vector2;
						array9[num315] = (int)vector.X;
						array10[num315] = (int)vector.Y;
						num315++;
					}
					for (int num320 = 0; num320 < num315; num320++)
					{
						int num321 = array9[num320];
						int num322 = array10[num320];
						bool flag23 = false;
						int num323 = 1;
						if (WorldGen.genRand.Next(2) == 0)
						{
							num323 = -1;
						}
						while (num321 > 10 && num321 < Main.maxTilesX - 10 && num322 > 10 && num322 < Main.maxTilesY - 10 && (!Main.tile[num321, num322].active() || !Main.tile[num321, num322 + 1].active() || !Main.tile[num321 + 1, num322].active() || !Main.tile[num321 + 1, num322 + 1].active()))
						{
							num321 += num323;
							if (Math.Abs(num321 - array9[num320]) > 50)
							{
								flag23 = true;
								break;
							}
						}
						if (!flag23)
						{
							num321 += num323;
							for (int num324 = num321 - 1; num324 <= num321 + 2; num324++)
							{
								for (int num325 = num322 - 1; num325 <= num322 + 2; num325++)
								{
									if (num324 < 10 || num324 > Main.maxTilesX - 10)
									{
										flag23 = true;
									}
									else if (Main.tile[num324, num325].active() && Main.tile[num324, num325].type != 225)
									{
										flag23 = true;
										break;
									}
								}
							}
							if (!flag23)
							{
								for (int num326 = num321 - 1; num326 <= num321 + 2; num326++)
								{
									for (int num327 = num322 - 1; num327 <= num322 + 2; num327++)
									{
										if (num326 >= num321 && num326 <= num321 + 1 && num327 >= num322 && num327 <= num322 + 1)
										{
											Main.tile[num326, num327].active(false);
											Main.tile[num326, num327].liquid = 255;
											Main.tile[num326, num327].honey(true);
										}
										else
										{
											Main.tile[num326, num327].active(true);
											Main.tile[num326, num327].type = 225;
										}
									}
								}
								num323 *= -1;
								num322++;
								int num328 = 0;
								while ((num328 < 4 || WorldGen.SolidTile(num321, num322)) && num321 > 10 && num321 < Main.maxTilesX - 10)
								{
									num328++;
									num321 += num323;
									if (WorldGen.SolidTile(num321, num322))
									{
										WorldGen.PoundTile(num321, num322);
										if (!Main.tile[num321, num322 + 1].active())
										{
											Main.tile[num321, num322 + 1].active(true);
											Main.tile[num321, num322 + 1].type = 225;
										}
									}
								}
							}
						}
					}
					array7[num306] = (int)vector.X;
					array8[num306] = (int)vector.Y;
					num306++;
					int num329 = (int)vector.X;
					int num330 = (int)vector.Y;
					for (int num331 = num329 - 1; num331 <= num329 + 1; num331++)
					{
						for (int num332 = num330 - 2; num332 <= num330 + 1; num332++)
						{
							if (num332 != num330 + 1)
							{
								Main.tile[num331, num332].active(false);
							}
							else
							{
								Main.tile[num331, num332].active(true);
								Main.tile[num331, num332].type = 225;
								Main.tile[num331, num332].slope(0);
								Main.tile[num331, num332].halfBrick(false);
							}
						}
					}
				}
			}
			int num333 = WorldGen.genRand.Next(40, Main.maxTilesX - 40);
			int num334 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 400);
			float num335 = (float)WorldGen.genRand.Next(7, 12);
			num335 *= (float)(Main.maxTilesX / 4200);
			int num336 = 0;
			while ((float)num336 < num335)
			{
				bool flag24 = true;
				while (flag24)
				{
					num333 = WorldGen.genRand.Next(40, Main.maxTilesX / 2 - 40);
					if (num9 < 0)
					{
						num333 += Main.maxTilesX / 2;
					}
					num334 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 400);
					if (Main.tile[num333, num334].type == 60)
					{
						int num337 = 30;
						flag24 = false;
						for (int num338 = num333 - num337; num338 < num333 + num337; num338 += 3)
						{
							for (int num339 = num334 - num337; num339 < num334 + num337; num339 += 3)
							{
								if (Main.tile[num338, num339].active() && (Main.tile[num338, num339].type == 225 || Main.tile[num338, num339].type == 229 || Main.tile[num338, num339].type == 226 || Main.tile[num338, num339].type == 119 || Main.tile[num338, num339].type == 120))
								{
									flag24 = false;
								}
								if (Main.tile[num338, num339].wall == 86 || Main.tile[num338, num339].wall == 87)
								{
									flag24 = false;
								}
							}
						}
					}
					if (!flag24)
					{
						int num340 = WorldGen.genRand.Next(2, 4);
						int num341 = WorldGen.genRand.Next(2, 4);
						int num342 = 0;
						if (num == 119)
						{
							num342 = 23;
						}
						else if (num == 120)
						{
							num342 = 24;
						}
						else if (num == 158)
						{
							num342 = 42;
						}
						else if (num == 175)
						{
							num342 = 45;
						}
						else if (num == 45)
						{
							num342 = 10;
						}
						for (int num343 = num333 - num340 - 1; num343 <= num333 + num340 + 1; num343++)
						{
							for (int num344 = num334 - num341 - 1; num344 <= num334 + num341 + 1; num344++)
							{
								Main.tile[num343, num344].active(true);
								Main.tile[num343, num344].type = num;
								Main.tile[num343, num344].liquid = 0;
								Main.tile[num343, num344].lava(false);
							}
						}
						for (int num345 = num333 - num340; num345 <= num333 + num340; num345++)
						{
							for (int num346 = num334 - num341; num346 <= num334 + num341; num346++)
							{
								Main.tile[num345, num346].active(false);
								Main.tile[num345, num346].wall = (byte)num342;
							}
						}
						bool flag25 = false;
						int num347 = 0;
						while (!flag25 && num347 < 100)
						{
							num347++;
							int num348 = WorldGen.genRand.Next(num333 - num340, num333 + num340 + 1);
							int num349 = WorldGen.genRand.Next(num334 - num341, num334 + num341 - 2);
							WorldGen.PlaceTile(num348, num349, 4, true, false, -1, 3);
							if (Main.tile[num348, num349].type == 4)
							{
								flag25 = true;
							}
						}
						for (int num350 = num333 - num340 - 1; num350 <= num333 + num340 + 1; num350++)
						{
							for (int num351 = num334 + num341 - 2; num351 <= num334 + num341; num351++)
							{
								Main.tile[num350, num351].active(false);
							}
						}
						for (int num352 = num333 - num340 - 1; num352 <= num333 + num340 + 1; num352++)
						{
							for (int num353 = num334 + num341 - 2; num353 <= num334 + num341 - 1; num353++)
							{
								Main.tile[num352, num353].active(false);
							}
						}
						for (int num354 = num333 - num340 - 1; num354 <= num333 + num340 + 1; num354++)
						{
							int num355 = 4;
							int num356 = num334 + num341 + 2;
							while (!Main.tile[num354, num356].active() && num356 < Main.maxTilesY && num355 > 0)
							{
								Main.tile[num354, num356].active(true);
								Main.tile[num354, num356].type = 59;
								num356++;
								num355--;
							}
						}
						num340 -= WorldGen.genRand.Next(1, 3);
						int num357 = num334 - num341 - 2;
						while (num340 > -1)
						{
							for (int num358 = num333 - num340 - 1; num358 <= num333 + num340 + 1; num358++)
							{
								Main.tile[num358, num357].active(true);
								Main.tile[num358, num357].type = num;
							}
							num340 -= WorldGen.genRand.Next(1, 3);
							num357--;
						}
						WorldGen.JChestX[WorldGen.numJChests] = num333;
						WorldGen.JChestY[WorldGen.numJChests] = num334;
						WorldGen.numJChests++;
					}
				}
				num336++;
			}
			Main.tileSolid[137] = false;
			for (int num359 = 20; num359 < Main.maxTilesX - 20; num359++)
			{
				float num360 = (float)num359 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[60],
					" ",
					(int)(num360 * 100f + 1f),
					"%"
				});
				for (int num361 = 20; num361 < Main.maxTilesY - 20; num361++)
				{
					if (Main.tile[num359, num361].type != 48 && Main.tile[num359, num361].type != 137 && Main.tile[num359, num361].type != 232 && Main.tile[num359, num361].type != 191 && Main.tile[num359, num361].type != 151 && Main.tile[num359, num361].type != 274)
					{
						if (!Main.tile[num359, num361 - 1].active())
						{
							if (WorldGen.SolidTile(num359, num361))
							{
								if (!Main.tile[num359 - 1, num361].halfBrick() && !Main.tile[num359 + 1, num361].halfBrick() && Main.tile[num359 - 1, num361].slope() == 0 && Main.tile[num359 + 1, num361].slope() == 0)
								{
									if (WorldGen.SolidTile(num359, num361 + 1))
									{
										if (!WorldGen.SolidTile(num359 - 1, num361) && !Main.tile[num359 - 1, num361 + 1].halfBrick() && WorldGen.SolidTile(num359 - 1, num361 + 1) && WorldGen.SolidTile(num359 + 1, num361) && !Main.tile[num359 + 1, num361 - 1].active())
										{
											if (WorldGen.genRand.Next(2) == 0)
											{
												WorldGen.SlopeTile(num359, num361, 2);
											}
											else
											{
												WorldGen.PoundTile(num359, num361);
											}
										}
										else if (!WorldGen.SolidTile(num359 + 1, num361) && !Main.tile[num359 + 1, num361 + 1].halfBrick() && WorldGen.SolidTile(num359 + 1, num361 + 1) && WorldGen.SolidTile(num359 - 1, num361) && !Main.tile[num359 - 1, num361 - 1].active())
										{
											if (WorldGen.genRand.Next(2) == 0)
											{
												WorldGen.SlopeTile(num359, num361, 1);
											}
											else
											{
												WorldGen.PoundTile(num359, num361);
											}
										}
										else if (WorldGen.SolidTile(num359 + 1, num361 + 1) && WorldGen.SolidTile(num359 - 1, num361 + 1) && !Main.tile[num359 + 1, num361].active() && !Main.tile[num359 - 1, num361].active())
										{
											WorldGen.PoundTile(num359, num361);
										}
										if (WorldGen.SolidTile(num359, num361))
										{
											if (WorldGen.SolidTile(num359 - 1, num361) && WorldGen.SolidTile(num359 + 1, num361 + 2) && !Main.tile[num359 + 1, num361].active() && !Main.tile[num359 + 1, num361 + 1].active() && !Main.tile[num359 - 1, num361 - 1].active())
											{
												WorldGen.KillTile(num359, num361, false, false, false);
											}
											else if (WorldGen.SolidTile(num359 + 1, num361) && WorldGen.SolidTile(num359 - 1, num361 + 2) && !Main.tile[num359 - 1, num361].active() && !Main.tile[num359 - 1, num361 + 1].active() && !Main.tile[num359 + 1, num361 - 1].active())
											{
												WorldGen.KillTile(num359, num361, false, false, false);
											}
											else if (!Main.tile[num359 - 1, num361 + 1].active() && !Main.tile[num359 - 1, num361].active() && WorldGen.SolidTile(num359 + 1, num361) && WorldGen.SolidTile(num359, num361 + 2))
											{
												if (WorldGen.genRand.Next(5) == 0)
												{
													WorldGen.KillTile(num359, num361, false, false, false);
												}
												else if (WorldGen.genRand.Next(5) == 0)
												{
													WorldGen.PoundTile(num359, num361);
												}
												else
												{
													WorldGen.SlopeTile(num359, num361, 2);
												}
											}
											else if (!Main.tile[num359 + 1, num361 + 1].active() && !Main.tile[num359 + 1, num361].active() && WorldGen.SolidTile(num359 - 1, num361) && WorldGen.SolidTile(num359, num361 + 2))
											{
												if (WorldGen.genRand.Next(5) == 0)
												{
													WorldGen.KillTile(num359, num361, false, false, false);
												}
												else if (WorldGen.genRand.Next(5) == 0)
												{
													WorldGen.PoundTile(num359, num361);
												}
												else
												{
													WorldGen.SlopeTile(num359, num361, 1);
												}
											}
										}
									}
									if (WorldGen.SolidTile(num359, num361) && !Main.tile[num359 - 1, num361].active() && !Main.tile[num359 + 1, num361].active())
									{
										WorldGen.KillTile(num359, num361, false, false, false);
									}
								}
							}
							else if (!Main.tile[num359, num361].active() && Main.tile[num359, num361 + 1].type != 151 && Main.tile[num359, num361 + 1].type != 274)
							{
								if (Main.tile[num359 + 1, num361].type != 190 && Main.tile[num359 + 1, num361].type != 48 && Main.tile[num359 + 1, num361].type != 232 && WorldGen.SolidTile(num359 - 1, num361 + 1) && WorldGen.SolidTile(num359 + 1, num361) && !Main.tile[num359 - 1, num361].active() && !Main.tile[num359 + 1, num361 - 1].active())
								{
									WorldGen.PlaceTile(num359, num361, (int)Main.tile[num359, num361 + 1].type, false, false, -1, 0);
									if (WorldGen.genRand.Next(2) == 0)
									{
										WorldGen.SlopeTile(num359, num361, 2);
									}
									else
									{
										WorldGen.PoundTile(num359, num361);
									}
								}
								if (Main.tile[num359 - 1, num361].type != 190 && Main.tile[num359 - 1, num361].type != 48 && Main.tile[num359 - 1, num361].type != 232 && WorldGen.SolidTile(num359 + 1, num361 + 1) && WorldGen.SolidTile(num359 - 1, num361) && !Main.tile[num359 + 1, num361].active() && !Main.tile[num359 - 1, num361 - 1].active())
								{
									WorldGen.PlaceTile(num359, num361, (int)Main.tile[num359, num361 + 1].type, false, false, -1, 0);
									if (WorldGen.genRand.Next(2) == 0)
									{
										WorldGen.SlopeTile(num359, num361, 1);
									}
									else
									{
										WorldGen.PoundTile(num359, num361);
									}
								}
							}
						}
						else if (!Main.tile[num359, num361 + 1].active() && WorldGen.genRand.Next(2) == 0 && WorldGen.SolidTile(num359, num361) && !Main.tile[num359 - 1, num361].halfBrick() && !Main.tile[num359 + 1, num361].halfBrick() && Main.tile[num359 - 1, num361].slope() == 0 && Main.tile[num359 + 1, num361].slope() == 0 && WorldGen.SolidTile(num359, num361 - 1))
						{
							if (WorldGen.SolidTile(num359 - 1, num361) && !WorldGen.SolidTile(num359 + 1, num361) && WorldGen.SolidTile(num359 - 1, num361 - 1))
							{
								WorldGen.SlopeTile(num359, num361, 3);
							}
							else if (WorldGen.SolidTile(num359 + 1, num361) && !WorldGen.SolidTile(num359 - 1, num361) && WorldGen.SolidTile(num359 + 1, num361 - 1))
							{
								WorldGen.SlopeTile(num359, num361, 4);
							}
						}
					}
				}
			}
			for (int num362 = 20; num362 < Main.maxTilesX - 20; num362++)
			{
				for (int num363 = 20; num363 < Main.maxTilesY - 20; num363++)
				{
					if (WorldGen.genRand.Next(2) == 0 && !Main.tile[num362, num363 - 1].active() && Main.tile[num362, num363].type != 137 && Main.tile[num362, num363].type != 48 && Main.tile[num362, num363].type != 232 && Main.tile[num362, num363].type != 191 && Main.tile[num362, num363].type != 151 && Main.tile[num362, num363].type != 274 && Main.tile[num362, num363].type != 75 && Main.tile[num362, num363].type != 76 && WorldGen.SolidTile(num362, num363) && Main.tile[num362 - 1, num363].type != 137 && Main.tile[num362 + 1, num363].type != 137)
					{
						if (WorldGen.SolidTile(num362, num363 + 1) && WorldGen.SolidTile(num362 + 1, num363) && !Main.tile[num362 - 1, num363].active())
						{
							WorldGen.SlopeTile(num362, num363, 2);
						}
						if (WorldGen.SolidTile(num362, num363 + 1) && WorldGen.SolidTile(num362 - 1, num363) && !Main.tile[num362 + 1, num363].active())
						{
							WorldGen.SlopeTile(num362, num363, 1);
						}
					}
					if (Main.tile[num362, num363].slope() == 1 && !WorldGen.SolidTile(num362 - 1, num363))
					{
						WorldGen.SlopeTile(num362, num363, 0);
						WorldGen.PoundTile(num362, num363);
					}
					if (Main.tile[num362, num363].slope() == 2 && !WorldGen.SolidTile(num362 + 1, num363))
					{
						WorldGen.SlopeTile(num362, num363, 0);
						WorldGen.PoundTile(num362, num363);
					}
				}
			}
			Main.tileSolid[137] = true;
			Main.tileSolid[190] = false;
			Main.tileSolid[192] = false;
			Liquid.QuickWater(3, -1, -1);
			WorldGen.WaterCheck();
			int num364 = 0;
			Liquid.quickSettle = true;
			while (num364 < 10)
			{
				int num365 = Liquid.numLiquid + LiquidBuffer.numLiquidBuffer;
				num364++;
				float num366 = 0f;
				while (Liquid.numLiquid > 0)
				{
					float num367 = (float)(num365 - (Liquid.numLiquid + LiquidBuffer.numLiquidBuffer)) / (float)num365;
					if (Liquid.numLiquid + LiquidBuffer.numLiquidBuffer > num365)
					{
						num365 = Liquid.numLiquid + LiquidBuffer.numLiquidBuffer;
					}
					if (num367 > num366)
					{
						num366 = num367;
					}
					else
					{
						num367 = num366;
					}
					if (num364 == 1)
					{
						Main.statusText = string.Concat(new object[]
						{
							Lang.gen[27],
							" ",
							(int)(num367 * 100f / 3f + 33f),
							"%"
						});
					}
					int num368 = 10;
					if (num364 > num368)
					{
					}
					Liquid.UpdateLiquid();
				}
				WorldGen.WaterCheck();
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[27],
					" ",
					(int)((float)num364 * 10f / 3f + 66f),
					"%"
				});
			}
			Liquid.quickSettle = false;
			Main.tileSolid[190] = true;
			for (int num369 = 20; num369 < Main.maxTilesX - 20; num369++)
			{
				float num370 = (float)num369 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[69],
					" ",
					(int)(num370 * 50f + 1f),
					"%"
				});
				for (int num371 = 20; num371 < Main.maxTilesY - 20; num371++)
				{
					if (WorldGen.SolidTile(num369, num371) && !Main.tile[num369 - 1, num371].active() && WorldGen.SolidTile(num369, num371 + 1) && !Main.tile[num369 + 1, num371].active() && (Main.tile[num369 - 1, num371].liquid > 0 || Main.tile[num369 + 1, num371].liquid > 0))
					{
						bool flag26 = true;
						int num372 = Main.rand.Next(8, 20);
						int num373 = Main.rand.Next(8, 20);
						num372 = num371 - num372;
						num373 += num371;
						for (int num374 = num372; num374 <= num373; num374++)
						{
							if (Main.tile[num369, num374].halfBrick())
							{
								flag26 = false;
							}
						}
						if ((Main.tile[num369, num371].type == 75 || Main.tile[num369, num371].type == 76) && WorldGen.genRand.Next(10) != 0)
						{
							flag26 = false;
						}
						if (flag26)
						{
							WorldGen.PoundTile(num369, num371);
						}
					}
				}
			}
			for (int num375 = 20; num375 < Main.maxTilesX - 20; num375++)
			{
				float num376 = (float)num375 / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[69],
					" ",
					(int)(num376 * 50f + 51f),
					"%"
				});
				for (int num377 = 20; num377 < Main.maxTilesY - 20; num377++)
				{
					if (Main.tile[num375, num377].type != 48 && Main.tile[num375, num377].type != 232 && WorldGen.SolidTile(num375, num377) && WorldGen.SolidTile(num375, num377 + 1))
					{
						if (!WorldGen.SolidTile(num375 + 1, num377) && Main.tile[num375 - 1, num377].halfBrick() && Main.tile[num375 - 2, num377].liquid > 0)
						{
							WorldGen.PoundTile(num375, num377);
						}
						if (!WorldGen.SolidTile(num375 - 1, num377) && Main.tile[num375 + 1, num377].halfBrick() && Main.tile[num375 + 2, num377].liquid > 0)
						{
							WorldGen.PoundTile(num375, num377);
						}
					}
				}
			}
			for (int num378 = 10; num378 < Main.maxTilesX - 10; num378++)
			{
				for (int num379 = (int)Main.worldSurface; num379 < Main.maxTilesY - 100; num379++)
				{
					if (Main.tile[num378, num379].liquid > 0 && !Main.tile[num378, num379].lava())
					{
						WorldGen.MakeWateryIceThing(num378, num379);
					}
				}
			}
			Main.tileSolid[226] = false;
			Main.tileSolid[162] = false;
			float num380 = (float)(Main.maxTilesX / 4200);
			for (int num381 = 0; num381 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05); num381++)
			{
				float num382 = (float)((double)num381 / ((double)(Main.maxTilesX * Main.maxTilesY) * 2E-05));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[28],
					" ",
					(int)(num382 * 100f + 1f),
					"%"
				});
				bool flag27 = false;
				int num383 = 0;
				while (!flag27)
				{
					if (WorldGen.AddLifeCrystal(WorldGen.genRand.Next(1, Main.maxTilesX), WorldGen.genRand.Next((int)(num6 + 20.0), Main.maxTilesY - 300)))
					{
						flag27 = true;
					}
					else
					{
						num383++;
						if (num383 >= 10000)
						{
							flag27 = true;
						}
					}
				}
			}
			Main.tileSolid[225] = false;
			int num384 = 0;
			int num385 = 0;
			while ((float)num385 < 84f * num380)
			{
				if (num384 > 42)
				{
					num384 = 0;
				}
				int num386 = num384;
				if (num386 == 42)
				{
					num386 = 50;
				}
				float num387 = (float)num385 / (200f * num380);
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[29],
					" ",
					(int)(num387 * 100f + 1f),
					"%"
				});
				bool flag28 = false;
				int num388 = 0;
				while (!flag28)
				{
					int num389 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
					int num390 = WorldGen.genRand.Next((int)(num6 + 20.0), Main.maxTilesY - 300);
					while (!Main.tile[num389, num390].active())
					{
						num390++;
					}
					num390--;
					WorldGen.PlaceTile(num389, num390, 105, true, true, -1, num386);
					if (Main.tile[num389, num390].active() && Main.tile[num389, num390].type == 105)
					{
						flag28 = true;
						num384++;
					}
					else
					{
						num388++;
						if (num388 >= 10000)
						{
							flag28 = true;
						}
					}
				}
				num385++;
			}
			for (int num391 = 0; num391 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 1.6E-05); num391++)
			{
				float num392 = (float)((double)num391 / ((double)(Main.maxTilesX * Main.maxTilesY) * 1.6E-05));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[30],
					" ",
					(int)(num392 * 100f + 1f),
					"%"
				});
				bool flag29 = false;
				int num393 = 0;
				while (!flag29)
				{
					int num394 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
					int num395 = WorldGen.genRand.Next((int)(num6 + 20.0), Main.maxTilesY - 230);
					if ((float)num391 <= 3f * num380)
					{
						num395 = WorldGen.genRand.Next(Main.maxTilesY - 200, Main.maxTilesY - 50);
					}
					int num396 = 0;
					while (Main.wallDungeon[(int)Main.tile[num394, num395].wall])
					{
						num396++;
						num394 = WorldGen.genRand.Next(1, Main.maxTilesX);
						num395 = WorldGen.genRand.Next((int)(num6 + 20.0), Main.maxTilesY - 230);
						if (num396 < 1000 && (float)num391 <= 3f * num380)
						{
							num395 = WorldGen.genRand.Next(Main.maxTilesY - 200, Main.maxTilesY - 50);
						}
					}
					if (WorldGen.AddBuriedChest(num394, num395, 0, false, -1))
					{
						flag29 = true;
						if (WorldGen.genRand.Next(2) == 0)
						{
							int num397 = num395;
							while (Main.tile[num394, num397].type != 21 && num397 < Main.maxTilesY - 300)
							{
								num397++;
							}
							if (num395 < Main.maxTilesY - 300)
							{
								WorldGen.MineHouse(num394, num397);
							}
						}
					}
					num393++;
					if (num393 >= 1000)
					{
						flag29 = true;
					}
				}
			}
			for (int num398 = 0; num398 < (int)((double)Main.maxTilesX * 0.005); num398++)
			{
				float num399 = (float)((double)num398 / ((double)Main.maxTilesX * 0.005));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[31],
					" ",
					(int)(num399 * 100f + 1f),
					"%"
				});
				bool flag30 = false;
				int num400 = 0;
				while (!flag30)
				{
					int num401 = WorldGen.genRand.Next(300, Main.maxTilesX - 300);
					int num402 = WorldGen.genRand.Next((int)WorldGen.worldSurfaceLow, (int)Main.worldSurface);
					bool flag31 = false;
					if (Main.tile[num401, num402].wall == 2 && !Main.tile[num401, num402].active())
					{
						flag31 = true;
					}
					if (flag31 && WorldGen.AddBuriedChest(num401, num402, 0, true, -1))
					{
						flag30 = true;
					}
					else
					{
						num400++;
						if (num400 >= 2000)
						{
							flag30 = true;
						}
					}
				}
			}
			int num403 = 0;
			for (int num404 = 0; num404 < WorldGen.numJChests; num404++)
			{
				float num405 = (float)(num404 / WorldGen.numJChests);
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[32],
					" ",
					(int)(num405 * 100f + 1f),
					"%"
				});
				num403++;
				int contain = 211;
				if (num403 == 1)
				{
					contain = 211;
				}
				else if (num403 == 2)
				{
					contain = 212;
				}
				else if (num403 == 3)
				{
					contain = 213;
				}
				else if (num403 == 4)
				{
					contain = 964;
				}
				if (Main.rand.Next(50) == 0)
				{
					contain = 753;
				}
				else if (Main.rand.Next(50) == 0)
				{
					contain = 2292;
				}
				if (num403 > 4)
				{
					num403 = 0;
				}
				if (!WorldGen.AddBuriedChest(WorldGen.JChestX[num404] + WorldGen.genRand.Next(2), WorldGen.JChestY[num404], contain, false, 10))
				{
					for (int num406 = WorldGen.JChestX[num404]; num406 <= WorldGen.JChestX[num404] + 1; num406++)
					{
						for (int num407 = WorldGen.JChestY[num404]; num407 <= WorldGen.JChestY[num404] + 1; num407++)
						{
							WorldGen.KillTile(num406, num407, false, false, false);
						}
					}
					for (int num408 = WorldGen.JChestX[num404]; num408 <= WorldGen.JChestX[num404] + 1; num408++)
					{
						for (int num409 = WorldGen.JChestY[num404]; num409 <= WorldGen.JChestY[num404] + 3; num409++)
						{
							if (num409 < Main.maxTilesY)
							{
								Main.tile[num408, num409].slope(0);
								Main.tile[num408, num409].halfBrick(false);
							}
						}
					}
					WorldGen.AddBuriedChest(WorldGen.JChestX[num404], WorldGen.JChestY[num404], contain, false, 10);
				}
			}
			int num410 = 0;
			int num411 = 0;
			while ((float)num411 < 9f * num380)
			{
				float num412 = (float)num411 / (9f * num380);
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[33],
					" ",
					(int)(num412 * 100f + 1f),
					"%"
				});
				num410++;
				int contain2;
				if (WorldGen.genRand.Next(15) == 0)
				{
					contain2 = 863;
				}
				else if (num410 == 1)
				{
					contain2 = 186;
				}
				else if (num410 == 2)
				{
					contain2 = 277;
				}
				else if (num410 == 3)
				{
					contain2 = 859;
				}
				else
				{
					contain2 = 187;
					num410 = 0;
				}
				bool flag32 = false;
				while (!flag32)
				{
					int num413 = WorldGen.genRand.Next(1, Main.maxTilesX);
					int num414 = WorldGen.genRand.Next(1, Main.maxTilesY - 200);
					while (Main.tile[num413, num414].liquid < 200 || Main.tile[num413, num414].lava())
					{
						num413 = WorldGen.genRand.Next(1, Main.maxTilesX);
						num414 = WorldGen.genRand.Next(1, Main.maxTilesY - 200);
					}
					flag32 = WorldGen.AddBuriedChest(num413, num414, contain2, false, 17);
				}
				flag32 = false;
				while (!flag32)
				{
					int num415 = WorldGen.genRand.Next(1, Main.maxTilesX);
					int num416 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY - 200);
					while (Main.tile[num415, num416].liquid < 200 || Main.tile[num415, num416].lava())
					{
						num415 = WorldGen.genRand.Next(1, Main.maxTilesX);
						num416 = WorldGen.genRand.Next(1, Main.maxTilesY - 200);
					}
					flag32 = WorldGen.AddBuriedChest(num415, num416, contain2, false, 17);
				}
				num411++;
			}
			WorldGen.maxTileCount = 3500;
			for (int num417 = 0; num417 < (int)((double)Main.maxTilesX * 0.005); num417++)
			{
				float num418 = (float)((double)num417 / ((double)Main.maxTilesX * 0.005));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[64],
					" ",
					(int)(num418 * 100f + 1f),
					"%"
				});
				int num419 = 0;
				int x2 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
				int y2 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 230);
				int num420 = WorldGen.countTiles(x2, y2, false, true);
				while ((num420 >= 3500 || num420 < 500) && num419 < 500)
				{
					num419++;
					x2 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
					y2 = WorldGen.genRand.Next((int)Main.rockLayer + 30, Main.maxTilesY - 230);
					num420 = WorldGen.countTiles(x2, y2, false, true);
				}
				if (num419 < 500)
				{
					WorldGen.spiderOut(x2, y2);
				}
			}
			Main.tileSolid[162] = true;
			WorldGen.maxTileCount = 300;
			for (int num421 = 0; num421 < (int)((double)Main.maxTilesX * 0.003); num421++)
			{
				float num422 = (float)((double)num421 / ((double)Main.maxTilesX * 0.003));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[62],
					" ",
					(int)(num422 * 100f + 1f),
					"%"
				});
				int num423 = 0;
				int x3 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
				int y3 = WorldGen.genRand.Next((int)Main.rockLayer + 30, Main.maxTilesY - 230);
				int num424 = WorldGen.countTiles(x3, y3, false, false);
				while ((num424 >= 300 || num424 < 50 || WorldGen.lavaCount > 0 || WorldGen.iceCount > 0 || WorldGen.rockCount == 0) && num423 < 1000)
				{
					num423++;
					x3 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
					y3 = WorldGen.genRand.Next((int)Main.rockLayer + 30, Main.maxTilesY - 230);
					num424 = WorldGen.countTiles(x3, y3, false, false);
				}
				if (num423 < 1000)
				{
					WorldGen.gemCave(x3, y3);
				}
			}
			WorldGen.randMoss();
			WorldGen.maxTileCount = 2500;
			for (int num425 = 0; num425 < (int)((double)Main.maxTilesX * 0.01); num425++)
			{
				float num426 = (float)((double)num425 / ((double)Main.maxTilesX * 0.01));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[61],
					" ",
					(int)(num426 * 100f + 1f),
					"%"
				});
				int num427 = 0;
				int x4 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
				int y4 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, WorldGen.waterLine);
				int num428 = WorldGen.countTiles(x4, y4, false, false);
				while ((num428 >= 2500 || num428 < 10 || WorldGen.lavaCount > 0 || WorldGen.iceCount > 0 || WorldGen.rockCount == 0) && num427 < 1000)
				{
					num427++;
					x4 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
					y4 = WorldGen.genRand.Next((int)Main.rockLayer + 30, Main.maxTilesY - 230);
					num428 = WorldGen.countTiles(x4, y4, false, false);
				}
				if (num427 < 1000)
				{
					WorldGen.setMoss(x4, y4);
					WorldGen.mossCave(x4, y4);
				}
			}
			for (int num429 = 0; num429 < Main.maxTilesX; num429++)
			{
				int num430 = WorldGen.genRand.Next(50, Main.maxTilesX - 50);
				int num431 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, WorldGen.lavaLine);
				if (Main.tile[num430, num431].type == 1)
				{
					WorldGen.setMoss(num430, num431);
					Main.tile[num430, num431].type = (ushort)WorldGen.mossTile;
				}
			}
			int num432 = (int)((double)Main.maxTilesX * 0.05);
			while (num432 > 0)
			{
				int num433 = WorldGen.genRand.Next(50, Main.maxTilesX - 50);
				int num434 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, WorldGen.lavaLine);
				if (Main.tile[num433, num434].type == 1 && (!Main.tile[num433 - 1, num434].active() || !Main.tile[num433 + 1, num434].active() || !Main.tile[num433, num434 - 1].active() || !Main.tile[num433, num434 + 1].active()))
				{
					WorldGen.setMoss(num433, num434);
					Main.tile[num433, num434].type = (ushort)WorldGen.mossTile;
					num432--;
				}
			}
			for (int num435 = 0; num435 < Main.maxTilesX; num435++)
			{
				for (int num436 = 0; num436 < Main.maxTilesY; num436++)
				{
					if (Main.tile[num435, num436].active() && Main.tileMoss[(int)Main.tile[num435, num436].type])
					{
						for (int num437 = 0; num437 < 4; num437++)
						{
							int num438 = num435;
							int num439 = num436;
							if (num437 == 0)
							{
								num438--;
							}
							if (num437 == 1)
							{
								num438++;
							}
							if (num437 == 2)
							{
								num439--;
							}
							if (num437 == 3)
							{
								num439++;
							}
							try
							{
								WorldGen.grassSpread = 0;
								WorldGen.SpreadGrass(num438, num439, 1, (int)Main.tile[num435, num436].type, true, 0);
							}
							catch
							{
								WorldGen.grassSpread = 0;
								WorldGen.SpreadGrass(num438, num439, 1, (int)Main.tile[num435, num436].type, false, 0);
							}
						}
					}
				}
			}
			Main.tileSolid[162] = false;
			Main.tileSolid[226] = true;
			WorldGen.templePart2();
			Main.tileSolid[232] = false;
			WorldGen.maxTileCount = 1500;
			for (int num440 = 0; num440 < (int)((double)Main.maxTilesX * 0.04); num440++)
			{
				float num441 = (float)((double)num440 / ((double)Main.maxTilesX * 0.04));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[63],
					" ",
					(int)(num441 * 66f + 1f),
					"%"
				});
				int num442 = 0;
				int x5 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
				int y5 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 220);
				int num443 = WorldGen.countTiles(x5, y5, false, true);
				while ((num443 >= 1500 || num443 < 10) && num442 < 500)
				{
					num442++;
					x5 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
					y5 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, Main.maxTilesY - 220);
					num443 = WorldGen.countTiles(x5, y5, false, true);
				}
				if (num442 < 500)
				{
					int num444 = WorldGen.genRand.Next(2);
					if (WorldGen.iceCount > 0)
					{
						if (num444 == 0)
						{
							num444 = 40;
						}
						else if (num444 == 1)
						{
							num444 = 71;
						}
					}
					else if (WorldGen.lavaCount > 0)
					{
						num444 = 79;
					}
					else
					{
						num444 = WorldGen.genRand.Next(4);
						if (num444 == 0)
						{
							num444 = 59;
						}
						else if (num444 == 1)
						{
							num444 = 61;
						}
						else if (num444 == 2)
						{
							num444 = 170;
						}
						else if (num444 == 3)
						{
							num444 = 171;
						}
					}
					WorldGen.wallOut(x5, y5, num444);
				}
			}
			WorldGen.maxTileCount = 1500;
			for (int num445 = 0; num445 < (int)((double)Main.maxTilesX * 0.02); num445++)
			{
				float num446 = (float)((double)num445 / ((double)Main.maxTilesX * 0.02));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[63],
					" ",
					(int)(num446 * 33f + 67f),
					"%"
				});
				int num447 = 0;
				int num448 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
				int num449 = WorldGen.genRand.Next((int)Main.worldSurface, WorldGen.lavaLine);
				int num450 = 0;
				if (Main.tile[num448, num449].wall == 64)
				{
					num450 = WorldGen.countTiles(num448, num449, true, false);
				}
				while ((num450 >= 1500 || num450 < 10) && num447 < 1000)
				{
					num447++;
					num448 = WorldGen.genRand.Next(200, Main.maxTilesX - 200);
					num449 = WorldGen.genRand.Next((int)Main.worldSurface, WorldGen.lavaLine);
					if (!Main.wallHouse[(int)Main.tile[num448, num449].wall])
					{
						if (Main.tile[num448, num449].wall == 64)
						{
							num450 = WorldGen.countTiles(num448, num449, true, false);
						}
						else
						{
							num450 = 0;
						}
					}
				}
				if (num447 < 1000)
				{
					WorldGen.numWallOut2 = 0;
					WorldGen.wallOut2(num448, num449, 15);
				}
			}
			for (int num451 = 0; num451 < Main.maxTilesX; num451++)
			{
				for (int num452 = (int)Main.worldSurface - 1; num452 < Main.maxTilesY - 350; num452++)
				{
					if (WorldGen.genRand.Next(10) == 0)
					{
						WorldGen.GrowUndergroundTree(num451, num452);
					}
				}
			}
			for (int num453 = 0; num453 < WorldGen.numIslandHouses; num453++)
			{
				WorldGen.IslandHouse(WorldGen.fihX[num453], WorldGen.fihY[num453]);
			}
			for (int num454 = 0; num454 < (int)((double)Main.maxTilesX * 0.05); num454++)
			{
				float num455 = (float)((double)num454 / ((double)Main.maxTilesX * 0.05));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[34],
					" ",
					(int)(num455 * 100f + 1f),
					"%"
				});
				for (int num456 = 0; num456 < 1000; num456++)
				{
					int num457 = Main.rand.Next(200, Main.maxTilesX - 200);
					int num458 = Main.rand.Next((int)Main.worldSurface, Main.maxTilesY - 300);
					if (Main.tile[num457, num458].wall == 0 && WorldGen.placeTrap(num457, num458, -1))
					{
						break;
					}
				}
			}
			Main.tileSolid[137] = false;
			Main.tileSolid[130] = false;
			for (int num459 = 20; num459 < Main.maxTilesX - 20; num459++)
			{
				for (int num460 = 20; num460 < Main.maxTilesY - 20; num460++)
				{
					if (Main.tile[num459, num460].topSlope() || Main.tile[num459, num460].halfBrick())
					{
						if (!WorldGen.SolidTile(num459, num460 + 1))
						{
							Main.tile[num459, num460].active(false);
						}
						if (Main.tile[num459 + 1, num460].type == 137 || Main.tile[num459 - 1, num460].type == 137)
						{
							Main.tile[num459, num460].active(false);
						}
					}
					else if (Main.tile[num459, num460].bottomSlope())
					{
						if (!WorldGen.SolidTile(num459, num460 - 1))
						{
							Main.tile[num459, num460].active(false);
						}
						if (Main.tile[num459 + 1, num460].type == 137 || Main.tile[num459 - 1, num460].type == 137)
						{
							Main.tile[num459, num460].active(false);
						}
					}
				}
			}
			Main.tileSolid[137] = true;
			Main.tileSolid[130] = true;
			for (int num461 = 0; num461 < (int)((double)(Main.maxTilesX * Main.maxTilesY) * 0.0008); num461++)
			{
				float num462 = (float)((double)num461 / ((double)(Main.maxTilesX * Main.maxTilesY) * 0.0008));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[35],
					" ",
					(int)(num462 * 100f + 1f),
					"%"
				});
				bool flag33 = false;
				int num463 = 0;
				while (!flag33)
				{
					int num464 = WorldGen.genRand.Next((int)num6, Main.maxTilesY - 10);
					if ((double)num462 > 0.93)
					{
						num464 = Main.maxTilesY - 150;
					}
					else if ((double)num462 > 0.75)
					{
						num464 = (int)WorldGen.worldSurfaceLow;
					}
					int num465 = WorldGen.genRand.Next(1, Main.maxTilesX);
					bool flag34 = false;
					for (int num466 = num464; num466 < Main.maxTilesY; num466++)
					{
						if (!flag34)
						{
							if (Main.tile[num465, num466].active() && Main.tileSolid[(int)Main.tile[num465, num466].type] && !Main.tile[num465, num466 - 1].lava())
							{
								flag34 = true;
							}
						}
						else
						{
							int style2 = WorldGen.genRand.Next(0, 4);
							int num467 = 0;
							if (num466 < Main.maxTilesY - 5)
							{
								num467 = (int)Main.tile[num465, num466 + 1].type;
							}
							if (num467 == 147 || num467 == 161 || num467 == 162)
							{
								style2 = WorldGen.genRand.Next(4, 7);
							}
							if (num467 == 60)
							{
								style2 = WorldGen.genRand.Next(7, 10);
							}
							if (Main.wallDungeon[(int)Main.tile[num465, num466].wall])
							{
								style2 = WorldGen.genRand.Next(10, 13);
							}
							if (num467 == 41 || num467 == 43 || num467 == 44)
							{
								style2 = WorldGen.genRand.Next(10, 13);
							}
							if (num467 == 22 || num467 == 23 || num467 == 25)
							{
								style2 = WorldGen.genRand.Next(16, 19);
							}
							if (num467 == 199 || num467 == 203 || num467 == 204 || num467 == 200)
							{
								style2 = WorldGen.genRand.Next(22, 25);
							}
							if (num467 == 226)
							{
								style2 = WorldGen.genRand.Next(28, 31);
							}
							if (num466 > Main.maxTilesY - 200)
							{
								style2 = WorldGen.genRand.Next(13, 16);
							}
							if (WorldGen.PlacePot(num465, num466, 28, style2))
							{
								flag33 = true;
								break;
							}
							num463++;
							if (num463 >= 10000)
							{
								flag33 = true;
								break;
							}
						}
					}
				}
			}
			for (int num468 = 0; num468 < Main.maxTilesX / 200; num468++)
			{
				float num469 = (float)(num468 / (Main.maxTilesX / 200));
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[36],
					" ",
					(int)(num469 * 100f + 1f),
					"%"
				});
				bool flag35 = false;
				int num470 = 0;
				while (!flag35)
				{
					int num471 = WorldGen.genRand.Next(1, Main.maxTilesX);
					int num472 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 5);
					try
					{
						if (Main.tile[num471, num472].wall != 13)
						{
							if (Main.tile[num471, num472].wall != 14)
							{
								continue;
							}
						}
						while (!Main.tile[num471, num472].active())
						{
							num472++;
						}
						num472--;
						WorldGen.PlaceTile(num471, num472, 77, false, false, -1, 0);
						if (Main.tile[num471, num472].type == 77)
						{
							flag35 = true;
						}
						else
						{
							num470++;
							if (num470 >= 10000)
							{
								flag35 = true;
							}
						}
					}
					catch
					{
					}
				}
			}
			Main.statusText = Lang.gen[37];
			for (int num473 = 0; num473 < Main.maxTilesX; num473++)
			{
				num51 = num473;
				bool flag36 = true;
				int num474 = 0;
				while ((double)num474 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num51, num474].active())
					{
						if (flag36 && Main.tile[num51, num474].type == 0)
						{
							try
							{
								WorldGen.grassSpread = 0;
								WorldGen.SpreadGrass(num51, num474, 0, 2, true, 0);
							}
							catch
							{
								WorldGen.grassSpread = 0;
								WorldGen.SpreadGrass(num51, num474, 0, 2, false, 0);
							}
						}
						if ((double)num474 > num6)
						{
							break;
						}
						flag36 = false;
					}
					else if (Main.tile[num51, num474].wall == 0)
					{
						flag36 = true;
					}
					num474++;
				}
			}
			Main.tileSolid[190] = false;
			Main.tileSolid[196] = false;
			Main.tileSolid[189] = false;
			Main.tileSolid[202] = false;
			int num475 = 0;
			while ((double)num475 < (double)Main.maxTilesX * 0.06)
			{
				bool flag37 = false;
				while (!flag37)
				{
					int num476 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num477 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY - 300);
					if (!Main.tile[num476, num477].active())
					{
						int num478 = 186;
						while (!Main.tile[num476, num477 + 1].active() && num477 < Main.maxTilesY - 5)
						{
							num477++;
						}
						int num479 = WorldGen.genRand.Next(22);
						if (num479 >= 16 && num479 <= 22)
						{
							num479 = WorldGen.genRand.Next(22);
						}
						if ((Main.tile[num476, num477 + 1].type == 0 || Main.tile[num476, num477 + 1].type == 1 || Main.tileMoss[(int)Main.tile[num476, num477 + 1].type]) && WorldGen.genRand.Next(5) == 0)
						{
							num479 = WorldGen.genRand.Next(23, 29);
							num478 = 187;
						}
						if (num477 > Main.maxTilesY - 300 || Main.wallDungeon[(int)Main.tile[num476, num477].wall] || Main.tile[num476, num477 + 1].type == 30 || Main.tile[num476, num477 + 1].type == 19 || Main.tile[num476, num477 + 1].type == 25 || Main.tile[num476, num477 + 1].type == 203)
						{
							num479 = WorldGen.genRand.Next(7);
							num478 = 186;
						}
						if (Main.tile[num476, num477 + 1].type == 147 || Main.tile[num476, num477 + 1].type == 161 || Main.tile[num476, num477 + 1].type == 162)
						{
							num479 = WorldGen.genRand.Next(26, 32);
							num478 = 186;
						}
						if (Main.tile[num476, num477 + 1].type == 60)
						{
							num478 = 187;
							num479 = WorldGen.genRand.Next(6);
						}
						if ((Main.tile[num476, num477 + 1].type == 57 || Main.tile[num476, num477 + 1].type == 58) && WorldGen.genRand.Next(3) < 2)
						{
							num478 = 187;
							num479 = WorldGen.genRand.Next(6, 9);
						}
						if (Main.tile[num476, num477 + 1].type == 226)
						{
							num478 = 187;
							num479 = WorldGen.genRand.Next(18, 23);
						}
						if (Main.tile[num476, num477 + 1].type == 70)
						{
							num479 = WorldGen.genRand.Next(32, 35);
							num478 = 186;
						}
						if (num478 == 186 && num479 >= 7 && num479 <= 15 && WorldGen.genRand.Next(100) == 0)
						{
							num478 = 187;
							num479 = 17;
						}
						if (Main.wallDungeon[(int)Main.tile[num476, num477].wall] && WorldGen.genRand.Next(3) != 0)
						{
							flag37 = true;
						}
						else
						{
							WorldGen.PlaceTile(num476, num477, num478, true, false, -1, num479);
							if (Main.tile[num476, num477].type == 186 || Main.tile[num476, num477].type == 187)
							{
								flag37 = true;
							}
							if (flag37 && num478 == 186 && num479 <= 7)
							{
								int num480 = WorldGen.genRand.Next(1, 5);
								for (int num481 = 0; num481 < num480; num481++)
								{
									int num482 = num476 + WorldGen.genRand.Next(-10, 11);
									int num483 = num477 - WorldGen.genRand.Next(5);
									if (!Main.tile[num482, num483].active())
									{
										while (!Main.tile[num482, num483 + 1].active() && num483 < Main.maxTilesY - 5)
										{
											num483++;
										}
										int x6 = WorldGen.genRand.Next(12, 36);
										WorldGen.PlaceSmallPile(num482, num483, x6, 0, 185);
									}
								}
							}
						}
					}
				}
				num475++;
			}
			int num484 = 0;
			while ((double)num484 < (double)Main.maxTilesX * 0.01)
			{
				bool flag38 = false;
				while (!flag38)
				{
					int num485 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num486 = WorldGen.genRand.Next(Main.maxTilesY - 300, Main.maxTilesY - 10);
					if (!Main.tile[num485, num486].active())
					{
						int num487 = 186;
						while (!Main.tile[num485, num486 + 1].active() && num486 < Main.maxTilesY - 5)
						{
							num486++;
						}
						int num488 = WorldGen.genRand.Next(22);
						if (num488 >= 16 && num488 <= 22)
						{
							num488 = WorldGen.genRand.Next(22);
						}
						if (num486 > Main.maxTilesY - 300 || Main.wallDungeon[(int)Main.tile[num485, num486].wall] || Main.tile[num485, num486 + 1].type == 30 || Main.tile[num485, num486 + 1].type == 19)
						{
							num488 = WorldGen.genRand.Next(7);
						}
						if ((Main.tile[num485, num486 + 1].type == 57 || Main.tile[num485, num486 + 1].type == 58) && WorldGen.genRand.Next(3) < 2)
						{
							num487 = 187;
							num488 = WorldGen.genRand.Next(6, 9);
						}
						if (Main.tile[num485, num486 + 1].type == 147 || Main.tile[num485, num486 + 1].type == 161 || Main.tile[num485, num486 + 1].type == 162)
						{
							num488 = WorldGen.genRand.Next(26, 32);
						}
						WorldGen.PlaceTile(num485, num486, num487, true, false, -1, num488);
						if (Main.tile[num485, num486].type == 186 || Main.tile[num485, num486].type == 187)
						{
							flag38 = true;
						}
						if (flag38 && num487 == 186 && num488 <= 7)
						{
							int num489 = WorldGen.genRand.Next(1, 5);
							for (int num490 = 0; num490 < num489; num490++)
							{
								int num491 = num485 + WorldGen.genRand.Next(-10, 11);
								int num492 = num486 - WorldGen.genRand.Next(5);
								if (!Main.tile[num491, num492].active())
								{
									while (!Main.tile[num491, num492 + 1].active() && num492 < Main.maxTilesY - 5)
									{
										num492++;
									}
									int x7 = WorldGen.genRand.Next(12, 36);
									WorldGen.PlaceSmallPile(num491, num492, x7, 0, 185);
								}
							}
						}
					}
				}
				num484++;
			}
			int num493 = 0;
			while ((double)num493 < (double)Main.maxTilesX * 0.003)
			{
				bool flag39 = false;
				while (!flag39)
				{
					int num494 = 186;
					int num495 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num496 = WorldGen.genRand.Next(10, (int)Main.worldSurface);
					if (!Main.tile[num495, num496].active())
					{
						while (!Main.tile[num495, num496 + 1].active() && num496 < Main.maxTilesY - 5)
						{
							num496++;
						}
						int num497 = WorldGen.genRand.Next(7, 13);
						if (num496 > Main.maxTilesY - 300 || Main.wallDungeon[(int)Main.tile[num495, num496].wall] || Main.tile[num495, num496 + 1].type == 30 || Main.tile[num495, num496 + 1].type == 19 || Main.tile[num495, num496 + 1].type == 53 || Main.tile[num495, num496 + 1].type == 25 || Main.tile[num495, num496 + 1].type == 203)
						{
							num497 = -1;
						}
						if (Main.tile[num495, num496 + 1].type == 147 || Main.tile[num495, num496 + 1].type == 161 || Main.tile[num495, num496 + 1].type == 162)
						{
							num497 = WorldGen.genRand.Next(26, 32);
						}
						if (Main.tile[num495, num496 + 1].type == 2 || Main.tile[num495 - 1, num496 + 1].type == 2 || Main.tile[num495 + 1, num496 + 1].type == 2)
						{
							num494 = 187;
							num497 = WorldGen.genRand.Next(14, 17);
						}
						if (Main.tile[num495, num496 + 1].type == 151 || Main.tile[num495, num496 + 1].type == 274)
						{
							num494 = 186;
							num497 = WorldGen.genRand.Next(7);
						}
						if (num497 >= 0)
						{
							WorldGen.PlaceTile(num495, num496, num494, true, false, -1, num497);
						}
						if ((int)Main.tile[num495, num496].type == num494)
						{
							flag39 = true;
						}
					}
				}
				num493++;
			}
			int num498 = 0;
			while ((double)num498 < (double)Main.maxTilesX * 0.0035)
			{
				bool flag40 = false;
				while (!flag40)
				{
					int num499 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num500 = WorldGen.genRand.Next(10, (int)Main.worldSurface);
					if (!Main.tile[num499, num500].active() && Main.tile[num499, num500].wall > 0)
					{
						int num501 = 186;
						while (!Main.tile[num499, num500 + 1].active() && num500 < Main.maxTilesY - 5)
						{
							num500++;
						}
						int num502 = WorldGen.genRand.Next(7, 13);
						if (num500 > Main.maxTilesY - 300 || Main.wallDungeon[(int)Main.tile[num499, num500].wall] || Main.tile[num499, num500 + 1].type == 30 || Main.tile[num499, num500 + 1].type == 19)
						{
							num502 = -1;
						}
						if (Main.tile[num499, num500 + 1].type == 25)
						{
							num502 = WorldGen.genRand.Next(7);
						}
						if (Main.tile[num499, num500 + 1].type == 147 || Main.tile[num499, num500 + 1].type == 161 || Main.tile[num499, num500 + 1].type == 162)
						{
							num502 = WorldGen.genRand.Next(26, 32);
						}
						if (Main.tile[num499, num500 + 1].type == 2 || Main.tile[num499 - 1, num500 + 1].type == 2 || Main.tile[num499 + 1, num500 + 1].type == 2)
						{
							num501 = 187;
							num502 = WorldGen.genRand.Next(14, 17);
						}
						if (Main.tile[num499, num500 + 1].type == 151 || Main.tile[num499, num500 + 1].type == 274)
						{
							num501 = 186;
							num502 = WorldGen.genRand.Next(7);
						}
						if (num502 >= 0)
						{
							WorldGen.PlaceTile(num499, num500, num501, true, false, -1, num502);
						}
						if ((int)Main.tile[num499, num500].type == num501)
						{
							flag40 = true;
						}
						if (flag40 && num502 <= 7)
						{
							int num503 = WorldGen.genRand.Next(1, 5);
							for (int num504 = 0; num504 < num503; num504++)
							{
								int num505 = num499 + WorldGen.genRand.Next(-10, 11);
								int num506 = num500 - WorldGen.genRand.Next(5);
								if (!Main.tile[num505, num506].active())
								{
									while (!Main.tile[num505, num506 + 1].active() && num506 < Main.maxTilesY - 5)
									{
										num506++;
									}
									int x8 = WorldGen.genRand.Next(12, 36);
									WorldGen.PlaceSmallPile(num505, num506, x8, 0, 185);
								}
							}
						}
					}
				}
				num498++;
			}
			int num507 = 0;
			while ((double)num507 < (double)Main.maxTilesX * 0.6)
			{
				bool flag41 = false;
				while (!flag41)
				{
					int num508 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num509 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY - 20);
					if (Main.tile[num508, num509].wall == 87 && WorldGen.genRand.Next(2) == 0)
					{
						num508 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
						num509 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY - 20);
					}
					if (!Main.tile[num508, num509].active())
					{
						while (!Main.tile[num508, num509 + 1].active() && num509 < Main.maxTilesY - 5)
						{
							num509++;
						}
						int num510 = WorldGen.genRand.Next(2);
						int num511 = WorldGen.genRand.Next(36);
						if (num511 >= 28 && num511 <= 35)
						{
							num511 = WorldGen.genRand.Next(36);
						}
						if (num510 == 1)
						{
							num511 = WorldGen.genRand.Next(25);
							if (num511 >= 16 && num511 <= 24)
							{
								num511 = WorldGen.genRand.Next(25);
							}
						}
						if (num509 > Main.maxTilesY - 300)
						{
							if (num510 == 0)
							{
								num511 = WorldGen.genRand.Next(12, 28);
							}
							if (num510 == 1)
							{
								num511 = WorldGen.genRand.Next(6, 16);
							}
						}
						if (Main.wallDungeon[(int)Main.tile[num508, num509].wall] || Main.tile[num508, num509 + 1].type == 30 || Main.tile[num508, num509 + 1].type == 19 || Main.tile[num508, num509 + 1].type == 25 || Main.tile[num508, num509 + 1].type == 203 || Main.tile[num508, num509].wall == 87)
						{
							if (num510 == 0 && num511 < 12)
							{
								num511 += 12;
							}
							if (num510 == 1 && num511 < 6)
							{
								num511 += 6;
							}
							if (num510 == 1 && num511 >= 17)
							{
								num511 -= 10;
							}
						}
						if (Main.tile[num508, num509 + 1].type == 147 || Main.tile[num508, num509 + 1].type == 161 || Main.tile[num508, num509 + 1].type == 162)
						{
							if (num510 == 0 && num511 < 12)
							{
								num511 += 36;
							}
							if (num510 == 1 && num511 >= 20)
							{
								num511 += 6;
							}
							if (num510 == 1 && num511 < 6)
							{
								num511 += 25;
							}
						}
						if (Main.tile[num508, num509 + 1].type == 151 || Main.tile[num508, num509 + 1].type == 274)
						{
							if (num510 == 0)
							{
								num511 = WorldGen.genRand.Next(12, 28);
							}
							if (num510 == 1)
							{
								num511 = WorldGen.genRand.Next(12, 19);
							}
						}
						flag41 = ((Main.wallDungeon[(int)Main.tile[num508, num509].wall] && WorldGen.genRand.Next(3) != 0) || WorldGen.PlaceSmallPile(num508, num509, num511, num510, 185));
						if (flag41 && num510 == 1 && num511 >= 6 && num511 <= 15)
						{
							int num512 = WorldGen.genRand.Next(1, 5);
							for (int num513 = 0; num513 < num512; num513++)
							{
								int num514 = num508 + WorldGen.genRand.Next(-10, 11);
								int num515 = num509 - WorldGen.genRand.Next(5);
								if (!Main.tile[num514, num515].active())
								{
									while (!Main.tile[num514, num515 + 1].active() && num515 < Main.maxTilesY - 5)
									{
										num515++;
									}
									int x9 = WorldGen.genRand.Next(12, 36);
									WorldGen.PlaceSmallPile(num514, num515, x9, 0, 185);
								}
							}
						}
					}
				}
				num507++;
			}
			int num516 = 0;
			while ((float)num516 < (float)Main.maxTilesX * 0.02f)
			{
				bool flag42 = false;
				while (!flag42)
				{
					int num517 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num518 = WorldGen.genRand.Next(15, (int)Main.worldSurface);
					if (!Main.tile[num517, num518].active())
					{
						while (!Main.tile[num517, num518 + 1].active() && num518 < Main.maxTilesY - 5)
						{
							num518++;
						}
						int num519 = WorldGen.genRand.Next(2);
						int num520 = WorldGen.genRand.Next(11);
						if (num519 == 1)
						{
							num520 = WorldGen.genRand.Next(5);
						}
						if (Main.tile[num517, num518 + 1].type == 147 || Main.tile[num517, num518 + 1].type == 161 || Main.tile[num517, num518 + 1].type == 162)
						{
							if (num519 == 0 && num520 < 12)
							{
								num520 += 36;
							}
							if (num519 == 1 && num520 >= 20)
							{
								num520 += 6;
							}
							if (num519 == 1 && num520 < 6)
							{
								num520 += 25;
							}
						}
						if (Main.tile[num517, num518 + 1].type == 2 && num519 == 1)
						{
							num520 = WorldGen.genRand.Next(38, 41);
						}
						if (Main.tile[num517, num518 + 1].type == 151 || Main.tile[num517, num518 + 1].type == 274)
						{
							if (num519 == 0)
							{
								num520 = WorldGen.genRand.Next(12, 28);
							}
							if (num519 == 1)
							{
								num520 = WorldGen.genRand.Next(12, 19);
							}
						}
						if (!Main.wallDungeon[(int)Main.tile[num517, num518].wall] && Main.tile[num517, num518 + 1].type != 30 && Main.tile[num517, num518 + 1].type != 19 && Main.tile[num517, num518 + 1].type != 41 && Main.tile[num517, num518 + 1].type != 43 && Main.tile[num517, num518 + 1].type != 44 && Main.tile[num517, num518 + 1].type != 45 && Main.tile[num517, num518 + 1].type != 46 && Main.tile[num517, num518 + 1].type != 47 && Main.tile[num517, num518 + 1].type != 175 && Main.tile[num517, num518 + 1].type != 176 && Main.tile[num517, num518 + 1].type != 177 && Main.tile[num517, num518 + 1].type != 53 && Main.tile[num517, num518 + 1].type != 25 && Main.tile[num517, num518 + 1].type != 203)
						{
							flag42 = WorldGen.PlaceSmallPile(num517, num518, num520, num519, 185);
						}
					}
				}
				num516++;
			}
			int num521 = 0;
			while ((float)num521 < (float)Main.maxTilesX * 0.15f)
			{
				bool flag43 = false;
				while (!flag43)
				{
					int num522 = WorldGen.genRand.Next(25, Main.maxTilesX - 25);
					int num523 = WorldGen.genRand.Next(15, (int)Main.worldSurface);
					if (!Main.tile[num522, num523].active())
					{
						if (Main.tile[num522, num523].wall != 2)
						{
							if (Main.tile[num522, num523].wall != 40)
							{
								continue;
							}
						}
						while (!Main.tile[num522, num523 + 1].active() && num523 < Main.maxTilesY - 5)
						{
							num523++;
						}
						int num524 = WorldGen.genRand.Next(2);
						int num525 = WorldGen.genRand.Next(11);
						if (num524 == 1)
						{
							num525 = WorldGen.genRand.Next(5);
						}
						if (Main.tile[num522, num523 + 1].type == 147 || Main.tile[num522, num523 + 1].type == 161 || Main.tile[num522, num523 + 1].type == 162)
						{
							if (num524 == 0 && num525 < 12)
							{
								num525 += 36;
							}
							if (num524 == 1 && num525 >= 20)
							{
								num525 += 6;
							}
							if (num524 == 1 && num525 < 6)
							{
								num525 += 25;
							}
						}
						if (Main.tile[num522, num523 + 1].type == 2 && num524 == 1)
						{
							num525 = WorldGen.genRand.Next(38, 41);
						}
						if (Main.tile[num522, num523 + 1].type == 151 || Main.tile[num522, num523 + 1].type == 274)
						{
							if (num524 == 0)
							{
								num525 = WorldGen.genRand.Next(12, 28);
							}
							if (num524 == 1)
							{
								num525 = WorldGen.genRand.Next(12, 19);
							}
						}
						if (!Main.wallDungeon[(int)Main.tile[num522, num523].wall] && Main.tile[num522, num523 + 1].type != 30 && Main.tile[num522, num523 + 1].type != 19 && Main.tile[num522, num523 + 1].type != 41 && Main.tile[num522, num523 + 1].type != 43 && Main.tile[num522, num523 + 1].type != 44 && Main.tile[num522, num523 + 1].type != 45 && Main.tile[num522, num523 + 1].type != 46 && Main.tile[num522, num523 + 1].type != 47 && Main.tile[num522, num523 + 1].type != 175 && Main.tile[num522, num523 + 1].type != 176 && Main.tile[num522, num523 + 1].type != 177 && Main.tile[num522, num523 + 1].type != 25 && Main.tile[num522, num523 + 1].type != 203)
						{
							flag43 = WorldGen.PlaceSmallPile(num522, num523, num525, num524, 185);
						}
					}
				}
				num521++;
			}
			Main.tileSolid[190] = true;
			Main.tileSolid[192] = true;
			Main.tileSolid[196] = true;
			Main.tileSolid[189] = true;
			Main.tileSolid[202] = true;
			Main.tileSolid[225] = true;
			Main.statusText = Lang.gen[38];
			int num526 = 8;
			int num527 = 400;
			int num528 = 4;
			int num529 = 275;
			for (int num530 = 0; num530 < 3; num530++)
			{
				int num531 = 5;
				int num532 = 529;
                bool flag44 = false;
                int maxValue = num528;
				switch (num530)
				{
				case 0:
				{
					num531 = 5;
					num532 = num529;
					flag44 = false;
					maxValue = num528;
					goto IL_E3B3;
				}
				case 1:
				{
					num531 = num527;
					num532 = Main.maxTilesX - num527;
					flag44 = true;
					maxValue = num526;
					goto IL_E3B3;
				}
				case 2:
				{
					num531 = Main.maxTilesX - num529;
					num532 = Main.maxTilesX - 5;
					flag44 = false;
					maxValue = num528;
					goto IL_E3B3;
				}
				}
                goto IL_E3B3;
				IL_E3B3:
				for (int num533 = num531; num533 < num532; num533++)
				{
					if (WorldGen.genRand.Next(maxValue) == 0)
					{
						int num534 = 0;
						while ((double)num534 < Main.worldSurface - 1.0)
						{
							Tile tile = Main.tile[num533, num534];
							if (tile.active() && tile.type == 53)
							{
								Tile tile2 = Main.tile[num533, num534 - 1];
								if (!tile2.active() && tile2.wall == 0)
								{
									if (flag44)
									{
										WorldGen.PlantCactus(num533, num534);
										break;
									}
									if (Main.tile[num533, num534 - 2].liquid == 255 && Main.tile[num533, num534 - 3].liquid == 255 && Main.tile[num533, num534 - 4].liquid == 255)
									{
										if (WorldGen.genRand.Next(2) == 0)
										{
											WorldGen.PlaceTile(num533, num534 - 1, 81, true, false, -1, 0);
											break;
										}
										WorldGen.PlaceTile(num533, num534 - 1, 324, true, false, -1, WorldGen.genRand.Next(2));
										break;
									}
									else if (Main.tile[num533, num534 - 2].liquid == 0)
									{
										WorldGen.PlaceTile(num533, num534 - 1, 324, true, false, -1, WorldGen.genRand.Next(2));
										break;
									}
								}
							}
							num534++;
						}
					}
				}
			}
			int num535 = 5;
			bool flag45 = true;
			while (flag45)
			{
				int num536 = Main.maxTilesX / 2 + WorldGen.genRand.Next(-num535, num535 + 1);
				for (int num537 = 0; num537 < Main.maxTilesY; num537++)
				{
					if (Main.tile[num536, num537].active())
					{
						Main.spawnTileX = num536;
						Main.spawnTileY = num537;
						break;
					}
				}
				flag45 = false;
				num535++;
				if ((double)Main.spawnTileY > Main.worldSurface)
				{
					flag45 = true;
				}
				if (Main.tile[Main.spawnTileX, Main.spawnTileY - 1].liquid > 0)
				{
					flag45 = true;
				}
			}
			int num538 = 10;
			while ((double)Main.spawnTileY > Main.worldSurface)
			{
				int num539 = WorldGen.genRand.Next(Main.maxTilesX / 2 - num538, Main.maxTilesX / 2 + num538);
				for (int num540 = 0; num540 < Main.maxTilesY; num540++)
				{
					if (Main.tile[num539, num540].active())
					{
						Main.spawnTileX = num539;
						Main.spawnTileY = num540;
						break;
					}
				}
				num538++;
			}
			WorldGen.maxTileCount = 3500;
			for (int num541 = 50; num541 < Main.maxTilesX - 50; num541++)
			{
				int num542 = 0;
				while ((double)num542 < Main.worldSurface - 10.0)
				{
					if (WorldGen.genRand.Next(4) == 0)
					{
						bool flag46 = false;
						int num543 = -1;
						int num544 = -1;
						if (Main.tile[num541, num542].active() && Main.tile[num541, num542].type == 2 && (Main.tile[num541, num542].wall == 2 || Main.tile[num541, num542].wall == 63))
						{
							for (int num545 = num541 - 1; num545 <= num541 + 1; num545++)
							{
								for (int num546 = num542 - 1; num546 <= num542 + 1; num546++)
								{
									if (Main.tile[num545, num546].wall == 0 && !WorldGen.SolidTile(num545, num546))
									{
										flag46 = true;
									}
								}
							}
							if (flag46)
							{
								for (int num547 = num541 - 1; num547 <= num541 + 1; num547++)
								{
									for (int num548 = num542 - 1; num548 <= num542 + 1; num548++)
									{
										if ((Main.tile[num547, num548].wall == 2 || Main.tile[num547, num548].wall == 15) && !WorldGen.SolidTile(num547, num548))
										{
											num543 = num547;
											num544 = num548;
										}
									}
								}
							}
						}
						if (flag46 && num543 > -1 && num544 > -1)
						{
							int num549 = WorldGen.countDirtTiles(num543, num544);
							if (num549 < WorldGen.maxTileCount)
							{
								try
								{
									WorldGen.numWallOut2 = 0;
									WorldGen.wallOut2(num543, num544, 63);
								}
								catch
								{
								}
							}
						}
					}
					num542++;
				}
			}
			for (int num550 = 5; num550 < Main.maxTilesX - 5; num550++)
			{
				int num551 = 10;
				while ((double)num551 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num550, num551].wall == 63 && WorldGen.genRand.Next(10) == 0)
					{
						Main.tile[num550, num551].wall = 65;
					}
					if (Main.tile[num550, num551].active() && Main.tile[num550, num551].type == 0)
					{
						bool flag47 = false;
						for (int num552 = num550 - 1; num552 <= num550 + 1; num552++)
						{
							for (int num553 = num551 - 1; num553 <= num551 + 1; num553++)
							{
								if (Main.tile[num550, num551].wall == 63 || Main.tile[num550, num551].wall == 65)
								{
									flag47 = true;
									break;
								}
							}
						}
						if (flag47)
						{
							WorldGen.SpreadGrass(num550, num551, 0, 2, true, 0);
						}
					}
					num551++;
				}
			}
			int num554 = NPC.NewNPC(Main.spawnTileX * 16, Main.spawnTileY * 16, 22, 0);
			Main.npc[num554].homeTileX = Main.spawnTileX;
			Main.npc[num554].homeTileY = Main.spawnTileY;
			Main.npc[num554].direction = 1;
			Main.npc[num554].homeless = true;
			Main.statusText = Lang.gen[39];
			int num555 = 0;
			while ((double)num555 < (double)Main.maxTilesX * 0.002)
			{
				int arg_EB3B_0 = Main.maxTilesX / 2;
				int num556 = WorldGen.genRand.Next(Main.maxTilesX);
				int num557 = num556 - WorldGen.genRand.Next(10) - 7;
				int num558 = num556 + WorldGen.genRand.Next(10) + 7;
				if (num557 < 0)
				{
					num557 = 0;
				}
				if (num558 > Main.maxTilesX - 1)
				{
					num558 = Main.maxTilesX - 1;
				}
				for (int num559 = num557; num559 < num558; num559++)
				{
					int num560 = 1;
					while ((double)num560 < Main.worldSurface - 1.0)
					{
						if (Main.tile[num559, num560].type == 2 && Main.tile[num559, num560].active() && !Main.tile[num559, num560 - 1].active())
						{
							WorldGen.PlaceTile(num559, num560 - 1, 27, true, false, -1, 0);
						}
						if (Main.tile[num559, num560].active())
						{
							break;
						}
						num560++;
					}
				}
				num555++;
			}
			Main.statusText = Lang.gen[40];
			int num561 = 0;
			while ((double)num561 < (double)Main.maxTilesX * 0.003)
			{
				int num562 = WorldGen.genRand.Next(50, Main.maxTilesX - 50);
				int num563 = WorldGen.genRand.Next(25, 50);
				for (int num564 = num562 - num563; num564 < num562 + num563; num564++)
				{
					int num565 = 20;
					while ((double)num565 < Main.worldSurface)
					{
						WorldGen.GrowEpicTree(num564, num565);
						num565++;
					}
				}
				num561++;
			}
			WorldGen.AddTrees();
			Main.statusText = Lang.gen[41];
			int num566 = 0;
			while ((double)num566 < (double)Main.maxTilesX * 1.7)
			{
				WorldGen.PlantAlch();
				num566++;
			}
			for (int num567 = 0; num567 < Main.maxTilesX; num567++)
			{
				WorldGen.plantDye(WorldGen.genRand.Next(100, Main.maxTilesX - 100), WorldGen.genRand.Next(100, Main.maxTilesY - 200));
			}
			for (int num568 = 100; num568 < Main.maxTilesX - 100; num568++)
			{
				for (int num569 = (int)Main.worldSurface; num569 < Main.maxTilesY - 100; num569++)
				{
					if (Main.tile[num568, num569].wall == 86)
					{
						if (Main.tile[num568, num569].liquid > 0)
						{
							Main.tile[num568, num569].honey(true);
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							WorldGen.PlaceTight(num568, num569, 165, false);
						}
					}
					if (Main.tile[num568, num569].wall == 62)
					{
						Main.tile[num568, num569].liquid = 0;
						Main.tile[num568, num569].lava(false);
					}
					if (Main.tile[num568, num569].wall == 62 && !Main.tile[num568, num569].active() && WorldGen.genRand.Next(10) != 0)
					{
						int num570 = WorldGen.genRand.Next(2, 5);
						int num571 = num568 - num570;
						int num572 = num568 + num570;
						int num573 = num569 - num570;
						int num574 = num569 + num570;
						bool flag48 = false;
						for (int num575 = num571; num575 <= num572; num575++)
						{
							for (int num576 = num573; num576 <= num574; num576++)
							{
								if (WorldGen.SolidTile(num575, num576))
								{
									flag48 = true;
									break;
								}
							}
						}
						if (flag48)
						{
							WorldGen.PlaceTile(num568, num569, 51, true, false, -1, 0);
							WorldGen.TileFrame(num568, num569, false, false);
						}
					}
				}
			}
			Main.statusText = Lang.gen[42];
			if (Main.halloween)
			{
				for (int num577 = 40; num577 < Main.maxTilesX - 40; num577++)
				{
					int num578 = 50;
					while ((double)num578 < Main.worldSurface)
					{
						if (Main.tile[num577, num578].active() && Main.tile[num577, num578].type == 2 && WorldGen.genRand.Next(15) == 0)
						{
							WorldGen.PlacePumpkin(num577, num578 - 1);
							int num579 = WorldGen.genRand.Next(5);
							for (int num580 = 0; num580 < num579; num580++)
							{
								WorldGen.GrowPumpkin(num577, num578 - 1, 254);
							}
						}
						num578++;
					}
				}
			}
			WorldGen.AddPlants();
			for (int num581 = 0; num581 < Main.maxTilesX; num581++)
			{
				for (int num582 = 0; num582 < Main.maxTilesY; num582++)
				{
					if (Main.tile[num581, num582].active())
					{
						if (num582 >= (int)Main.worldSurface && Main.tile[num581, num582].type == 70 && !Main.tile[num581, num582 - 1].active())
						{
							WorldGen.GrowShroom(num581, num582);
							if (!Main.tile[num581, num582 - 1].active())
							{
								WorldGen.PlaceTile(num581, num582 - 1, 71, true, false, -1, 0);
							}
						}
						if (Main.tile[num581, num582].type == 60 && !Main.tile[num581, num582 - 1].active())
						{
							WorldGen.PlaceTile(num581, num582 - 1, 61, true, false, -1, 0);
						}
					}
				}
			}
			for (int num583 = 0; num583 < Main.maxTilesX * 100; num583++)
			{
				int num584 = WorldGen.genRand.Next(40, Main.maxTilesX / 2 - 40);
				if (num9 < 0)
				{
					num584 += Main.maxTilesX / 2;
				}
				int num585 = WorldGen.genRand.Next(Main.maxTilesY - 300);
				while (!Main.tile[num584, num585].active() && num585 < Main.maxTilesY - 300)
				{
					num585++;
				}
				if (Main.tile[num584, num585].active() && Main.tile[num584, num585].type == 60)
				{
					num585--;
					WorldGen.PlaceJunglePlant(num584, num585, 233, WorldGen.genRand.Next(8), 0);
					if (Main.tile[num584, num585].type != 233)
					{
						WorldGen.PlaceJunglePlant(num584, num585, 233, WorldGen.genRand.Next(12), 1);
					}
				}
			}
			Main.statusText = Lang.gen[43];
			for (int num586 = 0; num586 < Main.maxTilesX; num586++)
			{
				int num587 = 0;
				int num588 = 0;
				while ((double)num588 < Main.worldSurface)
				{
					if (num587 > 0 && !Main.tile[num586, num588].active())
					{
						Main.tile[num586, num588].active(true);
						Main.tile[num586, num588].type = 52;
						num587--;
					}
					else
					{
						num587 = 0;
					}
					if (Main.tile[num586, num588].active() && !Main.tile[num586, num588].bottomSlope() && (Main.tile[num586, num588].type == 2 || (Main.tile[num586, num588].type == 192 && WorldGen.genRand.Next(4) == 0)) && WorldGen.genRand.Next(5) < 3)
					{
						num587 = WorldGen.genRand.Next(1, 10);
					}
					num588++;
				}
				num587 = 0;
				for (int num589 = 0; num589 < Main.maxTilesY; num589++)
				{
					if (num587 > 0 && !Main.tile[num586, num589].active())
					{
						Main.tile[num586, num589].active(true);
						Main.tile[num586, num589].type = 62;
						num587--;
					}
					else
					{
						num587 = 0;
					}
					if (Main.tile[num586, num589].active() && Main.tile[num586, num589].type == 60 && !Main.tile[num586, num589].bottomSlope() && WorldGen.genRand.Next(5) < 3)
					{
						num587 = WorldGen.genRand.Next(1, 10);
					}
				}
				num587 = 0;
				for (int num590 = 0; num590 < Main.maxTilesY; num590++)
				{
					if (num587 > 0 && !Main.tile[num586, num590].active())
					{
						Main.tile[num586, num590].active(true);
						Main.tile[num586, num590].type = 205;
						num587--;
					}
					else
					{
						num587 = 0;
					}
					if (Main.tile[num586, num590].active() && Main.tile[num586, num590].type == 199 && WorldGen.genRand.Next(5) < 3)
					{
						num587 = WorldGen.genRand.Next(1, 10);
					}
				}
			}
			Main.statusText = Lang.gen[44];
			int num591 = 0;
			while ((double)num591 < (double)Main.maxTilesX * 0.005)
			{
				int num592 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
				int num593 = WorldGen.genRand.Next(5, 15);
				int num594 = WorldGen.genRand.Next(15, 30);
				int num595 = 1;
				while ((double)num595 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num592, num595].active())
					{
						for (int num596 = num592 - num593; num596 < num592 + num593; num596++)
						{
							for (int num597 = num595 - num594; num597 < num595 + num594; num597++)
							{
								if (Main.tile[num596, num597].type == 3 || Main.tile[num596, num597].type == 24)
								{
									Main.tile[num596, num597].frameX = (short)(WorldGen.genRand.Next(6, 8) * 18);
									if (Main.tile[num596, num597].type == 3 && WorldGen.genRand.Next(2) == 0)
									{
										Main.tile[num596, num597].frameX = (short)(WorldGen.genRand.Next(9, 11) * 18);
									}
								}
							}
						}
						break;
					}
					num595++;
				}
				num591++;
			}
			Main.statusText = Lang.gen[45];
			int num598 = 0;
			while ((double)num598 < (double)Main.maxTilesX * 0.002)
			{
				int num599 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
				int num600 = WorldGen.genRand.Next(4, 10);
				int num601 = WorldGen.genRand.Next(15, 30);
				int num602 = 1;
				while ((double)num602 < Main.worldSurface - 1.0)
				{
					if (Main.tile[num599, num602].active())
					{
						for (int num603 = num599 - num600; num603 < num599 + num600; num603++)
						{
							for (int num604 = num602 - num601; num604 < num602 + num601; num604++)
							{
								if (Main.tile[num603, num604].type == 3 || Main.tile[num603, num604].type == 24)
								{
									Main.tile[num603, num604].frameX = 144;
								}
							}
						}
						break;
					}
					num602++;
				}
				num598++;
			}
			for (int num605 = 20; num605 < Main.maxTilesX - 20; num605++)
			{
				for (int num606 = (int)Main.worldSurface; num606 < Main.maxTilesY - 20; num606++)
				{
					if (!Main.tile[num605, num606].active() && Main.rand.Next(5) == 0)
					{
						if ((Main.tile[num605, num606 - 1].type == 1 || Main.tile[num605, num606 - 1].type == 147 || Main.tile[num605, num606 - 1].type == 161 || Main.tile[num605, num606 - 1].type == 25 || Main.tile[num605, num606 - 1].type == 203 || Main.tileStone[(int)Main.tile[num605, num606 - 1].type] || Main.tileMoss[(int)Main.tile[num605, num606 - 1].type]) && !Main.tile[num605, num606].active() && !Main.tile[num605, num606 + 1].active())
						{
							Main.tile[num605, num606 - 1].slope(0);
						}
						if ((Main.tile[num605, num606 + 1].type == 1 || Main.tile[num605, num606 + 1].type == 147 || Main.tile[num605, num606 + 1].type == 161 || Main.tile[num605, num606 + 1].type == 25 || Main.tile[num605, num606 + 1].type == 203 || Main.tileStone[(int)Main.tile[num605, num606 + 1].type] || Main.tileMoss[(int)Main.tile[num605, num606 + 1].type]) && !Main.tile[num605, num606].active() && !Main.tile[num605, num606 - 1].active())
						{
							Main.tile[num605, num606 + 1].slope(0);
						}
						WorldGen.PlaceTight(num605, num606, 165, false);
					}
				}
				for (int num607 = 5; num607 < (int)Main.worldSurface; num607++)
				{
					if ((Main.tile[num605, num607 - 1].type == 147 || Main.tile[num605, num607 - 1].type == 161) && Main.rand.Next(5) == 0)
					{
						if (!Main.tile[num605, num607].active() && !Main.tile[num605, num607 + 1].active())
						{
							Main.tile[num605, num607 - 1].slope(0);
						}
						WorldGen.PlaceTight(num605, num607, 165, false);
					}
					if ((Main.tile[num605, num607 - 1].type == 25 || Main.tile[num605, num607 - 1].type == 203) && Main.rand.Next(5) == 0)
					{
						if (!Main.tile[num605, num607].active() && !Main.tile[num605, num607 + 1].active())
						{
							Main.tile[num605, num607 - 1].slope(0);
						}
						WorldGen.PlaceTight(num605, num607, 165, false);
					}
					if ((Main.tile[num605, num607 + 1].type == 25 || Main.tile[num605, num607 + 1].type == 203) && Main.rand.Next(5) == 0)
					{
						if (!Main.tile[num605, num607].active() && !Main.tile[num605, num607 - 1].active())
						{
							Main.tile[num605, num607 + 1].slope(0);
						}
						WorldGen.PlaceTight(num605, num607, 165, false);
					}
				}
			}
			int num608 = 0;
			while ((double)num608 < (double)Main.maxTilesX * 0.25)
			{
				int num609 = WorldGen.genRand.Next((int)(Main.worldSurface + Main.rockLayer) / 2, WorldGen.lavaLine);
				int num610 = WorldGen.genRand.Next(array5[num609], array6[num609]);
				if (Main.tile[num610, num609].active() && (Main.tile[num610, num609].type == 147 || Main.tile[num610, num609].type == 161 || Main.tile[num610, num609].type == 162 || Main.tile[num610, num609].type == 224))
				{
					int num611 = WorldGen.genRand.Next(1, 4);
					int num612 = WorldGen.genRand.Next(1, 4);
					int num613 = WorldGen.genRand.Next(1, 4);
					int num614 = WorldGen.genRand.Next(1, 4);
					int num615 = WorldGen.genRand.Next(12);
					int style3;
					if (num615 < 3)
					{
						style3 = 0;
					}
					else if (num615 < 6)
					{
						style3 = 1;
					}
					else if (num615 < 8)
					{
						style3 = 2;
					}
					else if (num615 < 10)
					{
						style3 = 3;
					}
					else if (num615 < 11)
					{
						style3 = 4;
					}
					else
					{
						style3 = 5;
					}
					for (int num616 = num610 - num611; num616 < num610 + num612; num616++)
					{
						for (int num617 = num609 - num613; num617 < num609 + num614; num617++)
						{
							if (!Main.tile[num616, num617].active())
							{
								WorldGen.PlaceTile(num616, num617, 178, true, false, -1, style3);
							}
						}
					}
				}
				num608++;
			}
			for (int num618 = 0; num618 < Main.maxTilesX; num618++)
			{
				int num619 = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
				int num620 = WorldGen.genRand.Next((int)Main.rockLayer, Main.maxTilesY - 300);
				if (!Main.tile[num619, num620].active() && !Main.tile[num619, num620].lava() && !Main.wallDungeon[(int)Main.tile[num619, num620].wall] && Main.tile[num619, num620].wall != 27)
				{
					int num621 = WorldGen.genRand.Next(12);
					int style4;
					if (num621 < 3)
					{
						style4 = 0;
					}
					else if (num621 < 6)
					{
						style4 = 1;
					}
					else if (num621 < 8)
					{
						style4 = 2;
					}
					else if (num621 < 10)
					{
						style4 = 3;
					}
					else if (num621 < 11)
					{
						style4 = 4;
					}
					else
					{
						style4 = 5;
					}
					WorldGen.PlaceTile(num619, num620, 178, true, false, -1, style4);
				}
			}
			for (int num622 = 5; num622 < Main.maxTilesX - 5; num622++)
			{
				for (int num623 = 5; num623 < Main.maxTilesY - 5; num623++)
				{
					if (Main.tile[num622, num623].active() && Main.tileMoss[(int)Main.tile[num622, num623].type])
					{
						for (int num624 = 0; num624 < 4; num624++)
						{
							int num625 = num622;
							int num626 = num623;
							if (num624 == 0)
							{
								num625--;
							}
							if (num624 == 1)
							{
								num625++;
							}
							if (num624 == 2)
							{
								num626--;
							}
							if (num624 == 3)
							{
								num626++;
							}
							if (!Main.tile[num625, num626].active())
							{
								WorldGen.PlaceTile(num625, num626, 184, true, false, -1, 0);
							}
						}
					}
				}
			}
			int num627 = 0;
			int num628 = 0;
			bool flag49 = false;
			for (int num629 = 5; num629 < Main.maxTilesX - 5; num629++)
			{
				int num630 = 0;
				while ((double)num630 < Main.worldSurface + 20.0)
				{
					if (Main.tile[num629, num630].active() && Main.tile[num629, num630].type == 60)
					{
						num627 = num629;
						flag49 = true;
						break;
					}
					num630++;
				}
				if (flag49)
				{
					break;
				}
			}
			flag49 = false;
			for (int num631 = Main.maxTilesX - 5; num631 > 5; num631--)
			{
				int num632 = 0;
				while ((double)num632 < Main.worldSurface + 20.0)
				{
					if (Main.tile[num631, num632].active() && Main.tile[num631, num632].type == 60)
					{
						num628 = num631;
						flag49 = true;
						break;
					}
					num632++;
				}
				if (flag49)
				{
					break;
				}
			}
			for (int num633 = num627; num633 <= num628; num633++)
			{
				int num634 = 0;
				while ((double)num634 < Main.worldSurface + 20.0)
				{
					if (((num633 >= num627 + 2 && num633 <= num628 - 2) || WorldGen.genRand.Next(2) != 0) && ((num633 >= num627 + 3 && num633 <= num628 - 3) || WorldGen.genRand.Next(3) != 0) && (Main.tile[num633, num634].wall == 2 || Main.tile[num633, num634].wall == 59))
					{
						Main.tile[num633, num634].wall = 15;
					}
					num634++;
				}
			}
			for (int num635 = 0; num635 < num306; num635++)
			{
				int num636 = array7[num635];
				int num637 = array8[num635];
				for (int num638 = num636 - 1; num638 <= num636 + 1; num638++)
				{
					for (int num639 = num637 - 2; num639 <= num637 + 1; num639++)
					{
						if (num639 != num637 + 1)
						{
							Main.tile[num638, num639].active(false);
						}
						else
						{
							Main.tile[num638, num639].active(true);
							Main.tile[num638, num639].type = 225;
							Main.tile[num638, num639].slope(0);
							Main.tile[num638, num639].halfBrick(false);
						}
					}
				}
				WorldGen.PlaceTile(num636, num637, 231, true, false, -1, 0);
			}
			Main.tileSolid[232] = true;
			Main.tileSolid[162] = true;
			for (int num640 = 5; num640 < Main.maxTilesX - 5; num640++)
			{
				for (int num641 = 5; num641 < Main.maxTilesY - 5; num641++)
				{
					if (Main.tile[num640, num641].type == 137)
					{
						if (Main.tile[num640, num641].frameY <= 52)
						{
							int num642 = -1;
							if (Main.tile[num640, num641].frameX >= 18)
							{
								num642 = 1;
							}
							if (Main.tile[num640 + num642, num641].halfBrick() || Main.tile[num640 + num642, num641].slope() != 0)
							{
								Main.tile[num640 + num642, num641].active(false);
							}
						}
					}
					else if (Main.tile[num640, num641].type == 162 && Main.tile[num640, num641 + 1].liquid == 0)
					{
						Main.tile[num640, num641].active(false);
					}
					if (Main.tile[num640, num641].wall == 13 || Main.tile[num640, num641].wall == 14)
					{
						Main.tile[num640, num641].liquid = 0;
					}
					if (Main.tile[num640, num641].type == 21)
					{
						int num643 = Main.tile[num640, num641].frameX / 18;
						int num644 = 0;
						int num645 = num640;
						int num646 = num641 - Main.tile[num640, num641].frameY / 18;
						while (num643 >= 2)
						{
							num644++;
							num643 -= 2;
						}
						num645 -= num643;
						for (int num647 = 0; num647 < 2; num647++)
						{
							for (int num648 = 0; num648 < 2; num648++)
							{
								int num649 = num645 + num647;
								int num650 = num646 + num648;
								Main.tile[num649, num650].active(true);
								Main.tile[num649, num650].slope(0);
								Main.tile[num649, num650].halfBrick(false);
								Main.tile[num649, num650].type = 21;
								Main.tile[num649, num650].frameX = (short)(num647 * 18 + 36 * num644);
								Main.tile[num649, num650].frameY = (short)(num648 * 18);
							}
							if (!Main.tile[num647, num641 + 2].active())
							{
								Main.tile[num647, num641 + 2].active(true);
								if (!Main.tileSolid[(int)Main.tile[num647, num641 + 2].type] || Main.tileSolidTop[(int)Main.tile[num647, num641 + 2].type])
								{
									Main.tile[num647, num641 + 2].type = 0;
								}
							}
							Main.tile[num647, num641 + 2].slope(0);
							Main.tile[num647, num641 + 2].halfBrick(false);
						}
					}
					if (Main.tile[num640, num641].type == 28)
					{
						int num651 = Main.tile[num640, num641].frameX / 18;
						int num652 = 0;
						int num653 = num640;
						while (num651 >= 2)
						{
							num652++;
							num651 -= 2;
						}
						num653 -= num651;
						int num654 = Main.tile[num640, num641].frameY / 18;
						int num655 = 0;
						int num656 = num641;
						while (num654 >= 2)
						{
							num655++;
							num654 -= 2;
						}
						num656 -= num654;
						for (int num657 = 0; num657 < 2; num657++)
						{
							for (int num658 = 0; num658 < 2; num658++)
							{
								int num659 = num653 + num657;
								int num660 = num656 + num658;
								Main.tile[num659, num660].active(true);
								Main.tile[num659, num660].slope(0);
								Main.tile[num659, num660].halfBrick(false);
								Main.tile[num659, num660].type = 28;
								Main.tile[num659, num660].frameX = (short)(num657 * 18 + 36 * num652);
								Main.tile[num659, num660].frameY = (short)(num658 * 18 + 36 * num655);
							}
							if (!Main.tile[num657, num641 + 2].active())
							{
								Main.tile[num657, num641 + 2].active(true);
								if (!Main.tileSolid[(int)Main.tile[num657, num641 + 2].type] || Main.tileSolidTop[(int)Main.tile[num657, num641 + 2].type])
								{
									Main.tile[num657, num641 + 2].type = 0;
								}
							}
							Main.tile[num657, num641 + 2].slope(0);
							Main.tile[num657, num641 + 2].halfBrick(false);
						}
					}
					if (Main.tile[num640, num641].type == 26)
					{
						int num661 = Main.tile[num640, num641].frameX / 18;
						int num662 = 0;
						int num663 = num640;
						int num664 = num641 - Main.tile[num640, num641].frameY / 18;
						while (num661 >= 3)
						{
							num662++;
							num661 -= 3;
						}
						num663 -= num661;
						for (int num665 = 0; num665 < 3; num665++)
						{
							for (int num666 = 0; num666 < 2; num666++)
							{
								int num667 = num663 + num665;
								int num668 = num664 + num666;
								Main.tile[num667, num668].active(true);
								Main.tile[num667, num668].slope(0);
								Main.tile[num667, num668].halfBrick(false);
								Main.tile[num667, num668].type = 26;
								Main.tile[num667, num668].frameX = (short)(num665 * 18 + 54 * num662);
								Main.tile[num667, num668].frameY = (short)(num666 * 18);
							}
							if (!Main.tile[num663 + num665, num664 + 2].active())
							{
								Main.tile[num663 + num665, num664 + 2].active(true);
								if (!Main.tileSolid[(int)Main.tile[num663 + num665, num664 + 2].type] || Main.tileSolidTop[(int)Main.tile[num663 + num665, num664 + 2].type])
								{
									Main.tile[num663 + num665, num664 + 2].type = 0;
								}
							}
							Main.tile[num663 + num665, num664 + 2].slope(0);
							Main.tile[num663 + num665, num664 + 2].halfBrick(false);
						}
					}
				}
			}
			int num669 = WorldGen.lAltarX;
			int num670 = WorldGen.lAltarY;
			for (int num671 = 0; num671 <= 2; num671++)
			{
				for (int num672 = 0; num672 <= 1; num672++)
				{
					int num673 = num669 + num671;
					int num674 = num670 + num672;
					Main.tile[num673, num674].active(true);
					Main.tile[num673, num674].type = 237;
					Main.tile[num673, num674].frameX = (short)(num671 * 18);
					Main.tile[num673, num674].frameY = (short)(num672 * 18);
				}
				Main.tile[num671, num670 + 2].active(true);
				Main.tile[num671, num670 + 2].slope(0);
				Main.tile[num671, num670 + 2].halfBrick(false);
				Main.tile[num671, num670 + 2].type = 226;
			}
			WorldGen.gen = false;
			Main.AnglerQuestSwap();
		}
		public static bool GrowPalmTree(int i, int y)
		{
			int num = y;
			while (Main.tile[i, num].type == 20)
			{
				num++;
			}
			Tile tile = Main.tile[i, num];
			Tile tile2 = Main.tile[i, num - 1];
			if (!tile.active() || tile.halfBrick() || tile.slope() != 0)
			{
				return false;
			}
			if (tile2.wall != 0 || tile2.liquid != 0)
			{
				return false;
			}
			if (tile.type != 53 && tile.type != 234 && tile.type != 116 && tile.type != 112)
			{
				return false;
			}
			if (!WorldGen.EmptyTileCheck(i - 1, i + 1, num - 30, num - 1, 20))
			{
				return false;
			}
			int num2 = Main.rand.Next(10, 21);
			int num3 = Main.rand.Next(-8, 9);
			num3 *= 2;
			short num4 = 0;
			for (int j = 0; j < num2; j++)
			{
				tile = Main.tile[i, num - 1 - j];
				if (j == 0)
				{
					tile.active(true);
					tile.type = 323;
					tile.frameX = 66;
					tile.frameY = 0;
				}
				else if (j == num2 - 1)
				{
					tile.active(true);
					tile.type = 323;
					tile.frameX = (short)(22 * Main.rand.Next(4, 7));
					tile.frameY = num4;
				}
				else
				{
					if ((int)num4 != num3)
					{
						float num5 = (float)j / (float)num2;
						bool flag = num5 >= 0.25f && ((num5 < 0.5f && Main.rand.Next(13) == 0) || (num5 < 0.7f && Main.rand.Next(9) == 0) || num5 >= 0.95f || Main.rand.Next(5) != 0 || true);
						if (flag)
						{
							short num6 = (short)Math.Sign(num3);
							num4 = (short)(num4 + (short)(num6 * 2));
						}
					}
					tile.active(true);
					tile.type = 323;
					tile.frameX = (short)(22 * Main.rand.Next(0, 3));
					tile.frameY = num4;
				}
			}
			WorldGen.RangeFrame(i - 2, num - num2 - 1, i + 2, num + 1);
			if (Main.netMode == 2)
			{
				NetMessage.SendTileSquare(-1, i, (int)((double)num - (double)num2 * 0.5), num2 + 1);
			}
			return true;
		}
		public static bool GrowEpicTree(int i, int y)
		{
			int num = y;
			while (Main.tile[i, num].type == 20)
			{
				num++;
			}
			if (Main.tile[i, num].active() && !Main.tile[i, num].halfBrick() && Main.tile[i, num].slope() == 0 && Main.tile[i, num].type == 2 && Main.tile[i, num - 1].wall == 0 && Main.tile[i, num - 1].liquid == 0 && ((Main.tile[i - 1, num].active() && (Main.tile[i - 1, num].type == 2 || Main.tile[i - 1, num].type == 23 || Main.tile[i - 1, num].type == 60 || Main.tile[i - 1, num].type == 109)) || (Main.tile[i + 1, num].active() && (Main.tile[i + 1, num].type == 2 || Main.tile[i + 1, num].type == 23 || Main.tile[i + 1, num].type == 60 || Main.tile[i + 1, num].type == 109))))
			{
				int num2 = 2;
				if (WorldGen.EmptyTileCheck(i - num2, i + num2, num - 55, num - 1, 20))
				{
					bool flag = false;
					bool flag2 = false;
					int num3 = WorldGen.genRand.Next(20, 30);
					int num4;
					for (int j = num - num3; j < num; j++)
					{
						Main.tile[i, j].frameNumber((byte)WorldGen.genRand.Next(3));
						Main.tile[i, j].active(true);
						Main.tile[i, j].type = 5;
						num4 = WorldGen.genRand.Next(3);
						int num5 = WorldGen.genRand.Next(10);
						if (j == num - 1 || j == num - num3)
						{
							num5 = 0;
						}
						while (((num5 == 5 || num5 == 7) && flag) || ((num5 == 6 || num5 == 7) && flag2))
						{
							num5 = WorldGen.genRand.Next(10);
						}
						flag = false;
						flag2 = false;
						if (num5 == 5 || num5 == 7)
						{
							flag = true;
						}
						if (num5 == 6 || num5 == 7)
						{
							flag2 = true;
						}
						if (num5 == 1)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 2)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num5 == 3)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 4)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 5)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num5 == 6)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 7)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 110;
							}
						}
						else
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 44;
							}
						}
						if (num5 == 5 || num5 == 7)
						{
							Main.tile[i - 1, j].active(true);
							Main.tile[i - 1, j].type = 5;
							num4 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num4 == 0)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 198;
								}
								if (num4 == 1)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 220;
								}
								if (num4 == 2)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 242;
								}
							}
							else
							{
								if (num4 == 0)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 0;
								}
								if (num4 == 1)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 22;
								}
								if (num4 == 2)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 44;
								}
							}
						}
						if (num5 == 6 || num5 == 7)
						{
							Main.tile[i + 1, j].active(true);
							Main.tile[i + 1, j].type = 5;
							num4 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num4 == 0)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 198;
								}
								if (num4 == 1)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 220;
								}
								if (num4 == 2)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 242;
								}
							}
							else
							{
								if (num4 == 0)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 66;
								}
								if (num4 == 1)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 88;
								}
								if (num4 == 2)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 110;
								}
							}
						}
					}
					int num6 = WorldGen.genRand.Next(3);
					bool flag3 = false;
					bool flag4 = false;
					if (Main.tile[i - 1, num].active() && !Main.tile[i - 1, num].halfBrick() && Main.tile[i - 1, num].slope() == 0 && (Main.tile[i - 1, num].type == 2 || Main.tile[i - 1, num].type == 23 || Main.tile[i - 1, num].type == 60 || Main.tile[i - 1, num].type == 109))
					{
						flag3 = true;
					}
					if (Main.tile[i + 1, num].active() && !Main.tile[i + 1, num].halfBrick() && Main.tile[i + 1, num].slope() == 0 && (Main.tile[i + 1, num].type == 2 || Main.tile[i + 1, num].type == 23 || Main.tile[i + 1, num].type == 60 || Main.tile[i + 1, num].type == 109))
					{
						flag4 = true;
					}
					if (!flag3)
					{
						if (num6 == 0)
						{
							num6 = 2;
						}
						if (num6 == 1)
						{
							num6 = 3;
						}
					}
					if (!flag4)
					{
						if (num6 == 0)
						{
							num6 = 1;
						}
						if (num6 == 2)
						{
							num6 = 3;
						}
					}
					if (flag3 && !flag4)
					{
						num6 = 2;
					}
					if (flag4 && !flag3)
					{
						num6 = 1;
					}
					if (num6 == 0 || num6 == 1)
					{
						Main.tile[i + 1, num - 1].active(true);
						Main.tile[i + 1, num - 1].type = 5;
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 176;
						}
					}
					if (num6 == 0 || num6 == 2)
					{
						Main.tile[i - 1, num - 1].active(true);
						Main.tile[i - 1, num - 1].type = 5;
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 176;
						}
					}
					num4 = WorldGen.genRand.Next(3);
					if (num6 == 0)
					{
						if (num4 == 0)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					else if (num6 == 1)
					{
						if (num4 == 0)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					else if (num6 == 2)
					{
						if (num4 == 0)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					if (WorldGen.genRand.Next(8) != 0)
					{
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i, num - num3].frameX = 22;
							Main.tile[i, num - num3].frameY = 198;
						}
						if (num4 == 1)
						{
							Main.tile[i, num - num3].frameX = 22;
							Main.tile[i, num - num3].frameY = 220;
						}
						if (num4 == 2)
						{
							Main.tile[i, num - num3].frameX = 22;
							Main.tile[i, num - num3].frameY = 242;
						}
					}
					else
					{
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i, num - num3].frameX = 0;
							Main.tile[i, num - num3].frameY = 198;
						}
						if (num4 == 1)
						{
							Main.tile[i, num - num3].frameX = 0;
							Main.tile[i, num - num3].frameY = 220;
						}
						if (num4 == 2)
						{
							Main.tile[i, num - num3].frameX = 0;
							Main.tile[i, num - num3].frameY = 242;
						}
					}
					WorldGen.RangeFrame(i - 2, num - num3 - 1, i + 2, num + 1);
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, i, (int)((double)num - (double)num3 * 0.5), num3 + 1);
					}
					return true;
				}
			}
			return false;
		}
		public static bool Pyramid(int i, int j)
		{
			ushort num = 151;
			int num2 = j - WorldGen.genRand.Next(0, 7);
			int num3 = WorldGen.genRand.Next(9, 13);
			int num4 = 1;
			int num5 = j + WorldGen.genRand.Next(75, 125);
			for (int k = num2; k < num5; k++)
			{
				for (int l = i - num4; l < i + num4 - 1; l++)
				{
					Main.tile[l, k].type = num;
					Main.tile[l, k].active(true);
					Main.tile[l, k].halfBrick(false);
				}
				num4++;
			}
			for (int m = i - num4 - 5; m <= i + num4 + 5; m++)
			{
				for (int n = j - 1; n <= num5 + 1; n++)
				{
					bool flag = true;
					for (int num6 = m - 1; num6 <= m + 1; num6++)
					{
						for (int num7 = n - 1; num7 <= n + 1; num7++)
						{
							if (Main.tile[num6, num7].type != num)
							{
								flag = false;
							}
						}
					}
					if (flag)
					{
						Main.tile[m, n].wall = 34;
						WorldGen.SquareWallFrame(m, n, true);
					}
				}
			}
			int num8 = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num8 = -1;
			}
			int num9 = i - num3 * num8;
			int num10 = j + num3;
			int num11 = WorldGen.genRand.Next(5, 8);
			bool flag2 = true;
			int num12 = WorldGen.genRand.Next(20, 30);
			while (flag2)
			{
				flag2 = false;
				bool flag3 = false;
				for (int num13 = num10; num13 <= num10 + num11; num13++)
				{
					int num14 = num9;
					if (Main.tile[num14, num13 - 1].type == 53)
					{
						flag3 = true;
					}
					if (Main.tile[num14, num13].type == num)
					{
						Main.tile[num14, num13 + 1].wall = 34;
						Main.tile[num14 + num8, num13].wall = 34;
						Main.tile[num14, num13].active(false);
						flag2 = true;
					}
					if (flag3)
					{
						Main.tile[num14, num13].type = 53;
						Main.tile[num14, num13].active(true);
						Main.tile[num14, num13].halfBrick(false);
					}
				}
				num9 -= num8;
			}
			num9 = i - num3 * num8;
			bool flag4 = true;
			bool flag5 = false;
			flag2 = true;
			while (flag2)
			{
				for (int num15 = num10; num15 <= num10 + num11; num15++)
				{
					int num16 = num9;
					Main.tile[num16, num15].active(false);
				}
				num9 += num8;
				num10++;
				num12--;
				if (num10 >= num5 - num11 * 2)
				{
					num12 = 10;
				}
				if (num12 <= 0)
				{
					bool flag6 = false;
					if (!flag4 && !flag5)
					{
						flag5 = true;
						flag6 = true;
						int num17 = WorldGen.genRand.Next(7, 13);
						int num18 = WorldGen.genRand.Next(23, 28);
						int num19 = num18;
						int num20 = num9;
						while (num18 > 0)
						{
							for (int num21 = num10 - num17 + num11; num21 <= num10 + num11; num21++)
							{
								if (num18 == num19 || num18 == 1)
								{
									if (num21 >= num10 - num17 + num11 + 2)
									{
										Main.tile[num9, num21].active(false);
									}
								}
								else if (num18 == num19 - 1 || num18 == 2 || num18 == num19 - 2 || num18 == 3)
								{
									if (num21 >= num10 - num17 + num11 + 1)
									{
										Main.tile[num9, num21].active(false);
									}
								}
								else
								{
									Main.tile[num9, num21].active(false);
								}
							}
							num18--;
							num9 += num8;
						}
						int num22 = num9 - num8;
						int num23 = num22;
						int num24 = num20;
						if (num22 > num20)
						{
							num23 = num20;
							num24 = num22;
						}
						int num25 = WorldGen.genRand.Next(3);
						if (num25 == 0)
						{
							num25 = 857;
						}
						else if (num25 == 1)
						{
							num25 = 848;
						}
						else if (num25 == 2)
						{
							num25 = 934;
						}
						WorldGen.AddBuriedChest((num23 + num24) / 2, num10, num25, false, 1);
						int num26 = WorldGen.genRand.Next(1, 10);
						for (int num27 = 0; num27 < num26; num27++)
						{
							int i2 = WorldGen.genRand.Next(num23, num24);
							int j2 = num10 + num11;
							WorldGen.PlaceSmallPile(i2, j2, WorldGen.genRand.Next(16, 19), 1, 185);
						}
						WorldGen.PlaceTile(num23 + 2, num10 - num17 + num11 + 1, 91, true, false, -1, WorldGen.genRand.Next(4, 7));
						WorldGen.PlaceTile(num23 + 3, num10 - num17 + num11, 91, true, false, -1, WorldGen.genRand.Next(4, 7));
						WorldGen.PlaceTile(num24 - 2, num10 - num17 + num11 + 1, 91, true, false, -1, WorldGen.genRand.Next(4, 7));
						WorldGen.PlaceTile(num24 - 3, num10 - num17 + num11, 91, true, false, -1, WorldGen.genRand.Next(4, 7));
						for (int num28 = num23; num28 <= num24; num28++)
						{
							WorldGen.PlacePot(num28, num10 + num11, 28, WorldGen.genRand.Next(25, 28));
						}
					}
					if (flag4)
					{
						flag4 = false;
						num8 *= -1;
						num12 = WorldGen.genRand.Next(15, 20);
					}
					else if (flag6)
					{
						num12 = WorldGen.genRand.Next(10, 15);
					}
					else
					{
						num8 *= -1;
						num12 = WorldGen.genRand.Next(20, 40);
					}
				}
				if (num10 >= num5 - num11)
				{
					flag2 = false;
				}
			}
			int num29 = WorldGen.genRand.Next(100, 200);
			int num30 = WorldGen.genRand.Next(500, 800);
			flag2 = true;
			int num31 = num11;
			num12 = WorldGen.genRand.Next(10, 50);
			if (num8 == 1)
			{
				num9 -= num31;
			}
			int num32 = WorldGen.genRand.Next(5, 10);
			while (flag2)
			{
				num29--;
				num30--;
				num12--;
				for (int num33 = num9 - num32 - WorldGen.genRand.Next(0, 2); num33 <= num9 + num31 + num32 + WorldGen.genRand.Next(0, 2); num33++)
				{
					int num34 = num10;
					if (num33 >= num9 && num33 <= num9 + num31)
					{
						Main.tile[num33, num34].active(false);
					}
					else
					{
						Main.tile[num33, num34].type = num;
						Main.tile[num33, num34].active(true);
						Main.tile[num33, num34].halfBrick(false);
					}
					if (num33 >= num9 - 1 && num33 <= num9 + 1 + num31)
					{
						Main.tile[num33, num34].wall = 34;
					}
				}
				num10++;
				num9 += num8;
				if (num29 <= 0)
				{
					flag2 = false;
					for (int num35 = num9 + 1; num35 <= num9 + num31 - 1; num35++)
					{
						if (Main.tile[num35, num10].active())
						{
							flag2 = true;
						}
					}
				}
				if (num12 < 0)
				{
					num12 = WorldGen.genRand.Next(10, 50);
					num8 *= -1;
				}
				if (num30 <= 0)
				{
					flag2 = false;
				}
			}
			return true;
		}
		public static bool GrowLivingTree(int i, int j)
		{
			int num = 0;
			int[] array = new int[1000];
			int[] array2 = new int[1000];
			int[] array3 = new int[1000];
			int[] array4 = new int[1000];
			int num2 = 0;
			int[] array5 = new int[2000];
			int[] array6 = new int[2000];
			bool[] array7 = new bool[2000];
			if (!WorldGen.SolidTile(i, j + 1))
			{
				return false;
			}
			if (Main.tile[i, j].active())
			{
				return false;
			}
			int num3 = i - WorldGen.genRand.Next(1, 4);
			int num4 = i + WorldGen.genRand.Next(1, 4);
			if (j < 150)
			{
				return false;
			}
			int num5 = i - 50;
			int num6 = i + 50;
			for (int k = num5; k <= num6; k++)
			{
				for (int l = 5; l < j - 5; l++)
				{
					if (Main.tile[k, l].active())
					{
						return false;
					}
				}
			}
			int num7 = num3;
			int num8 = num4;
			int num9 = num3;
			int num10 = num4;
			int num11 = num4 - num3;
			bool flag = true;
			int num12 = WorldGen.genRand.Next(-10, -5);
			int num13 = WorldGen.genRand.Next(2);
			int num14 = j;
			while (flag)
			{
				num12++;
				if (num12 > WorldGen.genRand.Next(5, 30))
				{
					num12 = 0;
					array2[num] = num14 + WorldGen.genRand.Next(5);
					if (WorldGen.genRand.Next(5) == 0)
					{
						if (num13 == 0)
						{
							num13 = 1;
						}
						else
						{
							num13 = 0;
						}
					}
					if (num13 == 0)
					{
						array3[num] = -1;
						array[num] = num3;
						array4[num] = num4 - num3;
						if (WorldGen.genRand.Next(2) == 0)
						{
							num3++;
						}
						num7++;
						num13 = 1;
					}
					else
					{
						array3[num] = 1;
						array[num] = num4;
						array4[num] = num4 - num3;
						if (WorldGen.genRand.Next(2) == 0)
						{
							num4--;
						}
						num8--;
						num13 = 0;
					}
					if (num7 == num8)
					{
						flag = false;
					}
					num++;
				}
				for (int m = num3; m <= num4; m++)
				{
					Main.tile[m, num14].type = 191;
					Main.tile[m, num14].active(true);
					Main.tile[m, num14].halfBrick(false);
				}
				num14--;
			}
			for (int n = 0; n < num; n++)
			{
				int num15 = array[n] + array3[n];
				int num16 = array2[n];
				int num17 = (int)((float)array4[n] * (1f + (float)WorldGen.genRand.Next(20, 30) * 0.1f));
				Main.tile[num15, num16 + 1].type = 191;
				Main.tile[num15, num16 + 1].active(true);
				Main.tile[num15, num16 + 1].halfBrick(false);
				int num18 = WorldGen.genRand.Next(3, 5);
				while (num17 > 0)
				{
					num17--;
					Main.tile[num15, num16].type = 191;
					Main.tile[num15, num16].active(true);
					Main.tile[num15, num16].halfBrick(false);
					if (WorldGen.genRand.Next(10) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							num16--;
						}
						else
						{
							num16++;
						}
					}
					else
					{
						num15 += array3[n];
					}
					if (num18 > 0)
					{
						num18--;
					}
					else if (WorldGen.genRand.Next(2) == 0)
					{
						num18 = WorldGen.genRand.Next(2, 5);
						if (WorldGen.genRand.Next(2) == 0)
						{
							Main.tile[num15, num16].type = 191;
							Main.tile[num15, num16].active(true);
							Main.tile[num15, num16].halfBrick(false);
							Main.tile[num15, num16 - 1].type = 191;
							Main.tile[num15, num16 - 1].active(true);
							Main.tile[num15, num16 - 1].halfBrick(false);
							array5[num2] = num15;
							array6[num2] = num16;
							num2++;
						}
						else
						{
							Main.tile[num15, num16].type = 191;
							Main.tile[num15, num16].active(true);
							Main.tile[num15, num16].halfBrick(false);
							Main.tile[num15, num16 + 1].type = 191;
							Main.tile[num15, num16 + 1].active(true);
							Main.tile[num15, num16 + 1].halfBrick(false);
							array5[num2] = num15;
							array6[num2] = num16;
							num2++;
						}
					}
					if (num17 == 0)
					{
						array5[num2] = num15;
						array6[num2] = num16;
						num2++;
					}
				}
			}
			int num19 = (num3 + num4) / 2;
			int num20 = num14;
			int num21 = WorldGen.genRand.Next(num11 * 3, num11 * 5);
			int num22 = 0;
			int num23 = 0;
			while (num21 > 0)
			{
				Main.tile[num19, num20].type = 191;
				Main.tile[num19, num20].active(true);
				Main.tile[num19, num20].halfBrick(false);
				if (num22 > 0)
				{
					num22--;
				}
				if (num23 > 0)
				{
					num23--;
				}
				for (int num24 = -1; num24 < 2; num24++)
				{
					if (num24 != 0 && ((num24 < 0 && num22 == 0) || (num24 > 0 && num23 == 0)) && WorldGen.genRand.Next(2) == 0)
					{
						int num25 = num19;
						int num26 = num20;
						int num27 = WorldGen.genRand.Next(num11, num11 * 3);
						if (num24 < 0)
						{
							num22 = WorldGen.genRand.Next(3, 5);
						}
						if (num24 > 0)
						{
							num23 = WorldGen.genRand.Next(3, 5);
						}
						int num28 = 0;
						while (num27 > 0)
						{
							num27--;
							num25 += num24;
							Main.tile[num25, num26].type = 191;
							Main.tile[num25, num26].active(true);
							Main.tile[num25, num26].halfBrick(false);
							if (num27 == 0)
							{
								array5[num2] = num25;
								array6[num2] = num26;
								array7[num2] = true;
								num2++;
							}
							if (WorldGen.genRand.Next(5) == 0)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									num26--;
								}
								else
								{
									num26++;
								}
								Main.tile[num25, num26].type = 191;
								Main.tile[num25, num26].active(true);
								Main.tile[num25, num26].halfBrick(false);
							}
							if (num28 > 0)
							{
								num28--;
							}
							else if (WorldGen.genRand.Next(3) == 0)
							{
								num28 = WorldGen.genRand.Next(2, 4);
								int num29 = num25;
								int num30 = num26;
								if (WorldGen.genRand.Next(2) == 0)
								{
									num30--;
								}
								else
								{
									num30++;
								}
								Main.tile[num29, num30].type = 191;
								Main.tile[num29, num30].active(true);
								Main.tile[num29, num30].halfBrick(false);
								array5[num2] = num29;
								array6[num2] = num30;
								array7[num2] = true;
								num2++;
							}
						}
					}
				}
				array5[num2] = num19;
				array6[num2] = num20;
				num2++;
				if (WorldGen.genRand.Next(4) == 0)
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num19--;
					}
					else
					{
						num19++;
					}
					Main.tile[num19, num20].type = 191;
					Main.tile[num19, num20].active(true);
					Main.tile[num19, num20].halfBrick(false);
				}
				num20--;
				num21--;
			}
			for (int num31 = num9; num31 <= num10; num31++)
			{
				int num32 = WorldGen.genRand.Next(1, 6);
				int num33 = j + 1;
				while (num32 > 0)
				{
					if (WorldGen.SolidTile(num31, num33))
					{
						num32--;
					}
					Main.tile[num31, num33].type = 191;
					Main.tile[num31, num33].active(true);
					Main.tile[num31, num33].halfBrick(false);
					num33++;
				}
				int num34 = num33;
				for (int num35 = 0; num35 < 2; num35++)
				{
					num33 = num34;
					int num36 = (num9 + num10) / 2;
					int num37 = 1;
					int num38;
					if (num31 < num36)
					{
						num38 = -1;
					}
					else
					{
						num38 = 1;
					}
					if (num31 == num36 || (num11 > 6 && (num31 == num36 - 1 || num31 == num36 + 1)))
					{
						num38 = 0;
					}
					int num39 = num38;
					int num40 = num31;
					num32 = WorldGen.genRand.Next((int)((double)num11 * 2.5), num11 * 4);
					while (num32 > 0)
					{
						num32--;
						num40 += num38;
						Main.tile[num40, num33].type = 191;
						Main.tile[num40, num33].active(true);
						Main.tile[num40, num33].halfBrick(false);
						num33 += num37;
						Main.tile[num40, num33].type = 191;
						Main.tile[num40, num33].active(true);
						Main.tile[num40, num33].halfBrick(false);
						if (!Main.tile[num40, num33 + 1].active())
						{
							num38 = 0;
							num37 = 1;
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							if (num39 < 0)
							{
								if (num38 == 0)
								{
									num38 = -1;
								}
								else
								{
									num38 = 0;
								}
							}
							else if (num39 > 0)
							{
								if (num38 == 0)
								{
									num38 = 1;
								}
								else
								{
									num38 = 0;
								}
							}
							else
							{
								num38 = WorldGen.genRand.Next(-1, 2);
							}
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							if (num37 == 0)
							{
								num37 = 1;
							}
							else
							{
								num37 = 0;
							}
						}
					}
				}
			}
			for (int num41 = 0; num41 < num2; num41++)
			{
				int num42 = WorldGen.genRand.Next(5, 8);
				num42 = (int)((float)num42 * (1f + (float)num11 * 0.05f));
				if (array7[num41])
				{
					num42 = WorldGen.genRand.Next(7, 13);
				}
				int num43 = array5[num41] - num42;
				int num44 = array5[num41] + num42;
				int num45 = array6[num41] - num42;
				int num46 = array6[num41] + num42;
				float num47 = 2f - (float)WorldGen.genRand.Next(5) * 0.1f;
				for (int num48 = num43; num48 <= num44; num48++)
				{
					for (int num49 = num45; num49 <= num46; num49++)
					{
						if (Main.tile[num48, num49].type != 191 && (float)Math.Abs(array5[num41] - num48) + (float)Math.Abs(array6[num41] - num49) * num47 < (float)num42)
						{
							Main.tile[num48, num49].type = 192;
							Main.tile[num48, num49].active(true);
							Main.tile[num48, num49].halfBrick(false);
						}
					}
				}
			}
			if (num11 >= 4 && WorldGen.genRand.Next(3) != 0)
			{
				bool flag2 = false;
				int num50 = num9;
				int num51 = num10;
				int num52 = j - 5;
				int num53 = 50;
				int num54 = WorldGen.genRand.Next(400, 700);
				int num55 = 1;
				bool flag3 = true;
				while (num54 > 0)
				{
					num52++;
					num54--;
					num53--;
					int num56 = (num9 + num10) / 2;
					int num57 = 0;
					if (num52 > j && num11 == 4)
					{
						num57 = 1;
					}
					for (int num58 = num9 - num57; num58 <= num10 + num57; num58++)
					{
						if (num58 > num56 - 2 && num58 <= num56 + 1)
						{
							if (Main.tile[num58, num52].type != 19)
							{
								Main.tile[num58, num52].active(false);
							}
							Main.tile[num58, num52].wall = 78;
							if (Main.tile[num58 - 1, num52].wall > 0 || (double)num52 >= Main.worldSurface)
							{
								Main.tile[num58 - 1, num52].wall = 78;
							}
							if (Main.tile[num58 + 1, num52].wall > 0 || (double)num52 >= Main.worldSurface)
							{
								Main.tile[num58 + 1, num52].wall = 78;
							}
						}
						else
						{
							Main.tile[num58, num52].type = 191;
							Main.tile[num58, num52].active(true);
							Main.tile[num58, num52].halfBrick(false);
						}
					}
					num55++;
					if (num55 >= 6)
					{
						num55 = 0;
						int num59 = WorldGen.genRand.Next(3);
						if (num59 == 0)
						{
							num59 = -1;
						}
						if (flag3)
						{
							num59 = 2;
						}
						if (num59 == 2)
						{
							flag3 = false;
							for (int num60 = num9; num60 <= num10; num60++)
							{
								if (num60 > num56 - 2 && num60 <= num56 + 1)
								{
									Main.tile[num60, num52 + 1].active(false);
									WorldGen.PlaceTile(num60, num52 + 1, 19, true, false, -1, 0);
								}
							}
						}
						else
						{
							num9 += num59;
							num10 += num59;
						}
						if (num53 <= 0 && !flag2)
						{
							flag2 = true;
							int num61 = WorldGen.genRand.Next(2);
							if (num61 == 0)
							{
								num61 = -1;
							}
							int num62 = num52 - 2;
							int num63 = num52;
							int num64 = (num9 + num10) / 2;
							if (num61 < 0)
							{
								num64--;
							}
							if (num61 > 0)
							{
								num64++;
							}
							int num65 = WorldGen.genRand.Next(15, 30);
							int num66 = num64 + num65;
							if (num61 < 0)
							{
								num66 = num64;
								num64 -= num65;
							}
							WorldGen.dMinX = num64;
							WorldGen.dMaxX = num66;
							if (num61 < 0)
							{
								WorldGen.dMinX -= 40;
							}
							else
							{
								WorldGen.dMaxX += 40;
							}
							bool flag4 = false;
							for (int num67 = num64; num67 < num66; num67++)
							{
								for (int num68 = num52 - 20; num68 < num52 + 10; num68++)
								{
									if (Main.tile[num67, num68].wall == 0 && !Main.tile[num67, num68].active() && (double)num68 < Main.worldSurface)
									{
										flag4 = true;
									}
								}
							}
							if (!flag4)
							{
								for (int num69 = num64; num69 <= num66; num69++)
								{
									for (int num70 = num62 - 2; num70 <= num63 + 2; num70++)
									{
										if (Main.tile[num69, num70].wall != 78 && Main.tile[num69, num70].type != 19)
										{
											Main.tile[num69, num70].active(true);
											Main.tile[num69, num70].type = 191;
											Main.tile[num69, num70].halfBrick(false);
										}
										if (num70 >= num62 && num70 <= num63)
										{
											Main.tile[num69, num70].liquid = 0;
											Main.tile[num69, num70].wall = 78;
											Main.tile[num69, num70].active(false);
										}
									}
								}
								int i2 = (num9 + num10) / 2 + 3 * num61;
								int j2 = num52;
								WorldGen.PlaceTile(i2, j2, 10, true, false, -1, 7);
								int num71 = WorldGen.genRand.Next(5, 9);
								int num72 = WorldGen.genRand.Next(4, 6);
								if (num61 < 0)
								{
									num66 = num64 + num71;
									num64 -= num71;
								}
								else
								{
									num64 = num66 - num71;
									num66 += num71;
								}
								num62 = num63 - num72;
								for (int num73 = num64 - 2; num73 <= num66 + 2; num73++)
								{
									for (int num74 = num62 - 2; num74 <= num63 + 2; num74++)
									{
										if (Main.tile[num73, num74].wall != 78 && Main.tile[num73, num74].type != 19)
										{
											Main.tile[num73, num74].active(true);
											Main.tile[num73, num74].type = 191;
											Main.tile[num73, num74].halfBrick(false);
										}
										if (num74 >= num62 && num74 <= num63 && num73 >= num64 && num73 <= num66)
										{
											Main.tile[num73, num74].liquid = 0;
											Main.tile[num73, num74].wall = 78;
											Main.tile[num73, num74].active(false);
										}
									}
								}
								i2 = num64 - 2;
								if (num61 < 0)
								{
									i2 = num66 + 2;
								}
								WorldGen.PlaceTile(i2, j2, 10, true, false, -1, 7);
								int num75 = num66;
								if (num61 < 0)
								{
									num75 = num64;
								}
								WorldGen.PlaceTile(num75, num52, 15, true, false, -1, 5);
								if (num61 < 0)
								{
									Tile expr_115A = Main.tile[num75, num52 - 1];
									expr_115A.frameX = (short)(expr_115A.frameX + 18);
									Tile expr_1177 = Main.tile[num75, num52];
									expr_1177.frameX = (short)(expr_1177.frameX + 18);
								}
								num75 = num66 - 2;
								if (num61 < 0)
								{
									num75 = num64 + 2;
								}
								WorldGen.PlaceTile(num75, num52, 14, true, false, -1, 6);
								num75 = num66 - 4;
								if (num61 < 0)
								{
									num75 = num64 + 4;
								}
								WorldGen.PlaceTile(num75, num52, 15, true, false, -1, 5);
								if (num61 > 0)
								{
									Tile expr_11DD = Main.tile[num75, num52 - 1];
									expr_11DD.frameX = (short)(expr_11DD.frameX + 18);
									Tile expr_11FA = Main.tile[num75, num52];
									expr_11FA.frameX = (short)(expr_11FA.frameX + 18);
								}
								num75 = num66 - 7;
								if (num61 < 0)
								{
									num75 = num64 + 8;
								}
								int contain;
								if (WorldGen.genRand.Next(2) == 0)
								{
									contain = 832;
								}
								else
								{
									contain = 933;
								}
								WorldGen.AddBuriedChest(num75, num52, contain, false, 12);
							}
						}
					}
					if (num53 <= 0)
					{
						bool flag5 = true;
						for (int num76 = num9; num76 <= num10; num76++)
						{
							for (int num77 = num52 + 1; num77 <= num52 + 4; num77++)
							{
								if (WorldGen.SolidTile(num76, num77))
								{
									flag5 = false;
								}
							}
						}
						if (flag5)
						{
							num54 = 0;
						}
					}
				}
				num9 = num50;
				num10 = num51;
				int num78 = (num9 + num10) / 2;
				if (WorldGen.genRand.Next(2) == 0)
				{
					num10 = num78;
				}
				else
				{
					num9 = num78;
				}
				for (int num79 = num9; num79 <= num10; num79++)
				{
					for (int num80 = j - 3; num80 <= j; num80++)
					{
						Main.tile[num79, num80].active(false);
						bool flag6 = true;
						for (int num81 = num79 - 1; num81 <= num79 + 1; num81++)
						{
							for (int num82 = num80 - 1; num82 <= num80 + 1; num82++)
							{
								if (!Main.tile[num81, num82].active() && Main.tile[num81, num82].wall == 0)
								{
									flag6 = false;
								}
							}
						}
						if (flag6)
						{
							Main.tile[num79, num80].wall = 78;
						}
					}
				}
			}
			return true;
		}
		public static void GrowTree(int i, int y)
		{
			int num = y;
			while (Main.tile[i, num].type == 20)
			{
				num++;
			}
			if ((Main.tile[i - 1, num - 1].liquid != 0 || Main.tile[i - 1, num - 1].liquid != 0 || Main.tile[i + 1, num - 1].liquid != 0) && Main.tile[i, num].type != 60)
			{
				return;
			}
			if (Main.tile[i, num].nactive() && !Main.tile[i, num].halfBrick() && Main.tile[i, num].slope() == 0 && (Main.tile[i, num].type == 2 || Main.tile[i, num].type == 23 || Main.tile[i, num].type == 60 || Main.tile[i, num].type == 109 || Main.tile[i, num].type == 147 || Main.tile[i, num].type == 199 || Main.tile[i, num].type == 70) && (Main.tile[i, num - 1].wall == 0 || Main.tile[i, num - 1].wall == 106 || Main.tile[i, num - 1].wall == 107 || (Main.tile[i, num - 1].wall >= 138 && Main.tile[i, num - 1].wall <= 141) || Main.tile[i, num - 1].wall == 145 || Main.tile[i, num - 1].wall == 150 || Main.tile[i, num - 1].wall == 152) && ((Main.tile[i - 1, num].active() && (Main.tile[i - 1, num].type == 2 || Main.tile[i - 1, num].type == 23 || Main.tile[i - 1, num].type == 60 || Main.tile[i - 1, num].type == 109 || Main.tile[i - 1, num].type == 147 || Main.tile[i - 1, num].type == 199 || Main.tile[i - 1, num].type == 70)) || (Main.tile[i + 1, num].active() && (Main.tile[i + 1, num].type == 2 || Main.tile[i + 1, num].type == 23 || Main.tile[i + 1, num].type == 60 || Main.tile[i + 1, num].type == 109 || Main.tile[i + 1, num].type == 147 || Main.tile[i + 1, num].type == 199 || Main.tile[i + 1, num].type == 70))))
			{
				int num2 = 2;
				int num3 = 16;
				if (Main.tile[i, num].type == 60)
				{
					num3 += 5;
				}
				if (WorldGen.EmptyTileCheck(i - num2, i + num2, num - num3, num - 1, 20))
				{
					bool flag = false;
					bool flag2 = false;
					int num4 = WorldGen.genRand.Next(5, num3 + 1);
					int num5;
					for (int j = num - num4; j < num; j++)
					{
						Main.tile[i, j].frameNumber((byte)WorldGen.genRand.Next(3));
						Main.tile[i, j].active(true);
						Main.tile[i, j].type = 5;
						num5 = WorldGen.genRand.Next(3);
						int num6 = WorldGen.genRand.Next(10);
						if (j == num - 1 || j == num - num4)
						{
							num6 = 0;
						}
						while (((num6 == 5 || num6 == 7) && flag) || ((num6 == 6 || num6 == 7) && flag2))
						{
							num6 = WorldGen.genRand.Next(10);
						}
						flag = false;
						flag2 = false;
						if (num6 == 5 || num6 == 7)
						{
							flag = true;
						}
						if (num6 == 6 || num6 == 7)
						{
							flag2 = true;
						}
						if (num6 == 1)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 66;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 88;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num6 == 2)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 0;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 22;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num6 == 3)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 66;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 88;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num6 == 4)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 66;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 88;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num6 == 5)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 0;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 22;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num6 == 6)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 66;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 88;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num6 == 7)
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 66;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 88;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 110;
							}
						}
						else
						{
							if (num5 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 0;
							}
							if (num5 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 22;
							}
							if (num5 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 44;
							}
						}
						if (num6 == 5 || num6 == 7)
						{
							Main.tile[i - 1, j].active(true);
							Main.tile[i - 1, j].type = 5;
							num5 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num5 == 0)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 198;
								}
								if (num5 == 1)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 220;
								}
								if (num5 == 2)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 242;
								}
							}
							else
							{
								if (num5 == 0)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 0;
								}
								if (num5 == 1)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 22;
								}
								if (num5 == 2)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 44;
								}
							}
						}
						if (num6 == 6 || num6 == 7)
						{
							Main.tile[i + 1, j].active(true);
							Main.tile[i + 1, j].type = 5;
							num5 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num5 == 0)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 198;
								}
								if (num5 == 1)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 220;
								}
								if (num5 == 2)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 242;
								}
							}
							else
							{
								if (num5 == 0)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 66;
								}
								if (num5 == 1)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 88;
								}
								if (num5 == 2)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 110;
								}
							}
						}
					}
					int num7 = WorldGen.genRand.Next(3);
					bool flag3 = false;
					bool flag4 = false;
					if (Main.tile[i - 1, num].nactive() && !Main.tile[i - 1, num].halfBrick() && Main.tile[i - 1, num].slope() == 0 && (Main.tile[i - 1, num].type == 2 || Main.tile[i - 1, num].type == 23 || Main.tile[i - 1, num].type == 60 || Main.tile[i - 1, num].type == 109 || Main.tile[i - 1, num].type == 147 || Main.tile[i - 1, num].type == 199))
					{
						flag3 = true;
					}
					if (Main.tile[i + 1, num].nactive() && !Main.tile[i + 1, num].halfBrick() && Main.tile[i + 1, num].slope() == 0 && (Main.tile[i + 1, num].type == 2 || Main.tile[i + 1, num].type == 23 || Main.tile[i + 1, num].type == 60 || Main.tile[i + 1, num].type == 109 || Main.tile[i + 1, num].type == 147 || Main.tile[i + 1, num].type == 199))
					{
						flag4 = true;
					}
					if (!flag3)
					{
						if (num7 == 0)
						{
							num7 = 2;
						}
						if (num7 == 1)
						{
							num7 = 3;
						}
					}
					if (!flag4)
					{
						if (num7 == 0)
						{
							num7 = 1;
						}
						if (num7 == 2)
						{
							num7 = 3;
						}
					}
					if (flag3 && !flag4)
					{
						num7 = 2;
					}
					if (flag4 && !flag3)
					{
						num7 = 1;
					}
					if (num7 == 0 || num7 == 1)
					{
						Main.tile[i + 1, num - 1].active(true);
						Main.tile[i + 1, num - 1].type = 5;
						num5 = WorldGen.genRand.Next(3);
						if (num5 == 0)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 132;
						}
						if (num5 == 1)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 154;
						}
						if (num5 == 2)
						{
							Main.tile[i + 1, num - 1].frameX = 22;
							Main.tile[i + 1, num - 1].frameY = 176;
						}
					}
					if (num7 == 0 || num7 == 2)
					{
						Main.tile[i - 1, num - 1].active(true);
						Main.tile[i - 1, num - 1].type = 5;
						num5 = WorldGen.genRand.Next(3);
						if (num5 == 0)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 132;
						}
						if (num5 == 1)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 154;
						}
						if (num5 == 2)
						{
							Main.tile[i - 1, num - 1].frameX = 44;
							Main.tile[i - 1, num - 1].frameY = 176;
						}
					}
					num5 = WorldGen.genRand.Next(3);
					if (num7 == 0)
					{
						if (num5 == 0)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num5 == 1)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num5 == 2)
						{
							Main.tile[i, num - 1].frameX = 88;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					else if (num7 == 1)
					{
						if (num5 == 0)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num5 == 1)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num5 == 2)
						{
							Main.tile[i, num - 1].frameX = 0;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					else if (num7 == 2)
					{
						if (num5 == 0)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 132;
						}
						if (num5 == 1)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 154;
						}
						if (num5 == 2)
						{
							Main.tile[i, num - 1].frameX = 66;
							Main.tile[i, num - 1].frameY = 176;
						}
					}
					if (WorldGen.genRand.Next(8) != 0)
					{
						num5 = WorldGen.genRand.Next(3);
						if (num5 == 0)
						{
							Main.tile[i, num - num4].frameX = 22;
							Main.tile[i, num - num4].frameY = 198;
						}
						if (num5 == 1)
						{
							Main.tile[i, num - num4].frameX = 22;
							Main.tile[i, num - num4].frameY = 220;
						}
						if (num5 == 2)
						{
							Main.tile[i, num - num4].frameX = 22;
							Main.tile[i, num - num4].frameY = 242;
						}
					}
					else
					{
						num5 = WorldGen.genRand.Next(3);
						if (num5 == 0)
						{
							Main.tile[i, num - num4].frameX = 0;
							Main.tile[i, num - num4].frameY = 198;
						}
						if (num5 == 1)
						{
							Main.tile[i, num - num4].frameX = 0;
							Main.tile[i, num - num4].frameY = 220;
						}
						if (num5 == 2)
						{
							Main.tile[i, num - num4].frameX = 0;
							Main.tile[i, num - num4].frameY = 242;
						}
					}
					WorldGen.RangeFrame(i - 2, num - num4 - 1, i + 2, num + 1);
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, i, (int)((double)num - (double)num4 * 0.5), num4 + 1);
					}
				}
			}
		}
		public static void GrowUndergroundTree(int i, int y)
		{
			if (Main.tile[i, y].type != 60)
			{
				return;
			}
			if (Main.tile[i, y].nactive() && !Main.tile[i, y].halfBrick() && Main.tile[i, y].slope() == 0 && Main.tile[i, y].type == 60 && ((Main.tile[i - 1, y].active() && Main.tile[i - 1, y].type == 60) || (Main.tile[i + 1, y].active() && Main.tile[i + 1, y].type == 60)))
			{
				int num = 1;
				int num2 = WorldGen.genRand.Next(5, 15);
				int num3 = num2 + 2;
				if (Main.tile[i, y].type == 60)
				{
					num3 += 5;
				}
				if (WorldGen.EmptyTileCheck(i - num, i + num, y - num3, y - 1, 20))
				{
					bool flag = false;
					bool flag2 = false;
					int num4;
					for (int j = y - num2; j < y; j++)
					{
						Main.tile[i, j].frameNumber((byte)WorldGen.genRand.Next(3));
						Main.tile[i, j].active(true);
						Main.tile[i, j].type = 5;
						num4 = WorldGen.genRand.Next(3);
						int num5 = WorldGen.genRand.Next(10);
						if (j == y - 1 || j == y - num2)
						{
							num5 = 0;
						}
						while (((num5 == 5 || num5 == 7) && flag) || ((num5 == 6 || num5 == 7) && flag2))
						{
							num5 = WorldGen.genRand.Next(10);
						}
						flag = false;
						flag2 = false;
						if (num5 == 5 || num5 == 7)
						{
							flag = true;
						}
						if (num5 == 6 || num5 == 7)
						{
							flag2 = true;
						}
						if (num5 == 1)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 2)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num5 == 3)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 44;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 4)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 22;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 5)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 88;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num5 == 6)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 66;
								Main.tile[i, j].frameY = 110;
							}
						}
						else if (num5 == 7)
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 66;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 88;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 110;
								Main.tile[i, j].frameY = 110;
							}
						}
						else
						{
							if (num4 == 0)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 0;
							}
							if (num4 == 1)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 22;
							}
							if (num4 == 2)
							{
								Main.tile[i, j].frameX = 0;
								Main.tile[i, j].frameY = 44;
							}
						}
						if (num5 == 5 || num5 == 7)
						{
							Main.tile[i - 1, j].active(true);
							Main.tile[i - 1, j].type = 5;
							num4 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num4 == 0)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 198;
								}
								if (num4 == 1)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 220;
								}
								if (num4 == 2)
								{
									Main.tile[i - 1, j].frameX = 44;
									Main.tile[i - 1, j].frameY = 242;
								}
							}
							else
							{
								if (num4 == 0)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 0;
								}
								if (num4 == 1)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 22;
								}
								if (num4 == 2)
								{
									Main.tile[i - 1, j].frameX = 66;
									Main.tile[i - 1, j].frameY = 44;
								}
							}
						}
						if (num5 == 6 || num5 == 7)
						{
							Main.tile[i + 1, j].active(true);
							Main.tile[i + 1, j].type = 5;
							num4 = WorldGen.genRand.Next(3);
							if (WorldGen.genRand.Next(3) < 2)
							{
								if (num4 == 0)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 198;
								}
								if (num4 == 1)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 220;
								}
								if (num4 == 2)
								{
									Main.tile[i + 1, j].frameX = 66;
									Main.tile[i + 1, j].frameY = 242;
								}
							}
							else
							{
								if (num4 == 0)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 66;
								}
								if (num4 == 1)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 88;
								}
								if (num4 == 2)
								{
									Main.tile[i + 1, j].frameX = 88;
									Main.tile[i + 1, j].frameY = 110;
								}
							}
						}
					}
					int num6 = WorldGen.genRand.Next(3);
					bool flag3 = false;
					bool flag4 = false;
					if (Main.tile[i - 1, y].nactive() && !Main.tile[i - 1, y].halfBrick() && Main.tile[i - 1, y].slope() == 0 && (Main.tile[i - 1, y].type == 2 || Main.tile[i - 1, y].type == 23 || Main.tile[i - 1, y].type == 60 || Main.tile[i - 1, y].type == 109 || Main.tile[i - 1, y].type == 147))
					{
						flag3 = true;
					}
					if (Main.tile[i + 1, y].nactive() && !Main.tile[i + 1, y].halfBrick() && Main.tile[i + 1, y].slope() == 0 && (Main.tile[i + 1, y].type == 2 || Main.tile[i + 1, y].type == 23 || Main.tile[i + 1, y].type == 60 || Main.tile[i + 1, y].type == 109 || Main.tile[i + 1, y].type == 147))
					{
						flag4 = true;
					}
					if (!flag3)
					{
						if (num6 == 0)
						{
							num6 = 2;
						}
						if (num6 == 1)
						{
							num6 = 3;
						}
					}
					if (!flag4)
					{
						if (num6 == 0)
						{
							num6 = 1;
						}
						if (num6 == 2)
						{
							num6 = 3;
						}
					}
					if (flag3 && !flag4)
					{
						num6 = 2;
					}
					if (flag4 && !flag3)
					{
						num6 = 1;
					}
					if (num6 == 0 || num6 == 1)
					{
						Main.tile[i + 1, y - 1].active(true);
						Main.tile[i + 1, y - 1].type = 5;
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i + 1, y - 1].frameX = 22;
							Main.tile[i + 1, y - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i + 1, y - 1].frameX = 22;
							Main.tile[i + 1, y - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i + 1, y - 1].frameX = 22;
							Main.tile[i + 1, y - 1].frameY = 176;
						}
					}
					if (num6 == 0 || num6 == 2)
					{
						Main.tile[i - 1, y - 1].active(true);
						Main.tile[i - 1, y - 1].type = 5;
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i - 1, y - 1].frameX = 44;
							Main.tile[i - 1, y - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i - 1, y - 1].frameX = 44;
							Main.tile[i - 1, y - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i - 1, y - 1].frameX = 44;
							Main.tile[i - 1, y - 1].frameY = 176;
						}
					}
					num4 = WorldGen.genRand.Next(3);
					if (num6 == 0)
					{
						if (num4 == 0)
						{
							Main.tile[i, y - 1].frameX = 88;
							Main.tile[i, y - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, y - 1].frameX = 88;
							Main.tile[i, y - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, y - 1].frameX = 88;
							Main.tile[i, y - 1].frameY = 176;
						}
					}
					else if (num6 == 1)
					{
						if (num4 == 0)
						{
							Main.tile[i, y - 1].frameX = 0;
							Main.tile[i, y - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, y - 1].frameX = 0;
							Main.tile[i, y - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, y - 1].frameX = 0;
							Main.tile[i, y - 1].frameY = 176;
						}
					}
					else if (num6 == 2)
					{
						if (num4 == 0)
						{
							Main.tile[i, y - 1].frameX = 66;
							Main.tile[i, y - 1].frameY = 132;
						}
						if (num4 == 1)
						{
							Main.tile[i, y - 1].frameX = 66;
							Main.tile[i, y - 1].frameY = 154;
						}
						if (num4 == 2)
						{
							Main.tile[i, y - 1].frameX = 66;
							Main.tile[i, y - 1].frameY = 176;
						}
					}
					if (WorldGen.genRand.Next(8) != 0)
					{
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i, y - num2].frameX = 22;
							Main.tile[i, y - num2].frameY = 198;
						}
						if (num4 == 1)
						{
							Main.tile[i, y - num2].frameX = 22;
							Main.tile[i, y - num2].frameY = 220;
						}
						if (num4 == 2)
						{
							Main.tile[i, y - num2].frameX = 22;
							Main.tile[i, y - num2].frameY = 242;
						}
					}
					else
					{
						num4 = WorldGen.genRand.Next(3);
						if (num4 == 0)
						{
							Main.tile[i, y - num2].frameX = 0;
							Main.tile[i, y - num2].frameY = 198;
						}
						if (num4 == 1)
						{
							Main.tile[i, y - num2].frameX = 0;
							Main.tile[i, y - num2].frameY = 220;
						}
						if (num4 == 2)
						{
							Main.tile[i, y - num2].frameX = 0;
							Main.tile[i, y - num2].frameY = 242;
						}
					}
					WorldGen.RangeFrame(i - 2, y - num2 - 1, i + 2, y + 1);
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, i, (int)((double)y - (double)num2 * 0.5), num2 + 1);
					}
				}
			}
		}
		public static void GrowShroom(int i, int y)
		{
			if (Main.tile[i - 1, y - 1].lava() || Main.tile[i - 1, y - 1].lava() || Main.tile[i + 1, y - 1].lava())
			{
				return;
			}
			if (Main.tile[i, y].nactive() && !Main.tile[i, y].halfBrick() && Main.tile[i, y].slope() == 0 && Main.tile[i, y].type == 70 && Main.tile[i, y - 1].wall == 0 && Main.tile[i - 1, y].active() && Main.tile[i - 1, y].type == 70 && Main.tile[i + 1, y].active() && Main.tile[i + 1, y].type == 70 && WorldGen.EmptyTileCheck(i - 2, i + 2, y - 13, y - 1, 71))
			{
				int num = WorldGen.genRand.Next(4, 11);
				int num2;
				for (int j = y - num; j < y; j++)
				{
					Main.tile[i, j].frameNumber((byte)WorldGen.genRand.Next(3));
					Main.tile[i, j].active(true);
					Main.tile[i, j].type = 72;
					num2 = WorldGen.genRand.Next(3);
					if (num2 == 0)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 0;
					}
					if (num2 == 1)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 18;
					}
					if (num2 == 2)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 36;
					}
				}
				num2 = WorldGen.genRand.Next(3);
				if (num2 == 0)
				{
					Main.tile[i, y - num].frameX = 36;
					Main.tile[i, y - num].frameY = 0;
				}
				if (num2 == 1)
				{
					Main.tile[i, y - num].frameX = 36;
					Main.tile[i, y - num].frameY = 18;
				}
				if (num2 == 2)
				{
					Main.tile[i, y - num].frameX = 36;
					Main.tile[i, y - num].frameY = 36;
				}
				WorldGen.RangeFrame(i - 2, y - num - 1, i + 2, y + 1);
				if (Main.netMode == 2)
				{
					NetMessage.SendTileSquare(-1, i, (int)((double)y - (double)num * 0.5), num + 1);
				}
			}
		}
		public static void AddTrees()
		{
			for (int i = 1; i < Main.maxTilesX - 1; i++)
			{
				int num = 20;
				while ((double)num < Main.worldSurface)
				{
					WorldGen.GrowTree(i, num);
					if ((i < 380 || i > Main.maxTilesX - 380) && WorldGen.genRand.Next(3) == 0)
					{
						WorldGen.GrowPalmTree(i, num);
					}
					num++;
				}
				if (WorldGen.genRand.Next(3) == 0)
				{
					i++;
				}
				if (WorldGen.genRand.Next(4) == 0)
				{
					i++;
				}
			}
		}
		public static void ExplodeMine(int i, int j)
		{
			ushort arg_11_0 = Main.tile[i, j].type;
			WorldGen.KillTile(i, j, false, false, true);
			NetMessage.SendTileSquare(-1, i, j, 1);
			Projectile.NewProjectile((float)(i * 16 + 8), (float)(j * 16 + 8), 0f, 0f, 164, 250, 10f, Main.myPlayer, 0f, 0f);
		}
		public static bool EmptyTileCheck(int startX, int endX, int startY, int endY, int ignoreStyle = -1)
		{
			if (startX < 0)
			{
				return false;
			}
			if (endX >= Main.maxTilesX)
			{
				return false;
			}
			if (startY < 0)
			{
				return false;
			}
			if (endY >= Main.maxTilesY)
			{
				return false;
			}
			for (int i = startX; i < endX + 1; i++)
			{
				for (int j = startY; j < endY + 1; j++)
				{
					if (Main.tile[i, j].active())
					{
						if (ignoreStyle == -1)
						{
							return false;
						}
						if (ignoreStyle == 11 && Main.tile[i, j].type != 11)
						{
							return false;
						}
						if (ignoreStyle == 20 && Main.tile[i, j].type != 20 && Main.tile[i, j].type != 3 && Main.tile[i, j].type != 62 && Main.tile[i, j].type != 24 && Main.tile[i, j].type != 61 && Main.tile[i, j].type != 32 && Main.tile[i, j].type != 69 && Main.tile[i, j].type != 71 && Main.tile[i, j].type != 73 && Main.tile[i, j].type != 74 && Main.tile[i, j].type != 110 && Main.tile[i, j].type != 113 && Main.tile[i, j].type != 82 && Main.tile[i, j].type != 83 && Main.tile[i, j].type != 84 && Main.tile[i, j].type != 201)
						{
							return false;
						}
						if (ignoreStyle == 71 && Main.tile[i, j].type != 71)
						{
							return false;
						}
					}
				}
			}
			return true;
		}
		public static void smCallBack(object threadContext)
		{
			if (Main.hardMode)
			{
				return;
			}
			WorldGen.hardLock = true;
			Main.hardMode = true;
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random((int)DateTime.Now.Ticks);
			}
			float num = (float)WorldGen.genRand.Next(300, 400) * 0.001f;
			float num2 = (float)WorldGen.genRand.Next(200, 300) * 0.001f;
			int num3 = (int)((float)Main.maxTilesX * num);
			int num4 = (int)((float)Main.maxTilesX * (1f - num));
			int num5 = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num4 = (int)((float)Main.maxTilesX * num);
				num3 = (int)((float)Main.maxTilesX * (1f - num));
				num5 = -1;
			}
			int num6 = 1;
			if (WorldGen.dungeonX < Main.maxTilesX / 2)
			{
				num6 = -1;
			}
			if (num6 < 0)
			{
				if (num4 < num3)
				{
					num4 = (int)((float)Main.maxTilesX * num2);
				}
				else
				{
					num3 = (int)((float)Main.maxTilesX * num2);
				}
			}
			else if (num4 > num3)
			{
				num4 = (int)((float)Main.maxTilesX * (1f - num2));
			}
			else
			{
				num3 = (int)((float)Main.maxTilesX * (1f - num2));
			}
			WorldGen.GERunner(num3, 0, (float)(3 * num5), 5f, true);
			WorldGen.GERunner(num4, 0, (float)(3 * -(float)num5), 5f, false);
			if (Main.netMode == 0)
			{
				Main.NewText(Lang.misc[15], 50, 255, 130, false);
			}
			else if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Lang.misc[15], 255, 50f, 255f, 130f, 0);
			}
			if (Main.netMode == 2)
			{
				Netplay.ResetSections();
			}
			WorldGen.hardLock = false;
		}
		public static void StartHardmode()
		{
			if (Main.netMode == 1)
			{
				return;
			}
			ThreadPool.QueueUserWorkItem(new WaitCallback(WorldGen.smCallBack), 1);
		}
		public static bool PlaceDoor(int i, int j, int type, int style = 0)
		{
			int num = 54 * style;
			bool result;
			try
			{
				if (Main.tile[i, j - 2].nactive() && Main.tileSolid[(int)Main.tile[i, j - 2].type] && WorldGen.SolidTile(i, j + 2))
				{
					Main.tile[i, j - 1].active(true);
					Main.tile[i, j - 1].type = 10;
					Main.tile[i, j - 1].frameY = (short)num;
					Main.tile[i, j - 1].frameX = (short)(WorldGen.genRand.Next(3) * 18);
					Main.tile[i, j].active(true);
					Main.tile[i, j].type = 10;
					Main.tile[i, j].frameY = (short)(num + 18);
					Main.tile[i, j].frameX = (short)(WorldGen.genRand.Next(3) * 18);
					Main.tile[i, j + 1].active(true);
					Main.tile[i, j + 1].type = 10;
					Main.tile[i, j + 1].frameY = (short)(num + 36);
					Main.tile[i, j + 1].frameX = (short)(WorldGen.genRand.Next(3) * 18);
					result = true;
				}
				else
				{
					result = false;
				}
			}
			catch
			{
				result = false;
			}
			return result;
		}
		public static bool CloseDoor(int i, int j, bool forced = false)
		{
			int num = 0;
			int num2 = i;
			if (Main.tile[i, j] == null)
			{
				Main.tile[i, j] = new Tile();
			}
			int frameX = (int)Main.tile[i, j].frameX;
			if (Main.tile[i, j].type != 11)
			{
				return false;
			}
			int k = (int)Main.tile[i, j].frameY;
			int num3 = 0;
			while (k >= 54)
			{
				k -= 54;
				num3++;
			}
			int num4 = j - k / 18;
			if (frameX == 0)
			{
				num2 = i;
				num = 1;
			}
			else if (frameX == 18)
			{
				num2 = i - 1;
				num = 1;
			}
			else if (frameX == 36)
			{
				num2 = i + 1;
				num = -1;
			}
			else if (frameX == 54)
			{
				num2 = i;
				num = -1;
			}
			int num5 = num2;
			if (num == -1)
			{
				num5 = num2 - 1;
			}
			if (!forced)
			{
				for (int l = num4; l < num4 + 3; l++)
				{
					if (!Collision.EmptyTile(num2, l, true))
					{
						return false;
					}
				}
			}
			for (int m = num5; m < num5 + 2; m++)
			{
				for (int n = num4; n < num4 + 3; n++)
				{
					if (m == num2)
					{
						if (Main.tile[m, n] == null)
						{
							Main.tile[m, n] = new Tile();
						}
						Main.tile[m, n].type = 10;
						Main.tile[m, n].frameX = (short)(WorldGen.genRand.Next(3) * 18);
					}
					else
					{
						if (Main.tile[m, n] == null)
						{
							Main.tile[m, n] = new Tile();
						}
						Main.tile[m, n].active(false);
					}
				}
			}
			if (Main.netMode != 1 && Wiring.running)
			{
				Wiring.SkipWire(num2, num4);
				Wiring.SkipWire(num2, num4 + 1);
				Wiring.SkipWire(num2, num4 + 2);
			}
			for (int num6 = num2 - 1; num6 <= num2 + 1; num6++)
			{
				for (int num7 = num4 - 1; num7 <= num4 + 2; num7++)
				{
					WorldGen.TileFrame(num6, num7, false, false);
				}
			}
			Main.PlaySound(9, i * 16, j * 16, 1);
			return true;
		}
		public static bool AddLifeCrystal(int i, int j)
		{
			int k = j;
			while (k < Main.maxTilesY)
			{
				if (Main.tile[i, k].active() && Main.tileSolid[(int)Main.tile[i, k].type])
				{
					int num = k - 1;
					if (Main.tile[i, num - 1].lava() || Main.tile[i - 1, num - 1].lava())
					{
						return false;
					}
					if (!WorldGen.EmptyTileCheck(i - 1, i, num - 1, num, -1))
					{
						return false;
					}
					if (!Main.tileSolid[(int)Main.tile[i, num].type] || !Main.tileSolid[(int)Main.tile[i - 1, num].type])
					{
						return false;
					}
					if (Main.wallDungeon[(int)Main.tile[i, num].wall])
					{
						return false;
					}
					Main.tile[i - 1, num - 1].active(true);
					Main.tile[i - 1, num - 1].type = 12;
					Main.tile[i - 1, num - 1].frameX = 0;
					Main.tile[i - 1, num - 1].frameY = 0;
					Main.tile[i, num - 1].active(true);
					Main.tile[i, num - 1].type = 12;
					Main.tile[i, num - 1].frameX = 18;
					Main.tile[i, num - 1].frameY = 0;
					Main.tile[i - 1, num].active(true);
					Main.tile[i - 1, num].type = 12;
					Main.tile[i - 1, num].frameX = 0;
					Main.tile[i - 1, num].frameY = 18;
					Main.tile[i, num].active(true);
					Main.tile[i, num].type = 12;
					Main.tile[i, num].frameX = 18;
					Main.tile[i, num].frameY = 18;
					return true;
				}
				else
				{
					k++;
				}
			}
			return false;
		}
		public static void AddShadowOrb(int x, int y)
		{
			if (x < 10 || x > Main.maxTilesX - 10)
			{
				return;
			}
			if (y < 10 || y > Main.maxTilesY - 10)
			{
				return;
			}
			for (int i = x - 1; i < x + 1; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j].active() && Main.tile[i, j].type == 31)
					{
						return;
					}
				}
			}
			short num = 0;
			if (WorldGen.crimson)
			{
				num = (short)(num + 36);
			}
			Main.tile[x - 1, y - 1].active(true);
			Main.tile[x - 1, y - 1].type = 31;
			Main.tile[x - 1, y - 1].frameX = num;
			Main.tile[x - 1, y - 1].frameY = 0;
			Main.tile[x, y - 1].active(true);
			Main.tile[x, y - 1].type = 31;
			Main.tile[x, y - 1].frameX = (short)(18 + num);
			Main.tile[x, y - 1].frameY = 0;
			Main.tile[x - 1, y].active(true);
			Main.tile[x - 1, y].type = 31;
			Main.tile[x - 1, y].frameX = num;
			Main.tile[x - 1, y].frameY = 18;
			Main.tile[x, y].active(true);
			Main.tile[x, y].type = 31;
			Main.tile[x, y].frameX = (short)(18 + num);
			Main.tile[x, y].frameY = 18;
		}
		public static void AddHellHouses()
		{
			int num = (int)((double)Main.maxTilesX * 0.25);
			for (int i = num; i < Main.maxTilesX - num; i++)
			{
				int num2 = Main.maxTilesY - 40;
				while (Main.tile[i, num2].active() || Main.tile[i, num2].liquid > 0)
				{
					num2--;
				}
				if (Main.tile[i, num2 + 1].active())
				{
					ushort num3 = (ushort)WorldGen.genRand.Next(75, 77);
					byte wallType = 13;
					if (WorldGen.genRand.Next(5) > 0)
					{
						num3 = 75;
					}
					if (num3 == 75)
					{
						wallType = 14;
					}
					WorldGen.HellFort(i, num2, num3, wallType);
					i += WorldGen.genRand.Next(30, 130);
					if (WorldGen.genRand.Next(10) == 0)
					{
						i += WorldGen.genRand.Next(0, 200);
					}
				}
			}
			float num4 = (float)(Main.maxTilesX / 4200);
			int num5 = 0;
			while ((float)num5 < 200f * num4)
			{
				int num6 = 0;
				bool flag = false;
				while (!flag)
				{
					num6++;
					int num7 = WorldGen.genRand.Next((int)((double)Main.maxTilesX * 0.2), (int)((double)Main.maxTilesX * 0.8));
					int num8 = WorldGen.genRand.Next(Main.maxTilesY - 300, Main.maxTilesY - 20);
					if (Main.tile[num7, num8].active() && (Main.tile[num7, num8].type == 75 || Main.tile[num7, num8].type == 76))
					{
						int num9 = 0;
						if (Main.tile[num7 - 1, num8].wall > 0)
						{
							num9 = -1;
						}
						else if (Main.tile[num7 + 1, num8].wall > 0)
						{
							num9 = 1;
						}
						if (!Main.tile[num7 + num9, num8].active() && !Main.tile[num7 + num9, num8 + 1].active())
						{
							bool flag2 = false;
							for (int j = num7 - 8; j < num7 + 8; j++)
							{
								for (int k = num8 - 8; k < num8 + 8; k++)
								{
									if (Main.tile[j, k].active() && Main.tile[j, k].type == 4)
									{
										flag2 = true;
										break;
									}
								}
							}
							if (!flag2)
							{
								WorldGen.PlaceTile(num7 + num9, num8, 4, true, true, -1, 7);
								flag = true;
							}
						}
					}
					if (num6 > 1000)
					{
						flag = true;
					}
				}
				num5++;
			}
			float num10 = 4200000f / (float)Main.maxTilesX;
			int num11 = 0;
			while ((float)num11 < num10)
			{
				int num12 = WorldGen.genRand.Next(num, Main.maxTilesX - num);
				int num13 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 20);
				while ((Main.tile[num12, num13].wall != 13 && Main.tile[num12, num13].wall != 14) || Main.tile[num12, num13].active())
				{
					num12 = WorldGen.genRand.Next(num, Main.maxTilesX - num);
					num13 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 20);
				}
				if ((Main.tile[num12, num13].wall == 13 || Main.tile[num12, num13].wall == 14) && !Main.tile[num12, num13].active())
				{
					while (!WorldGen.SolidTile(num12, num13) && num13 < Main.maxTilesY - 20)
					{
						num13++;
					}
					num13--;
					int num14 = num12;
					int num15 = num12;
					while (!Main.tile[num14, num13].active() && WorldGen.SolidTile(num14, num13 + 1))
					{
						num14--;
					}
					num14++;
					while (!Main.tile[num15, num13].active() && WorldGen.SolidTile(num15, num13 + 1))
					{
						num15++;
					}
					num15--;
					int num16 = num15 - num14;
					int num17 = (num15 + num14) / 2;
					if (!Main.tile[num17, num13].active() && (Main.tile[num17, num13].wall == 13 || Main.tile[num17, num13].wall == 14) && WorldGen.SolidTile(num17, num13 + 1))
					{
						int style = 16;
						int style2 = 13;
						int style3 = 14;
						int style4 = 49;
						int style5 = 4;
						int style6 = 8;
						int style7 = 15;
						int style8 = 9;
						int style9 = 10;
						int style10 = 17;
						int style11 = 25;
						int style12 = 25;
						int style13 = 23;
						int style14 = 25;
						int num18 = WorldGen.genRand.Next(13);
						int num19 = 0;
						int num20 = 0;
						if (num18 == 0)
						{
							num19 = 5;
							num20 = 4;
						}
						if (num18 == 1)
						{
							num19 = 4;
							num20 = 3;
						}
						if (num18 == 2)
						{
							num19 = 3;
							num20 = 5;
						}
						if (num18 == 3)
						{
							num19 = 4;
							num20 = 6;
						}
						if (num18 == 4)
						{
							num19 = 3;
							num20 = 3;
						}
						if (num18 == 5)
						{
							num19 = 5;
							num20 = 3;
						}
						if (num18 == 6)
						{
							num19 = 5;
							num20 = 4;
						}
						if (num18 == 7)
						{
							num19 = 5;
							num20 = 4;
						}
						if (num18 == 8)
						{
							num19 = 5;
							num20 = 4;
						}
						if (num18 == 9)
						{
							num19 = 3;
							num20 = 5;
						}
						if (num18 == 10)
						{
							num19 = 5;
							num20 = 3;
						}
						if (num18 == 11)
						{
							num19 = 2;
							num20 = 4;
						}
						if (num18 == 12)
						{
							num19 = 3;
							num20 = 3;
						}
						for (int l = num17 - num19; l <= num17 + num19; l++)
						{
							for (int m = num13 - num20; m <= num13; m++)
							{
								if (Main.tile[l, m].active())
								{
									num18 = -1;
									break;
								}
							}
						}
						if ((double)num16 < (double)num19 * 1.75)
						{
							num18 = -1;
						}
						if (num18 == 0)
						{
							WorldGen.PlaceTile(num17, num13, 14, true, false, -1, style2);
							int num21 = WorldGen.genRand.Next(6);
							if (num21 < 3)
							{
								WorldGen.PlaceTile(num17 + num21, num13 - 2, 33, true, false, -1, style12);
							}
							if (Main.tile[num17, num13].active())
							{
								if (!Main.tile[num17 - 2, num13].active())
								{
									WorldGen.PlaceTile(num17 - 2, num13, 15, true, false, -1, style);
									if (Main.tile[num17 - 2, num13].active())
									{
										Tile expr_691 = Main.tile[num17 - 2, num13];
										expr_691.frameX = (short)(expr_691.frameX + 18);
										Tile expr_6B2 = Main.tile[num17 - 2, num13 - 1];
										expr_6B2.frameX = (short)(expr_6B2.frameX + 18);
									}
								}
								if (!Main.tile[num17 + 2, num13].active())
								{
									WorldGen.PlaceTile(num17 + 2, num13, 15, true, false, -1, style);
								}
							}
						}
						else if (num18 == 1)
						{
							WorldGen.PlaceTile(num17, num13, 18, true, false, -1, style3);
							int num22 = WorldGen.genRand.Next(4);
							if (num22 < 2)
							{
								WorldGen.PlaceTile(num17 + num22, num13 - 1, 33, true, false, -1, style12);
							}
							if (Main.tile[num17, num13].active())
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									if (!Main.tile[num17 - 1, num13].active())
									{
										WorldGen.PlaceTile(num17 - 1, num13, 15, true, false, -1, style);
										if (Main.tile[num17 - 1, num13].active())
										{
											Tile expr_7B3 = Main.tile[num17 - 1, num13];
											expr_7B3.frameX = (short)(expr_7B3.frameX + 18);
											Tile expr_7D4 = Main.tile[num17 - 1, num13 - 1];
											expr_7D4.frameX = (short)(expr_7D4.frameX + 18);
										}
									}
								}
								else if (!Main.tile[num17 + 2, num13].active())
								{
									WorldGen.PlaceTile(num17 + 2, num13, 15, true, false, -1, style);
								}
							}
						}
						else if (num18 == 2)
						{
							WorldGen.PlaceTile(num17, num13, 105, true, false, -1, style4);
						}
						else if (num18 == 3)
						{
							WorldGen.PlaceTile(num17, num13, 101, true, false, -1, style5);
						}
						else if (num18 == 4)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.PlaceTile(num17, num13, 15, true, false, -1, style);
								Tile expr_881 = Main.tile[num17, num13];
								expr_881.frameX = (short)(expr_881.frameX + 18);
								Tile expr_8A0 = Main.tile[num17, num13 - 1];
								expr_8A0.frameX = (short)(expr_8A0.frameX + 18);
							}
							else
							{
								WorldGen.PlaceTile(num17, num13, 15, true, false, -1, style);
							}
						}
						else if (num18 == 5)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.Place4x2(num17, num13, 79, 1, style6);
							}
							else
							{
								WorldGen.Place4x2(num17, num13, 79, -1, style6);
							}
						}
						else if (num18 == 6)
						{
							WorldGen.PlaceTile(num17, num13, 87, true, false, -1, style7);
						}
						else if (num18 == 7)
						{
							WorldGen.PlaceTile(num17, num13, 88, true, false, -1, style8);
						}
						else if (num18 == 8)
						{
							WorldGen.PlaceTile(num17, num13, 89, true, false, -1, style9);
						}
						else if (num18 == 9)
						{
							WorldGen.PlaceTile(num17, num13, 104, true, false, -1, style10);
						}
						else if (num18 == 10)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.Place4x2(num17, num13, 90, 1, style14);
							}
							else
							{
								WorldGen.Place4x2(num17, num13, 90, -1, style14);
							}
						}
						else if (num18 == 11)
						{
							WorldGen.PlaceTile(num17, num13, 93, true, false, -1, style13);
						}
						else if (num18 == 12)
						{
							WorldGen.PlaceTile(num17, num13, 100, true, false, -1, style11);
						}
					}
				}
				num11++;
			}
			num10 = 420000f / (float)Main.maxTilesX;
			int num23 = 0;
			while ((float)num23 < num10)
			{
				int num24 = WorldGen.genRand.Next(num, Main.maxTilesX - num);
				int num25 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 20);
				while ((Main.tile[num24, num25].wall != 13 && Main.tile[num24, num25].wall != 14) || Main.tile[num24, num25].active())
				{
					num24 = WorldGen.genRand.Next(num, Main.maxTilesX - num);
					num25 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 20);
				}
				int num26;
				int num27;
				int num28;
				int num29;
				for (int n = 0; n < 2; n++)
				{
					num26 = num24;
					num27 = num24;
					while (!Main.tile[num26, num25].active() && (Main.tile[num26, num25].wall == 13 || Main.tile[num26, num25].wall == 14))
					{
						num26--;
					}
					num26++;
					while (!Main.tile[num27, num25].active() && (Main.tile[num27, num25].wall == 13 || Main.tile[num27, num25].wall == 14))
					{
						num27++;
					}
					num27--;
					num24 = (num26 + num27) / 2;
					num28 = num25;
					num29 = num25;
					while (!Main.tile[num24, num28].active() && (Main.tile[num24, num28].wall == 13 || Main.tile[num24, num28].wall == 14))
					{
						num28--;
					}
					num28++;
					while (!Main.tile[num24, num29].active() && (Main.tile[num24, num29].wall == 13 || Main.tile[num24, num29].wall == 14))
					{
						num29++;
					}
					num29--;
					num25 = (num28 + num29) / 2;
				}
				num26 = num24;
				num27 = num24;
				while (!Main.tile[num26, num25].active() && !Main.tile[num26, num25 - 1].active() && !Main.tile[num26, num25 + 1].active())
				{
					num26--;
				}
				num26++;
				while (!Main.tile[num27, num25].active() && !Main.tile[num27, num25 - 1].active() && !Main.tile[num27, num25 + 1].active())
				{
					num27++;
				}
				num27--;
				num28 = num25;
				num29 = num25;
				while (!Main.tile[num24, num28].active() && !Main.tile[num24 - 1, num28].active() && !Main.tile[num24 + 1, num28].active())
				{
					num28--;
				}
				num28++;
				while (!Main.tile[num24, num29].active() && !Main.tile[num24 - 1, num29].active() && !Main.tile[num24 + 1, num29].active())
				{
					num29++;
				}
				num29--;
				num24 = (num26 + num27) / 2;
				num25 = (num28 + num29) / 2;
				int num30 = num27 - num26;
				int num31 = num29 - num28;
				if (num30 > 7 && num31 > 5)
				{
					int num32 = 0;
					if (WorldGen.nearPicture2(num24, num25))
					{
						num32 = -1;
					}
					if (num32 == 0)
					{
						Vector2 vector = WorldGen.randHellPicture();
						int type = (int)vector.X;
						int style15 = (int)vector.Y;
						if (!WorldGen.nearPicture(num24, num25))
						{
							WorldGen.PlaceTile(num24, num25, type, true, false, -1, style15);
						}
					}
				}
				num23++;
			}
			int[] array = new int[]
			{
				WorldGen.genRand.Next(16, 22),
				WorldGen.genRand.Next(16, 22),
				WorldGen.genRand.Next(16, 22)
			};
			while (array[1] == array[0])
			{
				array[1] = WorldGen.genRand.Next(16, 22);
			}
			while (array[2] == array[0] || array[2] == array[1])
			{
				array[2] = WorldGen.genRand.Next(16, 22);
			}
			num10 = 420000f / (float)Main.maxTilesX;
			int num33 = 0;
			while ((float)num33 < num10)
			{
				int num34;
				int num35;
				do
				{
					num34 = WorldGen.genRand.Next(num, Main.maxTilesX - num);
					num35 = WorldGen.genRand.Next(Main.maxTilesY - 250, Main.maxTilesY - 20);
				}
				while ((Main.tile[num34, num35].wall != 13 && Main.tile[num34, num35].wall != 14) || Main.tile[num34, num35].active());
				while (!WorldGen.SolidTile(num34, num35) && num35 > 10)
				{
					num35--;
				}
				num35++;
				if (Main.tile[num34, num35].wall == 13 || Main.tile[num34, num35].wall == 14)
				{
					int num36 = WorldGen.genRand.Next(3);
					int style16 = 32;
					int style17 = 32;
					int num37 = 1;
                    int num38 = 3;
					switch (num36)
					{
					case 0:
					{
						num37 = 1;
						num38 = 3;
						goto IL_FAB;
					}
					case 1:
					{
						num37 = 3;
						num38 = 3;
						goto IL_FAB;
					}
					case 2:
					{
						num37 = 1;
						num38 = 2;
						goto IL_FAB;
					}
					}
                    goto IL_FAB;
					IL_FAB:
					for (int num39 = num34 - 1; num39 <= num34 + num37; num39++)
					{
						for (int num40 = num35; num40 <= num35 + num38; num40++)
						{
							Tile tile = Main.tile[num34, num35];
							if (num39 < num34 || num39 == num34 + num37)
							{
								if (tile.active())
								{
									ushort type2 = tile.type;
									if (type2 <= 34)
									{
										switch (type2)
										{
										case 10:
										case 11:
											break;
										default:
											if (type2 != 34)
											{
												goto IL_102A;
											}
											break;
										}
									}
									else if (type2 != 42 && type2 != 91)
									{
										goto IL_102A;
									}
									num36 = -1;
								}
							}
							else if (tile.active())
							{
								num36 = -1;
							}
							IL_102A:;
						}
					}
					switch (num36)
					{
					case 0:
						WorldGen.PlaceTile(num34, num35, 91, true, false, -1, array[WorldGen.genRand.Next(3)]);
						break;
					case 1:
						WorldGen.PlaceTile(num34, num35, 34, true, false, -1, style16);
						break;
					case 2:
						WorldGen.PlaceTile(num34, num35, 42, true, false, -1, style17);
						break;
					}
				}
				num33++;
			}
		}
		public static void HellFort(int i, int j, ushort tileType = 75, byte wallType = 14)
		{
			int[] array = new int[5];
			int[] array2 = new int[5];
			int[] array3 = new int[10];
			int[] array4 = new int[10];
			int num = 8;
			int num2 = 20;
			array[2] = i - WorldGen.genRand.Next(num / 2, num2 / 2);
			array2[2] = i + WorldGen.genRand.Next(num / 2, num2 / 2);
			array[3] = array2[2];
			array2[3] = array[3] + WorldGen.genRand.Next(num, num2);
			array[4] = array2[3];
			array2[4] = array[4] + WorldGen.genRand.Next(num, num2);
			array2[1] = array[2];
			array[1] = array2[1] - WorldGen.genRand.Next(num, num2);
			array2[0] = array[1];
			array[0] = array2[0] - WorldGen.genRand.Next(num, num2);
			num = 6;
			num2 = 12;
			array3[3] = j - WorldGen.genRand.Next(num, num2);
			array4[3] = j;
			for (int k = 4; k < 10; k++)
			{
				array3[k] = array4[k - 1];
				array4[k] = array3[k] + WorldGen.genRand.Next(num, num2);
			}
			for (int l = 2; l >= 0; l--)
			{
				array4[l] = array3[l + 1];
				array3[l] = array4[l] - WorldGen.genRand.Next(num, num2);
			}
			bool flag = false;
			bool flag2 = false;
			bool[,] array5 = new bool[5, 10];
			int num3 = 3;
			int num4 = 3;
			for (int m = 0; m < 2; m++)
			{
				if (WorldGen.genRand.Next(3) == 0)
				{
					flag = true;
					int num5 = WorldGen.genRand.Next(10);
					if (num5 < num3)
					{
						num3 = num5;
					}
					if (num5 > num4)
					{
						num4 = num5;
					}
					int num6 = 1;
					if (WorldGen.genRand.Next(2) == 0)
					{
						array5[0, num5] = true;
						array5[1, num5] = true;
						num6 = 0;
					}
					else
					{
						array5[1, num5] = true;
					}
					int num7 = WorldGen.genRand.Next(2);
					if (num7 == 0)
					{
						num7 = -1;
					}
					int num8 = WorldGen.genRand.Next(10);
					while (num8 > 0 && num5 >= 0 && num5 < 10)
					{
						array5[num6, num5] = true;
						num5 += num7;
					}
				}
				if (WorldGen.genRand.Next(3) == 0)
				{
					flag2 = true;
					int num9 = WorldGen.genRand.Next(10);
					if (num9 < num3)
					{
						num3 = num9;
					}
					if (num9 > num4)
					{
						num4 = num9;
					}
					int num10 = 3;
					if (WorldGen.genRand.Next(2) == 0)
					{
						array5[3, num9] = true;
						array5[4, num9] = true;
						num10 = 4;
					}
					else
					{
						array5[3, num9] = true;
					}
					int num11 = WorldGen.genRand.Next(2);
					if (num11 == 0)
					{
						num11 = -1;
					}
					int num12 = WorldGen.genRand.Next(10);
					while (num12 > 0 && num9 >= 0 && num9 < 10)
					{
						array5[num10, num9] = true;
						num9 += num11;
					}
				}
			}
			for (int n = 0; n < 5; n++)
			{
				int num13 = array[n];
				bool flag3 = false;
				for (int num14 = Main.maxTilesY - 200; num14 < Main.maxTilesY; num14++)
				{
					if (Main.tile[num13, num14].wall > 0)
					{
						flag3 = true;
					}
				}
				if (flag3)
				{
					for (int num15 = 0; num15 < 10; num15++)
					{
						array5[n, num15] = false;
					}
				}
			}
			int num16 = WorldGen.genRand.Next(10);
			if (num16 < num3)
			{
				num3 = num16;
			}
			num16 = WorldGen.genRand.Next(10);
			if (num16 > num4)
			{
				num4 = num16;
			}
			if (!flag && !flag2)
			{
				while (num4 - num3 < 5)
				{
					num16 = WorldGen.genRand.Next(10);
					if (num16 < num3)
					{
						num3 = num16;
					}
					num16 = WorldGen.genRand.Next(10);
					if (num16 > num4)
					{
						num4 = num16;
					}
				}
			}
			for (int num17 = num3; num17 <= num4; num17++)
			{
				array5[2, num17] = true;
			}
			for (int num18 = 0; num18 < 5; num18++)
			{
				for (int num19 = 0; num19 < 10; num19++)
				{
					if (array5[num18, num19] && (array3[num19] < Main.maxTilesY - 200 || array4[num19] > Main.maxTilesY - 20))
					{
						array5[num18, num19] = false;
					}
				}
			}
			for (int num20 = 0; num20 < 5; num20++)
			{
				for (int num21 = 0; num21 < 10; num21++)
				{
					if (array5[num20, num21])
					{
						for (int num22 = array[num20]; num22 <= array2[num20]; num22++)
						{
							for (int num23 = array3[num21]; num23 <= array4[num21]; num23++)
							{
								Main.tile[num22, num23].liquid = 0;
								if (num22 == array[num20] || num22 == array2[num20] || num23 == array3[num21] || num23 == array4[num21])
								{
									Main.tile[num22, num23].active(true);
									Main.tile[num22, num23].type = tileType;
									Main.tile[num22, num23].halfBrick(false);
									Main.tile[num22, num23].slope(0);
								}
								else
								{
									Main.tile[num22, num23].wall = wallType;
									Main.tile[num22, num23].active(false);
								}
							}
						}
					}
				}
			}
			int style = 19;
			int style2 = 13;
			for (int num24 = 0; num24 < 4; num24++)
			{
				bool[] array6 = new bool[10];
				bool flag4 = false;
				for (int num25 = 0; num25 < 10; num25++)
				{
					if (array5[num24, num25] && array5[num24 + 1, num25])
					{
						array6[num25] = true;
						flag4 = true;
					}
				}
				while (flag4)
				{
					int num26 = WorldGen.genRand.Next(10);
					if (array6[num26])
					{
						flag4 = false;
						Main.tile[array2[num24], array4[num26] - 1].active(false);
						Main.tile[array2[num24], array4[num26] - 2].active(false);
						Main.tile[array2[num24], array4[num26] - 3].active(false);
						Main.tile[array2[num24], array4[num26] - 1].wall = wallType;
						Main.tile[array2[num24], array4[num26] - 2].wall = wallType;
						Main.tile[array2[num24], array4[num26] - 3].wall = wallType;
						WorldGen.PlaceTile(array2[num24], array4[num26] - 1, 10, true, false, -1, style);
					}
				}
			}
			for (int num27 = 0; num27 < 5; num27++)
			{
				for (int num28 = 0; num28 < 10; num28++)
				{
					if (array5[num27, num28])
					{
						if (num28 > 0 && array5[num27, num28 - 1])
						{
							int num29 = WorldGen.genRand.Next(array[num27] + 2, array2[num27] - 1);
							int num30 = WorldGen.genRand.Next(array[num27] + 2, array2[num27] - 1);
							while (num30 - num29 < 2 || num30 - num29 > 5)
							{
								num29 = WorldGen.genRand.Next(array[num27] + 2, array2[num27] - 1);
								num30 = WorldGen.genRand.Next(array[num27] + 2, array2[num27] - 1);
							}
							for (int num31 = num29; num31 <= num30; num31++)
							{
								Main.tile[num31, array3[num28]].active(false);
								WorldGen.PlaceTile(num31, array3[num28], 19, true, true, -1, style2);
								Main.tile[num31, array3[num28]].wall = wallType;
							}
						}
						if (num27 < 4 && array5[num27 + 1, num28] && WorldGen.genRand.Next(3) == 0)
						{
							Main.tile[array2[num27], array4[num28] - 1].active(false);
							Main.tile[array2[num27], array4[num28] - 2].active(false);
							Main.tile[array2[num27], array4[num28] - 3].active(false);
							Main.tile[array2[num27], array4[num28] - 1].wall = wallType;
							Main.tile[array2[num27], array4[num28] - 2].wall = wallType;
							Main.tile[array2[num27], array4[num28] - 3].wall = wallType;
							WorldGen.PlaceTile(array2[num27], array4[num28] - 1, 10, true, false, -1, style);
						}
					}
				}
			}
			bool flag5 = false;
			for (int num32 = 0; num32 < 5; num32++)
			{
				bool[] array7 = new bool[10];
				for (int num33 = 0; num33 < 10; num33++)
				{
					if (array5[num32, num33])
					{
						flag5 = true;
						array7[num33] = true;
					}
				}
				if (flag5)
				{
					bool flag6 = false;
					for (int num34 = 0; num34 < 10; num34++)
					{
						if (array7[num34])
						{
							if (!Main.tile[array[num32] - 1, array4[num34] - 1].active() && !Main.tile[array[num32] - 1, array4[num34] - 2].active() && !Main.tile[array[num32] - 1, array4[num34] - 3].active() && Main.tile[array[num32] - 1, array4[num34] - 1].liquid == 0 && Main.tile[array[num32] - 1, array4[num34] - 2].liquid == 0 && Main.tile[array[num32] - 1, array4[num34] - 3].liquid == 0)
							{
								flag6 = true;
							}
							else
							{
								array7[num34] = false;
							}
						}
					}
					while (flag6)
					{
						int num35 = WorldGen.genRand.Next(10);
						if (array7[num35])
						{
							flag6 = false;
							Main.tile[array[num32], array4[num35] - 1].active(false);
							Main.tile[array[num32], array4[num35] - 2].active(false);
							Main.tile[array[num32], array4[num35] - 3].active(false);
							WorldGen.PlaceTile(array[num32], array4[num35] - 1, 10, true, false, -1, style);
						}
					}
					break;
				}
			}
			bool flag7 = false;
			for (int num36 = 4; num36 >= 0; num36--)
			{
				bool[] array8 = new bool[10];
				for (int num37 = 0; num37 < 10; num37++)
				{
					if (array5[num36, num37])
					{
						flag7 = true;
						array8[num37] = true;
					}
				}
				if (flag7)
				{
					bool flag8 = false;
					for (int num38 = 0; num38 < 10; num38++)
					{
						if (array8[num38])
						{
							if (!Main.tile[array2[num36] + 1, array4[num38] - 1].active() && !Main.tile[array2[num36] + 1, array4[num38] - 2].active() && !Main.tile[array2[num36] + 1, array4[num38] - 3].active() && Main.tile[array2[num36] + 1, array4[num38] - 1].liquid == 0 && Main.tile[array2[num36] + 1, array4[num38] - 2].liquid == 0 && Main.tile[array2[num36] + 1, array4[num38] - 3].liquid == 0)
							{
								flag8 = true;
							}
							else
							{
								array8[num38] = false;
							}
						}
					}
					while (flag8)
					{
						int num39 = WorldGen.genRand.Next(10);
						if (array8[num39])
						{
							flag8 = false;
							Main.tile[array2[num36], array4[num39] - 1].active(false);
							Main.tile[array2[num36], array4[num39] - 2].active(false);
							Main.tile[array2[num36], array4[num39] - 3].active(false);
							WorldGen.PlaceTile(array2[num36], array4[num39] - 1, 10, true, false, -1, style);
						}
					}
					break;
				}
			}
			bool flag9 = false;
			for (int num40 = 0; num40 < 10; num40++)
			{
				bool[] array9 = new bool[10];
				for (int num41 = 0; num41 < 5; num41++)
				{
					if (array5[num41, num40])
					{
						flag9 = true;
						array9[num41] = true;
					}
				}
				if (flag9)
				{
					bool flag10 = true;
					while (flag10)
					{
						int num42 = WorldGen.genRand.Next(5);
						if (array9[num42])
						{
							int num43 = WorldGen.genRand.Next(array[num42] + 2, array2[num42] - 1);
							int num44 = WorldGen.genRand.Next(array[num42] + 2, array2[num42] - 1);
							while (num44 - num43 < 2 || num44 - num43 > 5)
							{
								num43 = WorldGen.genRand.Next(array[num42] + 2, array2[num42] - 1);
								num44 = WorldGen.genRand.Next(array[num42] + 2, array2[num42] - 1);
							}
							for (int num45 = num43; num45 <= num44; num45++)
							{
								if (Main.tile[num45, array3[num40] - 1].active() || Main.tile[num45, array3[num40] - 1].liquid > 0)
								{
									flag10 = false;
								}
							}
							if (flag10)
							{
								for (int num46 = num43; num46 <= num44; num46++)
								{
									Main.tile[num46, array3[num40]].active(false);
									WorldGen.PlaceTile(num46, array3[num40], 19, true, true, -1, style2);
								}
							}
							flag10 = false;
						}
					}
					return;
				}
			}
		}
		public static void HellHouse(int i, int j, byte type = 76, byte wall = 13)
		{
			int num = WorldGen.genRand.Next(8, 20);
			int num2 = WorldGen.genRand.Next(1, 3);
			int num3 = WorldGen.genRand.Next(4, 13);
			int num4 = j;
			for (int k = 0; k < num2; k++)
			{
				int num5 = WorldGen.genRand.Next(5, 9);
				WorldGen.HellRoom(i, num4, num, num5, type, wall);
				num4 -= num5;
			}
			num4 = j;
			for (int l = 0; l < num3; l++)
			{
				int num6 = WorldGen.genRand.Next(5, 9);
				num4 += num6;
				WorldGen.HellRoom(i, num4, num, num6, type, wall);
			}
			for (int m = i - num / 2; m <= i + num / 2; m++)
			{
				num4 = j;
				while (num4 < Main.maxTilesY && ((Main.tile[m, num4].active() && (Main.tile[m, num4].type == 76 || Main.tile[m, num4].type == 75)) || Main.tile[i, num4].wall == 13 || Main.tile[i, num4].wall == 14))
				{
					num4++;
				}
				int num7 = 6 + WorldGen.genRand.Next(3);
				while (num4 < Main.maxTilesY && !Main.tile[m, num4].active())
				{
					num7--;
					Main.tile[m, num4].active(true);
					Main.tile[m, num4].type = 57;
					num4++;
					if (num7 <= 0)
					{
						break;
					}
				}
			}
			int num8 = 0;
			int num9 = 0;
			num4 = j;
			while (num4 < Main.maxTilesY && ((Main.tile[i, num4].active() && (Main.tile[i, num4].type == 76 || Main.tile[i, num4].type == 75)) || Main.tile[i, num4].wall == 13 || Main.tile[i, num4].wall == 14))
			{
				num4++;
			}
			num4--;
			num9 = num4;
			while ((Main.tile[i, num4].active() && (Main.tile[i, num4].type == 76 || Main.tile[i, num4].type == 75)) || Main.tile[i, num4].wall == 13 || Main.tile[i, num4].wall == 14)
			{
				num4--;
				if (Main.tile[i, num4].active() && (Main.tile[i, num4].type == 76 || Main.tile[i, num4].type == 75))
				{
					int num10 = WorldGen.genRand.Next(i - num / 2 + 1, i + num / 2 - 1);
					int num11 = WorldGen.genRand.Next(i - num / 2 + 1, i + num / 2 - 1);
					if (num10 > num11)
					{
						int num12 = num10;
						num10 = num11;
						num11 = num12;
					}
					if (num10 == num11)
					{
						if (num10 < i)
						{
							num11++;
						}
						else
						{
							num10--;
						}
					}
					for (int n = num10; n <= num11; n++)
					{
						if (Main.tile[n, num4 - 1].wall == 13)
						{
							Main.tile[n, num4].wall = 13;
						}
						if (Main.tile[n, num4 - 1].wall == 14)
						{
							Main.tile[n, num4].wall = 14;
						}
						Main.tile[n, num4].type = 19;
						Main.tile[n, num4].active(true);
					}
					num4--;
				}
			}
			num8 = num4;
			float num13 = (float)((num9 - num8) * num);
			float num14 = num13 * 0.02f;
			int num15 = 0;
			while ((float)num15 < num14)
			{
				int num16 = WorldGen.genRand.Next(i - num / 2, i + num / 2 + 1);
				int num17 = WorldGen.genRand.Next(num8, num9);
				int num18 = WorldGen.genRand.Next(3, 8);
				for (int num19 = num16 - num18; num19 <= num16 + num18; num19++)
				{
					for (int num20 = num17 - num18; num20 <= num17 + num18; num20++)
					{
						float num21 = (float)Math.Abs(num19 - num16);
						float num22 = (float)Math.Abs(num20 - num17);
						double num23 = Math.Sqrt((double)(num21 * num21 + num22 * num22));
						if (num23 < (double)num18 * 0.4)
						{
							try
							{
								if (Main.tile[num19, num20].type == 76 || Main.tile[num19, num20].type == 19)
								{
									Main.tile[num19, num20].active(false);
								}
								Main.tile[num19, num20].wall = 0;
							}
							catch
							{
							}
						}
					}
				}
				num15++;
			}
		}
		public static void HellRoom(int i, int j, int width, int height, byte type = 76, byte wall = 13)
		{
			if (j > Main.maxTilesY - 40)
			{
				return;
			}
			for (int k = i - width / 2; k <= i + width / 2; k++)
			{
				for (int l = j - height; l <= j; l++)
				{
					try
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = (ushort)type;
						Main.tile[k, l].liquid = 0;
						Main.tile[k, l].lava(false);
					}
					catch
					{
					}
				}
			}
			for (int m = i - width / 2 + 1; m <= i + width / 2 - 1; m++)
			{
				for (int n = j - height + 1; n <= j - 1; n++)
				{
					try
					{
						Main.tile[m, n].active(false);
						Main.tile[m, n].wall = wall;
						Main.tile[m, n].liquid = 0;
						Main.tile[m, n].lava(false);
					}
					catch
					{
					}
				}
			}
		}
		public static void templeCleaner(int x, int y)
		{
			int num = 0;
			if (Main.tile[x + 1, y].active() && Main.tile[x + 1, y].type == 226)
			{
				num++;
			}
			if (Main.tile[x - 1, y].active() && Main.tile[x - 1, y].type == 226)
			{
				num++;
			}
			if (Main.tile[x, y + 1].active() && Main.tile[x, y + 1].type == 226)
			{
				num++;
			}
			if (Main.tile[x, y - 1].active() && Main.tile[x, y - 1].type == 226)
			{
				num++;
			}
			if (Main.tile[x, y].active() && Main.tile[x, y].type == 226)
			{
				if (num <= 1)
				{
					Main.tile[x, y].active(false);
					Main.tile[x, y].wall = 87;
					return;
				}
			}
			else if (!Main.tile[x, y].active() && num == 3)
			{
				Main.tile[x, y].active(true);
				Main.tile[x, y].type = 226;
				Main.tile[x, y].liquid = 0;
				Main.tile[x, y].slope(0);
				Main.tile[x, y].halfBrick(false);
			}
		}
		public static Vector2 templePather(Vector2 templePath, int destX, int destY)
		{
			int num = (int)templePath.X;
			int num2 = (int)templePath.Y;
			int num3 = WorldGen.genRand.Next(5, 20);
			int num4 = WorldGen.genRand.Next(2, 5);
			while (num3 > 0 && (num != destX || num2 != destY))
			{
				num3--;
				if (num > destX)
				{
					num--;
				}
				if (num < destX)
				{
					num++;
				}
				if (num2 > destY)
				{
					num2--;
				}
				if (num2 < destY)
				{
					num2++;
				}
				for (int i = num - num4; i < num + num4; i++)
				{
					for (int j = num2 - num4; j < num2 + num4; j++)
					{
						Main.tile[i, j].active(false);
						Main.tile[i, j].wall = 87;
					}
				}
			}
			return new Vector2((float)num, (float)num2);
		}
		public static void outerTempled(int x, int y)
		{
			if (Main.tile[x, y].active() & Main.tile[x, y].type == 226)
			{
				return;
			}
			if (Main.tile[x, y].wall == 87)
			{
				return;
			}
			int num = 6;
			for (int i = x - num; i <= x + num; i++)
			{
				for (int j = y - num; j <= y + num; j++)
				{
					if (!Main.tile[i, j].active() && Main.tile[i, j].wall == 87)
					{
						Main.tile[x, y].active(true);
						Main.tile[x, y].type = 226;
						Main.tile[x, y].liquid = 0;
						Main.tile[x, y].slope(0);
						Main.tile[x, y].halfBrick(false);
						return;
					}
				}
			}
		}
		public static void makeTemple(int x, int y)
		{
			Rectangle[] array = new Rectangle[40];
			float num = (float)(Main.maxTilesX / 4200);
			int num2 = WorldGen.genRand.Next((int)(num * 10f), (int)(num * 16f));
			int num3 = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num3 = -1;
			}
			int num4 = num3;
			int num5 = x;
			int num6 = y;
			int num7 = x;
			int num8 = y;
			int num9 = WorldGen.genRand.Next(1, 3);
			int num10 = 0;
			for (int i = 0; i < num2; i++)
			{
				num10++;
				int num11 = num3;
				int num12 = num7;
				int num13 = num8;
				bool flag = true;
				int num14 = 0;
				int num15 = 0;
				int num16 = -10;
				Rectangle rectangle = new Rectangle(num12 - num14 / 2, num13 - num15 / 2, num14, num15);
				while (flag)
				{
					num12 = num7;
					num13 = num8;
					num14 = WorldGen.genRand.Next(25, 50);
					num15 = WorldGen.genRand.Next(20, 35);
					if (num15 > num14)
					{
						num15 = num14;
					}
					if (i == num2 - 1)
					{
						num14 = WorldGen.genRand.Next(55, 65);
						num15 = WorldGen.genRand.Next(45, 50);
						if (num15 > num14)
						{
							num15 = num14;
						}
						num14 = (int)((double)((float)num14) * 1.6);
						num15 = (int)((double)((float)num15) * 1.35);
						num13 += WorldGen.genRand.Next(5, 10);
					}
					if (num10 > num9)
					{
						num13 += WorldGen.genRand.Next(num15 + 1, num15 + 3) + num16;
						num12 += WorldGen.genRand.Next(-5, 6);
						num11 = num3 * -1;
					}
					else
					{
						num12 += (WorldGen.genRand.Next(num14 + 1, num14 + 3) + num16) * num11;
						num13 += WorldGen.genRand.Next(-5, 6);
					}
					flag = false;
					rectangle = new Rectangle(num12 - num14 / 2, num13 - num15 / 2, num14, num15);
					for (int j = 0; j < i; j++)
					{
						if (rectangle.Intersects(array[j]))
						{
							flag = true;
						}
						if (WorldGen.genRand.Next(100) == 0)
						{
							num16++;
						}
					}
				}
				if (num10 > num9)
				{
					num9++;
					num10 = 1;
				}
				array[i] = rectangle;
				num3 = num11;
				num7 = num12;
				num8 = num13;
			}
			for (int k = 0; k < num2; k++)
			{
				for (int l = 0; l < 2; l++)
				{
					for (int m = 0; m < num2; m++)
					{
						for (int n = 0; n < 2; n++)
						{
							int num17 = array[k].X;
							if (l == 1)
							{
								num17 += array[k].Width - 1;
							}
							int num18 = array[k].Y;
							int num19 = num18 + array[k].Height;
							int num20 = array[m].X;
							if (n == 1)
							{
								num20 += array[m].Width - 1;
							}
							int y2 = array[m].Y;
							int num21 = y2 + array[m].Height;
							while (num17 != num20 || num18 != y2 || num19 != num21)
							{
								if (num17 < num20)
								{
									num17++;
								}
								if (num17 > num20)
								{
									num17--;
								}
								if (num18 < y2)
								{
									num18++;
								}
								if (num18 > y2)
								{
									num18--;
								}
								if (num19 < num21)
								{
									num19++;
								}
								if (num19 > num21)
								{
									num19--;
								}
								int num22 = num17;
								for (int num23 = num18; num23 < num19; num23++)
								{
									Main.tile[num22, num23].active(true);
									Main.tile[num22, num23].type = 226;
									Main.tile[num22, num23].liquid = 0;
									Main.tile[num22, num23].slope(0);
									Main.tile[num22, num23].halfBrick(false);
								}
							}
						}
					}
				}
			}
			for (int num24 = 0; num24 < num2; num24++)
			{
				if (WorldGen.genRand.Next(1) == 0)
				{
					for (int num25 = array[num24].X; num25 < array[num24].X + array[num24].Width; num25++)
					{
						for (int num26 = array[num24].Y; num26 < array[num24].Y + array[num24].Height; num26++)
						{
							Main.tile[num25, num26].active(true);
							Main.tile[num25, num26].type = 226;
							Main.tile[num25, num26].liquid = 0;
							Main.tile[num25, num26].slope(0);
							Main.tile[num25, num26].halfBrick(false);
						}
					}
					int num27 = array[num24].X;
					int num28 = num27 + array[num24].Width;
					int num29 = array[num24].Y;
					int num30 = num29 + array[num24].Height;
					num27 += WorldGen.genRand.Next(3, 8);
					num28 -= WorldGen.genRand.Next(3, 8);
					num29 += WorldGen.genRand.Next(3, 8);
					num30 -= WorldGen.genRand.Next(3, 8);
					int num31 = num27;
					int num32 = num28;
					int num33 = num29;
					int num34 = num30;
					int num35 = (num27 + num28) / 2;
					int num36 = (num29 + num30) / 2;
					for (int num37 = num27; num37 < num28; num37++)
					{
						for (int num38 = num29; num38 < num30; num38++)
						{
							if (WorldGen.genRand.Next(20) == 0)
							{
								num33 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num34 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num31 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num32 += WorldGen.genRand.Next(-1, 2);
							}
							if (num31 < num27)
							{
								num31 = num27;
							}
							if (num32 > num28)
							{
								num32 = num28;
							}
							if (num33 < num29)
							{
								num33 = num29;
							}
							if (num34 > num30)
							{
								num34 = num30;
							}
							if (num31 > num35)
							{
								num31 = num35;
							}
							if (num32 < num35)
							{
								num32 = num35;
							}
							if (num33 > num36)
							{
								num33 = num36;
							}
							if (num34 < num36)
							{
								num34 = num36;
							}
							if (num37 >= num31 && (num37 < num32 & num38 >= num33) && num38 <= num34)
							{
								Main.tile[num37, num38].active(false);
								Main.tile[num37, num38].wall = 87;
							}
						}
					}
					for (int num39 = num30; num39 > num29; num39--)
					{
						for (int num40 = num28; num40 > num27; num40--)
						{
							if (WorldGen.genRand.Next(20) == 0)
							{
								num33 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num34 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num31 += WorldGen.genRand.Next(-1, 2);
							}
							if (WorldGen.genRand.Next(20) == 0)
							{
								num32 += WorldGen.genRand.Next(-1, 2);
							}
							if (num31 < num27)
							{
								num31 = num27;
							}
							if (num32 > num28)
							{
								num32 = num28;
							}
							if (num33 < num29)
							{
								num33 = num29;
							}
							if (num34 > num30)
							{
								num34 = num30;
							}
							if (num31 > num35)
							{
								num31 = num35;
							}
							if (num32 < num35)
							{
								num32 = num35;
							}
							if (num33 > num36)
							{
								num33 = num36;
							}
							if (num34 < num36)
							{
								num34 = num36;
							}
							if (num40 >= num31 && (num40 < num32 & num39 >= num33) && num39 <= num34)
							{
								Main.tile[num40, num39].active(false);
								Main.tile[num40, num39].wall = 87;
							}
						}
					}
				}
			}
			Vector2 templePath = new Vector2((float)num5, (float)num6);
			for (int num41 = 0; num41 < num2; num41++)
			{
				Rectangle rectangle2 = array[num41];
				rectangle2.X += 8;
				rectangle2.Y += 8;
				rectangle2.Width -= 16;
				rectangle2.Height -= 16;
				bool flag2 = true;
				while (flag2)
				{
					int num42 = WorldGen.genRand.Next(rectangle2.X, rectangle2.X + rectangle2.Width);
					int num43 = WorldGen.genRand.Next(rectangle2.Y, rectangle2.Y + rectangle2.Height);
					templePath = WorldGen.templePather(templePath, num42, num43);
					if (templePath.X == (float)num42 && templePath.Y == (float)num43)
					{
						flag2 = false;
					}
				}
				if (num41 < num2 - 1)
				{
					if (WorldGen.genRand.Next(3) != 0)
					{
						int num44 = num41 + 1;
						if (array[num44].Y >= array[num41].Y + array[num41].Height)
						{
							rectangle2.X = array[num44].X;
							if (array[num44].X < array[num41].X)
							{
								rectangle2.X += (int)((double)((float)array[num44].Width) * 0.2);
							}
							else
							{
								rectangle2.X += (int)((double)((float)array[num44].Width) * 0.8);
							}
							rectangle2.Y = array[num44].Y;
						}
						else
						{
							rectangle2.X = (array[num41].X + array[num41].Width / 2 + (array[num44].X + array[num44].Width / 2)) / 2;
							rectangle2.Y = (int)((double)array[num44].Y + (double)array[num44].Height * 0.8);
						}
						int x2 = rectangle2.X;
						int y3 = rectangle2.Y;
						flag2 = true;
						while (flag2)
						{
							int num45 = WorldGen.genRand.Next(x2 - 6, x2 + 7);
							int num46 = WorldGen.genRand.Next(y3 - 6, y3 + 7);
							templePath = WorldGen.templePather(templePath, num45, num46);
							if (templePath.X == (float)num45 && templePath.Y == (float)num46)
							{
								flag2 = false;
							}
						}
					}
					else
					{
						int num47 = num41 + 1;
						int num48 = (array[num41].X + array[num41].Width / 2 + (array[num47].X + array[num47].Width / 2)) / 2;
						int num49 = (array[num41].Y + array[num41].Height / 2 + (array[num47].Y + array[num47].Height / 2)) / 2;
						flag2 = true;
						while (flag2)
						{
							int num50 = WorldGen.genRand.Next(num48 - 6, num48 + 7);
							int num51 = WorldGen.genRand.Next(num49 - 6, num49 + 7);
							templePath = WorldGen.templePather(templePath, num50, num51);
							if (templePath.X == (float)num50 && templePath.Y == (float)num51)
							{
								flag2 = false;
							}
						}
					}
				}
			}
			int num52 = Main.maxTilesX - 20;
			int num53 = 20;
			int num54 = Main.maxTilesY - 20;
			int num55 = 20;
			for (int num56 = 0; num56 < num2; num56++)
			{
				if (array[num56].X < num52)
				{
					num52 = array[num56].X;
				}
				if (array[num56].X + array[num56].Width > num53)
				{
					num53 = array[num56].X + array[num56].Width;
				}
				if (array[num56].Y < num54)
				{
					num54 = array[num56].Y;
				}
				if (array[num56].Y + array[num56].Height > num55)
				{
					num55 = array[num56].Y + array[num56].Height;
				}
			}
			num52 -= 10;
			num53 += 10;
			num54 -= 10;
			num55 += 10;
			for (int num57 = num52; num57 < num53; num57++)
			{
				for (int num58 = num54; num58 < num55; num58++)
				{
					WorldGen.outerTempled(num57, num58);
				}
			}
			for (int num59 = num53; num59 >= num52; num59--)
			{
				for (int num60 = num54; num60 < num55 / 2; num60++)
				{
					WorldGen.outerTempled(num59, num60);
				}
			}
			for (int num61 = num54; num61 < num55; num61++)
			{
				for (int num62 = num52; num62 < num53; num62++)
				{
					WorldGen.outerTempled(num62, num61);
				}
			}
			for (int num63 = num55; num63 >= num54; num63--)
			{
				for (int num64 = num52; num64 < num53; num64++)
				{
					WorldGen.outerTempled(num64, num63);
				}
			}
			num3 = -num4;
			Vector2 vector = new Vector2((float)num5, (float)num6);
			int num65 = WorldGen.genRand.Next(2, 5);
			bool flag3 = true;
			int num66 = 0;
			int num67 = WorldGen.genRand.Next(9, 14);
			while (flag3)
			{
				num66++;
				if (num66 >= num67)
				{
					num66 = 0;
					vector.Y -= 1f;
				}
				vector.X += (float)num3;
				int num68 = (int)vector.X;
				flag3 = false;
				int num69 = (int)vector.Y - num65;
				while ((float)num69 < vector.Y + (float)num65)
				{
					if (Main.tile[num68, num69].wall == 87 || (Main.tile[num68, num69].active() && Main.tile[num68, num69].type == 226))
					{
						flag3 = true;
					}
					if (Main.tile[num68, num69].active() && Main.tile[num68, num69].type == 226)
					{
						Main.tile[num68, num69].active(false);
						Main.tile[num68, num69].wall = 87;
					}
					num69++;
				}
			}
			int num70 = num5;
			int num71 = num6;
			while (!Main.tile[num70, num71].active())
			{
				num71++;
			}
			num71 -= 4;
			int num72 = num71;
			while ((Main.tile[num70, num72].active() && Main.tile[num70, num72].type == 226) || Main.tile[num70, num72].wall == 87)
			{
				num72--;
			}
			num72 += 2;
			for (int num73 = num70 - 1; num73 <= num70 + 1; num73++)
			{
				for (int num74 = num72; num74 <= num71; num74++)
				{
					Main.tile[num73, num74].active(true);
					Main.tile[num73, num74].type = 226;
					Main.tile[num73, num74].liquid = 0;
					Main.tile[num73, num74].slope(0);
					Main.tile[num73, num74].halfBrick(false);
				}
			}
			for (int num75 = num70 - 4; num75 <= num70 + 4; num75++)
			{
				for (int num76 = num71 - 1; num76 < num71 + 3; num76++)
				{
					Main.tile[num75, num76].active(false);
					Main.tile[num75, num76].wall = 87;
				}
			}
			for (int num77 = num70 - 1; num77 <= num70 + 1; num77++)
			{
				for (int num78 = num71 - 5; num78 <= num71 + 8; num78++)
				{
					Main.tile[num77, num78].active(true);
					Main.tile[num77, num78].type = 226;
					Main.tile[num77, num78].liquid = 0;
					Main.tile[num77, num78].slope(0);
					Main.tile[num77, num78].halfBrick(false);
				}
			}
			for (int num79 = num70 - 1; num79 <= num70 + 1; num79++)
			{
				for (int num80 = num71; num80 < num71 + 3; num80++)
				{
					Main.tile[num79, num80].active(false);
					Main.tile[num79, num80].wall = 87;
				}
			}
			WorldGen.PlaceTile(num70, num71, 10, true, false, -1, 11);
			for (int num81 = num52; num81 < num53; num81++)
			{
				for (int num82 = num54; num82 < num55; num82++)
				{
					WorldGen.templeCleaner(num81, num82);
				}
			}
			for (int num83 = num55; num83 >= num54; num83--)
			{
				for (int num84 = num53; num84 >= num52; num84--)
				{
					WorldGen.templeCleaner(num84, num83);
				}
			}
			for (int num85 = num52; num85 < num53; num85++)
			{
				for (int num86 = num54; num86 < num55; num86++)
				{
					bool flag4 = true;
					for (int num87 = num85 - 1; num87 <= num85 + 1; num87++)
					{
						for (int num88 = num86 - 1; num88 <= num86 + 1; num88++)
						{
							if ((!Main.tile[num87, num88].active() || Main.tile[num87, num88].type != 226) && Main.tile[num87, num88].wall != 87)
							{
								flag4 = false;
								break;
							}
						}
					}
					if (flag4)
					{
						Main.tile[num85, num86].wall = 87;
					}
				}
			}
			int num89 = 0;
			Rectangle rectangle3;
			int num90;
			int num91;
			while (true)
			{
				num89++;
				rectangle3 = array[num2 - 1];
				num90 = rectangle3.X + WorldGen.genRand.Next(rectangle3.Width);
				num91 = rectangle3.Y + WorldGen.genRand.Next(rectangle3.Height);
				WorldGen.PlaceTile(num90, num91, 237, false, false, -1, 0);
				if (Main.tile[num90, num91].type == 237)
				{
					break;
				}
				if (num89 >= 1000)
				{
					goto Block_117;
				}
			}
			WorldGen.lAltarX = num90 - Main.tile[num90, num91].frameX / 18;
			WorldGen.lAltarY = num91 - Main.tile[num90, num91].frameY / 18;
			goto IL_1578;
			Block_117:
			num90 = rectangle3.X + rectangle3.Width / 2;
			num91 = rectangle3.Y + rectangle3.Height / 2;
			num90 += WorldGen.genRand.Next(-10, 11);
			num91 += WorldGen.genRand.Next(-10, 11);
			while (!Main.tile[num90, num91].active())
			{
				num91++;
			}
			Main.tile[num90 - 1, num91].active(true);
			Main.tile[num90 - 1, num91].slope(0);
			Main.tile[num90 - 1, num91].halfBrick(false);
			Main.tile[num90 - 1, num91].type = 226;
			Main.tile[num90, num91].active(true);
			Main.tile[num90, num91].slope(0);
			Main.tile[num90, num91].halfBrick(false);
			Main.tile[num90, num91].type = 226;
			Main.tile[num90 + 1, num91].active(true);
			Main.tile[num90 + 1, num91].slope(0);
			Main.tile[num90 + 1, num91].halfBrick(false);
			Main.tile[num90 + 1, num91].type = 226;
			num91 -= 2;
			num90--;
			for (int num92 = -1; num92 <= 3; num92++)
			{
				for (int num93 = -1; num93 <= 1; num93++)
				{
					x = num90 + num92;
					y = num91 + num93;
					Main.tile[x, y].active(false);
				}
			}
			WorldGen.lAltarX = num90;
			WorldGen.lAltarY = num91;
			for (int num94 = 0; num94 <= 2; num94++)
			{
				for (int num95 = 0; num95 <= 1; num95++)
				{
					x = num90 + num94;
					y = num91 + num95;
					Main.tile[x, y].active(true);
					Main.tile[x, y].type = 237;
					Main.tile[x, y].frameX = (short)(num94 * 18);
					Main.tile[x, y].frameY = (short)(num95 * 18);
				}
			}
			IL_1578:
			float num96 = (float)num2 * 1.1f;
			num96 *= 1f + (float)WorldGen.genRand.Next(-25, 26) * 0.01f;
			int num97 = 0;
			while (num96 > 0f)
			{
				num97++;
				int num98 = WorldGen.genRand.Next(num2);
				int num99 = WorldGen.genRand.Next(array[num98].X, array[num98].X + array[num98].Width);
				int num100 = WorldGen.genRand.Next(array[num98].Y, array[num98].Y + array[num98].Height);
				if (Main.tile[num99, num100].wall == 87 && !Main.tile[num99, num100].active())
				{
					bool flag5 = false;
					if (WorldGen.genRand.Next(2) == 0)
					{
						int num101 = 1;
						if (WorldGen.genRand.Next(2) == 0)
						{
							num101 = -1;
						}
						while (!Main.tile[num99, num100].active())
						{
							num100 += num101;
						}
						num100 -= num101;
						int num102 = WorldGen.genRand.Next(2);
						int num103 = WorldGen.genRand.Next(3, 10);
						bool flag6 = true;
						for (int num104 = num99 - num103; num104 < num99 + num103; num104++)
						{
							for (int num105 = num100 - num103; num105 < num100 + num103; num105++)
							{
								if (Main.tile[num104, num105].active() && Main.tile[num104, num105].type == 10)
								{
									flag6 = false;
									break;
								}
							}
						}
						if (flag6)
						{
							for (int num106 = num99 - num103; num106 < num99 + num103; num106++)
							{
								for (int num107 = num100 - num103; num107 < num100 + num103; num107++)
								{
									if (WorldGen.SolidTile(num106, num107) && Main.tile[num106, num107].type != 232 && !WorldGen.SolidTile(num106, num107 - num101))
									{
										Main.tile[num106, num107].type = 232;
										flag5 = true;
										if (num102 == 0)
										{
											Main.tile[num106, num107 - 1].type = 232;
											Main.tile[num106, num107 - 1].active(true);
										}
										else
										{
											Main.tile[num106, num107 + 1].type = 232;
											Main.tile[num106, num107 + 1].active(true);
										}
										num102++;
										if (num102 > 1)
										{
											num102 = 0;
										}
									}
								}
							}
						}
						if (flag5)
						{
							num97 = 0;
							num96 -= 1f;
						}
					}
					else
					{
						int num108 = 1;
						if (WorldGen.genRand.Next(2) == 0)
						{
							num108 = -1;
						}
						while (!Main.tile[num99, num100].active())
						{
							num99 += num108;
						}
						num99 -= num108;
						int num109 = WorldGen.genRand.Next(2);
						int num110 = WorldGen.genRand.Next(3, 10);
						bool flag7 = true;
						for (int num111 = num99 - num110; num111 < num99 + num110; num111++)
						{
							for (int num112 = num100 - num110; num112 < num100 + num110; num112++)
							{
								if (Main.tile[num111, num112].active() && Main.tile[num111, num112].type == 10)
								{
									flag7 = false;
									break;
								}
							}
						}
						if (flag7)
						{
							for (int num113 = num99 - num110; num113 < num99 + num110; num113++)
							{
								for (int num114 = num100 - num110; num114 < num100 + num110; num114++)
								{
									if (WorldGen.SolidTile(num113, num114) && Main.tile[num113, num114].type != 232 && !WorldGen.SolidTile(num113 - num108, num114))
									{
										Main.tile[num113, num114].type = 232;
										flag5 = true;
										if (num109 == 0)
										{
											Main.tile[num113 - 1, num114].type = 232;
											Main.tile[num113 - 1, num114].active(true);
										}
										else
										{
											Main.tile[num113 + 1, num114].type = 232;
											Main.tile[num113 + 1, num114].active(true);
										}
										num109++;
										if (num109 > 1)
										{
											num109 = 0;
										}
									}
								}
							}
						}
						if (flag5)
						{
							num97 = 0;
							num96 -= 1f;
						}
					}
				}
				if (num97 > 1000)
				{
					num97 = 0;
					num96 -= 1f;
				}
			}
			WorldGen.tLeft = num52;
			WorldGen.tRight = num53;
			WorldGen.tTop = num54;
			WorldGen.tBottom = num55;
			WorldGen.tRooms = num2;
		}
		public static void templePart2()
		{
			int minValue = WorldGen.tLeft;
			int maxValue = WorldGen.tRight;
			int minValue2 = WorldGen.tTop;
			int num = WorldGen.tBottom;
			int num2 = WorldGen.tRooms;
			float num3 = (float)num2 * 1.9f;
			num3 *= 1f + (float)WorldGen.genRand.Next(-15, 16) * 0.01f;
			int num4 = 0;
			while (num3 > 0f)
			{
				int num5 = WorldGen.genRand.Next(minValue, maxValue);
				int num6 = WorldGen.genRand.Next(minValue2, num);
				if (Main.tile[num5, num6].wall == 87 && !Main.tile[num5, num6].active())
				{
					if (WorldGen.mayanTrap(num5, num6))
					{
						num3 -= 1f;
						num4 = 0;
					}
					else
					{
						num4++;
					}
				}
				else
				{
					num4++;
				}
				if (num4 > 100)
				{
					num4 = 0;
					num3 -= 1f;
				}
			}
			Main.tileSolid[232] = false;
			float num7 = (float)num2 * 0.35f;
			num7 *= 1f + (float)WorldGen.genRand.Next(-15, 16) * 0.01f;
			int contain = 1293;
			num4 = 0;
			while (num7 > 0f)
			{
				int num8 = WorldGen.genRand.Next(minValue, maxValue);
				int num9 = WorldGen.genRand.Next(minValue2, num);
				if (Main.tile[num8, num9].wall == 87 && !Main.tile[num8, num9].active() && WorldGen.AddBuriedChest(num8, num9, contain, true, 16))
				{
					num7 -= 1f;
					num4 = 0;
				}
				num4++;
				if (num4 > 10000)
				{
					break;
				}
			}
			float num10 = (float)num2 * 1.25f;
			num10 *= 1f + (float)WorldGen.genRand.Next(-25, 36) * 0.01f;
			num4 = 0;
			while (num10 > 0f)
			{
				num4++;
				int num11 = WorldGen.genRand.Next(minValue, maxValue);
				int num12 = WorldGen.genRand.Next(minValue2, num);
				if (Main.tile[num11, num12].wall == 87 && !Main.tile[num11, num12].active())
				{
					int num13 = num11;
					int num14 = num12;
					while (!Main.tile[num13, num14].active())
					{
						num14++;
						if (num14 > num)
						{
							break;
						}
					}
					num14--;
					if (num14 <= num)
					{
						WorldGen.PlaceTile(num13, num14, 105, true, false, -1, WorldGen.genRand.Next(43, 46));
						if (Main.tile[num13, num14].type == 105)
						{
							num10 -= 1f;
						}
					}
				}
			}
			float num15 = (float)num2 * 1.35f;
			num15 *= 1f + (float)WorldGen.genRand.Next(-15, 26) * 0.01f;
			num4 = 0;
			while (num15 > 0f)
			{
				num4++;
				int num16 = WorldGen.genRand.Next(minValue, maxValue);
				int num17 = WorldGen.genRand.Next(minValue2, num);
				if (Main.tile[num16, num17].wall == 87 && !Main.tile[num16, num17].active())
				{
					int num18 = num16;
					int num19 = num17;
					while (!Main.tile[num18, num19].active())
					{
						num19++;
						if (num19 > num)
						{
							break;
						}
					}
					num19--;
					if (num19 <= num)
					{
						int num20 = WorldGen.genRand.Next(3);
						if (num20 == 0)
						{
							WorldGen.PlaceTile(num18, num19, 18, true, false, -1, 10);
							if (Main.tile[num18, num19].type == 18)
							{
								num15 -= 1f;
							}
						}
						else if (num20 == 1)
						{
							WorldGen.PlaceTile(num18, num19, 14, true, false, -1, 9);
							if (Main.tile[num18, num19].type == 14)
							{
								num15 -= 1f;
							}
						}
						else if (num20 == 2)
						{
							WorldGen.PlaceTile(num18, num19, 15, true, false, -1, 12);
							if (Main.tile[num18, num19].type == 15)
							{
								num15 -= 1f;
							}
						}
					}
				}
				if (num4 > 10000)
				{
					break;
				}
			}
			Main.tileSolid[232] = true;
		}
		public static void dWallOut(int x, int y, int wall)
		{
			if (!WorldGen.SolidTile(x, y) && (int)Main.tile[x, y].wall != wall && Main.tile[x, y].wall > 0)
			{
				WorldGen.dWallCount++;
				if (WorldGen.dWallCount > 1000)
				{
					Main.tile[x, y].wall = 17;
					WorldGen.dWallBroke = true;
					return;
				}
				Main.tile[x, y].wall = (byte)wall;
				if ((int)Main.tile[x - 1, y].wall != wall)
				{
					WorldGen.dWallOut(x - 1, y, wall);
				}
				if ((int)Main.tile[x + 1, y].wall != wall)
				{
					WorldGen.dWallOut(x + 1, y, wall);
				}
				if ((int)Main.tile[x, y - 1].wall != wall)
				{
					WorldGen.dWallOut(x, y - 1, wall);
				}
				if ((int)Main.tile[x, y + 1].wall != wall)
				{
					WorldGen.dWallOut(x, y + 1, wall);
					return;
				}
			}
			else if (Main.tile[x, y].active())
			{
				Main.tile[x, y].wall = (byte)wall;
			}
		}
		public static bool nearPicture(int x, int y)
		{
			for (int i = x - 4; i <= x + 3; i++)
			{
				for (int j = y - 3; j <= y + 2; j++)
				{
					if (Main.tile[i, j].active())
					{
						return true;
					}
				}
			}
			return false;
		}
		public static bool nearPicture2(int x, int y)
		{
			if (Main.tile[x, y].wall != 7 && Main.tile[x, y].wall != 8 && Main.tile[x, y].wall != 9)
			{
				for (int i = x - 8; i <= x + 8; i++)
				{
					for (int j = y - 5; j <= y + 5; j++)
					{
						if (Main.tile[i, j].active() && (Main.tile[i, j].type == 240 || Main.tile[i, j].type == 241 || Main.tile[i, j].type == 242))
						{
							return true;
						}
					}
				}
			}
			else
			{
				for (int k = x - 15; k <= x + 15; k++)
				{
					for (int l = y - 10; l <= y + 10; l++)
					{
						if (Main.tile[k, l].active() && (Main.tile[k, l].type == 240 || Main.tile[k, l].type == 241 || Main.tile[k, l].type == 242))
						{
							return true;
						}
					}
				}
			}
			return false;
		}
		public static void MakeDungeon(int x, int y)
		{
			int num = WorldGen.genRand.Next(3);
			WorldGen.genRand.Next(3);
			ushort num2;
			int num3;
			switch (num)
			{
			case 0:
				num2 = 41;
				num3 = 7;
				goto IL_44;
			case 1:
				num2 = 43;
				num3 = 8;
				goto IL_44;
			}
			num2 = 44;
			num3 = 9;
			IL_44:
			WorldGen.numDDoors = 0;
			WorldGen.numDPlats = 0;
			WorldGen.numDRooms = 0;
			WorldGen.dungeonX = x;
			WorldGen.dungeonY = y;
			WorldGen.dMinX = x;
			WorldGen.dMaxX = x;
			WorldGen.dMinY = y;
			WorldGen.dMaxY = y;
			WorldGen.dxStrength1 = (double)WorldGen.genRand.Next(25, 30);
			WorldGen.dyStrength1 = (double)WorldGen.genRand.Next(20, 25);
			WorldGen.dxStrength2 = (double)WorldGen.genRand.Next(35, 50);
			WorldGen.dyStrength2 = (double)WorldGen.genRand.Next(10, 15);
			float num4 = (float)(Main.maxTilesX / 60);
			num4 += (float)WorldGen.genRand.Next(0, (int)(num4 / 3f));
			float num5 = num4;
			int num6 = 5;
			WorldGen.DungeonRoom(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
			while (num4 > 0f)
			{
				if (WorldGen.dungeonX < WorldGen.dMinX)
				{
					WorldGen.dMinX = WorldGen.dungeonX;
				}
				if (WorldGen.dungeonX > WorldGen.dMaxX)
				{
					WorldGen.dMaxX = WorldGen.dungeonX;
				}
				if (WorldGen.dungeonY > WorldGen.dMaxY)
				{
					WorldGen.dMaxY = WorldGen.dungeonY;
				}
				num4 -= 1f;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[58],
					" ",
					(int)((num5 - num4) / num5 * 60f),
					"%"
				});
				if (num6 > 0)
				{
					num6--;
				}
				if (num6 == 0 & WorldGen.genRand.Next(3) == 0)
				{
					num6 = 5;
					if (WorldGen.genRand.Next(2) == 0)
					{
						int num7 = WorldGen.dungeonX;
						int num8 = WorldGen.dungeonY;
						WorldGen.DungeonHalls(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3, false);
						if (WorldGen.genRand.Next(2) == 0)
						{
							WorldGen.DungeonHalls(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3, false);
						}
						WorldGen.DungeonRoom(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
						WorldGen.dungeonX = num7;
						WorldGen.dungeonY = num8;
					}
					else
					{
						WorldGen.DungeonRoom(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
					}
				}
				else
				{
					WorldGen.DungeonHalls(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3, false);
				}
			}
			WorldGen.DungeonRoom(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
			int num9 = WorldGen.dRoomX[0];
			int num10 = WorldGen.dRoomY[0];
			for (int i = 0; i < WorldGen.numDRooms; i++)
			{
				if (WorldGen.dRoomY[i] < num10)
				{
					num9 = WorldGen.dRoomX[i];
					num10 = WorldGen.dRoomY[i];
				}
			}
			WorldGen.dungeonX = num9;
			WorldGen.dungeonY = num10;
			WorldGen.dEnteranceX = num9;
			WorldGen.dSurface = false;
			num6 = 5;
			while (!WorldGen.dSurface)
			{
				if (num6 > 0)
				{
					num6--;
				}
				if (num6 == 0 && WorldGen.genRand.Next(5) == 0 && (double)WorldGen.dungeonY > Main.worldSurface + 100.0)
				{
					num6 = 10;
					int num11 = WorldGen.dungeonX;
					int num12 = WorldGen.dungeonY;
					WorldGen.DungeonHalls(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3, true);
					WorldGen.DungeonRoom(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
					WorldGen.dungeonX = num11;
					WorldGen.dungeonY = num12;
				}
				WorldGen.DungeonStairs(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
			}
			WorldGen.DungeonEnt(WorldGen.dungeonX, WorldGen.dungeonY, num2, num3);
			Main.statusText = Lang.gen[58] + " 65%";
			for (int j = 0; j < WorldGen.numDRooms; j++)
			{
				for (int k = WorldGen.dRoomL[j]; k <= WorldGen.dRoomR[j]; k++)
				{
					if (!Main.tile[k, WorldGen.dRoomT[j] - 1].active())
					{
						WorldGen.DPlatX[WorldGen.numDPlats] = k;
						WorldGen.DPlatY[WorldGen.numDPlats] = WorldGen.dRoomT[j] - 1;
						WorldGen.numDPlats++;
						break;
					}
				}
				for (int l = WorldGen.dRoomL[j]; l <= WorldGen.dRoomR[j]; l++)
				{
					if (!Main.tile[l, WorldGen.dRoomB[j] + 1].active())
					{
						WorldGen.DPlatX[WorldGen.numDPlats] = l;
						WorldGen.DPlatY[WorldGen.numDPlats] = WorldGen.dRoomB[j] + 1;
						WorldGen.numDPlats++;
						break;
					}
				}
				for (int m = WorldGen.dRoomT[j]; m <= WorldGen.dRoomB[j]; m++)
				{
					if (!Main.tile[WorldGen.dRoomL[j] - 1, m].active())
					{
						WorldGen.DDoorX[WorldGen.numDDoors] = WorldGen.dRoomL[j] - 1;
						WorldGen.DDoorY[WorldGen.numDDoors] = m;
						WorldGen.DDoorPos[WorldGen.numDDoors] = -1;
						WorldGen.numDDoors++;
						break;
					}
				}
				for (int n = WorldGen.dRoomT[j]; n <= WorldGen.dRoomB[j]; n++)
				{
					if (!Main.tile[WorldGen.dRoomR[j] + 1, n].active())
					{
						WorldGen.DDoorX[WorldGen.numDDoors] = WorldGen.dRoomR[j] + 1;
						WorldGen.DDoorY[WorldGen.numDDoors] = n;
						WorldGen.DDoorPos[WorldGen.numDDoors] = 1;
						WorldGen.numDDoors++;
						break;
					}
				}
			}
			Main.statusText = Lang.gen[58] + " 70%";
			int num13 = 0;
			int num14 = 1000;
			int num15 = 0;
			while (num15 < Main.maxTilesX / 100)
			{
				num13++;
				int num16 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num17 = WorldGen.genRand.Next((int)Main.worldSurface + 25, WorldGen.dMaxY);
				int num18 = num16;
				if ((int)Main.tile[num16, num17].wall == num3 && !Main.tile[num16, num17].active())
				{
					int num19 = 1;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num19 = -1;
					}
					while (!Main.tile[num16, num17].active())
					{
						num17 += num19;
					}
					if (Main.tile[num16 - 1, num17].active() && Main.tile[num16 + 1, num17].active() && !Main.tile[num16 - 1, num17 - num19].active() && !Main.tile[num16 + 1, num17 - num19].active())
					{
						num15++;
						int num20 = WorldGen.genRand.Next(5, 13);
						while (Main.tile[num16 - 1, num17].active() && Main.tile[num16, num17 + num19].active() && Main.tile[num16, num17].active() && !Main.tile[num16, num17 - num19].active() && num20 > 0)
						{
							Main.tile[num16, num17].type = 48;
							if (!Main.tile[num16 - 1, num17 - num19].active() && !Main.tile[num16 + 1, num17 - num19].active())
							{
								Main.tile[num16, num17 - num19].type = 48;
								Main.tile[num16, num17 - num19].active(true);
							}
							num16--;
							num20--;
						}
						num20 = WorldGen.genRand.Next(5, 13);
						num16 = num18 + 1;
						while (Main.tile[num16 + 1, num17].active() && Main.tile[num16, num17 + num19].active() && Main.tile[num16, num17].active() && !Main.tile[num16, num17 - num19].active() && num20 > 0)
						{
							Main.tile[num16, num17].type = 48;
							if (!Main.tile[num16 - 1, num17 - num19].active() && !Main.tile[num16 + 1, num17 - num19].active())
							{
								Main.tile[num16, num17 - num19].type = 48;
								Main.tile[num16, num17 - num19].active(true);
							}
							num16++;
							num20--;
						}
					}
				}
				if (num13 > num14)
				{
					num13 = 0;
					num15++;
				}
			}
			num13 = 0;
			num14 = 1000;
			num15 = 0;
			Main.statusText = Lang.gen[58] + " 75%";
			while (num15 < Main.maxTilesX / 100)
			{
				num13++;
				int num21 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num22 = WorldGen.genRand.Next((int)Main.worldSurface + 25, WorldGen.dMaxY);
				int num23 = num22;
				if ((int)Main.tile[num21, num22].wall == num3 && !Main.tile[num21, num22].active())
				{
					int num24 = 1;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num24 = -1;
					}
					while (num21 > 5 && num21 < Main.maxTilesX - 5 && !Main.tile[num21, num22].active())
					{
						num21 += num24;
					}
					if (Main.tile[num21, num22 - 1].active() && Main.tile[num21, num22 + 1].active() && !Main.tile[num21 - num24, num22 - 1].active() && !Main.tile[num21 - num24, num22 + 1].active())
					{
						num15++;
						int num25 = WorldGen.genRand.Next(5, 13);
						while (Main.tile[num21, num22 - 1].active() && Main.tile[num21 + num24, num22].active() && Main.tile[num21, num22].active() && !Main.tile[num21 - num24, num22].active() && num25 > 0)
						{
							Main.tile[num21, num22].type = 48;
							if (!Main.tile[num21 - num24, num22 - 1].active() && !Main.tile[num21 - num24, num22 + 1].active())
							{
								Main.tile[num21 - num24, num22].type = 48;
								Main.tile[num21 - num24, num22].active(true);
							}
							num22--;
							num25--;
						}
						num25 = WorldGen.genRand.Next(5, 13);
						num22 = num23 + 1;
						while (Main.tile[num21, num22 + 1].active() && Main.tile[num21 + num24, num22].active() && Main.tile[num21, num22].active() && !Main.tile[num21 - num24, num22].active() && num25 > 0)
						{
							Main.tile[num21, num22].type = 48;
							if (!Main.tile[num21 - num24, num22 - 1].active() && !Main.tile[num21 - num24, num22 + 1].active())
							{
								Main.tile[num21 - num24, num22].type = 48;
								Main.tile[num21 - num24, num22].active(true);
							}
							num22++;
							num25--;
						}
					}
				}
				if (num13 > num14)
				{
					num13 = 0;
					num15++;
				}
			}
			Main.statusText = Lang.gen[58] + " 80%";
			for (int num26 = 0; num26 < WorldGen.numDDoors; num26++)
			{
				int num27 = WorldGen.DDoorX[num26] - 10;
				int num28 = WorldGen.DDoorX[num26] + 10;
				int num29 = 100;
				int num30 = 0;
				for (int num31 = num27; num31 < num28; num31++)
				{
					bool flag = true;
					int num32 = WorldGen.DDoorY[num26];
					while (num32 > 10 && !Main.tile[num31, num32].active())
					{
						num32--;
					}
					if (!Main.tileDungeon[(int)Main.tile[num31, num32].type])
					{
						flag = false;
					}
					int num33 = num32;
					num32 = WorldGen.DDoorY[num26];
					while (!Main.tile[num31, num32].active())
					{
						num32++;
					}
					if (!Main.tileDungeon[(int)Main.tile[num31, num32].type])
					{
						flag = false;
					}
					int num34 = num32;
					if (num34 - num33 >= 3)
					{
						int num35 = num31 - 20;
						int num36 = num31 + 20;
						int num37 = num34 - 10;
						int num38 = num34 + 10;
						for (int num39 = num35; num39 < num36; num39++)
						{
							for (int num40 = num37; num40 < num38; num40++)
							{
								if (Main.tile[num39, num40].active() && Main.tile[num39, num40].type == 10)
								{
									flag = false;
									break;
								}
							}
						}
						if (flag)
						{
							for (int num41 = num34 - 3; num41 < num34; num41++)
							{
								for (int num42 = num31 - 3; num42 <= num31 + 3; num42++)
								{
									if (Main.tile[num42, num41].active())
									{
										flag = false;
										break;
									}
								}
							}
						}
						if (flag && num34 - num33 < 20)
						{
							bool flag2 = false;
							if (WorldGen.DDoorPos[num26] == 0 && num34 - num33 < num29)
							{
								flag2 = true;
							}
							if (WorldGen.DDoorPos[num26] == -1 && num31 > num30)
							{
								flag2 = true;
							}
							if (WorldGen.DDoorPos[num26] == 1 && (num31 < num30 || num30 == 0))
							{
								flag2 = true;
							}
							if (flag2)
							{
								num30 = num31;
								num29 = num34 - num33;
							}
						}
					}
				}
				if (num29 < 20)
				{
					int num43 = num30;
					int num44 = WorldGen.DDoorY[num26];
					int num45 = num44;
					while (!Main.tile[num43, num44].active())
					{
						Main.tile[num43, num44].active(false);
						num44++;
					}
					while (!Main.tile[num43, num45].active())
					{
						num45--;
					}
					num44--;
					num45++;
					for (int num46 = num45; num46 < num44 - 2; num46++)
					{
						Main.tile[num43, num46].active(true);
						Main.tile[num43, num46].type = num2;
					}
					int style = 13;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (num3 == 7)
						{
							style = 16;
						}
						else if (num3 == 8)
						{
							style = 17;
						}
						else if (num3 == 9)
						{
							style = 18;
						}
					}
					WorldGen.PlaceTile(num43, num44, 10, true, false, -1, style);
					num43--;
					int num47 = num44 - 3;
					while (!Main.tile[num43, num47].active())
					{
						num47--;
					}
					if (num44 - num47 < num44 - num45 + 5 && Main.tileDungeon[(int)Main.tile[num43, num47].type])
					{
						for (int num48 = num44 - 4 - WorldGen.genRand.Next(3); num48 > num47; num48--)
						{
							Main.tile[num43, num48].active(true);
							Main.tile[num43, num48].type = num2;
						}
					}
					num43 += 2;
					num47 = num44 - 3;
					while (!Main.tile[num43, num47].active())
					{
						num47--;
					}
					if (num44 - num47 < num44 - num45 + 5 && Main.tileDungeon[(int)Main.tile[num43, num47].type])
					{
						for (int num49 = num44 - 4 - WorldGen.genRand.Next(3); num49 > num47; num49--)
						{
							Main.tile[num43, num49].active(true);
							Main.tile[num43, num49].type = num2;
						}
					}
					num44++;
					num43--;
					Main.tile[num43 - 1, num44].active(true);
					Main.tile[num43 - 1, num44].type = num2;
					Main.tile[num43 + 1, num44].active(true);
					Main.tile[num43 + 1, num44].type = num2;
				}
			}
			int[] array = new int[3];
			if (num3 == 7)
			{
				array[0] = 7;
				array[1] = 94;
				array[2] = 95;
			}
			else if (num3 == 9)
			{
				array[0] = 9;
				array[1] = 96;
				array[2] = 97;
			}
			else
			{
				array[0] = 8;
				array[1] = 98;
				array[2] = 99;
			}
			for (int num50 = 0; num50 < 5; num50++)
			{
				for (int num51 = 0; num51 < 3; num51++)
				{
					int num52 = WorldGen.genRand.Next(40, 240);
					int num53 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
					int num54 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
					for (int num55 = num53 - num52; num55 < num53 + num52; num55++)
					{
						for (int num56 = num54 - num52; num56 < num54 + num52; num56++)
						{
							if ((double)num56 > Main.worldSurface)
							{
								float num57 = (float)Math.Abs(num53 - num55);
								float num58 = (float)Math.Abs(num54 - num56);
								double num59 = Math.Sqrt((double)(num57 * num57 + num58 * num58));
								if (num59 < (double)num52 * 0.4 && Main.wallDungeon[(int)Main.tile[num55, num56].wall])
								{
									WorldGen.dWallCount = 0;
									WorldGen.dWallOut(num55, num56, array[num51]);
									while (WorldGen.dWallBroke)
									{
										WorldGen.dWallBroke = false;
										for (int num60 = WorldGen.dMinX; num60 < WorldGen.dMaxX; num60++)
										{
											for (int num61 = 10; num61 < WorldGen.dMaxY; num61++)
											{
												if (Main.tile[num60, num61].wall == 17)
												{
													WorldGen.dWallCount = 0;
													WorldGen.dWallOut(num60, num61, array[num51]);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			Main.statusText = Lang.gen[58] + " 85%";
			for (int num62 = 0; num62 < WorldGen.numDPlats; num62++)
			{
				int num63 = WorldGen.DPlatX[num62];
				int num64 = WorldGen.DPlatY[num62];
				int num65 = Main.maxTilesX;
				int num66 = 10;
				if ((double)num64 < Main.worldSurface + 50.0)
				{
					num66 = 20;
				}
				for (int num67 = num64 - 5; num67 <= num64 + 5; num67++)
				{
					int num68 = num63;
					int num69 = num63;
					bool flag3 = false;
					if (Main.tile[num68, num67].active())
					{
						flag3 = true;
					}
					else
					{
						while (!Main.tile[num68, num67].active())
						{
							num68--;
							if (!Main.tileDungeon[(int)Main.tile[num68, num67].type])
							{
								flag3 = true;
							}
						}
						while (!Main.tile[num69, num67].active())
						{
							num69++;
							if (!Main.tileDungeon[(int)Main.tile[num69, num67].type])
							{
								flag3 = true;
							}
						}
					}
					if (!flag3 && num69 - num68 <= num66)
					{
						bool flag4 = true;
						int num70 = num63 - num66 / 2 - 2;
						int num71 = num63 + num66 / 2 + 2;
						int num72 = num67 - 5;
						int num73 = num67 + 5;
						for (int num74 = num70; num74 <= num71; num74++)
						{
							for (int num75 = num72; num75 <= num73; num75++)
							{
								if (Main.tile[num74, num75].active() && Main.tile[num74, num75].type == 19)
								{
									flag4 = false;
									break;
								}
							}
						}
						for (int num76 = num67 + 3; num76 >= num67 - 5; num76--)
						{
							if (Main.tile[num63, num76].active())
							{
								flag4 = false;
								break;
							}
						}
						if (flag4)
						{
							num65 = num67;
							break;
						}
					}
				}
				if (num65 > num64 - 10 && num65 < num64 + 10)
				{
					int num77 = num63;
					int num78 = num65;
					int num79 = num63 + 1;
					while (!Main.tile[num77, num78].active())
					{
						Main.tile[num77, num78].active(true);
						Main.tile[num77, num78].type = 19;
						if (num3 == 7)
						{
							Main.tile[num77, num78].frameY = 108;
						}
						if (num3 == 8)
						{
							Main.tile[num77, num78].frameY = 144;
						}
						if (num3 == 9)
						{
							Main.tile[num77, num78].frameY = 126;
						}
						num77--;
					}
					while (!Main.tile[num79, num78].active())
					{
						Main.tile[num79, num78].active(true);
						Main.tile[num79, num78].type = 19;
						if (num3 == 7)
						{
							Main.tile[num79, num78].frameY = 108;
						}
						if (num3 == 8)
						{
							Main.tile[num79, num78].frameY = 144;
						}
						if (num3 == 9)
						{
							Main.tile[num79, num78].frameY = 126;
						}
						num79++;
					}
				}
			}
			for (int num80 = 0; num80 < 4; num80++)
			{
				bool flag5 = false;
				while (!flag5)
				{
					int num81 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
					int num82 = WorldGen.genRand.Next((int)Main.worldSurface, WorldGen.dMaxY);
					if (Main.wallDungeon[(int)Main.tile[num81, num82].wall] && !Main.tile[num81, num82].active())
					{
						int contain = 0;
						int style2 = 0;
						if (num80 == 0)
						{
							style2 = 23;
							contain = 1156;
						}
						else if (num80 == 1)
						{
							if (!WorldGen.crimson)
							{
								style2 = 24;
								contain = 1571;
							}
							else
							{
								style2 = 25;
								contain = 1569;
							}
						}
						else if (num80 == 2)
						{
							style2 = 26;
							contain = 1260;
						}
						else if (num80 == 3)
						{
							style2 = 27;
							contain = 1572;
						}
						flag5 = WorldGen.AddBuriedChest(num81, num82, contain, false, style2);
					}
				}
			}
			int[] array2 = new int[3];
			array2[0] = WorldGen.genRand.Next(9, 13);
			array2[1] = WorldGen.genRand.Next(9, 13);
			while (array2[1] == array2[0])
			{
				array2[1] = WorldGen.genRand.Next(9, 13);
			}
			array2[2] = WorldGen.genRand.Next(9, 13);
			while (array2[2] == array2[0] || array2[2] == array2[1])
			{
				array2[2] = WorldGen.genRand.Next(9, 13);
			}
			Main.statusText = Lang.gen[58] + " 90%";
			num13 = 0;
			num14 = 1000;
			num15 = 0;
			while (num15 < Main.maxTilesX / 20)
			{
				num13++;
				int num83 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num84 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				bool flag6 = true;
				if (Main.wallDungeon[(int)Main.tile[num83, num84].wall] && !Main.tile[num83, num84].active())
				{
					int num85 = 1;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num85 = -1;
					}
					while (flag6 && !Main.tile[num83, num84].active())
					{
						num83 -= num85;
						if (num83 < 5 || num83 > Main.maxTilesX - 5)
						{
							flag6 = false;
						}
						else if (Main.tile[num83, num84].active() && !Main.tileDungeon[(int)Main.tile[num83, num84].type])
						{
							flag6 = false;
						}
					}
					if (flag6 && Main.tile[num83, num84].active() && Main.tileDungeon[(int)Main.tile[num83, num84].type] && Main.tile[num83, num84 - 1].active() && Main.tileDungeon[(int)Main.tile[num83, num84 - 1].type] && Main.tile[num83, num84 + 1].active() && Main.tileDungeon[(int)Main.tile[num83, num84 + 1].type])
					{
						num83 += num85;
						for (int num86 = num83 - 3; num86 <= num83 + 3; num86++)
						{
							for (int num87 = num84 - 3; num87 <= num84 + 3; num87++)
							{
								if (Main.tile[num86, num87].active() && Main.tile[num86, num87].type == 19)
								{
									flag6 = false;
									break;
								}
							}
						}
						if (flag6 && (!Main.tile[num83, num84 - 1].active() & !Main.tile[num83, num84 - 2].active() & !Main.tile[num83, num84 - 3].active()))
						{
							int num88 = num83;
							int num89 = num83;
							while (num88 > WorldGen.dMinX && num88 < WorldGen.dMaxX && !Main.tile[num88, num84].active() && !Main.tile[num88, num84 - 1].active() && !Main.tile[num88, num84 + 1].active())
							{
								num88 += num85;
							}
							num88 = Math.Abs(num83 - num88);
							bool flag7 = false;
							if (WorldGen.genRand.Next(2) == 0)
							{
								flag7 = true;
							}
							if (num88 > 5)
							{
								for (int num90 = WorldGen.genRand.Next(1, 4); num90 > 0; num90--)
								{
									Main.tile[num83, num84].active(true);
									Main.tile[num83, num84].type = 19;
									if ((int)Main.tile[num83, num84].wall == array[0])
									{
										Main.tile[num83, num84].frameY = (short)(18 * array2[0]);
									}
									if ((int)Main.tile[num83, num84].wall == array[1])
									{
										Main.tile[num83, num84].frameY = (short)(18 * array2[1]);
									}
									if ((int)Main.tile[num83, num84].wall == array[2])
									{
										Main.tile[num83, num84].frameY = (short)(18 * array2[2]);
									}
									if (flag7)
									{
										WorldGen.PlaceTile(num83, num84 - 1, 50, true, false, -1, 0);
										if (WorldGen.genRand.Next(50) == 0 && Main.tile[num83, num84 - 1].type == 50)
										{
											Main.tile[num83, num84 - 1].frameX = 90;
										}
									}
									num83 += num85;
								}
								num13 = 0;
								num15++;
								if (!flag7 && WorldGen.genRand.Next(2) == 0)
								{
									num83 = num89;
									num84--;
									int num91 = 0;
									if (WorldGen.genRand.Next(4) == 0)
									{
										num91 = 1;
									}
									if (num91 == 0)
									{
										num91 = 13;
									}
									else if (num91 == 1)
									{
										num91 = 49;
									}
									WorldGen.PlaceTile(num83, num84, num91, true, false, -1, 0);
									if (Main.tile[num83, num84].type == 13)
									{
										if (WorldGen.genRand.Next(2) == 0)
										{
											Main.tile[num83, num84].frameX = 18;
										}
										else
										{
											Main.tile[num83, num84].frameX = 36;
										}
									}
								}
							}
						}
					}
				}
				if (num13 > num14)
				{
					num13 = 0;
					num15++;
				}
			}
			Main.statusText = Lang.gen[58] + " 95%";
			int num92 = 1;
			for (int num93 = 0; num93 < WorldGen.numDRooms; num93++)
			{
				int num94 = 0;
				while (num94 < 1000)
				{
					int num95 = (int)((double)WorldGen.dRoomSize[num93] * 0.4);
					int i2 = WorldGen.dRoomX[num93] + WorldGen.genRand.Next(-num95, num95 + 1);
					int num96 = WorldGen.dRoomY[num93] + WorldGen.genRand.Next(-num95, num95 + 1);
					int style3 = 2;
					int num97;
					if (num92 == 1)
					{
						num97 = 329;
					}
					else if (num92 == 2)
					{
						num97 = 155;
					}
					else if (num92 == 3)
					{
						num97 = 156;
					}
					else if (num92 == 4)
					{
						num97 = 157;
					}
					else if (num92 == 5)
					{
						num97 = 163;
					}
					else if (num92 == 6)
					{
						num97 = 113;
					}
					else if (num92 == 7)
					{
						num97 = 327;
						style3 = 0;
					}
					else
					{
						num97 = 164;
						num92 = 0;
					}
					if ((double)num96 < Main.worldSurface + 50.0)
					{
						num97 = 327;
						style3 = 0;
					}
					if (num97 == 0 && WorldGen.genRand.Next(2) == 0)
					{
						num94 = 1000;
					}
					else
					{
						if (WorldGen.AddBuriedChest(i2, num96, num97, false, style3))
						{
							num94 += 1000;
							num92++;
						}
						num94++;
					}
				}
			}
			WorldGen.dMinX -= 25;
			WorldGen.dMaxX += 25;
			WorldGen.dMinY -= 25;
			WorldGen.dMaxY += 25;
			if (WorldGen.dMinX < 0)
			{
				WorldGen.dMinX = 0;
			}
			if (WorldGen.dMaxX > Main.maxTilesX)
			{
				WorldGen.dMaxX = Main.maxTilesX;
			}
			if (WorldGen.dMinY < 0)
			{
				WorldGen.dMinY = 0;
			}
			if (WorldGen.dMaxY > Main.maxTilesY)
			{
				WorldGen.dMaxY = Main.maxTilesY;
			}
			num13 = 0;
			num14 = 1000;
			num15 = 0;
			int[] array3 = new int[3];
			array3[0] = WorldGen.genRand.Next(7);
			array3[1] = WorldGen.genRand.Next(7);
			while (array3[1] == array3[0])
			{
				array3[1] = WorldGen.genRand.Next(7);
			}
			array3[2] = WorldGen.genRand.Next(7);
			while (array3[2] == array3[0] || array3[2] == array3[1])
			{
				array3[2] = WorldGen.genRand.Next(7);
			}
			while (num15 < Main.maxTilesX / 150)
			{
				num13++;
				int num98 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num99 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				if (Main.wallDungeon[(int)Main.tile[num98, num99].wall])
				{
					int num100 = num99;
					while (num100 > WorldGen.dMinY)
					{
						if (Main.tile[num98, num100 - 1].active() && Main.tile[num98, num100 - 1].type == num2)
						{
							bool flag8 = false;
							for (int num101 = num98 - 15; num101 < num98 + 15; num101++)
							{
								for (int num102 = num100 - 15; num102 < num100 + 15; num102++)
								{
									if (num101 > 0 && num101 < Main.maxTilesX && num102 > 0 && num102 < Main.maxTilesY && Main.tile[num101, num102].type == 42)
									{
										flag8 = true;
										break;
									}
								}
							}
							if (Main.tile[num98 - 1, num100].active() || Main.tile[num98 + 1, num100].active() || Main.tile[num98 - 1, num100 + 1].active() || Main.tile[num98 + 1, num100 + 1].active() || Main.tile[num98, num100 + 2].active())
							{
								flag8 = true;
							}
							if (flag8)
							{
								break;
							}
							int style4 = array3[0];
							if ((int)Main.tile[num98, num100].wall == array[1])
							{
								style4 = array3[1];
							}
							if ((int)Main.tile[num98, num100].wall == array[2])
							{
								style4 = array3[2];
							}
							WorldGen.Place1x2Top(num98, num100, 42, style4);
							if (Main.tile[num98, num100].type == 42)
							{
								num13 = 0;
								num15++;
								for (int num103 = 0; num103 < 1000; num103++)
								{
									int num104 = num98 + WorldGen.genRand.Next(-12, 13);
									int num105 = num100 + WorldGen.genRand.Next(3, 21);
									if (!Main.tile[num104, num105].active() && !Main.tile[num104, num105 + 1].active() && Main.tile[num104 - 1, num105].type != 48 && Main.tile[num104 + 1, num105].type != 48 && Collision.CanHit(new Vector2((float)(num104 * 16), (float)(num105 * 16)), 16, 16, new Vector2((float)(num98 * 16), (float)(num100 * 16 + 1)), 16, 16))
									{
										if ((WorldGen.SolidTile(num104 - 1, num105) && Main.tile[num104 - 1, num105].type != 10) || (WorldGen.SolidTile(num104 + 1, num105) && Main.tile[num104 + 1, num105].type != 10) || WorldGen.SolidTile(num104, num105 + 1))
										{
											WorldGen.PlaceTile(num104, num105, 136, true, false, -1, 0);
										}
										if (Main.tile[num104, num105].active())
										{
											while (num104 != num98 || num105 != num100)
											{
												Main.tile[num104, num105].wire(true);
												if (num104 > num98)
												{
													num104--;
												}
												if (num104 < num98)
												{
													num104++;
												}
												Main.tile[num104, num105].wire(true);
												if (num105 > num100)
												{
													num105--;
												}
												if (num105 < num100)
												{
													num105++;
												}
												Main.tile[num104, num105].wire(true);
											}
											if (Main.rand.Next(3) > 0)
											{
												Main.tile[num98, num100].frameX = 18;
												Main.tile[num98, num100 + 1].frameX = 18;
												break;
											}
											break;
										}
									}
								}
								break;
							}
							break;
						}
						else
						{
							num100--;
						}
					}
				}
				if (num13 > num14)
				{
					num15++;
					num13 = 0;
				}
			}
			num13 = 0;
			num14 = 1000;
			num15 = 0;
			while (num15 < Main.maxTilesX / 500)
			{
				num13++;
				int num106 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num107 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				while ((double)num107 < Main.worldSurface)
				{
					num107 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				}
				if (Main.wallDungeon[(int)Main.tile[num106, num107].wall] && WorldGen.placeTrap(num106, num107, 0))
				{
					num13 = num14;
				}
				if (num13 > num14)
				{
					num15++;
					num13 = 0;
				}
			}
			float num108 = 8400000f / (float)Main.maxTilesX;
			int num109 = 0;
			while ((float)num109 < num108)
			{
				int num110 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num111 = WorldGen.genRand.Next(50, WorldGen.dMaxY);
				while (!Main.wallDungeon[(int)Main.tile[num110, num111].wall] || Main.tile[num110, num111].active())
				{
					num110 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
					num111 = WorldGen.genRand.Next(50, WorldGen.dMaxY);
				}
				if (Main.wallDungeon[(int)Main.tile[num110, num111].wall] && !Main.tile[num110, num111].active())
				{
					while (!WorldGen.SolidTile(num110, num111) && num111 < Main.maxTilesY - 200)
					{
						num111++;
					}
					num111--;
					int num112 = num110;
					int num113 = num110;
					while (!Main.tile[num112, num111].active() && WorldGen.SolidTile(num112, num111 + 1))
					{
						num112--;
					}
					num112++;
					while (!Main.tile[num113, num111].active() && WorldGen.SolidTile(num113, num111 + 1))
					{
						num113++;
					}
					num113--;
					int num114 = num113 - num112;
					int num115 = (num113 + num112) / 2;
					if (!Main.tile[num115, num111].active() && Main.wallDungeon[(int)Main.tile[num115, num111].wall] && WorldGen.SolidTile(num115, num111 + 1) && Main.tile[num115, num111 + 1].type != 48)
					{
						int style5 = 13;
						int style6 = 10;
						int style7 = 11;
						int num116 = 1;
						int num117 = 46;
						int style8 = 1;
						int num118 = 5;
						int num119 = 11;
						int num120 = 5;
						int num121 = 6;
						int num122 = 21;
						int num123 = 22;
						int num124 = 24;
						if (num3 == 8)
						{
							style5 = 14;
							style6 = 11;
							style7 = 12;
							num116 = 2;
							num117 = 47;
							style8 = 2;
							num118 = 6;
							num119 = 12;
							num120 = 6;
							num121 = 7;
							num122 = 22;
							num123 = 23;
							num124 = 25;
						}
						else if (num3 == 9)
						{
							style5 = 15;
							style6 = 12;
							style7 = 13;
							num116 = 3;
							num117 = 48;
							style8 = 3;
							num118 = 7;
							num119 = 13;
							num120 = 7;
							num121 = 8;
							num122 = 23;
							num123 = 24;
							num124 = 26;
						}
						if (Main.tile[num115, num111].wall >= 94 && Main.tile[num115, num111].wall <= 105)
						{
							style5 = 17;
							style6 = 14;
							style7 = 15;
							num116 = -1;
							num117 = -1;
							style8 = 5;
							num118 = -1;
							num119 = -1;
							num120 = -1;
							num121 = -1;
							num122 = -1;
							num123 = -1;
							num124 = -1;
						}
						int num125 = WorldGen.genRand.Next(12);
						if ((num125 == 10 || num125 == 11) && Main.rand.Next(4) != 0)
						{
							num125 = WorldGen.genRand.Next(12);
						}
						while ((num125 == 2 && num117 == -1) || (num125 == 5 && num118 == -1) || (num125 == 6 && num119 == -1) || (num125 == 7 && num120 == -1) || (num125 == 8 && num121 == -1) || (num125 == 9 && num122 == -1) || (num125 == 10 && num123 == -1) || (num125 == 11 && num124 == -1))
						{
							num125 = WorldGen.genRand.Next(9);
						}
						int num126 = 0;
						int num127 = 0;
						if (num125 == 0)
						{
							num126 = 5;
							num127 = 4;
						}
						if (num125 == 1)
						{
							num126 = 4;
							num127 = 3;
						}
						if (num125 == 2)
						{
							num126 = 3;
							num127 = 5;
						}
						if (num125 == 3)
						{
							num126 = 4;
							num127 = 6;
						}
						if (num125 == 4)
						{
							num126 = 3;
							num127 = 3;
						}
						if (num125 == 5)
						{
							num126 = 5;
							num127 = 3;
						}
						if (num125 == 6)
						{
							num126 = 5;
							num127 = 4;
						}
						if (num125 == 7)
						{
							num126 = 5;
							num127 = 4;
						}
						if (num125 == 8)
						{
							num126 = 5;
							num127 = 4;
						}
						if (num125 == 9)
						{
							num126 = 5;
							num127 = 3;
						}
						if (num125 == 10)
						{
							num126 = 2;
							num127 = 4;
						}
						if (num125 == 11)
						{
							num126 = 3;
							num127 = 3;
						}
						for (int num128 = num115 - num126; num128 <= num115 + num126; num128++)
						{
							for (int num129 = num111 - num127; num129 <= num111; num129++)
							{
								if (Main.tile[num128, num129].active())
								{
									num125 = -1;
									break;
								}
							}
						}
						if ((double)num114 < (double)num126 * 1.75)
						{
							num125 = -1;
						}
						if (num125 == 0)
						{
							WorldGen.PlaceTile(num115, num111, 14, true, false, -1, style6);
							if (Main.tile[num115, num111].active())
							{
								if (!Main.tile[num115 - 2, num111].active())
								{
									WorldGen.PlaceTile(num115 - 2, num111, 15, true, false, -1, style5);
									if (Main.tile[num115 - 2, num111].active())
									{
										Tile expr_2899 = Main.tile[num115 - 2, num111];
										expr_2899.frameX = (short)(expr_2899.frameX + 18);
										Tile expr_28BA = Main.tile[num115 - 2, num111 - 1];
										expr_28BA.frameX = (short)(expr_28BA.frameX + 18);
									}
								}
								if (!Main.tile[num115 + 2, num111].active())
								{
									WorldGen.PlaceTile(num115 + 2, num111, 15, true, false, -1, style5);
								}
							}
							for (int num130 = num115 - 1; num130 <= num115 + 1; num130++)
							{
								if (WorldGen.genRand.Next(2) == 0 && !Main.tile[num130, num111 - 2].active())
								{
									int num131 = WorldGen.genRand.Next(5);
									if (num116 != -1 && num131 <= 1 && !Main.tileLighted[(int)Main.tile[num130 - 1, num111 - 2].type])
									{
										WorldGen.PlaceTile(num130, num111 - 2, 33, true, false, -1, num116);
									}
									if (num131 == 2 && !Main.tileLighted[(int)Main.tile[num130 - 1, num111 - 2].type])
									{
										WorldGen.PlaceTile(num130, num111 - 2, 49, true, false, -1, 0);
									}
									if (num131 == 3)
									{
										WorldGen.PlaceTile(num130, num111 - 2, 50, true, false, -1, 0);
									}
									if (num131 == 4)
									{
										WorldGen.PlaceTile(num130, num111 - 2, 103, true, false, -1, 0);
									}
								}
							}
						}
						else if (num125 == 1)
						{
							WorldGen.PlaceTile(num115, num111, 18, true, false, -1, style7);
							if (Main.tile[num115, num111].active())
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									if (!Main.tile[num115 - 1, num111].active())
									{
										WorldGen.PlaceTile(num115 - 1, num111, 15, true, false, -1, style5);
										if (Main.tile[num115 - 1, num111].active())
										{
											Tile expr_2A80 = Main.tile[num115 - 1, num111];
											expr_2A80.frameX = (short)(expr_2A80.frameX + 18);
											Tile expr_2AA1 = Main.tile[num115 - 1, num111 - 1];
											expr_2AA1.frameX = (short)(expr_2AA1.frameX + 18);
										}
									}
								}
								else if (!Main.tile[num115 + 2, num111].active())
								{
									WorldGen.PlaceTile(num115 + 2, num111, 15, true, false, -1, style5);
								}
								for (int num132 = num115; num132 <= num115 + 1; num132++)
								{
									if (WorldGen.genRand.Next(2) == 0 && !Main.tile[num132, num111 - 1].active())
									{
										int num133 = WorldGen.genRand.Next(5);
										if (num116 != -1 && num133 <= 1 && !Main.tileLighted[(int)Main.tile[num132 - 1, num111 - 1].type])
										{
											WorldGen.PlaceTile(num132, num111 - 1, 33, true, false, -1, num116);
										}
										if (num133 == 2 && !Main.tileLighted[(int)Main.tile[num132 - 1, num111 - 1].type])
										{
											WorldGen.PlaceTile(num132, num111 - 1, 49, true, false, -1, 0);
										}
										if (num133 == 3)
										{
											WorldGen.PlaceTile(num132, num111 - 1, 50, true, false, -1, 0);
										}
										if (num133 == 4)
										{
											WorldGen.PlaceTile(num132, num111 - 1, 103, true, false, -1, 0);
										}
									}
								}
							}
						}
						else if (num125 == 2)
						{
							WorldGen.PlaceTile(num115, num111, 105, true, false, -1, num117);
						}
						else if (num125 == 3)
						{
							WorldGen.PlaceTile(num115, num111, 101, true, false, -1, style8);
						}
						else if (num125 == 4)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.PlaceTile(num115, num111, 15, true, false, -1, style5);
								Tile expr_2C39 = Main.tile[num115, num111];
								expr_2C39.frameX = (short)(expr_2C39.frameX + 18);
								Tile expr_2C58 = Main.tile[num115, num111 - 1];
								expr_2C58.frameX = (short)(expr_2C58.frameX + 18);
							}
							else
							{
								WorldGen.PlaceTile(num115, num111, 15, true, false, -1, style5);
							}
						}
						else if (num125 == 5)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.Place4x2(num115, num111, 79, 1, num118);
							}
							else
							{
								WorldGen.Place4x2(num115, num111, 79, -1, num118);
							}
						}
						else if (num125 == 6)
						{
							WorldGen.PlaceTile(num115, num111, 87, true, false, -1, num119);
						}
						else if (num125 == 7)
						{
							WorldGen.PlaceTile(num115, num111, 88, true, false, -1, num120);
						}
						else if (num125 == 8)
						{
							WorldGen.PlaceTile(num115, num111, 89, true, false, -1, num121);
						}
						else if (num125 == 9)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.Place4x2(num115, num111, 90, 1, num122);
							}
							else
							{
								WorldGen.Place4x2(num115, num111, 90, -1, num122);
							}
						}
						else if (num125 == 10)
						{
							WorldGen.PlaceTile(num115, num111, 93, true, false, -1, num124);
						}
						else if (num125 == 11)
						{
							WorldGen.PlaceTile(num115, num111, 100, true, false, -1, num123);
						}
					}
				}
				num109++;
			}
			num108 = 420000f / (float)Main.maxTilesX;
			int num134 = 0;
			while ((float)num134 < num108)
			{
				int num135 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num136 = WorldGen.genRand.Next((int)Main.worldSurface, WorldGen.dMaxY);
				while (!Main.wallDungeon[(int)Main.tile[num135, num136].wall] || Main.tile[num135, num136].active())
				{
					num135 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
					num136 = WorldGen.genRand.Next((int)Main.worldSurface, WorldGen.dMaxY);
				}
				int num138;
				int num139;
				int num140;
				int num141;
				for (int num137 = 0; num137 < 2; num137++)
				{
					num138 = num135;
					num139 = num135;
					while (!Main.tile[num138, num136].active() && Main.wallDungeon[(int)Main.tile[num138, num136].wall])
					{
						num138--;
					}
					num138++;
					while (!Main.tile[num139, num136].active() && Main.wallDungeon[(int)Main.tile[num139, num136].wall])
					{
						num139++;
					}
					num139--;
					num135 = (num138 + num139) / 2;
					num140 = num136;
					num141 = num136;
					while (!Main.tile[num135, num140].active() && Main.wallDungeon[(int)Main.tile[num135, num140].wall])
					{
						num140--;
					}
					num140++;
					while (!Main.tile[num135, num141].active() && Main.wallDungeon[(int)Main.tile[num135, num141].wall])
					{
						num141++;
					}
					num141--;
					num136 = (num140 + num141) / 2;
				}
				num138 = num135;
				num139 = num135;
				while (!Main.tile[num138, num136].active() && !Main.tile[num138, num136 - 1].active() && !Main.tile[num138, num136 + 1].active())
				{
					num138--;
				}
				num138++;
				while (!Main.tile[num139, num136].active() && !Main.tile[num139, num136 - 1].active() && !Main.tile[num139, num136 + 1].active())
				{
					num139++;
				}
				num139--;
				num140 = num136;
				num141 = num136;
				while (!Main.tile[num135, num140].active() && !Main.tile[num135 - 1, num140].active() && !Main.tile[num135 + 1, num140].active())
				{
					num140--;
				}
				num140++;
				while (!Main.tile[num135, num141].active() && !Main.tile[num135 - 1, num141].active() && !Main.tile[num135 + 1, num141].active())
				{
					num141++;
				}
				num141--;
				num135 = (num138 + num139) / 2;
				num136 = (num140 + num141) / 2;
				int num142 = num139 - num138;
				int num143 = num141 - num140;
				if (num142 > 7 && num143 > 5)
				{
					bool[] array4 = new bool[3];
					array4[0] = true;
					if (num142 > num143 * 3 && num142 > 21)
					{
						array4[1] = true;
					}
					if (num143 > num142 * 3 && num143 > 21)
					{
						array4[2] = true;
					}
					int num144 = WorldGen.genRand.Next(3);
					if ((int)Main.tile[num135, num136].wall == array[0])
					{
						num144 = 0;
					}
					while (!array4[num144])
					{
						num144 = WorldGen.genRand.Next(3);
					}
					if (WorldGen.nearPicture2(num135, num136))
					{
						num144 = -1;
					}
					if (num144 == 0)
					{
						Vector2 vector = WorldGen.randPictureTile();
						if ((int)Main.tile[num135, num136].wall != array[0])
						{
							vector = WorldGen.randBoneTile();
						}
						int type = (int)vector.X;
						int style9 = (int)vector.Y;
						if (!WorldGen.nearPicture(num135, num136))
						{
							WorldGen.PlaceTile(num135, num136, type, true, false, -1, style9);
						}
					}
					else if (num144 == 1)
					{
						Vector2 vector2 = WorldGen.randPictureTile();
						if ((int)Main.tile[num135, num136].wall != array[0])
						{
							vector2 = WorldGen.randBoneTile();
						}
						int type2 = (int)vector2.X;
						int style10 = (int)vector2.Y;
						if (!Main.tile[num135, num136].active())
						{
							WorldGen.PlaceTile(num135, num136, type2, true, false, -1, style10);
						}
						int num145 = num135;
						int num146 = num136;
						int num147 = num136;
						for (int num148 = 0; num148 < 2; num148++)
						{
							num135 += 7;
							num140 = num147;
							num141 = num147;
							while (!Main.tile[num135, num140].active() && !Main.tile[num135 - 1, num140].active() && !Main.tile[num135 + 1, num140].active())
							{
								num140--;
							}
							num140++;
							while (!Main.tile[num135, num141].active() && !Main.tile[num135 - 1, num141].active() && !Main.tile[num135 + 1, num141].active())
							{
								num141++;
							}
							num141--;
							num147 = (num140 + num141) / 2;
							vector2 = WorldGen.randPictureTile();
							if ((int)Main.tile[num135, num147].wall != array[0])
							{
								vector2 = WorldGen.randBoneTile();
							}
							type2 = (int)vector2.X;
							style10 = (int)vector2.Y;
							if (Math.Abs(num146 - num147) >= 4 || WorldGen.nearPicture(num135, num147))
							{
								break;
							}
							WorldGen.PlaceTile(num135, num147, type2, true, false, -1, style10);
						}
						num147 = num136;
						num135 = num145;
						for (int num149 = 0; num149 < 2; num149++)
						{
							num135 -= 7;
							num140 = num147;
							num141 = num147;
							while (!Main.tile[num135, num140].active() && !Main.tile[num135 - 1, num140].active() && !Main.tile[num135 + 1, num140].active())
							{
								num140--;
							}
							num140++;
							while (!Main.tile[num135, num141].active() && !Main.tile[num135 - 1, num141].active() && !Main.tile[num135 + 1, num141].active())
							{
								num141++;
							}
							num141--;
							num147 = (num140 + num141) / 2;
							vector2 = WorldGen.randPictureTile();
							if ((int)Main.tile[num135, num147].wall != array[0])
							{
								vector2 = WorldGen.randBoneTile();
							}
							type2 = (int)vector2.X;
							style10 = (int)vector2.Y;
							if (Math.Abs(num146 - num147) >= 4 || WorldGen.nearPicture(num135, num147))
							{
								break;
							}
							WorldGen.PlaceTile(num135, num147, type2, true, false, -1, style10);
						}
					}
					else if (num144 == 2)
					{
						Vector2 vector3 = WorldGen.randPictureTile();
						if ((int)Main.tile[num135, num136].wall != array[0])
						{
							vector3 = WorldGen.randBoneTile();
						}
						int type3 = (int)vector3.X;
						int style11 = (int)vector3.Y;
						if (!Main.tile[num135, num136].active())
						{
							WorldGen.PlaceTile(num135, num136, type3, true, false, -1, style11);
						}
						int num150 = num136;
						int num151 = num135;
						int num152 = num135;
						for (int num153 = 0; num153 < 3; num153++)
						{
							num136 += 7;
							num138 = num152;
							num139 = num152;
							while (!Main.tile[num138, num136].active() && !Main.tile[num138, num136 - 1].active() && !Main.tile[num138, num136 + 1].active())
							{
								num138--;
							}
							num138++;
							while (!Main.tile[num139, num136].active() && !Main.tile[num139, num136 - 1].active() && !Main.tile[num139, num136 + 1].active())
							{
								num139++;
							}
							num139--;
							num152 = (num138 + num139) / 2;
							vector3 = WorldGen.randPictureTile();
							if ((int)Main.tile[num152, num136].wall != array[0])
							{
								vector3 = WorldGen.randBoneTile();
							}
							type3 = (int)vector3.X;
							style11 = (int)vector3.Y;
							if (Math.Abs(num151 - num152) >= 4 || WorldGen.nearPicture(num152, num136))
							{
								break;
							}
							WorldGen.PlaceTile(num152, num136, type3, true, false, -1, style11);
						}
						num152 = num135;
						num136 = num150;
						for (int num154 = 0; num154 < 3; num154++)
						{
							num136 -= 7;
							num138 = num152;
							num139 = num152;
							while (!Main.tile[num138, num136].active() && !Main.tile[num138, num136 - 1].active() && !Main.tile[num138, num136 + 1].active())
							{
								num138--;
							}
							num138++;
							while (!Main.tile[num139, num136].active() && !Main.tile[num139, num136 - 1].active() && !Main.tile[num139, num136 + 1].active())
							{
								num139++;
							}
							num139--;
							num152 = (num138 + num139) / 2;
							vector3 = WorldGen.randPictureTile();
							if ((int)Main.tile[num152, num136].wall != array[0])
							{
								vector3 = WorldGen.randBoneTile();
							}
							type3 = (int)vector3.X;
							style11 = (int)vector3.Y;
							if (Math.Abs(num151 - num152) >= 4 || WorldGen.nearPicture(num152, num136))
							{
								break;
							}
							WorldGen.PlaceTile(num152, num136, type3, true, false, -1, style11);
						}
					}
				}
				num134++;
			}
			num108 = 840000f / (float)Main.maxTilesX;
			int num155 = 0;
			while ((float)num155 < num108)
			{
				int num156 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
				int num157 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				while (!Main.wallDungeon[(int)Main.tile[num156, num157].wall] || Main.tile[num156, num157].active())
				{
					num156 = WorldGen.genRand.Next(WorldGen.dMinX, WorldGen.dMaxX);
					num157 = WorldGen.genRand.Next(WorldGen.dMinY, WorldGen.dMaxY);
				}
				while (!WorldGen.SolidTile(num156, num157) && num157 > 10)
				{
					num157--;
				}
				num157++;
				if (Main.wallDungeon[(int)Main.tile[num156, num157].wall] && Main.tile[num156, num157 - 1].type != 48 && !Main.tile[num156, num157].active() && !Main.tile[num156, num157 + 1].active() && !Main.tile[num156, num157 + 2].active() && !Main.tile[num156, num157 + 3].active())
				{
					bool flag9 = true;
					for (int num158 = num156 - 1; num158 <= num156 + 1; num158++)
					{
						for (int num159 = num157; num159 <= num157 + 3; num159++)
						{
							if (Main.tile[num158, num159].active() && (Main.tile[num158, num159].type == 10 || Main.tile[num158, num159].type == 11 || Main.tile[num158, num159].type == 91))
							{
								flag9 = false;
							}
						}
					}
					if (flag9)
					{
						int num160 = 10;
						if ((int)Main.tile[num156, num157].wall == array[1])
						{
							num160 = 12;
						}
						if ((int)Main.tile[num156, num157].wall == array[2])
						{
							num160 = 14;
						}
						num160 += WorldGen.genRand.Next(2);
						WorldGen.PlaceTile(num156, num157, 91, true, false, -1, num160);
					}
				}
				num155++;
			}
		}
		public static Vector2 randBoneTile()
		{
			int num = WorldGen.genRand.Next(2);
			int num2 = 0;
			if (num == 0)
			{
				num = 240;
				num2 = WorldGen.genRand.Next(2);
				if (num2 == 0)
				{
					num2 = 16;
				}
				else if (num2 == 1)
				{
					num2 = 17;
				}
			}
			else if (num == 1)
			{
				num = 241;
				num2 = WorldGen.genRand.Next(9);
			}
			return new Vector2((float)num, (float)num2);
		}
		public static Vector2 randHellPicture()
		{
			int num = WorldGen.genRand.Next(4);
			if (num == 1)
			{
				num = WorldGen.genRand.Next(4);
			}
			int num2;
			if (num == 0)
			{
				num = 240;
				num2 = WorldGen.genRand.Next(5);
				if (num2 == 0)
				{
					num2 = 27;
				}
				else if (num2 == 1)
				{
					num2 = 29;
				}
				else if (num2 == 2)
				{
					num2 = 30;
				}
				else if (num2 == 3)
				{
					num2 = 31;
				}
				else if (num2 == 4)
				{
					num2 = 32;
				}
			}
			else if (num == 1)
			{
				num = 242;
				num2 = 14;
			}
			else if (num == 2)
			{
				num = 245;
				num2 = WorldGen.genRand.Next(3);
				if (num2 == 0)
				{
					num2 = 1;
				}
				else if (num2 == 1)
				{
					num2 = 2;
				}
				else if (num2 == 2)
				{
					num2 = 4;
				}
			}
			else
			{
				num = 246;
				num2 = WorldGen.genRand.Next(3);
				if (num2 == 0)
				{
					num2 = 0;
				}
				else if (num2 == 1)
				{
					num2 = 16;
				}
				else if (num2 == 2)
				{
					num2 = 17;
				}
			}
			return new Vector2((float)num, (float)num2);
		}
		public static Vector2 randHousePicture()
		{
			int num = WorldGen.genRand.Next(4);
			int num2;
			if (num <= 1)
			{
				num = 240;
				int maxValue = 10;
				num2 = WorldGen.genRand.Next(maxValue);
				if (num2 == 9)
				{
					num2 = WorldGen.genRand.Next(maxValue);
				}
				if (num2 == 5)
				{
					num2 = WorldGen.genRand.Next(maxValue);
				}
				if (num2 == 6)
				{
					num2 = WorldGen.genRand.Next(maxValue);
				}
				if (num2 == 0)
				{
					num2 = 26;
				}
				else if (num2 == 1)
				{
					num2 = 28;
				}
				else if (num2 == 2)
				{
					num2 = 20;
				}
				else if (num2 == 3)
				{
					num2 = 21;
				}
				else if (num2 == 4)
				{
					num2 = 22;
				}
				else if (num2 == 5)
				{
					num2 = 24;
				}
				else if (num2 == 6)
				{
					num2 = 25;
				}
				else if (num2 == 7)
				{
					num2 = 33;
				}
				else if (num2 == 8)
				{
					num2 = 34;
				}
				else if (num2 == 9)
				{
					num2 = 35;
				}
			}
			else if (num == 2)
			{
				int maxValue2 = 4;
				num = 245;
				num2 = WorldGen.genRand.Next(maxValue2);
				if (num2 == 2)
				{
					num2 = WorldGen.genRand.Next(maxValue2);
				}
				if (num2 == 0)
				{
					num2 = WorldGen.genRand.Next(maxValue2);
				}
				if (num2 == 0)
				{
					num2 = WorldGen.genRand.Next(maxValue2);
				}
				if (num2 == 0)
				{
					num2 = WorldGen.genRand.Next(maxValue2);
				}
				if (num2 == 0)
				{
					num2 = 0;
				}
				else if (num2 == 1)
				{
					num2 = 3;
				}
				else if (num2 == 2)
				{
					num2 = 5;
				}
				else if (num2 == 3)
				{
					num2 = 6;
				}
			}
			else
			{
				num = 246;
				num2 = 1;
			}
			return new Vector2((float)num, (float)num2);
		}
		public static Vector2 randPictureTile()
		{
			int num = WorldGen.genRand.Next(3);
			int num2 = 0;
			if (num <= 1)
			{
				int maxValue = 7;
				num = 240;
				num2 = WorldGen.genRand.Next(maxValue);
				if (num2 == 6)
				{
					num2 = WorldGen.genRand.Next(maxValue);
				}
				if (num2 == 0)
				{
					num2 = 12;
				}
				else if (num2 == 1)
				{
					num2 = 13;
				}
				else if (num2 == 2)
				{
					num2 = 14;
				}
				else if (num2 == 3)
				{
					num2 = 15;
				}
				else if (num2 == 4)
				{
					num2 = 18;
				}
				else if (num2 == 5)
				{
					num2 = 19;
				}
				else if (num2 == 6)
				{
					num2 = 23;
				}
			}
			else if (num == 2)
			{
				num = 242;
				int maxValue2 = 16;
				num2 = WorldGen.genRand.Next(maxValue2);
				for (int i = 0; i < 2; i++)
				{
					if (num2 == 6)
					{
						num2 = WorldGen.genRand.Next(maxValue2);
					}
					if (num2 == 13)
					{
						num2 = WorldGen.genRand.Next(maxValue2);
					}
					if (num2 == 14)
					{
						num2 = WorldGen.genRand.Next(maxValue2);
					}
					if (num2 == 15)
					{
						num2 = WorldGen.genRand.Next(maxValue2);
					}
				}
				if (num2 > 13)
				{
					if (num2 == 14)
					{
						num2 = 15;
					}
					else if (num2 == 15)
					{
						num2 = 16;
					}
				}
			}
			return new Vector2((float)num, (float)num2);
		}
		public static void DungeonStairs(int i, int j, ushort tileType, int wallType)
		{
			Vector2 zero = Vector2.Zero;
			double num = (double)WorldGen.genRand.Next(5, 9);
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			int k = WorldGen.genRand.Next(10, 30);
			int num2;
			if (i > WorldGen.dEnteranceX)
			{
				num2 = -1;
			}
			else
			{
				num2 = 1;
			}
			if (i > Main.maxTilesX - 400)
			{
				num2 = -1;
			}
			else if (i < 400)
			{
				num2 = 1;
			}
			zero.Y = -1f;
			zero.X = (float)num2;
			if (WorldGen.genRand.Next(3) != 0)
			{
				zero.X *= 1f + (float)WorldGen.genRand.Next(0, 200) * 0.01f;
			}
			else if (WorldGen.genRand.Next(3) == 0)
			{
				zero.X *= (float)WorldGen.genRand.Next(50, 76) * 0.01f;
			}
			else if (WorldGen.genRand.Next(6) == 0)
			{
				zero.Y *= 2f;
			}
			if (WorldGen.dungeonX < Main.maxTilesX / 2 && zero.X < 0f && (double)zero.X < 0.5)
			{
				zero.X = -0.5f;
			}
			if (WorldGen.dungeonX > Main.maxTilesX / 2 && zero.X > 0f && (double)zero.X > 0.5)
			{
				zero.X = -0.5f;
			}
			while (k > 0)
			{
				k--;
				int num3 = (int)((double)value.X - num - 4.0 - (double)WorldGen.genRand.Next(6));
				int num4 = (int)((double)value.X + num + 4.0 + (double)WorldGen.genRand.Next(6));
				int num5 = (int)((double)value.Y - num - 4.0);
				int num6 = (int)((double)value.Y + num + 4.0 + (double)WorldGen.genRand.Next(6));
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				int num7 = 1;
				if (value.X > (float)(Main.maxTilesX / 2))
				{
					num7 = -1;
				}
				int num8 = (int)(value.X + (float)WorldGen.dxStrength1 * 0.6f * (float)num7 + (float)WorldGen.dxStrength2 * (float)num7);
				int num9 = (int)(WorldGen.dyStrength2 * 0.5);
				if ((double)value.Y < Main.worldSurface - 5.0 && Main.tile[num8, (int)((double)value.Y - num - 6.0 + (double)num9)].wall == 0 && Main.tile[num8, (int)((double)value.Y - num - 7.0 + (double)num9)].wall == 0 && Main.tile[num8, (int)((double)value.Y - num - 8.0 + (double)num9)].wall == 0)
				{
					WorldGen.dSurface = true;
					WorldGen.TileRunner(num8, (int)((double)value.Y - num - 6.0 + (double)num9), (double)WorldGen.genRand.Next(25, 35), WorldGen.genRand.Next(10, 20), -1, false, 0f, -1f, false, true);
				}
				for (int l = num3; l < num4; l++)
				{
					for (int m = num5; m < num6; m++)
					{
						Main.tile[l, m].liquid = 0;
						if (!Main.wallDungeon[(int)Main.tile[l, m].wall])
						{
							Main.tile[l, m].wall = 0;
							Main.tile[l, m].active(true);
							Main.tile[l, m].type = tileType;
						}
					}
				}
				for (int n = num3 + 1; n < num4 - 1; n++)
				{
					for (int num10 = num5 + 1; num10 < num6 - 1; num10++)
					{
						Main.tile[n, num10].wall = (byte)wallType;
					}
				}
				int num11 = 0;
				if (WorldGen.genRand.Next((int)num) == 0)
				{
					num11 = WorldGen.genRand.Next(1, 3);
				}
				num3 = (int)((double)value.X - num * 0.5 - (double)num11);
				num4 = (int)((double)value.X + num * 0.5 + (double)num11);
				num5 = (int)((double)value.Y - num * 0.5 - (double)num11);
				num6 = (int)((double)value.Y + num * 0.5 + (double)num11);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				for (int num12 = num3; num12 < num4; num12++)
				{
					for (int num13 = num5; num13 < num6; num13++)
					{
						Main.tile[num12, num13].active(false);
						WorldGen.PlaceWall(num12, num13, wallType, true);
					}
				}
				if (WorldGen.dSurface)
				{
					k = 0;
				}
				value += zero;
				if ((double)value.Y < Main.worldSurface)
				{
					zero.Y *= 0.98f;
				}
			}
			WorldGen.dungeonX = (int)value.X;
			WorldGen.dungeonY = (int)value.Y;
		}
		public static void DungeonHalls(int i, int j, ushort tileType, int wallType, bool forceX = false)
		{
			Vector2 zero = Vector2.Zero;
			double num = (double)WorldGen.genRand.Next(4, 6);
			double num2 = num;
			Vector2 zero2 = Vector2.Zero;
			Vector2 zero3 = Vector2.Zero;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			int k = WorldGen.genRand.Next(35, 80);
			if (forceX)
			{
				k += 20;
				WorldGen.lastDungeonHall = Vector2.Zero;
			}
			else if (WorldGen.genRand.Next(5) == 0)
			{
				num *= 2.0;
				k /= 2;
			}
			bool flag = false;
			bool flag2 = false;
			bool flag3 = true;
			while (!flag)
			{
				bool flag4 = false;
				int num5;
				if (flag3 && !forceX)
				{
					bool flag5 = true;
					bool flag6 = true;
					bool flag7 = true;
					bool flag8 = true;
					int num3 = k;
					bool flag9 = false;
					for (int l = j; l > j - num3; l--)
					{
						if ((int)Main.tile[i, l].wall == wallType)
						{
							if (flag9)
							{
								flag5 = false;
								break;
							}
						}
						else
						{
							flag9 = true;
						}
					}
					flag9 = false;
					for (int m = j; m < j + num3; m++)
					{
						if ((int)Main.tile[i, m].wall == wallType)
						{
							if (flag9)
							{
								flag6 = false;
								break;
							}
						}
						else
						{
							flag9 = true;
						}
					}
					flag9 = false;
					for (int n = i; n > i - num3; n--)
					{
						if ((int)Main.tile[n, j].wall == wallType)
						{
							if (flag9)
							{
								flag7 = false;
								break;
							}
						}
						else
						{
							flag9 = true;
						}
					}
					flag9 = false;
					for (int num4 = i; num4 < i + num3; num4++)
					{
						if ((int)Main.tile[num4, j].wall == wallType)
						{
							if (flag9)
							{
								flag8 = false;
								break;
							}
						}
						else
						{
							flag9 = true;
						}
					}
					if (!flag7 && !flag8 && !flag5 && !flag6)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							num5 = -1;
						}
						else
						{
							num5 = 1;
						}
						if (WorldGen.genRand.Next(2) == 0)
						{
							flag4 = true;
						}
					}
					else
					{
						int num6 = WorldGen.genRand.Next(4);
						do
						{
							num6 = WorldGen.genRand.Next(4);
						}
						while ((num6 != 0 || !flag5) && (num6 != 1 || !flag6) && (num6 != 2 || !flag7) && (num6 != 3 || !flag8));
						if (num6 == 0)
						{
							num5 = -1;
						}
						else if (num6 == 1)
						{
							num5 = 1;
						}
						else
						{
							flag4 = true;
							if (num6 == 2)
							{
								num5 = -1;
							}
							else
							{
								num5 = 1;
							}
						}
					}
				}
				else
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num5 = -1;
					}
					else
					{
						num5 = 1;
					}
					if (WorldGen.genRand.Next(2) == 0)
					{
						flag4 = true;
					}
				}
				flag3 = false;
				if (forceX)
				{
					flag4 = true;
				}
				if (flag4)
				{
					zero2.Y = 0f;
					zero2.X = (float)num5;
					zero3.Y = 0f;
					zero3.X = (float)(-(float)num5);
					zero.Y = 0f;
					zero.X = (float)num5;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.Y = -0.2f;
						}
						else
						{
							zero.Y = 0.2f;
						}
					}
				}
				else
				{
					num += 1.0;
					zero.Y = (float)num5;
					zero.X = 0f;
					zero2.X = 0f;
					zero2.Y = (float)num5;
					zero3.X = 0f;
					zero3.Y = (float)(-(float)num5);
					if (WorldGen.genRand.Next(3) != 0)
					{
						flag2 = true;
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.X = (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else
						{
							zero.X = (float)(-(float)WorldGen.genRand.Next(10, 20)) * 0.1f;
						}
					}
					else if (WorldGen.genRand.Next(2) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.X = (float)WorldGen.genRand.Next(20, 40) * 0.01f;
						}
						else
						{
							zero.X = (float)(-(float)WorldGen.genRand.Next(20, 40)) * 0.01f;
						}
					}
					else
					{
						k /= 2;
					}
				}
				if (WorldGen.lastDungeonHall != zero3)
				{
					flag = true;
				}
			}
			int num7 = 0;
			if (!forceX)
			{
				if (value.X > (float)(WorldGen.lastMaxTilesX - 200))
				{
					int num5 = -1;
					zero2.Y = 0f;
					zero2.X = (float)num5;
					zero.Y = 0f;
					zero.X = (float)num5;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.Y = -0.2f;
						}
						else
						{
							zero.Y = 0.2f;
						}
					}
				}
				else if (value.X < 200f)
				{
					int num5 = 1;
					zero2.Y = 0f;
					zero2.X = (float)num5;
					zero.Y = 0f;
					zero.X = (float)num5;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.Y = -0.2f;
						}
						else
						{
							zero.Y = 0.2f;
						}
					}
				}
				else if (value.Y > (float)(WorldGen.lastMaxTilesY - 300))
				{
					int num5 = -1;
					num += 1.0;
					zero.Y = (float)num5;
					zero.X = 0f;
					zero2.X = 0f;
					zero2.Y = (float)num5;
					if (WorldGen.genRand.Next(2) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.X = (float)WorldGen.genRand.Next(20, 50) * 0.01f;
						}
						else
						{
							zero.X = (float)(-(float)WorldGen.genRand.Next(20, 50)) * 0.01f;
						}
					}
				}
				else if ((double)value.Y < Main.rockLayer + 100.0)
				{
					int num5 = 1;
					num += 1.0;
					zero.Y = (float)num5;
					zero.X = 0f;
					zero2.X = 0f;
					zero2.Y = (float)num5;
					if (WorldGen.genRand.Next(3) != 0)
					{
						flag2 = true;
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.X = (float)WorldGen.genRand.Next(10, 20) * 0.1f;
						}
						else
						{
							zero.X = (float)(-(float)WorldGen.genRand.Next(10, 20)) * 0.1f;
						}
					}
					else if (WorldGen.genRand.Next(2) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.X = (float)WorldGen.genRand.Next(20, 50) * 0.01f;
						}
						else
						{
							zero.X = (float)WorldGen.genRand.Next(20, 50) * 0.01f;
						}
					}
				}
				else if (value.X < (float)(Main.maxTilesX / 2) && (double)value.X > (double)Main.maxTilesX * 0.25)
				{
					int num5 = -1;
					zero2.Y = 0f;
					zero2.X = (float)num5;
					zero.Y = 0f;
					zero.X = (float)num5;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.Y = -0.2f;
						}
						else
						{
							zero.Y = 0.2f;
						}
					}
				}
				else if (value.X > (float)(Main.maxTilesX / 2) && (double)value.X < (double)Main.maxTilesX * 0.75)
				{
					int num5 = 1;
					zero2.Y = 0f;
					zero2.X = (float)num5;
					zero.Y = 0f;
					zero.X = (float)num5;
					if (WorldGen.genRand.Next(3) == 0)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							zero.Y = -0.2f;
						}
						else
						{
							zero.Y = 0.2f;
						}
					}
				}
			}
			if (zero2.Y == 0f)
			{
				WorldGen.DDoorX[WorldGen.numDDoors] = (int)value.X;
				WorldGen.DDoorY[WorldGen.numDDoors] = (int)value.Y;
				WorldGen.DDoorPos[WorldGen.numDDoors] = 0;
				WorldGen.numDDoors++;
			}
			else
			{
				WorldGen.DPlatX[WorldGen.numDPlats] = (int)value.X;
				WorldGen.DPlatY[WorldGen.numDPlats] = (int)value.Y;
				WorldGen.numDPlats++;
			}
			WorldGen.lastDungeonHall = zero2;
			if (Math.Abs(zero.X) > Math.Abs(zero.Y) && WorldGen.genRand.Next(3) != 0)
			{
				num = (double)((int)((double)((float)num2) * ((double)WorldGen.genRand.Next(110, 150) * 0.01)));
			}
			while (k > 0)
			{
				num7++;
				if (zero2.X > 0f && value.X > (float)(Main.maxTilesX - 100))
				{
					k = 0;
				}
				else if (zero2.X < 0f && value.X < 100f)
				{
					k = 0;
				}
				else if (zero2.Y > 0f && value.Y > (float)(Main.maxTilesY - 100))
				{
					k = 0;
				}
				else if (zero2.Y < 0f && (double)value.Y < Main.rockLayer + 50.0)
				{
					k = 0;
				}
				k--;
				int num8 = (int)((double)value.X - num - 4.0 - (double)WorldGen.genRand.Next(6));
				int num9 = (int)((double)value.X + num + 4.0 + (double)WorldGen.genRand.Next(6));
				int num10 = (int)((double)value.Y - num - 4.0 - (double)WorldGen.genRand.Next(6));
				int num11 = (int)((double)value.Y + num + 4.0 + (double)WorldGen.genRand.Next(6));
				if (num8 < 0)
				{
					num8 = 0;
				}
				if (num9 > Main.maxTilesX)
				{
					num9 = Main.maxTilesX;
				}
				if (num10 < 0)
				{
					num10 = 0;
				}
				if (num11 > Main.maxTilesY)
				{
					num11 = Main.maxTilesY;
				}
				for (int num12 = num8; num12 < num9; num12++)
				{
					for (int num13 = num10; num13 < num11; num13++)
					{
						if (num12 < WorldGen.dMinX)
						{
							WorldGen.dMinX = num12;
						}
						if (num12 > WorldGen.dMaxX)
						{
							WorldGen.dMaxX = num12;
						}
						if (num13 > WorldGen.dMaxY)
						{
							WorldGen.dMaxY = num13;
						}
						Main.tile[num12, num13].liquid = 0;
						if (!Main.wallDungeon[(int)Main.tile[num12, num13].wall])
						{
							Main.tile[num12, num13].active(true);
							Main.tile[num12, num13].type = tileType;
						}
					}
				}
				for (int num14 = num8 + 1; num14 < num9 - 1; num14++)
				{
					for (int num15 = num10 + 1; num15 < num11 - 1; num15++)
					{
						Main.tile[num14, num15].wall = (byte)wallType;
					}
				}
				int num16 = 0;
				if (zero.Y == 0f && WorldGen.genRand.Next((int)num + 1) == 0)
				{
					num16 = WorldGen.genRand.Next(1, 3);
				}
				else if (zero.X == 0f && WorldGen.genRand.Next((int)num - 1) == 0)
				{
					num16 = WorldGen.genRand.Next(1, 3);
				}
				else if (WorldGen.genRand.Next((int)num * 3) == 0)
				{
					num16 = WorldGen.genRand.Next(1, 3);
				}
				num8 = (int)((double)value.X - num * 0.5 - (double)num16);
				num9 = (int)((double)value.X + num * 0.5 + (double)num16);
				num10 = (int)((double)value.Y - num * 0.5 - (double)num16);
				num11 = (int)((double)value.Y + num * 0.5 + (double)num16);
				if (num8 < 0)
				{
					num8 = 0;
				}
				if (num9 > Main.maxTilesX)
				{
					num9 = Main.maxTilesX;
				}
				if (num10 < 0)
				{
					num10 = 0;
				}
				if (num11 > Main.maxTilesY)
				{
					num11 = Main.maxTilesY;
				}
				for (int num17 = num8; num17 < num9; num17++)
				{
					for (int num18 = num10; num18 < num11; num18++)
					{
						Main.tile[num17, num18].active(false);
						Main.tile[num17, num18].wall = (byte)wallType;
					}
				}
				value += zero;
				if (flag2 && num7 > WorldGen.genRand.Next(10, 20))
				{
					num7 = 0;
					zero.X *= -1f;
				}
			}
			WorldGen.dungeonX = (int)value.X;
			WorldGen.dungeonY = (int)value.Y;
			if (zero2.Y == 0f)
			{
				WorldGen.DDoorX[WorldGen.numDDoors] = (int)value.X;
				WorldGen.DDoorY[WorldGen.numDDoors] = (int)value.Y;
				WorldGen.DDoorPos[WorldGen.numDDoors] = 0;
				WorldGen.numDDoors++;
				return;
			}
			WorldGen.DPlatX[WorldGen.numDPlats] = (int)value.X;
			WorldGen.DPlatY[WorldGen.numDPlats] = (int)value.Y;
			WorldGen.numDPlats++;
		}
		public static void DungeonRoom(int i, int j, ushort tileType, int wallType)
		{
			double num = (double)WorldGen.genRand.Next(15, 30);
			Vector2 value;
			value.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			Vector2 value2;
			value2.X = (float)i;
			value2.Y = (float)j - (float)num / 2f;
			int k = WorldGen.genRand.Next(10, 20);
			double num2 = (double)value2.X;
			double num3 = (double)value2.X;
			double num4 = (double)value2.Y;
			double num5 = (double)value2.Y;
			while (k > 0)
			{
				k--;
				int num6 = (int)((double)value2.X - num * 0.800000011920929 - 5.0);
				int num7 = (int)((double)value2.X + num * 0.800000011920929 + 5.0);
				int num8 = (int)((double)value2.Y - num * 0.800000011920929 - 5.0);
				int num9 = (int)((double)value2.Y + num * 0.800000011920929 + 5.0);
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesX)
				{
					num7 = Main.maxTilesX;
				}
				if (num8 < 0)
				{
					num8 = 0;
				}
				if (num9 > Main.maxTilesY)
				{
					num9 = Main.maxTilesY;
				}
				for (int l = num6; l < num7; l++)
				{
					for (int m = num8; m < num9; m++)
					{
						if (l < WorldGen.dMinX)
						{
							WorldGen.dMinX = l;
						}
						if (l > WorldGen.dMaxX)
						{
							WorldGen.dMaxX = l;
						}
						if (m > WorldGen.dMaxY)
						{
							WorldGen.dMaxY = m;
						}
						Main.tile[l, m].liquid = 0;
						if (!Main.wallDungeon[(int)Main.tile[l, m].wall])
						{
							Main.tile[l, m].active(true);
							Main.tile[l, m].type = tileType;
						}
					}
				}
				for (int n = num6 + 1; n < num7 - 1; n++)
				{
					for (int num10 = num8 + 1; num10 < num9 - 1; num10++)
					{
						Main.tile[n, num10].wall = (byte)wallType;
					}
				}
				num6 = (int)((double)value2.X - num * 0.5);
				num7 = (int)((double)value2.X + num * 0.5);
				num8 = (int)((double)value2.Y - num * 0.5);
				num9 = (int)((double)value2.Y + num * 0.5);
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesX)
				{
					num7 = Main.maxTilesX;
				}
				if (num8 < 0)
				{
					num8 = 0;
				}
				if (num9 > Main.maxTilesY)
				{
					num9 = Main.maxTilesY;
				}
				if ((double)num6 < num2)
				{
					num2 = (double)num6;
				}
				if ((double)num7 > num3)
				{
					num3 = (double)num7;
				}
				if ((double)num8 < num4)
				{
					num4 = (double)num8;
				}
				if ((double)num9 > num5)
				{
					num5 = (double)num9;
				}
				for (int num11 = num6; num11 < num7; num11++)
				{
					for (int num12 = num8; num12 < num9; num12++)
					{
						Main.tile[num11, num12].active(false);
						Main.tile[num11, num12].wall = (byte)wallType;
					}
				}
				value2 += value;
				value.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value.X > 1f)
				{
					value.X = 1f;
				}
				if (value.X < -1f)
				{
					value.X = -1f;
				}
				if (value.Y > 1f)
				{
					value.Y = 1f;
				}
				if (value.Y < -1f)
				{
					value.Y = -1f;
				}
			}
			WorldGen.dRoomX[WorldGen.numDRooms] = (int)value2.X;
			WorldGen.dRoomY[WorldGen.numDRooms] = (int)value2.Y;
			WorldGen.dRoomSize[WorldGen.numDRooms] = (int)num;
			WorldGen.dRoomL[WorldGen.numDRooms] = (int)num2;
			WorldGen.dRoomR[WorldGen.numDRooms] = (int)num3;
			WorldGen.dRoomT[WorldGen.numDRooms] = (int)num4;
			WorldGen.dRoomB[WorldGen.numDRooms] = (int)num5;
			WorldGen.dRoomTreasure[WorldGen.numDRooms] = false;
			WorldGen.numDRooms++;
		}
		public static void DungeonEnt(int i, int j, ushort tileType, int wallType)
		{
			int num = 60;
			for (int k = i - num; k < i + num; k++)
			{
				for (int l = j - num; l < j + num; l++)
				{
					Main.tile[k, l].liquid = 0;
					Main.tile[k, l].lava(false);
				}
			}
			double num2 = WorldGen.dxStrength1;
			double num3 = WorldGen.dyStrength1;
			Vector2 vector;
			vector.X = (float)i;
			vector.Y = (float)j - (float)num3 / 2f;
			WorldGen.dMinY = (int)vector.Y;
			int num4 = 1;
			if (i > Main.maxTilesX / 2)
			{
				num4 = -1;
			}
			int num5 = (int)((double)vector.X - num2 * 0.60000002384185791 - (double)WorldGen.genRand.Next(2, 5));
			int num6 = (int)((double)vector.X + num2 * 0.60000002384185791 + (double)WorldGen.genRand.Next(2, 5));
			int num7 = (int)((double)vector.Y - num3 * 0.60000002384185791 - (double)WorldGen.genRand.Next(2, 5));
			int num8 = (int)((double)vector.Y + num3 * 0.60000002384185791 + (double)WorldGen.genRand.Next(8, 16));
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int m = num5; m < num6; m++)
			{
				for (int n = num7; n < num8; n++)
				{
					Main.tile[m, n].liquid = 0;
					if ((int)Main.tile[m, n].wall != wallType)
					{
						Main.tile[m, n].wall = 0;
						if (m > num5 + 1 && m < num6 - 2 && n > num7 + 1 && n < num8 - 2)
						{
							Main.tile[m, n].wall = (byte)wallType;
						}
						Main.tile[m, n].active(true);
						Main.tile[m, n].type = tileType;
					}
				}
			}
			int num9 = num5;
			int num10 = num5 + 5 + WorldGen.genRand.Next(4);
			int num11 = num7 - 3 - WorldGen.genRand.Next(3);
			int num12 = num7;
			for (int num13 = num9; num13 < num10; num13++)
			{
				for (int num14 = num11; num14 < num12; num14++)
				{
					if ((int)Main.tile[num13, num14].wall != wallType)
					{
						Main.tile[num13, num14].active(true);
						Main.tile[num13, num14].type = tileType;
					}
				}
			}
			num9 = num6 - 5 - WorldGen.genRand.Next(4);
			num10 = num6;
			num11 = num7 - 3 - WorldGen.genRand.Next(3);
			num12 = num7;
			for (int num15 = num9; num15 < num10; num15++)
			{
				for (int num16 = num11; num16 < num12; num16++)
				{
					if ((int)Main.tile[num15, num16].wall != wallType)
					{
						Main.tile[num15, num16].active(true);
						Main.tile[num15, num16].type = tileType;
					}
				}
			}
			int num17 = 1 + WorldGen.genRand.Next(2);
			int num18 = 2 + WorldGen.genRand.Next(4);
			int num19 = 0;
			for (int num20 = num5; num20 < num6; num20++)
			{
				for (int num21 = num7 - num17; num21 < num7; num21++)
				{
					if ((int)Main.tile[num20, num21].wall != wallType)
					{
						Main.tile[num20, num21].active(true);
						Main.tile[num20, num21].type = tileType;
					}
				}
				num19++;
				if (num19 >= num18)
				{
					num20 += num18;
					num19 = 0;
				}
			}
			for (int num22 = num5; num22 < num6; num22++)
			{
				int num23 = num8;
				while ((double)num23 < Main.worldSurface)
				{
					if (!Main.wallDungeon[(int)Main.tile[num22, num23].wall])
					{
						Main.tile[num22, num23].active(true);
						Main.tile[num22, num23].type = tileType;
					}
					Main.tile[num22, num23].wall = (byte)wallType;
					num23++;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.60000002384185791);
			num6 = (int)((double)vector.X + num2 * 0.60000002384185791);
			num7 = (int)((double)vector.Y - num3 * 0.60000002384185791);
			num8 = (int)((double)vector.Y + num3 * 0.60000002384185791);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num24 = num5; num24 < num6; num24++)
			{
				for (int num25 = num7; num25 < num8; num25++)
				{
					Main.tile[num24, num25].wall = (byte)wallType;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.6 - 1.0);
			num6 = (int)((double)vector.X + num2 * 0.6 + 1.0);
			num7 = (int)((double)vector.Y - num3 * 0.6 - 1.0);
			num8 = (int)((double)vector.Y + num3 * 0.6 + 1.0);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num26 = num5; num26 < num6; num26++)
			{
				for (int num27 = num7; num27 < num8; num27++)
				{
					Main.tile[num26, num27].wall = (byte)wallType;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.5);
			num6 = (int)((double)vector.X + num2 * 0.5);
			num7 = (int)((double)vector.Y - num3 * 0.5);
			num8 = (int)((double)vector.Y + num3 * 0.5);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num28 = num5; num28 < num6; num28++)
			{
				for (int num29 = num7; num29 < num8; num29++)
				{
					Main.tile[num28, num29].active(false);
					Main.tile[num28, num29].wall = (byte)wallType;
				}
			}
			int num30 = (int)vector.X;
			int num31 = num8;
			for (int num32 = 0; num32 < 20; num32++)
			{
				num30 = (int)vector.X - num32;
				if (!Main.tile[num30, num31].active() && Main.wallDungeon[(int)Main.tile[num30, num31].wall])
				{
					WorldGen.DPlatX[WorldGen.numDPlats] = num30;
					WorldGen.DPlatY[WorldGen.numDPlats] = num31;
					WorldGen.numDPlats++;
					break;
				}
				num30 = (int)vector.X + num32;
				if (!Main.tile[num30, num31].active() && Main.wallDungeon[(int)Main.tile[num30, num31].wall])
				{
					WorldGen.DPlatX[WorldGen.numDPlats] = num30;
					WorldGen.DPlatY[WorldGen.numDPlats] = num31;
					WorldGen.numDPlats++;
					break;
				}
			}
			vector.X += (float)num2 * 0.6f * (float)num4;
			vector.Y += (float)num3 * 0.5f;
			num2 = WorldGen.dxStrength2;
			num3 = WorldGen.dyStrength2;
			vector.X += (float)num2 * 0.55f * (float)num4;
			vector.Y -= (float)num3 * 0.5f;
			num5 = (int)((double)vector.X - num2 * 0.60000002384185791 - (double)WorldGen.genRand.Next(1, 3));
			num6 = (int)((double)vector.X + num2 * 0.60000002384185791 + (double)WorldGen.genRand.Next(1, 3));
			num7 = (int)((double)vector.Y - num3 * 0.60000002384185791 - (double)WorldGen.genRand.Next(1, 3));
			num8 = (int)((double)vector.Y + num3 * 0.60000002384185791 + (double)WorldGen.genRand.Next(6, 16));
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num33 = num5; num33 < num6; num33++)
			{
				for (int num34 = num7; num34 < num8; num34++)
				{
					if ((int)Main.tile[num33, num34].wall != wallType)
					{
						bool flag = true;
						if (num4 < 0)
						{
							if ((double)num33 < (double)vector.X - num2 * 0.5)
							{
								flag = false;
							}
						}
						else if ((double)num33 > (double)vector.X + num2 * 0.5 - 1.0)
						{
							flag = false;
						}
						if (flag)
						{
							Main.tile[num33, num34].wall = 0;
							Main.tile[num33, num34].active(true);
							Main.tile[num33, num34].type = tileType;
						}
					}
				}
			}
			for (int num35 = num5; num35 < num6; num35++)
			{
				int num36 = num8;
				while ((double)num36 < Main.worldSurface)
				{
					if (!Main.wallDungeon[(int)Main.tile[num35, num36].wall])
					{
						Main.tile[num35, num36].active(true);
						Main.tile[num35, num36].type = tileType;
					}
					Main.tile[num35, num36].wall = (byte)wallType;
					num36++;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.5);
			num6 = (int)((double)vector.X + num2 * 0.5);
			num9 = num5;
			if (num4 < 0)
			{
				num9++;
			}
			num10 = num9 + 5 + WorldGen.genRand.Next(4);
			num11 = num7 - 3 - WorldGen.genRand.Next(3);
			num12 = num7;
			for (int num37 = num9; num37 < num10; num37++)
			{
				for (int num38 = num11; num38 < num12; num38++)
				{
					if ((int)Main.tile[num37, num38].wall != wallType)
					{
						Main.tile[num37, num38].active(true);
						Main.tile[num37, num38].type = tileType;
					}
				}
			}
			num9 = num6 - 5 - WorldGen.genRand.Next(4);
			num10 = num6;
			num11 = num7 - 3 - WorldGen.genRand.Next(3);
			num12 = num7;
			for (int num39 = num9; num39 < num10; num39++)
			{
				for (int num40 = num11; num40 < num12; num40++)
				{
					if ((int)Main.tile[num39, num40].wall != wallType)
					{
						Main.tile[num39, num40].active(true);
						Main.tile[num39, num40].type = tileType;
					}
				}
			}
			num17 = 1 + WorldGen.genRand.Next(2);
			num18 = 2 + WorldGen.genRand.Next(4);
			num19 = 0;
			if (num4 < 0)
			{
				num6++;
			}
			for (int num41 = num5 + 1; num41 < num6 - 1; num41++)
			{
				for (int num42 = num7 - num17; num42 < num7; num42++)
				{
					if ((int)Main.tile[num41, num42].wall != wallType)
					{
						Main.tile[num41, num42].active(true);
						Main.tile[num41, num42].type = tileType;
					}
				}
				num19++;
				if (num19 >= num18)
				{
					num41 += num18;
					num19 = 0;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.6);
			num6 = (int)((double)vector.X + num2 * 0.6);
			num7 = (int)((double)vector.Y - num3 * 0.6);
			num8 = (int)((double)vector.Y + num3 * 0.6);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num43 = num5; num43 < num6; num43++)
			{
				for (int num44 = num7; num44 < num8; num44++)
				{
					Main.tile[num43, num44].wall = 0;
				}
			}
			num5 = (int)((double)vector.X - num2 * 0.5);
			num6 = (int)((double)vector.X + num2 * 0.5);
			num7 = (int)((double)vector.Y - num3 * 0.5);
			num8 = (int)((double)vector.Y + num3 * 0.5);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num45 = num5; num45 < num6; num45++)
			{
				for (int num46 = num7; num46 < num8; num46++)
				{
					Main.tile[num45, num46].active(false);
					Main.tile[num45, num46].wall = 0;
				}
			}
			for (int num47 = num5; num47 < num6; num47++)
			{
				if (!Main.tile[num47, num8].active())
				{
					Main.tile[num47, num8].active(true);
					Main.tile[num47, num8].type = 19;
					if (wallType == 7)
					{
						Main.tile[num47, num8].frameY = 108;
					}
					if (wallType == 8)
					{
						Main.tile[num47, num8].frameY = 144;
					}
					if (wallType == 9)
					{
						Main.tile[num47, num8].frameY = 126;
					}
				}
			}
			Main.dungeonX = (int)vector.X;
			Main.dungeonY = num8;
			int num48 = NPC.NewNPC(Main.dungeonX * 16 + 8, Main.dungeonY * 16, 37, 0);
			Main.npc[num48].homeless = false;
			Main.npc[num48].homeTileX = Main.dungeonX;
			Main.npc[num48].homeTileY = Main.dungeonY;
			if (num4 == 1)
			{
				int num49 = 0;
				for (int num50 = num6; num50 < num6 + 50; num50++)
				{
					num49++;
					for (int num51 = num8 + num49; num51 < num8 + 50; num51++)
					{
						if (!Main.wallDungeon[(int)Main.tile[num50, num51].wall])
						{
							Main.tile[num50, num51].active(true);
							Main.tile[num50, num51].type = tileType;
						}
					}
				}
			}
			else
			{
				int num52 = 0;
				for (int num53 = num5; num53 > num5 - 50; num53--)
				{
					num52++;
					for (int num54 = num8 + num52; num54 < num8 + 50; num54++)
					{
						if (!Main.wallDungeon[(int)Main.tile[num53, num54].wall])
						{
							Main.tile[num53, num54].active(true);
							Main.tile[num53, num54].type = tileType;
						}
					}
				}
			}
			num17 = 1 + WorldGen.genRand.Next(2);
			num18 = 2 + WorldGen.genRand.Next(4);
			num19 = 0;
			num5 = (int)((double)vector.X - num2 * 0.5);
			num6 = (int)((double)vector.X + num2 * 0.5);
			num5 += 2;
			num6 -= 2;
			for (int num55 = num5; num55 < num6; num55++)
			{
				for (int num56 = num7; num56 < num8; num56++)
				{
					WorldGen.PlaceWall(num55, num56, wallType, true);
				}
				num19++;
				if (num19 >= num18)
				{
					num55 += num18 * 2;
					num19 = 0;
				}
			}
			vector.X -= (float)num2 * 0.6f * (float)num4;
			vector.Y += (float)num3 * 0.5f;
			num2 = 15.0;
			num3 = 3.0;
			vector.Y -= (float)num3 * 0.5f;
			num5 = (int)((double)vector.X - num2 * 0.5);
			num6 = (int)((double)vector.X + num2 * 0.5);
			num7 = (int)((double)vector.Y - num3 * 0.5);
			num8 = (int)((double)vector.Y + num3 * 0.5);
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num6 > Main.maxTilesX)
			{
				num6 = Main.maxTilesX;
			}
			if (num7 < 0)
			{
				num7 = 0;
			}
			if (num8 > Main.maxTilesY)
			{
				num8 = Main.maxTilesY;
			}
			for (int num57 = num5; num57 < num6; num57++)
			{
				for (int num58 = num7; num58 < num8; num58++)
				{
					Main.tile[num57, num58].active(false);
				}
			}
			if (num4 < 0)
			{
				vector.X -= 1f;
			}
			WorldGen.PlaceTile((int)vector.X, (int)vector.Y + 1, 10, true, false, -1, 13);
		}
		public static bool AddBuriedChest(int i, int j, int contain = 0, bool notNearOtherChests = false, int Style = -1)
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random((int)DateTime.Now.Ticks);
			}
			int k = j;
			while (k < Main.maxTilesY)
			{
				if (WorldGen.SolidTile(i, k))
				{
					bool flag = false;
					int num = k;
					int num2 = 0;
					if ((double)num >= Main.worldSurface + 25.0 || contain > 0)
					{
						num2 = 1;
						if (contain == 211 || contain == 212 || contain == 213 || contain == 753)
						{
							num2 = 10;
						}
					}
					if (Style >= 0)
					{
						num2 = Style;
					}
					if (contain == 0 && (double)num >= Main.worldSurface + 25.0 && num <= Main.maxTilesY - 205 && (Main.tile[i, k].type == 147 || Main.tile[i, k].type == 161 || Main.tile[i, k].type == 162))
					{
						num2 = 11;
						int num3 = WorldGen.genRand.Next(6);
						if (num3 == 0)
						{
							contain = 670;
						}
						else if (num3 == 1)
						{
							contain = 724;
						}
						else if (num3 == 2)
						{
							contain = 950;
						}
						else if (num3 == 3)
						{
							contain = 1319;
						}
						else if (num3 == 4)
						{
							contain = 987;
						}
						else if (num3 == 5)
						{
							contain = 1579;
						}
						if (WorldGen.genRand.Next(20) == 0)
						{
							contain = 997;
						}
						if (WorldGen.genRand.Next(50) == 0)
						{
							contain = 669;
						}
					}
					if (num > Main.maxTilesY - 205 && contain == 0)
					{
						if (WorldGen.hellChest == 0)
						{
							contain = 274;
							num2 = 4;
							flag = true;
						}
						else if (WorldGen.hellChest == 1)
						{
							contain = 220;
							num2 = 4;
							flag = true;
						}
						else if (WorldGen.hellChest == 2)
						{
							contain = 112;
							num2 = 4;
							flag = true;
						}
						else if (WorldGen.hellChest == 3)
						{
							contain = 218;
							num2 = 4;
							flag = true;
						}
					}
					int num4 = WorldGen.PlaceChest(i - 1, num - 1, 21, notNearOtherChests, num2);
					if (num4 >= 0)
					{
						if (flag)
						{
							WorldGen.hellChest++;
							if (WorldGen.hellChest > 3)
							{
								WorldGen.hellChest = 0;
							}
						}
						int num5 = 0;
						while (num5 == 0)
						{
							if ((double)num < Main.worldSurface + 25.0 || contain == 848)
							{
								if (contain > 0)
								{
									Main.chest[num4].item[num5].SetDefaults(contain, false);
									Main.chest[num4].item[num5].Prefix(-1);
									if (contain == 848)
									{
										num5++;
										Main.chest[num4].item[num5].SetDefaults(866, false);
									}
									num5++;
								}
								else
								{
									int num6 = WorldGen.genRand.Next(8);
									if (num6 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(280, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num6 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(281, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num6 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(284, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num6 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(282, false);
										Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(50, 75);
									}
									if (num6 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(279, false);
										Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(25, 50);
									}
									if (num6 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(285, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num6 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(953, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num6 == 7)
									{
										Main.chest[num4].item[num5].SetDefaults(946, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(168, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(3, 6);
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num7 = WorldGen.genRand.Next(2);
									int stack = WorldGen.genRand.Next(8) + 3;
									if (num7 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.copperBar, false);
									}
									if (num7 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.ironBar, false);
									}
									Main.chest[num4].item[num5].stack = stack;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int stack2 = WorldGen.genRand.Next(50, 101);
									Main.chest[num4].item[num5].SetDefaults(965, false);
									Main.chest[num4].item[num5].stack = stack2;
									num5++;
								}
								if (WorldGen.genRand.Next(3) != 0)
								{
									int num8 = WorldGen.genRand.Next(2);
									int stack3 = WorldGen.genRand.Next(26) + 25;
									if (num8 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(40, false);
									}
									if (num8 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(42, false);
									}
									Main.chest[num4].item[num5].stack = stack3;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num9 = WorldGen.genRand.Next(1);
									int stack4 = WorldGen.genRand.Next(3) + 3;
									if (num9 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(28, false);
									}
									Main.chest[num4].item[num5].stack = stack4;
									num5++;
								}
								if (WorldGen.genRand.Next(3) > 0)
								{
									int num10 = WorldGen.genRand.Next(7);
									int stack5 = WorldGen.genRand.Next(1, 3);
									if (num10 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(292, false);
									}
									if (num10 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(298, false);
									}
									if (num10 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(299, false);
									}
									if (num10 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(290, false);
									}
									if (num10 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(2322, false);
									}
									if (num10 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(2325, false);
									}
									if (num10 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(2350, false);
									}
									Main.chest[num4].item[num5].stack = stack5;
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									int stack6 = WorldGen.genRand.Next(1, 3);
									Main.chest[num4].item[num5].SetDefaults(2350, false);
									Main.chest[num4].item[num5].stack = stack6;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num11 = WorldGen.genRand.Next(2);
									int stack7 = WorldGen.genRand.Next(11) + 10;
									if (num11 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(8, false);
									}
									if (num11 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(31, false);
									}
									Main.chest[num4].item[num5].stack = stack7;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(72, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(10, 30);
									num5++;
								}
							}
							else if ((double)num < Main.rockLayer)
							{
								if (contain > 0)
								{
									Main.chest[num4].item[num5].SetDefaults(contain, false);
									Main.chest[num4].item[num5].Prefix(-1);
									num5++;
								}
								else
								{
									int num12 = WorldGen.genRand.Next(7);
									if (WorldGen.genRand.Next(20) == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(997, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									else
									{
										if (num12 == 0)
										{
											Main.chest[num4].item[num5].SetDefaults(49, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 1)
										{
											Main.chest[num4].item[num5].SetDefaults(50, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 2)
										{
											Main.chest[num4].item[num5].SetDefaults(53, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 3)
										{
											Main.chest[num4].item[num5].SetDefaults(54, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 4)
										{
											Main.chest[num4].item[num5].SetDefaults(55, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 5)
										{
											Main.chest[num4].item[num5].SetDefaults(975, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num12 == 6)
										{
											Main.chest[num4].item[num5].SetDefaults(930, false);
											Main.chest[num4].item[num5].Prefix(-1);
											num5++;
											Main.chest[num4].item[num5].SetDefaults(931, false);
											Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(26) + 25;
										}
									}
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(166, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(10, 20);
									num5++;
								}
								if (WorldGen.genRand.Next(5) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(52, false);
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									int stack8 = WorldGen.genRand.Next(50, 101);
									Main.chest[num4].item[num5].SetDefaults(965, false);
									Main.chest[num4].item[num5].stack = stack8;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num13 = WorldGen.genRand.Next(2);
									int stack9 = WorldGen.genRand.Next(10) + 5;
									if (num13 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.ironBar, false);
									}
									if (num13 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.silverBar, false);
									}
									Main.chest[num4].item[num5].stack = stack9;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num14 = WorldGen.genRand.Next(2);
									int stack10 = WorldGen.genRand.Next(25) + 25;
									if (num14 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(40, false);
									}
									if (num14 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(42, false);
									}
									Main.chest[num4].item[num5].stack = stack10;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num15 = WorldGen.genRand.Next(1);
									int stack11 = WorldGen.genRand.Next(3) + 3;
									if (num15 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(28, false);
									}
									Main.chest[num4].item[num5].stack = stack11;
									num5++;
								}
								if (WorldGen.genRand.Next(3) > 0)
								{
									int num16 = WorldGen.genRand.Next(9);
									int stack12 = WorldGen.genRand.Next(1, 3);
									if (num16 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(289, false);
									}
									if (num16 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(298, false);
									}
									if (num16 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(299, false);
									}
									if (num16 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(290, false);
									}
									if (num16 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(303, false);
									}
									if (num16 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(291, false);
									}
									if (num16 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(304, false);
									}
									if (num16 == 7)
									{
										Main.chest[num4].item[num5].SetDefaults(2322, false);
									}
									if (num16 == 8)
									{
										Main.chest[num4].item[num5].SetDefaults(2329, false);
									}
									Main.chest[num4].item[num5].stack = stack12;
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									int stack13 = WorldGen.genRand.Next(1, 3);
									Main.chest[num4].item[num5].SetDefaults(2350, false);
									Main.chest[num4].item[num5].stack = stack13;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int stack14 = WorldGen.genRand.Next(11) + 10;
									if (num2 == 11)
									{
										Main.chest[num4].item[num5].SetDefaults(974, false);
									}
									else
									{
										Main.chest[num4].item[num5].SetDefaults(8, false);
									}
									Main.chest[num4].item[num5].stack = stack14;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(72, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(50, 90);
									num5++;
								}
							}
							else if (num < Main.maxTilesY - 250)
							{
								if (contain > 0)
								{
									Main.chest[num4].item[num5].SetDefaults(contain, false);
									Main.chest[num4].item[num5].Prefix(-1);
									num5++;
								}
								else
								{
									int num17 = WorldGen.genRand.Next(7);
									if (WorldGen.genRand.Next(40) == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(906, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									else if (WorldGen.genRand.Next(15) == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(997, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									else
									{
										if (num17 == 0)
										{
											Main.chest[num4].item[num5].SetDefaults(49, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 1)
										{
											Main.chest[num4].item[num5].SetDefaults(50, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 2)
										{
											Main.chest[num4].item[num5].SetDefaults(53, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 3)
										{
											Main.chest[num4].item[num5].SetDefaults(54, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 4)
										{
											Main.chest[num4].item[num5].SetDefaults(55, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 5)
										{
											Main.chest[num4].item[num5].SetDefaults(975, false);
											Main.chest[num4].item[num5].Prefix(-1);
										}
										if (num17 == 6)
										{
											Main.chest[num4].item[num5].SetDefaults(930, false);
											Main.chest[num4].item[num5].Prefix(-1);
											num5++;
											Main.chest[num4].item[num5].SetDefaults(931, false);
											Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(26) + 25;
										}
									}
									num5++;
								}
								if (WorldGen.genRand.Next(5) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(43, false);
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(167, false);
									num5++;
								}
								if (WorldGen.genRand.Next(4) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(51, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(26) + 25;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num18 = WorldGen.genRand.Next(2);
									int stack15 = WorldGen.genRand.Next(8) + 3;
									if (num18 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.goldBar, false);
									}
									if (num18 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.silverBar, false);
									}
									Main.chest[num4].item[num5].stack = stack15;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num19 = WorldGen.genRand.Next(2);
									int stack16 = WorldGen.genRand.Next(26) + 25;
									if (num19 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(41, false);
									}
									if (num19 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(279, false);
									}
									Main.chest[num4].item[num5].stack = stack16;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num20 = WorldGen.genRand.Next(1);
									int stack17 = WorldGen.genRand.Next(3) + 3;
									if (num20 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(188, false);
									}
									Main.chest[num4].item[num5].stack = stack17;
									num5++;
								}
								if (WorldGen.genRand.Next(3) > 0)
								{
									int num21 = WorldGen.genRand.Next(6);
									int stack18 = WorldGen.genRand.Next(1, 3);
									if (num21 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(296, false);
									}
									if (num21 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(295, false);
									}
									if (num21 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(299, false);
									}
									if (num21 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(302, false);
									}
									if (num21 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(303, false);
									}
									if (num21 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(305, false);
									}
									Main.chest[num4].item[num5].stack = stack18;
									num5++;
								}
								if (WorldGen.genRand.Next(3) > 1)
								{
									int num22 = WorldGen.genRand.Next(7);
									int stack19 = WorldGen.genRand.Next(1, 3);
									if (num22 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(301, false);
									}
									if (num22 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(302, false);
									}
									if (num22 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(297, false);
									}
									if (num22 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(304, false);
									}
									if (num22 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(2329, false);
									}
									if (num22 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(2351, false);
									}
									if (num22 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(2329, false);
									}
									Main.chest[num4].item[num5].stack = stack19;
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									int stack20 = WorldGen.genRand.Next(1, 3);
									Main.chest[num4].item[num5].SetDefaults(2350, false);
									Main.chest[num4].item[num5].stack = stack20;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num23 = WorldGen.genRand.Next(2);
									int stack21 = WorldGen.genRand.Next(15) + 15;
									if (num23 == 0)
									{
										if (num2 == 11)
										{
											Main.chest[num4].item[num5].SetDefaults(974, false);
										}
										else
										{
											Main.chest[num4].item[num5].SetDefaults(8, false);
										}
									}
									if (num23 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(282, false);
									}
									Main.chest[num4].item[num5].stack = stack21;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(73, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(1, 3);
									num5++;
								}
							}
							else
							{
								if (contain > 0)
								{
									Main.chest[num4].item[num5].SetDefaults(contain, false);
									Main.chest[num4].item[num5].Prefix(-1);
									num5++;
								}
								else
								{
									int num24 = WorldGen.genRand.Next(4);
									if (num24 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(49, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num24 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(50, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num24 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(53, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									if (num24 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(54, false);
										Main.chest[num4].item[num5].Prefix(-1);
									}
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(167, false);
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num25 = WorldGen.genRand.Next(2);
									int stack22 = WorldGen.genRand.Next(15) + 15;
									if (num25 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(117, false);
									}
									if (num25 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(WorldGen.goldBar, false);
									}
									Main.chest[num4].item[num5].stack = stack22;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num26 = WorldGen.genRand.Next(2);
									int stack23 = WorldGen.genRand.Next(25) + 50;
									if (num26 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(265, false);
									}
									if (num26 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(278, false);
									}
									Main.chest[num4].item[num5].stack = stack23;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num27 = WorldGen.genRand.Next(2);
									int stack24 = WorldGen.genRand.Next(6) + 15;
									if (num27 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(226, false);
									}
									if (num27 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(227, false);
									}
									Main.chest[num4].item[num5].stack = stack24;
									num5++;
								}
								if (WorldGen.genRand.Next(4) > 0)
								{
									int num28 = WorldGen.genRand.Next(8);
									int stack25 = WorldGen.genRand.Next(1, 3);
									if (num28 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(296, false);
									}
									if (num28 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(295, false);
									}
									if (num28 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(293, false);
									}
									if (num28 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(288, false);
									}
									if (num28 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(294, false);
									}
									if (num28 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(297, false);
									}
									if (num28 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(304, false);
									}
									if (num28 == 7)
									{
										Main.chest[num4].item[num5].SetDefaults(2323, false);
									}
									Main.chest[num4].item[num5].stack = stack25;
									num5++;
								}
								if (WorldGen.genRand.Next(3) > 0)
								{
									int num29 = WorldGen.genRand.Next(8);
									int stack26 = WorldGen.genRand.Next(1, 3);
									if (num29 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(305, false);
									}
									if (num29 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(301, false);
									}
									if (num29 == 2)
									{
										Main.chest[num4].item[num5].SetDefaults(302, false);
									}
									if (num29 == 3)
									{
										Main.chest[num4].item[num5].SetDefaults(288, false);
									}
									if (num29 == 4)
									{
										Main.chest[num4].item[num5].SetDefaults(300, false);
									}
									if (num29 == 5)
									{
										Main.chest[num4].item[num5].SetDefaults(2351, false);
									}
									if (num29 == 6)
									{
										Main.chest[num4].item[num5].SetDefaults(2348, false);
									}
									if (num29 == 7)
									{
										Main.chest[num4].item[num5].SetDefaults(2345, false);
									}
									Main.chest[num4].item[num5].stack = stack26;
									num5++;
								}
								if (WorldGen.genRand.Next(3) == 0)
								{
									int stack27 = WorldGen.genRand.Next(1, 3);
									Main.chest[num4].item[num5].SetDefaults(2350, false);
									Main.chest[num4].item[num5].stack = stack27;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									int num30 = WorldGen.genRand.Next(2);
									int stack28 = WorldGen.genRand.Next(15) + 15;
									if (num30 == 0)
									{
										Main.chest[num4].item[num5].SetDefaults(8, false);
									}
									if (num30 == 1)
									{
										Main.chest[num4].item[num5].SetDefaults(282, false);
									}
									Main.chest[num4].item[num5].stack = stack28;
									num5++;
								}
								if (WorldGen.genRand.Next(2) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(73, false);
									Main.chest[num4].item[num5].stack = WorldGen.genRand.Next(2, 5);
									num5++;
								}
							}
							if (num5 > 0)
							{
								if (num2 == 10 && Main.rand.Next(4) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2204, false);
									num5++;
								}
								if (num2 == 11 && Main.rand.Next(7) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2198, false);
									num5++;
								}
								if (num2 == 12 && Main.rand.Next(2) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2196, false);
									num5++;
								}
								if (num2 == 13 && Main.rand.Next(3) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2197, false);
									num5++;
								}
								if (num2 == 16 && Main.rand.Next(4) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2195, false);
									num5++;
								}
								if (Main.wallDungeon[(int)Main.tile[i, k].wall] && Main.rand.Next(8) == 0)
								{
									Main.chest[num4].item[num5].SetDefaults(2192, false);
									num5++;
								}
							}
						}
						return true;
					}
					return false;
				}
				else
				{
					k++;
				}
			}
			return false;
		}
		public static void UnlockDoor(int i, int j)
		{
			int num = j;
			while (Main.tile[i, num].frameY != 594)
			{
				num--;
				if (Main.tile[i, num].frameY < 594 || num <= 0)
				{
					return;
				}
			}
			Main.PlaySound(22, i * 16, num * 16 + 16, 1);
			for (int k = num; k <= num + 2; k++)
			{
				if (Main.tile[i, k] == null)
				{
					Main.tile[i, k] = new Tile();
				}
				Tile expr_81 = Main.tile[i, k];
				expr_81.frameY = (short)(expr_81.frameY + 54);
				for (int l = 0; l < 4; l++)
				{
					Dust.NewDust(new Vector2((float)(i * 16), (float)(k * 16)), 16, 16, 11, 0f, 0f, 0, default(Color), 1f);
				}
			}
		}
		public static bool OpenDoor(int i, int j, int direction)
		{
			if (Main.tile[i, j - 1] == null)
			{
				Main.tile[i, j - 1] = new Tile();
			}
			if (Main.tile[i, j - 2] == null)
			{
				Main.tile[i, j - 2] = new Tile();
			}
			if (Main.tile[i, j + 1] == null)
			{
				Main.tile[i, j + 1] = new Tile();
			}
			if (Main.tile[i, j] == null)
			{
				Main.tile[i, j] = new Tile();
			}
			if (Main.tile[i, j].type != 10)
			{
				return false;
			}
			if (Main.tile[i, j].frameY >= 594 && Main.tile[i, j].frameY <= 646)
			{
				return false;
			}
			int k = (int)Main.tile[i, j].frameY;
			int num = 0;
			while (k >= 54)
			{
				k -= 54;
				num++;
			}
			int num2 = j - k / 18;
			byte color = Main.tile[i, num2].color();
			if (Main.tile[i, num2 + 1] == null)
			{
				Main.tile[i, num2 + 1] = new Tile();
			}
			byte color2 = Main.tile[i, num2 + 1].color();
			if (Main.tile[i, num2 + 2] == null)
			{
				Main.tile[i, num2 + 2] = new Tile();
			}
			byte color3 = Main.tile[i, num2 + 2].color();
			short num3 = 0;
			int num4;
			int num5;
			if (direction == -1)
			{
				num4 = i - 1;
				num3 = 36;
				num5 = i - 1;
			}
			else
			{
				num4 = i;
				num5 = i + 1;
			}
			for (int l = num2; l < num2 + 3; l++)
			{
				if (Main.tile[num5, l] == null)
				{
					Main.tile[num5, l] = new Tile();
				}
				if (Main.tile[num5, l].active())
				{
					if (!Main.tileCut[(int)Main.tile[num5, l].type] && Main.tile[num5, l].type != 3 && Main.tile[num5, l].type != 24 && Main.tile[num5, l].type != 52 && Main.tile[num5, l].type != 61 && Main.tile[num5, l].type != 62 && Main.tile[num5, l].type != 69 && Main.tile[num5, l].type != 71 && Main.tile[num5, l].type != 73 && Main.tile[num5, l].type != 74 && Main.tile[num5, l].type != 110 && Main.tile[num5, l].type != 113 && Main.tile[num5, l].type != 115)
					{
						return false;
					}
					WorldGen.KillTile(num5, l, false, false, false);
				}
			}
			if (Main.netMode != 1 && Wiring.running)
			{
				Wiring.SkipWire(num4, num2);
				Wiring.SkipWire(num4, num2 + 1);
				Wiring.SkipWire(num4, num2 + 2);
				Wiring.SkipWire(num4 + 1, num2);
				Wiring.SkipWire(num4 + 1, num2 + 1);
				Wiring.SkipWire(num4 + 1, num2 + 2);
			}
			int num6 = num * 54;
			Main.PlaySound(8, i * 16, j * 16, 1);
			Main.tile[num4, num2].active(true);
			Main.tile[num4, num2].type = 11;
			Main.tile[num4, num2].frameY = (short)num6;
			Main.tile[num4, num2].frameX = num3;
			Main.tile[num4, num2].color(color);
			if (Main.tile[num4 + 1, num2] == null)
			{
				Main.tile[num4 + 1, num2] = new Tile();
			}
			Main.tile[num4 + 1, num2].active(true);
			Main.tile[num4 + 1, num2].type = 11;
			Main.tile[num4 + 1, num2].frameY = (short)num6;
			Main.tile[num4 + 1, num2].frameX = (short)(num3 + 18);
			Main.tile[num4 + 1, num2].color(color);
			if (Main.tile[num4, num2 + 1] == null)
			{
				Main.tile[num4, num2 + 1] = new Tile();
			}
			Main.tile[num4, num2 + 1].active(true);
			Main.tile[num4, num2 + 1].type = 11;
			Main.tile[num4, num2 + 1].frameY = (short)(num6 + 18);
			Main.tile[num4, num2 + 1].frameX = num3;
			Main.tile[num4, num2 + 1].color(color2);
			if (Main.tile[num4 + 1, num2 + 1] == null)
			{
				Main.tile[num4 + 1, num2 + 1] = new Tile();
			}
			Main.tile[num4 + 1, num2 + 1].active(true);
			Main.tile[num4 + 1, num2 + 1].type = 11;
			Main.tile[num4 + 1, num2 + 1].frameY = (short)(num6 + 18);
			Main.tile[num4 + 1, num2 + 1].frameX = (short)(num3 + 18);
			Main.tile[num4 + 1, num2 + 1].color(color2);
			if (Main.tile[num4, num2 + 2] == null)
			{
				Main.tile[num4, num2 + 2] = new Tile();
			}
			Main.tile[num4, num2 + 2].active(true);
			Main.tile[num4, num2 + 2].type = 11;
			Main.tile[num4, num2 + 2].frameY = (short)(num6 + 36);
			Main.tile[num4, num2 + 2].frameX = num3;
			Main.tile[num4, num2 + 2].color(color3);
			if (Main.tile[num4 + 1, num2 + 2] == null)
			{
				Main.tile[num4 + 1, num2 + 2] = new Tile();
			}
			Main.tile[num4 + 1, num2 + 2].active(true);
			Main.tile[num4 + 1, num2 + 2].type = 11;
			Main.tile[num4 + 1, num2 + 2].frameY = (short)(num6 + 36);
			Main.tile[num4 + 1, num2 + 2].frameX = (short)(num3 + 18);
			Main.tile[num4 + 1, num2 + 2].color(color3);
			for (int m = num4 - 1; m <= num4 + 2; m++)
			{
				for (int n = num2 - 1; n <= num2 + 2; n++)
				{
					WorldGen.TileFrame(m, n, false, false);
				}
			}
			return true;
		}
		public static void Check1xX(int x, int j, byte type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int frameX = (int)Main.tile[x, j].frameX;
			int num = 3;
			if (type == 92)
			{
				num = 6;
			}
			int i = (int)Main.tile[x, j].frameY;
			int num2 = 0;
			while (i >= 18 * num)
			{
				i -= 18 * num;
				num2++;
			}
			int num3 = j - i / 18;
			bool flag = false;
			for (int k = 0; k < num; k++)
			{
				if (Main.tile[x, num3 + k] == null)
				{
					Main.tile[x, num3 + k] = new Tile();
				}
				if (!Main.tile[x, num3 + k].active())
				{
					flag = true;
				}
				else if (Main.tile[x, num3 + k].type != (ushort)type)
				{
					flag = true;
				}
				else if ((int)Main.tile[x, num3 + k].frameY != k * 18 + num2 * num * 18)
				{
					flag = true;
				}
				else if ((int)Main.tile[x, num3 + k].frameX != frameX)
				{
					flag = true;
				}
			}
			if (Main.tile[x, num3 + num] == null)
			{
				Main.tile[x, num3 + num] = new Tile();
			}
			if (!WorldGen.SolidTile2(x, num3 + num))
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int l = 0; l < num; l++)
				{
					if (Main.tile[x, num3 + l].type == (ushort)type)
					{
						WorldGen.KillTile(x, num3 + l, false, false, false);
					}
				}
				if (type == 92)
				{
					Item.NewItem(x * 16, j * 16, 32, 32, 341, 1, false, 0, false);
				}
				if (type == 93)
				{
					int type2 = 0;
					if (num2 == 0)
					{
						type2 = 342;
					}
					else if (num2 >= 1 && num2 <= 10)
					{
						type2 = 2082 + num2 - 1;
					}
					else if (num2 >= 11 && num2 <= 16)
					{
						type2 = 2129 + num2 - 11;
					}
					else if (num2 == 17)
					{
						type2 = 2225;
					}
					else if (num2 == 18)
					{
						type2 = 2533;
					}
					else if (num2 == 19)
					{
						type2 = 2547;
					}
					else if (num2 == 20)
					{
						type2 = 2563;
					}
					else if (num2 == 21)
					{
						type2 = 2578;
					}
					else if (num2 == 22)
					{
						type2 = 2643;
					}
					else if (num2 == 23)
					{
						type2 = 2644;
					}
					else if (num2 == 24)
					{
						type2 = 2645;
					}
					else if (num2 == 25)
					{
						type2 = 2646;
					}
					else if (num2 == 26)
					{
						type2 = 2647;
					}
					Item.NewItem(x * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Check2xX(int i, int j, ushort type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = i;
			int k;
			for (k = (int)Main.tile[i, j].frameX; k >= 36; k -= 36)
			{
			}
			if (k == 18)
			{
				num--;
			}
			if (Main.tile[num, j] == null)
			{
				Main.tile[num, j] = new Tile();
			}
			int l = Main.tile[num, j].frameY / 18;
			int num2 = 3;
			if (type == 104)
			{
				num2 = 5;
			}
			if (type == 207)
			{
				num2 = 4;
			}
			int num3 = 0;
			while (l >= num2)
			{
				l -= num2;
				num3 += num2 * 18;
			}
			int num4 = j - l;
			if (Main.tile[num, num4] == null)
			{
				Main.tile[num, num4] = new Tile();
			}
			int frameX = (int)Main.tile[num, j].frameX;
			bool flag = false;
			for (int m = 0; m < num2; m++)
			{
				if (Main.tile[num, num4 + m] == null)
				{
					Main.tile[num, num4 + m] = new Tile();
				}
				if (!Main.tile[num, num4 + m].active())
				{
					flag = true;
				}
				else if (Main.tile[num, num4 + m].type != type)
				{
					flag = true;
				}
				else if ((int)Main.tile[num, num4 + m].frameY != m * 18 + num3)
				{
					flag = true;
				}
				else if ((int)Main.tile[num, num4 + m].frameX != frameX)
				{
					flag = true;
				}
				if (Main.tile[num + 1, num4 + m] == null)
				{
					Main.tile[num + 1, num4 + m] = new Tile();
				}
				if (!Main.tile[num + 1, num4 + m].active())
				{
					flag = true;
				}
				else if (Main.tile[num + 1, num4 + m].type != type)
				{
					flag = true;
				}
				else if ((int)Main.tile[num + 1, num4 + m].frameY != m * 18 + num3)
				{
					flag = true;
				}
				else if ((int)Main.tile[num + 1, num4 + m].frameX != frameX + 18)
				{
					flag = true;
				}
			}
			if (!WorldGen.SolidTile2(num, num4 + num2))
			{
				flag = true;
			}
			if (!WorldGen.SolidTile2(num + 1, num4 + num2))
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int n = 0; n < num2; n++)
				{
					if (Main.tile[num, num4 + n].type == type)
					{
						WorldGen.KillTile(num, num4 + n, false, false, false);
					}
					if (Main.tile[num + 1, num4 + n].type == type)
					{
						WorldGen.KillTile(num + 1, num4 + n, false, false, false);
					}
				}
				if (type == 104)
				{
					int num5 = frameX / 36;
					if (num5 >= 1 && num5 <= 5)
					{
						num5 = 2237 + num5 - 1;
					}
					else if (num5 == 6)
					{
						num5 = 2560;
					}
					else if (num5 == 7)
					{
						num5 = 2575;
					}
					else if (num5 >= 8 && num5 <= 23)
					{
						num5 = 2591 + num5 - 8;
					}
					else
					{
						num5 = 359;
					}
					Item.NewItem(num * 16, j * 16, 32, 32, num5, 1, false, 0, false);
				}
				if (type == 105)
				{
					int num6 = frameX / 36;
					if (num6 == 0)
					{
						num6 = 360;
					}
					else if (num6 == 1)
					{
						num6 = 52;
					}
					else if (num6 == 43)
					{
						num6 = 1152;
					}
					else if (num6 == 44)
					{
						num6 = 1153;
					}
					else if (num6 == 45)
					{
						num6 = 1154;
					}
					else if (num6 == 46)
					{
						num6 = 1408;
					}
					else if (num6 == 47)
					{
						num6 = 1409;
					}
					else if (num6 == 48)
					{
						num6 = 1410;
					}
					else if (num6 == 49)
					{
						num6 = 1462;
					}
					else if (num6 == 50)
					{
						num6 = 2672;
					}
					else
					{
						num6 = 438 + num6 - 2;
					}
					Item.NewItem(num * 16, j * 16, 32, 32, num6, 1, false, 0, false);
				}
				if (type == 337)
				{
					int num7 = frameX / 36;
					Item.NewItem(num * 16, j * 16, 32, 32, 2702 + num7, 1, false, 0, false);
				}
				if (type == 207)
				{
					int num8 = frameX / 36;
					if (num8 == 0)
					{
						num8 = 909;
					}
					else if (num8 == 1)
					{
						num8 = 910;
					}
					else if (num8 >= 2 && num8 <= 7)
					{
						num8 = 938 + num8;
					}
					Item.NewItem(num * 16, j * 16, 32, 32, num8, 1, false, 0, false);
				}
				if (type == 320)
				{
					Item.NewItem(num * 16, j * 16, 32, 32, 2496, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void PlaceTight(int x, int y, ushort type = 165, bool spiders = false)
		{
			if (Main.tile[x, y - 1] == null)
			{
				Main.tile[x, y - 1] = new Tile();
			}
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (WorldGen.SolidTile(x, y - 1) && !Main.tile[x, y].active() && !Main.tile[x, y + 1].active())
			{
				if (spiders)
				{
					int num = 108 + Main.rand.Next(3) * 18;
					Main.tile[x, y].type = type;
					Main.tile[x, y].active(true);
					Main.tile[x, y].frameX = (short)num;
					Main.tile[x, y].frameY = 0;
					Main.tile[x, y + 1].type = type;
					Main.tile[x, y + 1].active(true);
					Main.tile[x, y + 1].frameX = (short)num;
					Main.tile[x, y + 1].frameY = 18;
				}
				else
				{
					if (Main.tile[x, y - 1].type == 147 || Main.tile[x, y - 1].type == 161 || Main.tile[x, y - 1].type == 163 || Main.tile[x, y - 1].type == 164)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							int num2 = Main.rand.Next(3) * 18;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num2;
							Main.tile[x, y].frameY = 72;
						}
						else
						{
							int num3 = Main.rand.Next(3) * 18;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num3;
							Main.tile[x, y].frameY = 0;
							Main.tile[x, y + 1].type = type;
							Main.tile[x, y + 1].active(true);
							Main.tile[x, y + 1].frameX = (short)num3;
							Main.tile[x, y + 1].frameY = 18;
						}
					}
					if (Main.tile[x, y - 1].type == 1 || Main.tileMoss[(int)Main.tile[x, y - 1].type] || Main.tile[x, y - 1].type == 117 || Main.tile[x, y - 1].type == 25 || Main.tile[x, y - 1].type == 203)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							int num4 = 54 + Main.rand.Next(3) * 18;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num4;
							Main.tile[x, y].frameY = 72;
						}
						else
						{
							int num5 = 54 + Main.rand.Next(3) * 18;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num5;
							Main.tile[x, y].frameY = 0;
							Main.tile[x, y + 1].type = type;
							Main.tile[x, y + 1].active(true);
							Main.tile[x, y + 1].frameX = (short)num5;
							Main.tile[x, y + 1].frameY = 18;
						}
					}
					if (Main.tile[x, y - 1].type == 225)
					{
						int num6 = 162 + Main.rand.Next(3) * 18;
						Main.tile[x, y].type = type;
						Main.tile[x, y].active(true);
						Main.tile[x, y].frameX = (short)num6;
						Main.tile[x, y].frameY = 72;
					}
				}
			}
			else
			{
				if (spiders)
				{
					return;
				}
				if (WorldGen.SolidTile(x, y + 1) && !Main.tile[x, y].active() && !Main.tile[x, y - 1].active())
				{
					if (Main.tile[x, y + 1].type == 1 || Main.tileMoss[(int)Main.tile[x, y + 1].type] || Main.tile[x, y - 1].type == 117 || Main.tile[x, y - 1].type == 25 || Main.tile[x, y - 1].type == 203)
					{
						if (WorldGen.genRand.Next(2) == 0)
						{
							int num7 = 54 + Main.rand.Next(3) * 18;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num7;
							Main.tile[x, y].frameY = 90;
						}
						else
						{
							int num8 = 54 + Main.rand.Next(3) * 18;
							Main.tile[x, y - 1].type = type;
							Main.tile[x, y - 1].active(true);
							Main.tile[x, y - 1].frameX = (short)num8;
							Main.tile[x, y - 1].frameY = 36;
							Main.tile[x, y].type = type;
							Main.tile[x, y].active(true);
							Main.tile[x, y].frameX = (short)num8;
							Main.tile[x, y].frameY = 54;
						}
					}
					if (Main.tile[x, y + 1].type == 225)
					{
						int num9 = 162 + Main.rand.Next(3) * 18;
						Main.tile[x, y].type = type;
						Main.tile[x, y].active(true);
						Main.tile[x, y].frameX = (short)num9;
						Main.tile[x, y].frameY = 90;
					}
				}
			}
			if (Main.tile[x, y].type == 165)
			{
				WorldGen.CheckTight(x, y);
			}
		}
		public static void TightBiome(int x, int j)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Main.tile[x, j] == null)
			{
				return;
			}
			int num = j;
			int num2 = 1;
			int num3;
			if (Main.tile[x, num].frameX >= 54 && Main.tile[x, num].frameX <= 90)
			{
				num3 = 0;
			}
			else if (Main.tile[x, num].frameX >= 216 && Main.tile[x, num].frameX <= 252)
			{
				num3 = 1;
			}
			else if (Main.tile[x, num].frameX >= 270 && Main.tile[x, num].frameX <= 306)
			{
				num3 = 2;
			}
			else
			{
				if (Main.tile[x, num].frameX < 324 || Main.tile[x, num].frameX > 360)
				{
					return;
				}
				num3 = 3;
			}
			int num4;
			if (Main.tile[x, num].frameY == 72)
			{
				num4 = (int)Main.tile[x, num - 1].type;
			}
			else if (Main.tile[x, num].frameY == 90)
			{
				num4 = (int)Main.tile[x, num + 1].type;
			}
			else if (Main.tile[x, num].frameY >= 36)
			{
				if (Main.tile[x, num].frameY == 54)
				{
					num--;
				}
				num2 = 2;
				num4 = (int)Main.tile[x, num + 2].type;
			}
			else
			{
				if (Main.tile[x, num].frameY == 18)
				{
					num--;
				}
				num2 = 2;
				num4 = (int)Main.tile[x, num - 1].type;
			}
			if (num4 == 1)
			{
				num4 = 0;
			}
			else if (num4 == 117)
			{
				num4 = 1;
			}
			else if (num4 == 25)
			{
				num4 = 2;
			}
			else
			{
				if (num4 != 203)
				{
					return;
				}
				num4 = 3;
			}
			if (num3 != num4)
			{
				int num5 = WorldGen.genRand.Next(3) * 18;
				if (num4 == 0)
				{
					num5 += 54;
				}
				else if (num4 == 1)
				{
					num5 += 216;
				}
				else if (num4 == 2)
				{
					num5 += 270;
				}
				else if (num4 == 3)
				{
					num5 += 324;
				}
				for (int i = num; i < num + num2; i++)
				{
					Main.tile[x, i].frameX = (short)num5;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendTileSquare(-1, x, num, 2);
				}
			}
		}
		public static void CheckTight(int x, int j)
		{
			if (Main.tile[x, j] == null)
			{
				return;
			}
			int num = j;
			if (Main.tile[x, num].frameY == 72)
			{
				if (Main.tile[x, num - 1] == null)
				{
					Main.tile[x, num - 1] = new Tile();
				}
				if (Main.tile[x, num] == null)
				{
					Main.tile[x, num] = new Tile();
				}
				if (Main.tile[x, num + 1] == null)
				{
					Main.tile[x, num + 1] = new Tile();
				}
				bool flag = false;
				if (!WorldGen.SolidTile(x, num - 1))
				{
					flag = true;
				}
				if (!flag)
				{
					WorldGen.TightBiome(x, num);
					return;
				}
				if (Main.tile[x, num].type == Main.tile[x, j].type)
				{
					WorldGen.KillTile(x, num, false, false, false);
					return;
				}
			}
			else if (Main.tile[x, num].frameY == 90)
			{
				if (Main.tile[x, num - 1] == null)
				{
					Main.tile[x, num - 1] = new Tile();
				}
				if (Main.tile[x, num] == null)
				{
					Main.tile[x, num] = new Tile();
				}
				if (Main.tile[x, num + 1] == null)
				{
					Main.tile[x, num + 1] = new Tile();
				}
				bool flag2 = false;
				if (!WorldGen.SolidTile(x, num + 1))
				{
					flag2 = true;
				}
				if (!flag2)
				{
					WorldGen.TightBiome(x, num);
					return;
				}
				if (Main.tile[x, num].type == Main.tile[x, j].type)
				{
					WorldGen.KillTile(x, num, false, false, false);
					return;
				}
			}
			else if (Main.tile[x, num].frameY >= 36)
			{
				if (Main.tile[x, num].frameY == 54)
				{
					num--;
				}
				if (Main.tile[x, num] == null)
				{
					Main.tile[x, num] = new Tile();
				}
				if (Main.tile[x, num + 1] == null)
				{
					Main.tile[x, num + 1] = new Tile();
				}
				if (Main.tile[x, num + 2] == null)
				{
					Main.tile[x, num + 2] = new Tile();
				}
				bool flag3 = false;
				if (!WorldGen.SolidTile(x, num + 2))
				{
					flag3 = true;
				}
				if (Main.tile[x, num + 1].type != Main.tile[x, num].type)
				{
					flag3 = true;
				}
				if (Main.tile[x, num + 1].frameX != Main.tile[x, num].frameX)
				{
					flag3 = true;
				}
				if (!flag3)
				{
					WorldGen.TightBiome(x, num);
					return;
				}
				if (Main.tile[x, num].type == Main.tile[x, j].type)
				{
					WorldGen.KillTile(x, num, false, false, false);
				}
				if (Main.tile[x, num + 1].type == Main.tile[x, j].type)
				{
					WorldGen.KillTile(x, num + 1, false, false, false);
					return;
				}
			}
			else
			{
				if (Main.tile[x, num].frameY == 18)
				{
					num--;
				}
				if (Main.tile[x, num - 1] == null)
				{
					Main.tile[x, num - 1] = new Tile();
				}
				if (Main.tile[x, num] == null)
				{
					Main.tile[x, num] = new Tile();
				}
				if (Main.tile[x, num + 1] == null)
				{
					Main.tile[x, num + 1] = new Tile();
				}
				bool flag4 = false;
				if (!WorldGen.SolidTile(x, num - 1))
				{
					flag4 = true;
				}
				if (Main.tile[x, num + 1].type != Main.tile[x, num].type)
				{
					flag4 = true;
				}
				if (Main.tile[x, num + 1].frameX != Main.tile[x, num].frameX)
				{
					flag4 = true;
				}
				if (flag4)
				{
					if (Main.tile[x, num].type == Main.tile[x, j].type)
					{
						WorldGen.KillTile(x, num, false, false, false);
					}
					if (Main.tile[x, num + 1].type == Main.tile[x, j].type)
					{
						WorldGen.KillTile(x, num + 1, false, false, false);
						return;
					}
				}
				else
				{
					WorldGen.TightBiome(x, num);
				}
			}
		}
		public static void Place1xX(int x, int y, ushort type, int style = 0)
		{
			int num = style * 18;
			int num2 = 3;
			if (type == 92)
			{
				num2 = 6;
			}
			bool flag = true;
			for (int i = y - num2 + 1; i < y + 1; i++)
			{
				if (Main.tile[x, i] == null)
				{
					Main.tile[x, i] = new Tile();
				}
				if (Main.tile[x, i].active())
				{
					flag = false;
				}
				if (type == 93 && Main.tile[x, i].liquid > 0)
				{
					flag = false;
				}
			}
			if (flag && WorldGen.SolidTile2(x, y + 1))
			{
				for (int j = 0; j < num2; j++)
				{
					Main.tile[x, y - num2 + 1 + j].active(true);
					Main.tile[x, y - num2 + 1 + j].frameY = (short)(j * 18 + num2 * num);
					Main.tile[x, y - num2 + 1 + j].frameX = 0;
					Main.tile[x, y - num2 + 1 + j].type = type;
				}
			}
		}
		public static int checkXmasTreeDrop(int x, int y, int obj)
		{
			int num = x;
			int num2 = y;
			if (Main.tile[x, y].frameX < 10)
			{
				num -= (int)Main.tile[x, y].frameX;
				num2 -= (int)Main.tile[x, y].frameY;
			}
			int num3 = 0;
			if ((Main.tile[num, num2].frameY & 1) == 1)
			{
				num3++;
			}
			if ((Main.tile[num, num2].frameY & 2) == 2)
			{
				num3 += 2;
			}
			if ((Main.tile[num, num2].frameY & 4) == 4)
			{
				num3 += 4;
			}
			int num4 = 0;
			if ((Main.tile[num, num2].frameY & 8) == 8)
			{
				num4++;
			}
			if ((Main.tile[num, num2].frameY & 16) == 16)
			{
				num4 += 2;
			}
			if ((Main.tile[num, num2].frameY & 32) == 32)
			{
				num4 += 4;
			}
			int num5 = 0;
			if ((Main.tile[num, num2].frameY & 64) == 64)
			{
				num5++;
			}
			if ((Main.tile[num, num2].frameY & 128) == 128)
			{
				num5 += 2;
			}
			if ((Main.tile[num, num2].frameY & 256) == 256)
			{
				num5 += 4;
			}
			if ((Main.tile[num, num2].frameY & 512) == 512)
			{
				num5 += 8;
			}
			int num6 = 0;
			if ((Main.tile[num, num2].frameY & 1024) == 1024)
			{
				num6++;
			}
			if ((Main.tile[num, num2].frameY & 2048) == 2048)
			{
				num6 += 2;
			}
			if ((Main.tile[num, num2].frameY & 4096) == 4096)
			{
				num6 += 4;
			}
			if ((Main.tile[num, num2].frameY & 8192) == 8192)
			{
				num6 += 8;
			}
			if (obj == 0 && num3 > 0)
			{
				return num3;
			}
			if (obj == 1 && num4 > 0)
			{
				return num4;
			}
			if (obj == 2 && num5 > 0)
			{
				return num5;
			}
			if (obj == 3 && num6 > 0)
			{
				return num6;
			}
			return -1;
		}
		public static void dropXmasTree(int x, int y, int obj)
		{
			int num = x;
			int num2 = y;
			if (Main.tile[x, y].frameX < 10)
			{
				num -= (int)Main.tile[x, y].frameX;
				num2 -= (int)Main.tile[x, y].frameY;
			}
			int num3 = 0;
			if ((Main.tile[num, num2].frameY & 1) == 1)
			{
				num3++;
			}
			if ((Main.tile[num, num2].frameY & 2) == 2)
			{
				num3 += 2;
			}
			if ((Main.tile[num, num2].frameY & 4) == 4)
			{
				num3 += 4;
			}
			int num4 = 0;
			if ((Main.tile[num, num2].frameY & 8) == 8)
			{
				num4++;
			}
			if ((Main.tile[num, num2].frameY & 16) == 16)
			{
				num4 += 2;
			}
			if ((Main.tile[num, num2].frameY & 32) == 32)
			{
				num4 += 4;
			}
			int num5 = 0;
			if ((Main.tile[num, num2].frameY & 64) == 64)
			{
				num5++;
			}
			if ((Main.tile[num, num2].frameY & 128) == 128)
			{
				num5 += 2;
			}
			if ((Main.tile[num, num2].frameY & 256) == 256)
			{
				num5 += 4;
			}
			if ((Main.tile[num, num2].frameY & 512) == 512)
			{
				num5 += 8;
			}
			int num6 = 0;
			if ((Main.tile[num, num2].frameY & 1024) == 1024)
			{
				num6++;
			}
			if ((Main.tile[num, num2].frameY & 2048) == 2048)
			{
				num6 += 2;
			}
			if ((Main.tile[num, num2].frameY & 4096) == 4096)
			{
				num6 += 4;
			}
			if ((Main.tile[num, num2].frameY & 8192) == 8192)
			{
				num6 += 8;
			}
			if (obj == 0 && num3 > 0)
			{
				int number = Item.NewItem(x * 16, y * 16, 16, 16, 1874 + num3 - 1, 1, false, 0, false);
				if (Main.netMode == 1)
				{
					NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0);
					return;
				}
			}
			else if (obj == 1 && num4 > 0)
			{
				int number2 = Item.NewItem(x * 16, y * 16, 16, 16, 1878 + num4 - 1, 1, false, 0, false);
				if (Main.netMode == 1)
				{
					NetMessage.SendData(21, -1, -1, "", number2, 1f, 0f, 0f, 0);
					return;
				}
			}
			else if (obj == 2 && num5 > 0)
			{
				int number3 = Item.NewItem(x * 16, y * 16, 16, 16, 1884 + num5 - 1, 1, false, 0, false);
				if (Main.netMode == 1)
				{
					NetMessage.SendData(21, -1, -1, "", number3, 1f, 0f, 0f, 0);
					return;
				}
			}
			else if (obj == 3 && num6 > 0)
			{
				int number4 = Item.NewItem(x * 16, y * 16, 16, 16, 1895 + num6 - 1, 1, false, 0, false);
				if (Main.netMode == 1)
				{
					NetMessage.SendData(21, -1, -1, "", number4, 1f, 0f, 0f, 0);
				}
			}
		}
		public static void setXmasTree(int x, int y, int obj, int style)
		{
			int num = x;
			int num2 = y;
			if (Main.tile[x, y].frameX < 10)
			{
				num -= (int)Main.tile[x, y].frameX;
				num2 -= (int)Main.tile[x, y].frameY;
			}
			if (obj == 0)
			{
				if ((style & 1) == 1)
				{
					Tile expr_59 = Main.tile[num, num2];
					expr_59.frameY = (short)(expr_59.frameY | 1);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -2);
				}
				if ((style & 2) == 2)
				{
					Tile expr_A1 = Main.tile[num, num2];
					expr_A1.frameY = (short)(expr_A1.frameY | 2);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -3);
				}
				if ((style & 4) == 4)
				{
					Tile expr_E9 = Main.tile[num, num2];
					expr_E9.frameY = (short)(expr_E9.frameY | 4);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -5);
				}
			}
			if (obj == 1)
			{
				if ((style & 1) == 1)
				{
					Tile expr_138 = Main.tile[num, num2];
					expr_138.frameY = (short)(expr_138.frameY | 8);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -9);
				}
				if ((style & 2) == 2)
				{
					Tile expr_180 = Main.tile[num, num2];
					expr_180.frameY = (short)(expr_180.frameY | 16);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -17);
				}
				if ((style & 4) == 4)
				{
					Tile expr_1C9 = Main.tile[num, num2];
					expr_1C9.frameY = (short)(expr_1C9.frameY | 32);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -33);
				}
			}
			if (obj == 2)
			{
				if ((style & 1) == 1)
				{
					Tile expr_219 = Main.tile[num, num2];
					expr_219.frameY = (short)(expr_219.frameY | 64);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -65);
				}
				if ((style & 2) == 2)
				{
					Tile expr_262 = Main.tile[num, num2];
					expr_262.frameY = (short)(expr_262.frameY | 128);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -129);
				}
				if ((style & 4) == 4)
				{
					Tile expr_2B1 = Main.tile[num, num2];
					expr_2B1.frameY = (short)(expr_2B1.frameY | 256);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -257);
				}
				if ((style & 8) == 8)
				{
					Tile expr_300 = Main.tile[num, num2];
					expr_300.frameY = (short)(expr_300.frameY | 512);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -513);
				}
			}
			if (obj == 3)
			{
				if ((style & 1) == 1)
				{
					Tile expr_356 = Main.tile[num, num2];
					expr_356.frameY = (short)(expr_356.frameY | 1024);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -1025);
				}
				if ((style & 2) == 2)
				{
					Tile expr_3A5 = Main.tile[num, num2];
					expr_3A5.frameY = (short)(expr_3A5.frameY | 2048);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -2049);
				}
				if ((style & 4) == 4)
				{
					Tile expr_3F4 = Main.tile[num, num2];
					expr_3F4.frameY = (short)(expr_3F4.frameY | 4096);
				}
				else
				{
					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -4097);
				}
				if ((style & 8) == 8)
				{
					Tile expr_443 = Main.tile[num, num2];
					expr_443.frameY = (short)(expr_443.frameY | 8192);
					return;
				}
				Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -8193);
			}
		}
		public static void PlaceXmasTree(int x, int y, ushort type = 171)
		{
			bool flag = true;
			int num = x - 1;
			int num2 = y - 7;
			for (int i = num; i < num + 4; i++)
			{
				for (int j = num2; j < num2 + 8; j++)
				{
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (i > num && i < num + 3 && !WorldGen.SolidTile(i, num2 + 8))
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num3 = 0;
				for (int k = num; k < num + 4; k++)
				{
					int num4 = 0;
					for (int l = num2; l < num2 + 8; l++)
					{
						Main.tile[k, l].active(true);
						if (num3 == 0 && num4 == 0)
						{
							Main.tile[k, l].frameX = 10;
							Main.tile[k, l].frameY = 0;
						}
						else
						{
							Main.tile[k, l].frameX = (short)num3;
							Main.tile[k, l].frameY = (short)num4;
						}
						Main.tile[k, l].type = type;
						Main.tile[k, l].active(true);
						num4++;
					}
					num3++;
				}
			}
		}
		public static void CheckXmasTree(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = x;
			int num2 = y;
			if (Main.tile[x, y].frameX < 10)
			{
				num -= (int)Main.tile[x, y].frameX;
				num2 -= (int)Main.tile[x, y].frameY;
			}
			bool flag = false;
			int num3 = 0;
			for (int i = num; i < num + 4; i++)
			{
				int num4 = 0;
				for (int j = num2; j < num2 + 8; j++)
				{
					if (Main.tile[i, j].active() && Main.tile[i, j].type == 171)
					{
						if (num3 != 0 && num4 != 0 && (int)Main.tile[i, j].frameX != num3 && (int)Main.tile[i, j].frameY != num4)
						{
							flag = true;
						}
					}
					else
					{
						flag = true;
					}
					num4++;
				}
				num3++;
				if (i > num && i < num + 3 && !WorldGen.SolidTile(i, num2 + 8))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int k = num; k < num + 4; k++)
				{
					for (int l = num2; l < num2 + 8; l++)
					{
						if (Main.tile[k, l].type == 171)
						{
							WorldGen.KillTile(k, l, false, false, false);
						}
					}
				}
				Item.NewItem(x * 16, y * 16, 32, 32, 1873, 1, false, 0, false);
				WorldGen.destroyObject = false;
			}
		}
		public static void Place2xX(int x, int y, ushort type, int style = 0)
		{
			int num = style * 36;
			int num2 = 3;
			if (type == 104)
			{
				num2 = 5;
			}
			if (type == 207)
			{
				num2 = 4;
			}
			bool flag = true;
			for (int i = y - num2 + 1; i < y + 1; i++)
			{
				if (Main.tile[x, i] == null)
				{
					Main.tile[x, i] = new Tile();
				}
				if (Main.tile[x, i].active())
				{
					flag = false;
				}
				if (Main.tile[x + 1, i] == null)
				{
					Main.tile[x + 1, i] = new Tile();
				}
				if (Main.tile[x + 1, i].active())
				{
					flag = false;
				}
			}
			if (flag && WorldGen.SolidTile2(x, y + 1) && WorldGen.SolidTile2(x + 1, y + 1))
			{
				for (int j = 0; j < num2; j++)
				{
					Main.tile[x, y - num2 + 1 + j].active(true);
					Main.tile[x, y - num2 + 1 + j].frameY = (short)(j * 18);
					Main.tile[x, y - num2 + 1 + j].frameX = (short)num;
					Main.tile[x, y - num2 + 1 + j].type = type;
					Main.tile[x + 1, y - num2 + 1 + j].active(true);
					Main.tile[x + 1, y - num2 + 1 + j].frameY = (short)(j * 18);
					Main.tile[x + 1, y - num2 + 1 + j].frameX = (short)(num + 18);
					Main.tile[x + 1, y - num2 + 1 + j].type = type;
				}
			}
		}
		public static void Check1x2(int x, int j, ushort type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = j;
			bool flag = true;
			if (Main.tile[x, num] == null)
			{
				Main.tile[x, num] = new Tile();
			}
			if (Main.tile[x, num + 1] == null)
			{
				Main.tile[x, num + 1] = new Tile();
			}
			int i = (int)Main.tile[x, num].frameY;
			int num2 = 0;
			while (i >= 40)
			{
				i -= 40;
				num2++;
			}
			if (i == 18)
			{
				num--;
			}
			if (Main.tile[x, num] == null)
			{
				Main.tile[x, num] = new Tile();
			}
			if ((int)Main.tile[x, num].frameY == 40 * num2 && (int)Main.tile[x, num + 1].frameY == 40 * num2 + 18 && Main.tile[x, num].type == type && Main.tile[x, num + 1].type == type)
			{
				flag = false;
			}
			if (Main.tile[x, num + 2] == null)
			{
				Main.tile[x, num + 2] = new Tile();
			}
			if (!WorldGen.SolidTile2(x, num + 2))
			{
				flag = true;
			}
			if (Main.tile[x, num].type == 20)
			{
				int num3 = Main.tile[x, num].frameX / 54;
				int type2 = (int)Main.tile[x, num + 2].type;
				int num4 = -1;
				if (type2 == 2)
				{
					num4 = 0;
				}
				else if (type2 == 147)
				{
					num4 = 1;
				}
				else if (type2 == 60)
				{
					num4 = 2;
				}
				else if (type2 == 23)
				{
					num4 = 3;
				}
				else if (type2 == 199)
				{
					num4 = 4;
				}
				else if (type2 == 109)
				{
					num4 = 5;
				}
				else if (type2 == 53)
				{
					num4 = 6;
				}
				else if (type2 == 116)
				{
					num4 = 7;
				}
				else if (type2 == 234)
				{
					num4 = 8;
				}
				else if (type2 == 112)
				{
					num4 = 9;
				}
				else
				{
					flag = true;
				}
				if (!flag && num3 != num4)
				{
					int num5 = 54 * num4;
					num5 += Main.rand.Next(3) * 18;
					Main.tile[x, num].frameX = (short)num5;
					Main.tile[x, num + 1].frameX = (short)num5;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				if (Main.tile[x, num].type == type)
				{
					WorldGen.KillTile(x, num, false, false, false);
				}
				if (Main.tile[x, num + 1].type == type)
				{
					WorldGen.KillTile(x, num + 1, false, false, false);
				}
				if (type == 216)
				{
					Item.NewItem(x * 16, num * 16, 32, 32, 970 + num2, 1, false, 0, false);
				}
				if (type == 338)
				{
					Item.NewItem(x * 16, num * 16, 32, 32, 2738, 1, false, 0, false);
				}
				if (type == 15)
				{
					if (num2 >= 18 && num2 <= 23)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1703 + num2 - 18, 1, false, 0, false);
					}
					else if (num2 == 5)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 806, 1, false, 0, false);
					}
					else if (num2 == 6)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 807, 1, false, 0, false);
					}
					else if (num2 == 7)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 808, 1, false, 0, false);
					}
					else if (num2 == 8)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 809, 1, false, 0, false);
					}
					else if (num2 == 9)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 810, 1, false, 0, false);
					}
					else if (num2 == 10)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 826, 1, false, 0, false);
					}
					else if (num2 == 11)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 915, 1, false, 0, false);
					}
					else if (num2 == 13)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1396, 1, false, 0, false);
					}
					else if (num2 == 14)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1399, 1, false, 0, false);
					}
					else if (num2 == 15)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1402, 1, false, 0, false);
					}
					else if (num2 == 12)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1143, 1, false, 0, false);
					}
					else if (num2 == 4)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 630, 1, false, 0, false);
					}
					else if (num2 == 3)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 629, 1, false, 0, false);
					}
					else if (num2 == 2)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 628, 1, false, 0, false);
					}
					else if (num2 == 17)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1509, 1, false, 0, false);
					}
					else if (num2 == 1)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 358, 1, false, 0, false);
					}
					else if (num2 == 24)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1792, 1, false, 0, false);
					}
					else if (num2 == 25)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1814, 1, false, 0, false);
					}
					else if (num2 == 16)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1459, 1, false, 0, false);
					}
					else if (num2 == 26)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1925, 1, false, 0, false);
					}
					else if (num2 == 27)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 2228, 1, false, 0, false);
					}
					else if (num2 == 28)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 2288, 1, false, 0, false);
					}
					else if (num2 == 29)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 2524, 1, false, 0, false);
					}
					else if (num2 == 30)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 2557, 1, false, 0, false);
					}
					else if (num2 == 31)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 2572, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 34, 1, false, 0, false);
					}
				}
				else if (type == 134)
				{
					if (num2 == 1)
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 1220, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, num * 16, 32, 32, 525, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void CheckOnTable1x1(int x, int y, int type)
		{
			if (Main.tile[x, y + 1] != null && (!Main.tile[x, y + 1].active() || !Main.tileTable[(int)Main.tile[x, y + 1].type]))
			{
				if (type == 78)
				{
					if (!WorldGen.SolidTile2(x, y + 1))
					{
						WorldGen.KillTile(x, y, false, false, false);
						return;
					}
				}
				else
				{
					WorldGen.KillTile(x, y, false, false, false);
				}
			}
		}
		public static void CheckSign(int x, int y, ushort type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = x - 2;
			int num2 = x + 3;
			int num3 = y - 2;
			int num4 = y + 3;
			if (num < 0)
			{
				return;
			}
			if (num2 > Main.maxTilesX)
			{
				return;
			}
			if (num3 < 0)
			{
				return;
			}
			if (num4 > Main.maxTilesY)
			{
				return;
			}
			bool flag = false;
			for (int i = num; i < num2; i++)
			{
				for (int j = num3; j < num4; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
				}
			}
			int k = Main.tile[x, y].frameX / 18;
			int num5 = Main.tile[x, y].frameY / 18;
			while (k > 1)
			{
				k -= 2;
			}
			int num6 = x - k;
			int num7 = y - num5;
			int num8 = Main.tile[num6, num7].frameX / 18 / 2;
			int l = Main.tile[x, y].frameX / 18;
			int num9 = 0;
			while (l > 1)
			{
				l -= 2;
				num9++;
			}
			num = num6;
			num2 = num6 + 2;
			num3 = num7;
			num4 = num7 + 2;
			k = 0;
			for (int m = num; m < num2; m++)
			{
				num5 = 0;
				for (int n = num3; n < num4; n++)
				{
					if (!Main.tile[m, n].active() || Main.tile[m, n].type != type)
					{
						flag = true;
						break;
					}
					if (Main.tile[m, n].frameX / 18 != k + num8 * 2 || Main.tile[m, n].frameY / 18 != num5)
					{
						flag = true;
						break;
					}
					num5++;
				}
				k++;
			}
			if (!flag)
			{
				if (type == 85)
				{
					if (WorldGen.SolidTile2(num6, num7 + 2) && WorldGen.SolidTile2(num6 + 1, num7 + 2))
					{
						num8 = num9;
					}
					else
					{
						flag = true;
					}
				}
				else if (WorldGen.SolidTile2(num6, num7 + 2) && WorldGen.SolidTile2(num6 + 1, num7 + 2))
				{
					num8 = 0;
				}
				else if (Main.tile[num6, num7 - 1].nactive() && Main.tileSolid[(int)Main.tile[num6, num7 - 1].type] && !Main.tileSolidTop[(int)Main.tile[num6, num7 - 1].type] && Main.tile[num6 + 1, num7 - 1].nactive() && Main.tileSolid[(int)Main.tile[num6 + 1, num7 - 1].type] && !Main.tileSolidTop[(int)Main.tile[num6 + 1, num7 - 1].type])
				{
					num8 = 1;
				}
				else if (Main.tile[num6 - 1, num7].nactive() && Main.tileSolid[(int)Main.tile[num6 - 1, num7].type] && !Main.tileSolidTop[(int)Main.tile[num6 - 1, num7].type] && Main.tile[num6 - 1, num7 + 1].nactive() && Main.tileSolid[(int)Main.tile[num6 - 1, num7 + 1].type] && !Main.tileSolidTop[(int)Main.tile[num6 - 1, num7 + 1].type])
				{
					num8 = 2;
				}
				else if (Main.tile[num6 + 2, num7].nactive() && Main.tileSolid[(int)Main.tile[num6 + 2, num7].type] && !Main.tileSolidTop[(int)Main.tile[num6 + 2, num7].type] && Main.tile[num6 + 2, num7 + 1].nactive() && Main.tileSolid[(int)Main.tile[num6 + 2, num7 + 1].type] && !Main.tileSolidTop[(int)Main.tile[num6 + 2, num7 + 1].type])
				{
					num8 = 3;
				}
				else
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num10 = num; num10 < num2; num10++)
				{
					for (int num11 = num3; num11 < num4; num11++)
					{
						if (Main.tile[num10, num11].type == type)
						{
							WorldGen.KillTile(num10, num11, false, false, false);
						}
					}
				}
				Sign.KillSign(num6, num7);
				if (type == 85)
				{
					if (num9 == 0)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 321, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1172 + num9, 1, false, 0, false);
					}
				}
				else
				{
					Item.NewItem(x * 16, y * 16, 32, 32, 171, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				return;
			}
			int num12 = 36 * num8;
			for (int num13 = 0; num13 < 2; num13++)
			{
				for (int num14 = 0; num14 < 2; num14++)
				{
					Main.tile[num6 + num13, num7 + num14].active(true);
					Main.tile[num6 + num13, num7 + num14].type = type;
					Main.tile[num6 + num13, num7 + num14].frameX = (short)(num12 + 18 * num13);
					Main.tile[num6 + num13, num7 + num14].frameY = (short)(18 * num14);
				}
			}
		}
		public static bool PlaceSign(int x, int y, ushort type, int Style = 0)
		{
			int num = x - 2;
			int num2 = x + 3;
			int num3 = y - 2;
			int num4 = y + 3;
			if (num < 0)
			{
				return false;
			}
			if (num2 > Main.maxTilesX)
			{
				return false;
			}
			if (num3 < 0)
			{
				return false;
			}
			if (num4 > Main.maxTilesY)
			{
				return false;
			}
			for (int i = num; i < num2; i++)
			{
				for (int j = num3; j < num4; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
				}
			}
			int num5 = x;
			int num6 = y;
			int num7 = 0;
			if (type == 55)
			{
				if (WorldGen.SolidTile2(x, y + 1) && WorldGen.SolidTile2(x + 1, y + 1))
				{
					num6--;
					num7 = 0;
				}
				else if (Main.tile[x, y - 1].nactive() && Main.tileSolid[(int)Main.tile[x, y - 1].type] && !Main.tileSolidTop[(int)Main.tile[x, y - 1].type] && Main.tile[x + 1, y - 1].nactive() && Main.tileSolid[(int)Main.tile[x + 1, y - 1].type] && !Main.tileSolidTop[(int)Main.tile[x + 1, y - 1].type])
				{
					num7 = 1;
				}
				else if (Main.tile[x - 1, y].nactive() && Main.tileSolid[(int)Main.tile[x - 1, y].type] && !Main.tileSolidTop[(int)Main.tile[x - 1, y].type] && !Main.tileNoAttach[(int)Main.tile[x - 1, y].type] && Main.tile[x - 1, y + 1].nactive() && Main.tileSolid[(int)Main.tile[x - 1, y + 1].type] && !Main.tileSolidTop[(int)Main.tile[x - 1, y + 1].type] && !Main.tileNoAttach[(int)Main.tile[x - 1, y + 1].type])
				{
					num7 = 2;
				}
				else
				{
					if (!Main.tile[x + 1, y].nactive() || !Main.tileSolid[(int)Main.tile[x + 1, y].type] || Main.tileSolidTop[(int)Main.tile[x + 1, y].type] || Main.tileNoAttach[(int)Main.tile[x + 1, y].type] || !Main.tile[x + 1, y + 1].nactive() || !Main.tileSolid[(int)Main.tile[x + 1, y + 1].type] || Main.tileSolidTop[(int)Main.tile[x + 1, y + 1].type] || Main.tileNoAttach[(int)Main.tile[x + 1, y + 1].type])
					{
						return false;
					}
					num5--;
					num7 = 3;
				}
			}
			else if (type == 85)
			{
				if (!WorldGen.SolidTile2(x, y + 1) || !WorldGen.SolidTile2(x + 1, y + 1))
				{
					return false;
				}
				num6--;
				num7 = Style;
			}
			if (Main.tile[num5, num6].active() || Main.tile[num5 + 1, num6].active() || Main.tile[num5, num6 + 1].active() || Main.tile[num5 + 1, num6 + 1].active())
			{
				return false;
			}
			int num8 = 36 * num7;
			for (int k = 0; k < 2; k++)
			{
				for (int l = 0; l < 2; l++)
				{
					Main.tile[num5 + k, num6 + l].active(true);
					Main.tile[num5 + k, num6 + l].type = type;
					Main.tile[num5 + k, num6 + l].frameX = (short)(num8 + 18 * k);
					Main.tile[num5 + k, num6 + l].frameY = (short)(18 * l);
				}
			}
			return true;
		}
		public static Color paintColor(int color)
		{
			Color white = Color.White;
			if (color == 1 || color == 13)
			{
				white.R = 255;
				white.G = 0;
				white.B = 0;
			}
			if (color == 2 || color == 14)
			{
				white.R = 255;
				white.G = 127;
				white.B = 0;
			}
			if (color == 3 || color == 15)
			{
				white.R = 255;
				white.G = 255;
				white.B = 0;
			}
			if (color == 4 || color == 16)
			{
				white.R = 127;
				white.G = 255;
				white.B = 0;
			}
			if (color == 5 || color == 17)
			{
				white.R = 0;
				white.G = 255;
				white.B = 0;
			}
			if (color == 6 || color == 18)
			{
				white.R = 0;
				white.G = 255;
				white.B = 127;
			}
			if (color == 7 || color == 19)
			{
				white.R = 0;
				white.G = 255;
				white.B = 255;
			}
			if (color == 8 || color == 20)
			{
				white.R = 0;
				white.G = 127;
				white.B = 255;
			}
			if (color == 9 || color == 21)
			{
				white.R = 0;
				white.G = 0;
				white.B = 255;
			}
			if (color == 10 || color == 22)
			{
				white.R = 127;
				white.G = 0;
				white.B = 255;
			}
			if (color == 11 || color == 23)
			{
				white.R = 255;
				white.G = 0;
				white.B = 255;
			}
			if (color == 12 || color == 24)
			{
				white.R = 255;
				white.G = 0;
				white.B = 127;
			}
			if (color == 25)
			{
				white.R = 75;
				white.G = 75;
				white.B = 75;
			}
			if (color == 26)
			{
				white.R = 255;
				white.G = 255;
				white.B = 255;
			}
			if (color == 27)
			{
				white.R = 175;
				white.G = 175;
				white.B = 175;
			}
			if (color == 28)
			{
				white.R = 255;
				white.G = 178;
				white.B = 125;
			}
			if (color == 29)
			{
				white.R = 25;
				white.G = 25;
				white.B = 25;
			}
			if (color == 30)
			{
				white.R = 200;
				white.G = 200;
				white.B = 200;
				white.A = 150;
			}
			return white;
		}
		public static void paintEffect(int x, int y, byte color, byte oldColor)
		{
			int color2 = (int)(color == null ? oldColor : 0);
			Color newColor = WorldGen.paintColor(color2);
			for (int i = 0; i < 10; i++)
			{
				int num = Dust.NewDust(new Vector2((float)(x * 16), (float)(y * 16)), 16, 16, 143, 0f, 0f, 50, newColor, 1f);
				if (Main.rand.Next(2) == 0)
				{
					Main.dust[num].noGravity = true;
					Main.dust[num].scale *= 1.2f;
				}
				else
				{
					Main.dust[num].scale *= 0.5f;
				}
			}
		}
		public static bool paintTile(int x, int y, byte color, bool broadCast = false)
		{
			if (Main.tile[x, y] == null || !Main.tile[x, y].active())
			{
				return false;
			}
			byte oldColor = Main.tile[x, y].color();
			Main.tile[x, y].color(color);
			if (broadCast)
			{
				NetMessage.SendData(63, -1, -1, "", x, (float)y, (float)color, 0f, 0);
			}
			WorldGen.paintEffect(x, y, color, oldColor);
			return true;
		}
		public static bool paintWall(int x, int y, byte color, bool broadCast = false)
		{
			if (Main.tile[x, y] == null || Main.tile[x, y].wall == 0)
			{
				return false;
			}
			byte oldColor = Main.tile[x, y].wallColor();
			Main.tile[x, y].wallColor(color);
			if (broadCast)
			{
				NetMessage.SendData(64, -1, -1, "", x, (float)y, (float)color, 0f, 0);
			}
			WorldGen.paintEffect(x, y, color, oldColor);
			return true;
		}
		public static void Place3x3Wall(int x, int y, ushort type, int style)
		{
			int num = x - 1;
			int num2 = y - 1;
			bool flag = true;
			for (int i = num; i < num + 3; i++)
			{
				for (int j = num2; j < num2 + 3; j++)
				{
					if (Main.tile[i, j].active() || Main.tile[i, j].wall == 0)
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				int num3 = 0;
				while (style > 35)
				{
					num3++;
					style -= 36;
				}
				int num4 = style * 54;
				int num5 = num3 * 54;
				for (int k = num; k < num + 3; k++)
				{
					for (int l = num2; l < num2 + 3; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = type;
						Main.tile[k, l].frameX = (short)(num4 + 18 * (k - num));
						Main.tile[k, l].frameY = (short)(num5 + 18 * (l - num2));
					}
				}
			}
		}
		public static void Check3x3Wall(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int type = (int)Main.tile[x, y].type;
			int num = 0;
			int num2 = 0;
			int i = Main.tile[x, y].frameX / 18;
			while (i >= 3)
			{
				i -= 3;
				num++;
			}
			int num3 = x - i;
			int j = Main.tile[x, y].frameY / 18;
			while (j >= 3)
			{
				j -= 3;
				num2++;
			}
			int num4 = y - j;
			j = num2 * 54;
			i = num * 54;
			for (int k = num3; k < num3 + 3; k++)
			{
				for (int l = num4; l < num4 + 3; l++)
				{
					if ((int)Main.tile[k, l].type != type || !Main.tile[k, l].active() || Main.tile[k, l].wall <= 0 || (int)Main.tile[k, l].frameX != i + (k - num3) * 18 || (int)Main.tile[k, l].frameY != j + (l - num4) * 18)
					{
						flag = true;
						break;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int m = num3; m < num3 + 3; m++)
				{
					for (int n = num4; n < num4 + 3; n++)
					{
						if ((int)Main.tile[m, n].type == type && Main.tile[m, n].active())
						{
							WorldGen.KillTile(m, n, false, false, false);
						}
					}
				}
				num += num2 * 36;
				if (type == 240)
				{
					if (num == 37)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1856, 1, false, 0, false);
					}
					else if (num == 36)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1855, 1, false, 0, false);
					}
					else if (num == 38)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1960, 1, false, 0, false);
					}
					else if (num == 39)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1961, 1, false, 0, false);
					}
					else if (num == 40)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1962, 1, false, 0, false);
					}
					else if (num == 33)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1574, 1, false, 0, false);
					}
					else if (num == 34)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1575, 1, false, 0, false);
					}
					else if (num == 35)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1576, 1, false, 0, false);
					}
					else if (num == 18)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1419, 1, false, 0, false);
					}
					else if (num == 19)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1420, 1, false, 0, false);
					}
					else if (num == 20)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1427, 1, false, 0, false);
					}
					else if (num == 21)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1428, 1, false, 0, false);
					}
					else if (num == 54)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2489, 1, false, 0, false);
					}
					else if (num == 55)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2589, 1, false, 0, false);
					}
					else if (num >= 41 && num <= 45)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2114 + num - 41, 1, false, 0, false);
					}
					else if (num >= 46 && num <= 53)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2442 + num - 46, 1, false, 0, false);
					}
					else if (num >= 22 && num <= 25)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1440 + num - 22, 1, false, 0, false);
					}
					else if (num >= 26 && num <= 29)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1496 + num - 26, 1, false, 0, false);
					}
					else if (num >= 30 && num <= 32)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1538 + num - 30, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1360 + num, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place2x3Wall(int x, int y, ushort type, int style)
		{
			int num = y - 1;
			bool flag = true;
			for (int i = x; i < x + 2; i++)
			{
				for (int j = num; j < num + 3; j++)
				{
					if (Main.tile[i, j].active() || Main.tile[i, j].wall == 0)
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				int num2 = style * 36;
				int num3 = 0;
				for (int k = x; k < x + 2; k++)
				{
					for (int l = num; l < num + 3; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = type;
						Main.tile[k, l].frameX = (short)(num2 + 18 * (k - x));
						Main.tile[k, l].frameY = (short)(num3 + 18 * (l - num));
					}
				}
			}
		}
		public static void Check2x3Wall(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int type = (int)Main.tile[x, y].type;
			int num = 0;
			int i = Main.tile[x, y].frameX / 18;
			while (i >= 2)
			{
				i -= 2;
				num++;
			}
			int num2 = x - i;
			int num3 = y - Main.tile[x, y].frameY / 18;
			i = num * 36;
			for (int j = num2; j < num2 + 2; j++)
			{
				for (int k = num3; k < num3 + 3; k++)
				{
					if ((int)Main.tile[j, k].type != type || !Main.tile[j, k].active() || Main.tile[j, k].wall <= 0 || (int)Main.tile[j, k].frameX != i + (j - num2) * 18 || (int)Main.tile[j, k].frameY != (k - num3) * 18)
					{
						flag = true;
						break;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int l = num2; l < num2 + 2; l++)
				{
					for (int m = num3; m < num3 + 3; m++)
					{
						if ((int)Main.tile[l, m].type == type && Main.tile[l, m].active())
						{
							WorldGen.KillTile(l, m, false, false, false);
						}
					}
				}
				if (type == 245)
				{
					if (num == 6)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1577, 1, false, 0, false);
					}
					else if (num == 5)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1495, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1474 + num, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place3x2Wall(int x, int y, ushort type, int style)
		{
			int num = x - 1;
			bool flag = true;
			for (int i = num; i < num + 3; i++)
			{
				for (int j = y; j < y + 2; j++)
				{
					if (Main.tile[i, j].active() || Main.tile[i, j].wall == 0)
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				int num2 = 0;
				int num3 = style * 36;
				for (int k = num; k < num + 3; k++)
				{
					for (int l = y; l < y + 2; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = type;
						Main.tile[k, l].frameX = (short)(num2 + 18 * (k - num));
						Main.tile[k, l].frameY = (short)(num3 + 18 * (l - y));
					}
				}
			}
		}
		public static void Check3x2Wall(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int type = (int)Main.tile[x, y].type;
			int num = 0;
			int i = Main.tile[x, y].frameY / 18;
			while (i >= 2)
			{
				i -= 2;
				num++;
			}
			int num2 = y - i;
			int num3 = x - Main.tile[x, y].frameX / 18;
			i = num * 36;
			for (int j = num3; j < num3 + 3; j++)
			{
				for (int k = num2; k < num2 + 2; k++)
				{
					if ((int)Main.tile[j, k].type != type || !Main.tile[j, k].active() || Main.tile[j, k].wall <= 0 || (int)Main.tile[j, k].frameY != i + (k - num2) * 18 || (int)Main.tile[j, k].frameX != (j - num3) * 18)
					{
						flag = true;
						break;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int l = num3; l < num3 + 3; l++)
				{
					for (int m = num2; m < num2 + 2; m++)
					{
						if ((int)Main.tile[l, m].type == type && Main.tile[l, m].active())
						{
							WorldGen.KillTile(l, m, false, false, false);
						}
					}
				}
				if (type == 246)
				{
					if (num == 16)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1541, 1, false, 0, false);
					}
					else if (num == 17)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1542, 1, false, 0, false);
					}
					else if (num == 18)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1908, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1479 + num, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place4x3Wall(int x, int y, ushort type, int style)
		{
			int num = x - 1;
			int num2 = y - 1;
			bool flag = true;
			for (int i = num; i < num + 4; i++)
			{
				for (int j = num2; j < num2 + 3; j++)
				{
					if (Main.tile[i, j].active() || Main.tile[i, j].wall == 0)
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				int num3 = 0;
				int num4 = style * 54;
				for (int k = num; k < num + 4; k++)
				{
					for (int l = num2; l < num2 + 3; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = type;
						Main.tile[k, l].frameX = (short)(num3 + 18 * (k - num));
						Main.tile[k, l].frameY = (short)(num4 + 18 * (l - num2));
					}
				}
			}
		}
		public static void Check4x3Wall(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int type = (int)Main.tile[x, y].type;
			int num = 0;
			int i = Main.tile[x, y].frameY / 18;
			while (i >= 3)
			{
				i -= 3;
				num++;
			}
			int num2 = y - i;
			int num3 = x - Main.tile[x, y].frameX / 18;
			i = num * 54;
			for (int j = num3; j < num3 + 4; j++)
			{
				for (int k = num2; k < num2 + 3; k++)
				{
					if ((int)Main.tile[j, k].type != type || !Main.tile[j, k].active() || Main.tile[j, k].wall <= 0 || (int)Main.tile[j, k].frameY != i + (k - num2) * 18 || (int)Main.tile[j, k].frameX != (j - num3) * 18)
					{
						flag = true;
						break;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int l = num3; l < num3 + 4; l++)
				{
					for (int m = num2; m < num2 + 3; m++)
					{
						if ((int)Main.tile[l, m].type == type && Main.tile[l, m].active())
						{
							WorldGen.KillTile(l, m, false, false, false);
						}
					}
				}
				if (type == 241)
				{
					Item.NewItem(x * 16, y * 16, 32, 32, 1417, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place6x4Wall(int x, int y, ushort type, int style)
		{
			int num = x - 2;
			int num2 = y - 2;
			bool flag = true;
			for (int i = num; i < num + 6; i++)
			{
				for (int j = num2; j < num2 + 4; j++)
				{
					if (Main.tile[i, j].active() || Main.tile[i, j].wall == 0)
					{
						flag = false;
						break;
					}
				}
			}
			if (flag)
			{
				int num3 = 0;
				int num4 = style * 72;
				for (int k = num; k < num + 6; k++)
				{
					for (int l = num2; l < num2 + 4; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].type = type;
						Main.tile[k, l].frameX = (short)(num3 + 18 * (k - num));
						Main.tile[k, l].frameY = (short)(num4 + 18 * (l - num2));
					}
				}
			}
		}
		public static void Check6x4Wall(int x, int y)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int type = (int)Main.tile[x, y].type;
			int num = 0;
			int i = Main.tile[x, y].frameY / 18;
			while (i >= 4)
			{
				i -= 4;
				num++;
			}
			int num2 = y - i;
			int num3 = x - Main.tile[x, y].frameX / 18;
			i = num * 72;
			for (int j = num3; j < num3 + 6; j++)
			{
				for (int k = num2; k < num2 + 4; k++)
				{
					if ((int)Main.tile[j, k].type != type || !Main.tile[j, k].active() || Main.tile[j, k].wall <= 0 || (int)Main.tile[j, k].frameY != i + (k - num2) * 18 || (int)Main.tile[j, k].frameX != (j - num3) * 18)
					{
						flag = true;
						break;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int l = num3; l < num3 + 6; l++)
				{
					for (int m = num2; m < num2 + 4; m++)
					{
						if ((int)Main.tile[l, m].type == type && Main.tile[l, m].active())
						{
							WorldGen.KillTile(l, m, false, false, false);
						}
					}
				}
				if (type == 242)
				{
					if (num == 26)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2497, 1, false, 0, false);
					}
					else if (num == 25)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2495, 1, false, 0, false);
					}
					else if (num >= 22)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 2281 + num - 22, 1, false, 0, false);
					}
					else if (num >= 17)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1846 + num - 17, 1, false, 0, false);
					}
					else if (num == 16)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1573, 1, false, 0, false);
					}
					else if (num >= 13)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1500 + num - 13, 1, false, 0, false);
					}
					else if (num >= 6)
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1433 + num - 6, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, y * 16, 32, 32, 1421 + num, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place1x1(int x, int y, int type, int style = 0)
		{
			Tile tile = Main.tile[x, y];
			if (Main.tile[x, y] == null)
			{
				tile = new Tile();
				Main.tile[x, y] = tile;
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (type == 324)
			{
				if (WorldGen.SolidTile2(x, y + 1) || (Main.tile[x, y + 1].nactive() && Main.tileTable[(int)Main.tile[x, y + 1].type]))
				{
					tile.active(true);
					tile.type = (ushort)type;
					tile.frameX = (short)(22 * WorldGen.genRand.Next(2));
					tile.frameY = (short)(22 * style);
				}
				return;
			}
			if (WorldGen.SolidTile2(x, y + 1) && !tile.active())
			{
				tile.active(true);
				tile.type = (ushort)type;
				if (type == 324)
				{
					tile.frameX = (short)(22 * WorldGen.genRand.Next(2));
					tile.frameY = (short)(22 * style);
					return;
				}
				if (type == 144 || type == 239 || type == 36)
				{
					tile.frameX = (short)(style * 18);
					tile.frameY = 0;
					return;
				}
				tile.frameY = (short)(style * 18);
			}
		}
		public static void Check1x1(int x, int y, int type)
		{
			if (Main.tile[x, y + 1] != null && !WorldGen.SolidTile2(x, y + 1))
			{
				WorldGen.KillTile(x, y, false, false, false);
			}
		}
		public static void PlaceOnTable1x1(int x, int y, int type, int style = 0)
		{
			bool flag = false;
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (!Main.tile[x, y].active() && Main.tile[x, y + 1].nactive() && Main.tileTable[(int)Main.tile[x, y + 1].type])
			{
				flag = true;
			}
			if (type == 78 && !Main.tile[x, y].active() && Main.tile[x, y + 1].nactive() && Main.tileSolid[(int)Main.tile[x, y + 1].type] && !Main.tile[x, y + 1].halfBrick() && Main.tile[x, y + 1].slope() == 0)
			{
				flag = true;
			}
			if (flag)
			{
				Main.tile[x, y].active(true);
				Main.tile[x, y].type = (ushort)type;
				if (type == 33)
				{
					Main.tile[x, y].frameX = 0;
					Main.tile[x, y].frameY = (short)(style * 22);
				}
				else
				{
					Main.tile[x, y].frameX = (short)(style * 18);
					Main.tile[x, y].frameY = 0;
				}
				if (type == 50)
				{
					Main.tile[x, y].frameX = (short)(18 * WorldGen.genRand.Next(5));
				}
			}
		}
		public static bool PlaceAlch(int x, int y, int style)
		{
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (!Main.tile[x, y].active() && Main.tile[x, y + 1].nactive() && !Main.tile[x, y + 1].halfBrick() && Main.tile[x, y + 1].slope() == 0)
			{
				bool flag = false;
				if (style == 0)
				{
					if (Main.tile[x, y + 1].type != 2 && Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 109)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0)
					{
						flag = true;
					}
				}
				else if (style == 1)
				{
					if (Main.tile[x, y + 1].type != 60 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0)
					{
						flag = true;
					}
				}
				else if (style == 2)
				{
					if (Main.tile[x, y + 1].type != 0 && Main.tile[x, y + 1].type != 59 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0)
					{
						flag = true;
					}
				}
				else if (style == 3)
				{
					if (Main.tile[x, y + 1].type != 203 && Main.tile[x, y + 1].type != 199 && Main.tile[x, y + 1].type != 23 && Main.tile[x, y + 1].type != 25 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0)
					{
						flag = true;
					}
				}
				else if (style == 4)
				{
					if (Main.tile[x, y + 1].type != 53 && Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 116)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (style == 5)
				{
					if (Main.tile[x, y + 1].type != 57 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && !Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (style == 6)
				{
					if (Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 147 && Main.tile[x, y + 1].type != 161 && Main.tile[x, y + 1].type != 163 && Main.tile[x, y + 1].type != 164 && Main.tile[x, y + 1].type != 200)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				if (!flag)
				{
					Main.tile[x, y].active(true);
					Main.tile[x, y].type = 82;
					Main.tile[x, y].frameX = (short)(18 * style);
					Main.tile[x, y].frameY = 0;
					return true;
				}
			}
			return false;
		}
		public static void GrowAlch(int x, int y)
		{
			if (Main.tile[x, y].active())
			{
				if (Main.tile[x, y].type == 82 && WorldGen.genRand.Next(50) == 0)
				{
					bool flag = false;
					if (Main.tile[x, y].frameX == 108)
					{
						if (Main.rand.Next(2) == 0)
						{
							flag = true;
						}
					}
					else
					{
						flag = true;
					}
					if (flag)
					{
						Main.tile[x, y].type = 83;
						if (Main.netMode == 2)
						{
							NetMessage.SendTileSquare(-1, x, y, 1);
						}
						WorldGen.SquareTileFrame(x, y, true);
						return;
					}
				}
				else if (Main.tile[x, y].frameX == 36)
				{
					if (Main.tile[x, y].type == 83)
					{
						Main.tile[x, y].type = 84;
					}
					else
					{
						Main.tile[x, y].type = 83;
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, x, y, 1);
						return;
					}
				}
				else if (Main.tile[x, y].frameX == 108 && Main.tile[x, y].type == 83 && Main.rand.Next(100) == 0)
				{
					Main.tile[x, y].type = 84;
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, x, y, 1);
					}
					WorldGen.SquareTileFrame(x, y, true);
				}
			}
		}
		public static void PlantAlch()
		{
			int num = WorldGen.genRand.Next(20, Main.maxTilesX - 20);
			int num2;
			if (WorldGen.genRand.Next(40) == 0)
			{
				num2 = WorldGen.genRand.Next((int)(Main.rockLayer + (double)Main.maxTilesY) / 2, Main.maxTilesY - 20);
			}
			else if (WorldGen.genRand.Next(10) == 0)
			{
				num2 = WorldGen.genRand.Next(0, Main.maxTilesY - 20);
			}
			else
			{
				num2 = WorldGen.genRand.Next((int)Main.worldSurface, Main.maxTilesY - 20);
			}
			while (num2 < Main.maxTilesY - 20 && !Main.tile[num, num2].active())
			{
				num2++;
			}
			if (Main.tile[num, num2].nactive() && !Main.tile[num, num2 - 1].active() && Main.tile[num, num2 - 1].liquid == 0)
			{
				if (Main.tile[num, num2].type == 2 || Main.tile[num, num2].type == 109)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 0);
				}
				if (Main.tile[num, num2].type == 60)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 1);
				}
				if (Main.tile[num, num2].type == 0 || Main.tile[num, num2].type == 59)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 2);
				}
				if (Main.tile[num, num2].type == 23 || Main.tile[num, num2].type == 25 || Main.tile[num, num2].type == 203 || Main.tile[num, num2].type == 199)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 3);
				}
				if (Main.tile[num, num2].type == 53 || Main.tile[num, num2].type == 116)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 4);
				}
				if (Main.tile[num, num2].type == 57)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 5);
				}
				if (Main.tile[num, num2].type == 147 || Main.tile[num, num2].type == 163 || Main.tile[num, num2].type == 164 || Main.tile[num, num2].type == 161 || Main.tile[num, num2].type == 200)
				{
					WorldGen.PlaceAlch(num, num2 - 1, 6);
				}
				if (Main.tile[num, num2 - 1].active() && Main.netMode == 2)
				{
					NetMessage.SendTileSquare(-1, num, num2 - 1, 1);
				}
			}
		}
		public static void CheckAlch(int x, int y)
		{
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			bool flag = false;
			if (!Main.tile[x, y + 1].active())
			{
				flag = true;
			}
			if (Main.tile[x, y + 1].halfBrick())
			{
				flag = true;
			}
			int num = Main.tile[x, y].frameX / 18;
			Main.tile[x, y].frameY = 0;
			if (!flag)
			{
				if (num == 0)
				{
					if (Main.tile[x, y + 1].type != 109 && Main.tile[x, y + 1].type != 2 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (num == 1)
				{
					if (Main.tile[x, y + 1].type != 60 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (num == 2)
				{
					if (Main.tile[x, y + 1].type != 0 && Main.tile[x, y + 1].type != 59 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (num == 3)
				{
					if (Main.tile[x, y + 1].type != 199 && Main.tile[x, y + 1].type != 203 && Main.tile[x, y + 1].type != 23 && Main.tile[x, y + 1].type != 25 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (num == 4)
				{
					if (Main.tile[x, y + 1].type != 53 && Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 116)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
				else if (num == 5)
				{
					if (Main.tile[x, y + 1].type != 57 && Main.tile[x, y + 1].type != 78)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && !Main.tile[x, y].lava())
					{
						flag = true;
					}
					if (Main.tile[x, y].type != 82 && Main.tile[x, y].lava() && Main.tile[x, y].type != 82 && Main.tile[x, y].lava() && Main.netMode != 1)
					{
						if (Main.tile[x, y].liquid > 16)
						{
							if (Main.tile[x, y].type == 83)
							{
								Main.tile[x, y].type = 84;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, x, y, 1);
								}
							}
						}
						else if (Main.tile[x, y].type == 84)
						{
							Main.tile[x, y].type = 83;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, x, y, 1);
							}
						}
					}
				}
				else if (num == 6)
				{
					if (Main.tile[x, y + 1].type != 78 && Main.tile[x, y + 1].type != 147 && Main.tile[x, y + 1].type != 161 && Main.tile[x, y + 1].type != 163 && Main.tile[x, y + 1].type != 164 && Main.tile[x, y + 1].type != 200)
					{
						flag = true;
					}
					if (Main.tile[x, y].liquid > 0 && Main.tile[x, y].lava())
					{
						flag = true;
					}
				}
			}
			if (flag)
			{
				WorldGen.KillTile(x, y, false, false, false);
			}
		}
		public static void CheckBanner(int x, int j, byte type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = j - Main.tile[x, j].frameY / 18;
			int frameX = (int)Main.tile[x, j].frameX;
			bool flag = false;
			for (int i = 0; i < 3; i++)
			{
				if (Main.tile[x, num + i] == null)
				{
					Main.tile[x, num + i] = new Tile();
				}
				if (!Main.tile[x, num + i].active())
				{
					flag = true;
				}
				else if (Main.tile[x, num + i].type != (ushort)type)
				{
					flag = true;
				}
				else if ((int)Main.tile[x, num + i].frameY != i * 18)
				{
					flag = true;
				}
				else if ((int)Main.tile[x, num + i].frameX != frameX)
				{
					flag = true;
				}
			}
			if (Main.tile[x, num - 1] == null)
			{
				Main.tile[x, num - 1] = new Tile();
			}
			if (!Main.tile[x, num - 1].nactive())
			{
				flag = true;
			}
			if (!Main.tileSolid[(int)Main.tile[x, num - 1].type])
			{
				flag = true;
			}
			if (Main.tileSolidTop[(int)Main.tile[x, num - 1].type])
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int k = 0; k < 3; k++)
				{
					if (Main.tile[x, num + k].type == (ushort)type)
					{
						WorldGen.KillTile(x, num + k, false, false, false);
					}
				}
				if (type == 91)
				{
					int num2 = frameX / 18;
					if (num2 >= 22)
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 1593 + num2, 1, false, 0, false);
					}
					else if (num2 >= 10 && num2 <= 15)
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 1441 + num2, 1, false, 0, false);
					}
					else if (num2 >= 16 && num2 <= 21)
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 1448 + num2, 1, false, 0, false);
					}
					else if (num2 >= 7 && num2 <= 9)
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 838 + num2, 1, false, 0, false);
					}
					else if (num2 >= 4 && num2 <= 6)
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 785 + num2, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(x * 16, (num + 1) * 16, 32, 32, 337 + num2, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void PlaceBanner(int x, int y, ushort type, int style = 0)
		{
			int num = style * 18;
			if (Main.tile[x, y - 1] == null)
			{
				Main.tile[x, y - 1] = new Tile();
			}
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (Main.tile[x, y + 2] == null)
			{
				Main.tile[x, y + 2] = new Tile();
			}
			if (Main.tile[x, y - 1].nactive() && Main.tileSolid[(int)Main.tile[x, y - 1].type] && !Main.tileSolidTop[(int)Main.tile[x, y - 1].type] && !Main.tile[x, y].active() && !Main.tile[x, y + 1].active() && !Main.tile[x, y + 2].active())
			{
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = 0;
				Main.tile[x, y].frameX = (short)num;
				Main.tile[x, y].type = type;
				Main.tile[x, y + 1].active(true);
				Main.tile[x, y + 1].frameY = 18;
				Main.tile[x, y + 1].frameX = (short)num;
				Main.tile[x, y + 1].type = type;
				Main.tile[x, y + 2].active(true);
				Main.tile[x, y + 2].frameY = 36;
				Main.tile[x, y + 2].frameX = (short)num;
				Main.tile[x, y + 2].type = type;
			}
		}
		public static void PlaceMan(int i, int j, int dir)
		{
			for (int k = i; k <= i + 1; k++)
			{
				for (int l = j - 2; l <= j; l++)
				{
					if (Main.tile[k, l].active())
					{
						return;
					}
				}
			}
			if (!WorldGen.SolidTile2(i, j + 1) || !WorldGen.SolidTile2(i + 1, j + 1))
			{
				return;
			}
			byte b = 0;
			if (dir == 1)
			{
				b = 36;
			}
			Main.tile[i, j - 2].active(true);
			Main.tile[i, j - 2].frameY = 0;
			Main.tile[i, j - 2].frameX = (short)b;
			Main.tile[i, j - 2].type = 128;
			Main.tile[i, j - 1].active(true);
			Main.tile[i, j - 1].frameY = 18;
			Main.tile[i, j - 1].frameX = (short)b;
			Main.tile[i, j - 1].type = 128;
			Main.tile[i, j].active(true);
			Main.tile[i, j].frameY = 36;
			Main.tile[i, j].frameX = (short)b;
			Main.tile[i, j].type = 128;
			Main.tile[i + 1, j - 2].active(true);
			Main.tile[i + 1, j - 2].frameY = 0;
			Main.tile[i + 1, j - 2].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j - 2].type = 128;
			Main.tile[i + 1, j - 1].active(true);
			Main.tile[i + 1, j - 1].frameY = 18;
			Main.tile[i + 1, j - 1].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j - 1].type = 128;
			Main.tile[i + 1, j].active(true);
			Main.tile[i + 1, j].frameY = 36;
			Main.tile[i + 1, j].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j].type = 128;
		}
		public static void PlaceWoman(int i, int j, int dir)
		{
			for (int k = i; k <= i + 1; k++)
			{
				for (int l = j - 2; l <= j; l++)
				{
					if (Main.tile[k, l].active())
					{
						return;
					}
				}
			}
			if (!WorldGen.SolidTile2(i, j + 1) || !WorldGen.SolidTile2(i + 1, j + 1))
			{
				return;
			}
			byte b = 0;
			if (dir == 1)
			{
				b = 36;
			}
			Main.tile[i, j - 2].active(true);
			Main.tile[i, j - 2].frameY = 0;
			Main.tile[i, j - 2].frameX = (short)b;
			Main.tile[i, j - 2].type = 269;
			Main.tile[i, j - 1].active(true);
			Main.tile[i, j - 1].frameY = 18;
			Main.tile[i, j - 1].frameX = (short)b;
			Main.tile[i, j - 1].type = 269;
			Main.tile[i, j].active(true);
			Main.tile[i, j].frameY = 36;
			Main.tile[i, j].frameX = (short)b;
			Main.tile[i, j].type = 269;
			Main.tile[i + 1, j - 2].active(true);
			Main.tile[i + 1, j - 2].frameY = 0;
			Main.tile[i + 1, j - 2].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j - 2].type = 269;
			Main.tile[i + 1, j - 1].active(true);
			Main.tile[i + 1, j - 1].frameY = 18;
			Main.tile[i + 1, j - 1].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j - 1].type = 269;
			Main.tile[i + 1, j].active(true);
			Main.tile[i + 1, j].frameY = 36;
			Main.tile[i + 1, j].frameX = (short)((byte)(18 + b));
			Main.tile[i + 1, j].type = 269;
		}
		public static void CheckWeaponsRack(int i, int j)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = j - Main.tile[i, j].frameY / 18;
			int k = (int)Main.tile[i, j].frameX;
			int num2 = 0;
			while (k >= 5000)
			{
				k -= 5000;
				num2++;
			}
			if (num2 != 0)
			{
				k = (num2 - 1) * 18;
			}
			k %= 54;
			int num3 = i - k / 18;
			bool flag = false;
			for (int l = 0; l < 3; l++)
			{
				for (int m = 0; m < 3; m++)
				{
					int num4 = num3 + l;
					int num5 = num + m;
					int n = (int)Main.tile[num4, num5].frameX;
					int num6 = 0;
					while (n >= 5000)
					{
						n -= 5000;
						num6++;
					}
					if (num6 != 0)
					{
						n = (num6 - 1) * 18;
					}
					n %= 54;
					if (!Main.tile[num4, num5].active() || Main.tile[num4, num5].type != 334 || Main.tile[num4, num5].wall <= 0 || (int)Main.tile[num4, num5].frameY != m * 18 || n != l * 18)
					{
						flag = true;
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				Item.NewItem(i * 16, j * 16, 48, 48, 2699, 1, false, 0, false);
				for (int num7 = 0; num7 < 3; num7++)
				{
					for (int num8 = 0; num8 < 3; num8++)
					{
						int num9 = num3 + num7;
						int num10 = num + num8;
						if (Main.tile[num9, num10].active() && Main.tile[num9, num10].type == 334)
						{
							WorldGen.KillTile(num9, num10, false, false, false);
						}
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void CheckMan(int i, int j)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = j - Main.tile[i, j].frameY / 18;
			int k;
			for (k = (int)Main.tile[i, j].frameX; k >= 100; k -= 100)
			{
			}
			while (k >= 36)
			{
				k -= 36;
			}
			int num2 = i - k / 18;
			bool flag = false;
			for (int l = 0; l <= 1; l++)
			{
				for (int m = 0; m <= 2; m++)
				{
					int num3 = num2 + l;
					int num4 = num + m;
					int n;
					for (n = (int)Main.tile[num3, num4].frameX; n >= 100; n -= 100)
					{
					}
					if (n >= 36)
					{
						n -= 36;
					}
					if (!Main.tile[num3, num4].active() || Main.tile[num3, num4].type != 128 || (int)Main.tile[num3, num4].frameY != m * 18 || n != l * 18)
					{
						flag = true;
					}
				}
			}
			if (!WorldGen.SolidTile2(num2, num + 3) || !WorldGen.SolidTile2(num2 + 1, num + 3))
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				Item.NewItem(i * 16, j * 16, 32, 32, 498, 1, false, 0, false);
				for (int num5 = 0; num5 <= 1; num5++)
				{
					for (int num6 = 0; num6 <= 2; num6++)
					{
						int num7 = num2 + num5;
						int num8 = num + num6;
						if (Main.tile[num7, num8].active() && Main.tile[num7, num8].type == 128)
						{
							WorldGen.KillTile(num7, num8, false, false, false);
						}
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void CheckWoman(int i, int j)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			int num = j - Main.tile[i, j].frameY / 18;
			int k;
			for (k = (int)Main.tile[i, j].frameX; k >= 100; k -= 100)
			{
			}
			while (k >= 36)
			{
				k -= 36;
			}
			int num2 = i - k / 18;
			bool flag = false;
			for (int l = 0; l <= 1; l++)
			{
				for (int m = 0; m <= 2; m++)
				{
					int num3 = num2 + l;
					int num4 = num + m;
					int n;
					for (n = (int)Main.tile[num3, num4].frameX; n >= 100; n -= 100)
					{
					}
					if (n >= 36)
					{
						n -= 36;
					}
					if (!Main.tile[num3, num4].active() || Main.tile[num3, num4].type != 269 || (int)Main.tile[num3, num4].frameY != m * 18 || n != l * 18)
					{
						flag = true;
					}
				}
			}
			if (!WorldGen.SolidTile2(num2, num + 3) || !WorldGen.SolidTile2(num2 + 1, num + 3))
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				Item.NewItem(i * 16, j * 16, 32, 32, 1989, 1, false, 0, false);
				for (int num5 = 0; num5 <= 1; num5++)
				{
					for (int num6 = 0; num6 <= 2; num6++)
					{
						int num7 = num2 + num5;
						int num8 = num + num6;
						if (Main.tile[num7, num8].active() && Main.tile[num7, num8].type == 269)
						{
							WorldGen.KillTile(num7, num8, false, false, false);
						}
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void Place1x2(int x, int y, ushort type, int style)
		{
			short frameX = 0;
			if (type == 20)
			{
				frameX = (short)(WorldGen.genRand.Next(3) * 18);
			}
			if (Main.tile[x, y - 1] == null)
			{
				Main.tile[x, y - 1] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (WorldGen.SolidTile2(x, y + 1) & !Main.tile[x, y - 1].active())
			{
				short num = (short)(style * 40);
				Main.tile[x, y - 1].active(true);
				Main.tile[x, y - 1].frameY = num;
				Main.tile[x, y - 1].frameX = frameX;
				Main.tile[x, y - 1].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = (short)(num + 18);
				Main.tile[x, y].frameX = frameX;
				Main.tile[x, y].type = type;
			}
		}
		public static void Place1x2Top(int x, int y, ushort type, int style)
		{
			short frameX = 0;
			if (Main.tile[x, y - 1] == null)
			{
				Main.tile[x, y - 1] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (Main.tile[x, y - 1].nactive() && Main.tileSolid[(int)Main.tile[x, y - 1].type] && !Main.tileSolidTop[(int)Main.tile[x, y - 1].type] && !Main.tile[x, y + 1].active())
			{
				short num = (short)(style * 36);
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = num;
				Main.tile[x, y].frameX = frameX;
				Main.tile[x, y].type = type;
				Main.tile[x, y + 1].active(true);
				Main.tile[x, y + 1].frameY = (short)(num + 18);
				Main.tile[x, y + 1].frameX = frameX;
				Main.tile[x, y + 1].type = type;
			}
		}
		public static void Check1x2Top(int x, int j, ushort type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = true;
			int i = Main.tile[x, j].frameY / 18;
			int num = 0;
			while (i >= 2)
			{
				i -= 2;
				num++;
			}
			int num2 = j - i;
			i = num * 36;
			if (Main.tile[x, num2] == null)
			{
				Main.tile[x, num2] = new Tile();
			}
			if (Main.tile[x, num2 + 1] == null)
			{
				Main.tile[x, num2 + 1] = new Tile();
			}
			if (Main.tile[x, num2] == null)
			{
				Main.tile[x, num2] = new Tile();
			}
			if ((int)Main.tile[x, num2].frameY == i && (int)Main.tile[x, num2 + 1].frameY == i + 18 && Main.tile[x, num2].type == type && Main.tile[x, num2 + 1].type == type)
			{
				flag = false;
			}
			if (Main.tile[x, num2 - 1] == null)
			{
				Main.tile[x, num2 - 1] = new Tile();
			}
			if (!Main.tile[x, num2 - 1].nactive() || !Main.tileSolid[(int)Main.tile[x, num2 - 1].type] || Main.tileSolidTop[(int)Main.tile[x, num2 - 1].type])
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				if (Main.tile[x, num2].type == type)
				{
					WorldGen.KillTile(x, num2, false, false, false);
				}
				if (Main.tile[x, num2 + 1].type == type)
				{
					WorldGen.KillTile(x, num2 + 1, false, false, false);
				}
				if (type == 42)
				{
					int type2 = 0;
					if (num == 0)
					{
						type2 = 136;
					}
					else if (num == 7)
					{
						type2 = 1431;
					}
					else if (num == 8)
					{
						type2 = 1808;
					}
					else if (num == 9)
					{
						type2 = 1859;
					}
					else if (num < 10)
					{
						type2 = 1389 + num;
					}
					else if (num == 10)
					{
						type2 = 2032;
					}
					else if (num == 11)
					{
						type2 = 2033;
					}
					else if (num == 12)
					{
						type2 = 2034;
					}
					else if (num == 13)
					{
						type2 = 2035;
					}
					else if (num == 14)
					{
						type2 = 2036;
					}
					else if (num == 15)
					{
						type2 = 2037;
					}
					else if (num == 16)
					{
						type2 = 2038;
					}
					else if (num == 17)
					{
						type2 = 2039;
					}
					else if (num == 18)
					{
						type2 = 2040;
					}
					else if (num == 19)
					{
						type2 = 2041;
					}
					else if (num == 20)
					{
						type2 = 2042;
					}
					else if (num == 21)
					{
						type2 = 2043;
					}
					else if (num >= 22 && num <= 25)
					{
						type2 = 2145 + num - 22;
					}
					else if (num == 26)
					{
						type2 = 2226;
					}
					else if (num == 27)
					{
						type2 = 2530;
					}
					else if (num == 28)
					{
						type2 = 2546;
					}
					else if (num == 29)
					{
						type2 = 2564;
					}
					else if (num == 30)
					{
						type2 = 2579;
					}
					else if (num == 31)
					{
						type2 = 2641;
					}
					else if (num == 32)
					{
						type2 = 2642;
					}
					Item.NewItem(x * 16, num2 * 16, 32, 32, type2, 1, false, 0, false);
				}
				else if (type == 270)
				{
					Item.NewItem(x * 16, num2 * 16, 32, 32, 1993, 1, false, 0, false);
				}
				else if (type == 271)
				{
					Item.NewItem(x * 16, num2 * 16, 32, 32, 2005, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
			}
		}
		public static bool PlaceSmallPile(int i, int j, int X, int Y, ushort type = 185)
		{
			short frameY = (short)(Y * 18);
			short num = (short)(X * 18);
			if (Main.tile[i, j] == null)
			{
				Main.tile[i, j] = new Tile();
			}
			if (Main.tile[i + 1, j] == null)
			{
				Main.tile[i + 1, j] = new Tile();
			}
			if (Main.tile[i, j + 1] == null)
			{
				Main.tile[i, j + 1] = new Tile();
			}
			if (Main.tile[i + 1, j + 1] == null)
			{
				Main.tile[i + 1, j + 1] = new Tile();
			}
			if (Main.tile[i, j].lava())
			{
				return false;
			}
			if (Y == 1)
			{
				num = (short)(X * 36);
				bool flag = false;
				if (WorldGen.SolidTile2(i, j + 1) && WorldGen.SolidTile2(i + 1, j + 1) && !Main.tile[i, j].active() && !Main.tile[i + 1, j].active())
				{
					flag = true;
				}
				if (flag)
				{
					Main.tile[i, j].active(true);
					Main.tile[i, j].frameY = frameY;
					Main.tile[i, j].frameX = num;
					Main.tile[i, j].type = type;
					Main.tile[i + 1, j].active(true);
					Main.tile[i + 1, j].frameY = frameY;
					Main.tile[i + 1, j].frameX = (short)(num + 18);
					Main.tile[i + 1, j].type = type;
					return true;
				}
			}
			else if (WorldGen.SolidTile2(i, j + 1) && !Main.tile[i, j].active())
			{
				Main.tile[i, j].active(true);
				Main.tile[i, j].frameY = frameY;
				Main.tile[i, j].frameX = num;
				Main.tile[i, j].type = type;
				return true;
			}
			return false;
		}
		public static void CheckPile(int i, int y)
		{
			if (Main.tile[i, y] == null)
			{
				Main.tile[i, y] = new Tile();
			}
			if (Main.tile[i + 1, y] == null)
			{
				Main.tile[i + 1, y] = new Tile();
			}
			if (Main.tile[i, y + 1] == null)
			{
				Main.tile[i, y + 1] = new Tile();
			}
			if (Main.tile[i + 1, y + 1] == null)
			{
				Main.tile[i + 1, y + 1] = new Tile();
			}
			if (Main.tile[i, y].frameY == 18)
			{
				WorldGen.Check2x1(i, y, Main.tile[i, y].type);
				return;
			}
			if (!WorldGen.SolidTile(i, y + 1))
			{
				WorldGen.KillTile(i, y, false, false, false);
			}
		}
		public static void Check2x1(int i, int y, ushort type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = true;
			if (Main.tile[i, y] == null)
			{
				Main.tile[i, y] = new Tile();
			}
			if (Main.tile[i + 1, y] == null)
			{
				Main.tile[i + 1, y] = new Tile();
			}
			if (Main.tile[i, y + 1] == null)
			{
				Main.tile[i, y + 1] = new Tile();
			}
			if (Main.tile[i + 1, y + 1] == null)
			{
				Main.tile[i + 1, y + 1] = new Tile();
			}
			int j = Main.tile[i, y].frameX / 18;
			int num = 0;
			while (j > 1)
			{
				j -= 2;
				num++;
			}
			int num2 = i - j;
			if ((int)Main.tile[num2 + 1, y].frameX == Main.tile[num2, y].frameX + 18 && Main.tile[num2, y].type == type && Main.tile[num2 + 1, y].type == type)
			{
				flag = false;
			}
			if (type == 29 || type == 103)
			{
				if (!Main.tile[num2, y + 1].active() || !Main.tileTable[(int)Main.tile[num2, y + 1].type])
				{
					flag = true;
				}
				if (!Main.tile[num2 + 1, y + 1].active() || !Main.tileTable[(int)Main.tile[num2 + 1, y + 1].type])
				{
					flag = true;
				}
			}
			else
			{
				if (!WorldGen.SolidTile2(num2, y + 1))
				{
					flag = true;
				}
				if (!WorldGen.SolidTile2(num2 + 1, y + 1))
				{
					flag = true;
				}
			}
			if (type == 185 && Main.tile[num2, y].frameX >= 1368 && Main.tile[num2, y].frameX <= 1458 && Main.tile[num2, y + 1].type != 2 && Main.tile[num2 + 1, y + 1].type != 2)
			{
				Tile expr_21E = Main.tile[num2, y];
				expr_21E.frameX = (short)(expr_21E.frameX - 1368);
				Tile expr_23E = Main.tile[num2 + 1, y];
				expr_23E.frameX = (short)(expr_23E.frameX - 1368);
			}
			if (flag)
			{
				int frameX = (int)Main.tile[num2, y].frameX;
				if (!Main.tile[num2, y].active())
				{
					frameX = (int)Main.tile[num2 + 1, y].frameX;
				}
				WorldGen.destroyObject = true;
				if (Main.tile[num2, y].type == type)
				{
					WorldGen.KillTile(num2, y, false, false, false);
				}
				if (Main.tile[num2 + 1, y].type == type)
				{
					WorldGen.KillTile(num2 + 1, y, false, false, false);
				}
				if (type == 16)
				{
					if (num == 1)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 716, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 35, 1, false, 0, false);
					}
				}
				if (type == 18)
				{
					int type2 = 36;
					if (num >= 1 && num <= 3)
					{
						type2 = 634 + num;
					}
					if (num >= 4 && num <= 8)
					{
						type2 = 807 + num;
					}
					if (num == 9)
					{
						type2 = 916;
					}
					if (num == 10)
					{
						type2 = 1145;
					}
					if (num == 11)
					{
						type2 = 1398;
					}
					if (num == 12)
					{
						type2 = 1401;
					}
					if (num == 13)
					{
						type2 = 1404;
					}
					if (num == 14)
					{
						type2 = 1461;
					}
					if (num == 15)
					{
						type2 = 1511;
					}
					if (num == 16)
					{
						type2 = 1795;
					}
					if (num == 17)
					{
						type2 = 1817;
					}
					if (num == 18)
					{
						type2 = 2229;
					}
					if (num == 19)
					{
						type2 = 2251;
					}
					if (num == 20)
					{
						type2 = 2252;
					}
					if (num == 21)
					{
						type2 = 2253;
					}
					if (num == 22)
					{
						type2 = 2534;
					}
					if (num == 23)
					{
						type2 = 673;
					}
					if (num == 24)
					{
						type2 = 2631;
					}
					if (num == 25)
					{
						type2 = 2632;
					}
					if (num == 26)
					{
						type2 = 2633;
					}
					Item.NewItem(num2 * 16, y * 16, 32, 32, type2, 1, false, 0, false);
				}
				if (type == 185)
				{
					if (frameX >= 576 && frameX <= 610)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						if (WorldGen.genRand.Next(3) != 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(3) != 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(2) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(2) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(4) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(4) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(5) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(10, 100), false, 0, false);
						}
						if (WorldGen.genRand.Next(5) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
					}
					if (frameX >= 612 && frameX <= 646)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 72, WorldGen.genRand.Next(10, 100), false, 0, false);
						if (Main.rand.Next(2) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 72, WorldGen.genRand.Next(20, 100), false, 0, false);
						}
						if (Main.rand.Next(3) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 72, WorldGen.genRand.Next(30, 100), false, 0, false);
						}
					}
					if (frameX >= 648 && frameX <= 682)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 73, WorldGen.genRand.Next(1, 6), false, 0, false);
						if (WorldGen.genRand.Next(2) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 73, WorldGen.genRand.Next(2, 6), false, 0, false);
						}
						if (WorldGen.genRand.Next(3) == 0)
						{
							Item.NewItem(num2 * 16, y * 16, 32, 32, 73, WorldGen.genRand.Next(3, 6), false, 0, false);
						}
					}
					if (frameX >= 684 && frameX <= 718)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 181, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
					if (frameX >= 720 && frameX <= 754)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 180, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
					if (frameX >= 756 && frameX <= 790)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 177, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
					if (frameX >= 792 && frameX <= 826)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 179, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
					if (frameX >= 828 && frameX <= 862)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 178, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
					if (frameX >= 864 && frameX <= 898)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 182, WorldGen.genRand.Next(1, 4), false, 0, false);
					}
				}
				if (type == 29)
				{
					Item.NewItem(num2 * 16, y * 16, 32, 32, 87, 1, false, 0, false);
					Main.PlaySound(13, i * 16, y * 16, 1);
				}
				if (type == 103)
				{
					int type3 = 356;
					if (num == 1)
					{
						type3 = 2235;
					}
					if (num == 2)
					{
						type3 = 2242;
					}
					if (num == 3)
					{
						type3 = 2243;
					}
					Item.NewItem(num2 * 16, y * 16, 32, 32, type3, 1, false, 0, false);
					Main.PlaySound(13, i * 16, y * 16, 1);
				}
				else if (type == 134)
				{
					if (num == 1)
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 1220, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(num2 * 16, y * 16, 32, 32, 525, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
				WorldGen.SquareTileFrame(num2, y, true);
				WorldGen.SquareTileFrame(num2 + 1, y, true);
			}
		}
		public static void Place2x1(int x, int y, ushort type, int style = 0)
		{
			if (Main.tile[x, y] == null)
			{
				Main.tile[x, y] = new Tile();
			}
			if (Main.tile[x + 1, y] == null)
			{
				Main.tile[x + 1, y] = new Tile();
			}
			if (Main.tile[x, y + 1] == null)
			{
				Main.tile[x, y + 1] = new Tile();
			}
			if (Main.tile[x + 1, y + 1] == null)
			{
				Main.tile[x + 1, y + 1] = new Tile();
			}
			bool flag = false;
			if (type != 29 && type != 103 && WorldGen.SolidTile2(x, y + 1) && WorldGen.SolidTile2(x + 1, y + 1) && !Main.tile[x, y].active() && !Main.tile[x + 1, y].active())
			{
				flag = true;
			}
			else if ((type == 29 || type == 103) && Main.tile[x, y + 1].active() && Main.tile[x + 1, y + 1].active() && Main.tileTable[(int)Main.tile[x, y + 1].type] && Main.tileTable[(int)Main.tile[x + 1, y + 1].type] && !Main.tile[x, y].active() && !Main.tile[x + 1, y].active())
			{
				flag = true;
			}
			if (flag)
			{
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = 0;
				Main.tile[x, y].frameX = (short)(36 * style);
				Main.tile[x, y].type = type;
				Main.tile[x + 1, y].active(true);
				Main.tile[x + 1, y].frameY = 0;
				Main.tile[x + 1, y].frameX = (short)(36 * style + 18);
				Main.tile[x + 1, y].type = type;
			}
		}
		public static void Check4x2(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int num = i + Main.tile[i, j].frameX / 18 * -1;
			if ((type == 79 || type == 90) && Main.tile[i, j].frameX >= 72)
			{
				num += 4;
			}
			int k = Main.tile[i, j].frameY / 18;
			int num2 = 0;
			while (k > 1)
			{
				k -= 2;
				num2++;
			}
			k = j - k;
			for (int l = num; l < num + 4; l++)
			{
				for (int m = k; m < k + 2; m++)
				{
					int num3 = (l - num) * 18;
					if ((type == 79 || type == 90) && Main.tile[i, j].frameX >= 72)
					{
						num3 = (l - num + 4) * 18;
					}
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || (int)Main.tile[l, m].frameX != num3 || (int)Main.tile[l, m].frameY != (m - k) * 18 + num2 * 36)
					{
						flag = true;
					}
				}
				if (Main.tile[l, k + 2] == null)
				{
					Main.tile[l, k + 2] = new Tile();
				}
				if (!WorldGen.SolidTile2(l, k + 2))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int n = num; n < num + 4; n++)
				{
					for (int num4 = k; num4 < k + 3; num4++)
					{
						if ((int)Main.tile[n, num4].type == type && Main.tile[n, num4].active())
						{
							WorldGen.KillTile(n, num4, false, false, false);
						}
					}
				}
				if (type == 79)
				{
					int type2;
					if (num2 == 0)
					{
						type2 = 224;
					}
					else if (num2 == 4)
					{
						type2 = 920;
					}
					else if (num2 >= 9 && num2 <= 12)
					{
						type2 = 1710 + num2;
					}
					else if (num2 >= 5 && num2 <= 8)
					{
						type2 = 1465 + num2;
					}
					else if (num2 >= 13 && num2 <= 18)
					{
						type2 = 2066 + num2 - 13;
					}
					else if (num2 == 19)
					{
						type2 = 2139;
					}
					else if (num2 == 20)
					{
						type2 = 2140;
					}
					else if (num2 == 21)
					{
						type2 = 2231;
					}
					else if (num2 == 22)
					{
						type2 = 2520;
					}
					else if (num2 == 23)
					{
						type2 = 2538;
					}
					else if (num2 == 24)
					{
						type2 = 2553;
					}
					else if (num2 == 25)
					{
						type2 = 2568;
					}
					else if (num2 == 26)
					{
						type2 = 2669;
					}
					else
					{
						type2 = num2 + 643;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				if (type == 90)
				{
					int type3 = 0;
					if (num2 == 0)
					{
						type3 = 336;
					}
					else if (num2 >= 1 && num2 <= 10)
					{
						type3 = 2072 + num2 - 1;
					}
					else if (num2 >= 11 && num2 <= 15)
					{
						type3 = 2124 + num2 - 11;
					}
					else if (num2 == 16)
					{
						type3 = 2232;
					}
					else if (num2 == 17)
					{
						type3 = 2519;
					}
					else if (num2 == 18)
					{
						type3 = 2537;
					}
					else if (num2 == 19)
					{
						type3 = 2552;
					}
					else if (num2 == 20)
					{
						type3 = 2567;
					}
					else if (num2 == 21)
					{
						type3 = 2658;
					}
					else if (num2 == 22)
					{
						type3 = 2659;
					}
					else if (num2 == 23)
					{
						type3 = 2660;
					}
					else if (num2 == 24)
					{
						type3 = 2661;
					}
					else if (num2 == 25)
					{
						type3 = 2662;
					}
					else if (num2 == 26)
					{
						type3 = 2663;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type3, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num5 = num - 1; num5 < num + 4; num5++)
				{
					for (int num6 = k - 1; num6 < k + 4; num6++)
					{
						WorldGen.TileFrame(num5, num6, false, false);
					}
				}
			}
		}
		public static void PlaceJunglePlant(int X2, int Y2, ushort type, int styleX, int styleY)
		{
			if (styleY > 0 || type == 236 || type == 238)
			{
				int num = Y2;
				if (type == 95 || type == 126)
				{
					num++;
				}
				if (X2 < 5 || X2 > Main.maxTilesX - 5 || num < 5 || num > Main.maxTilesY - 5)
				{
					return;
				}
				bool flag = true;
				for (int i = X2 - 1; i < X2 + 1; i++)
				{
					for (int j = num - 1; j < num + 1; j++)
					{
						if (Main.tile[i, j] == null)
						{
							Main.tile[i, j] = new Tile();
						}
						if (Main.tile[i, j].active() && Main.tile[i, j].type != 61 && Main.tile[i, j].type != 62 && Main.tile[i, j].type != 69 && Main.tile[i, j].type != 74 && (type != 236 || Main.tile[i, j].type != 233) && (type != 238 || Main.tile[i, j].type != 233) && (Main.tile[i, j].type != 185 || Main.tile[i, j].frameY != 0))
						{
							flag = false;
						}
						if (type == 98 && Main.tile[i, j].liquid > 0)
						{
							flag = false;
						}
					}
					if (Main.tile[i, num + 1] == null)
					{
						Main.tile[i, num + 1] = new Tile();
					}
					if (!WorldGen.SolidTile(i, num + 1) || Main.tile[i, num + 1].type != 60)
					{
						flag = false;
					}
				}
				if (flag)
				{
					short num2 = 36;
					if (type == 236 || type == 238)
					{
						num2 = 0;
					}
					short num3 = (short)(36 * styleX);
					Main.tile[X2 - 1, num - 1].active(true);
					Main.tile[X2 - 1, num - 1].frameY = num2;
					Main.tile[X2 - 1, num - 1].frameX = num3;
					Main.tile[X2 - 1, num - 1].type = type;
					Main.tile[X2, num - 1].active(true);
					Main.tile[X2, num - 1].frameY = num2;
					Main.tile[X2, num - 1].frameX = (short)(18 + num3);
					Main.tile[X2, num - 1].type = type;
					Main.tile[X2 - 1, num].active(true);
					Main.tile[X2 - 1, num].frameY = (short)(num2 + 18);
					Main.tile[X2 - 1, num].frameX = num3;
					Main.tile[X2 - 1, num].type = type;
					Main.tile[X2, num].active(true);
					Main.tile[X2, num].frameY = (short)(num2 + 18);
					Main.tile[X2, num].frameX = (short)(18 + num3);
					Main.tile[X2, num].type = type;
					return;
				}
			}
			else
			{
				if (X2 < 5 || X2 > Main.maxTilesX - 5 || Y2 < 5 || Y2 > Main.maxTilesY - 5)
				{
					return;
				}
				bool flag2 = true;
				for (int k = X2 - 1; k < X2 + 2; k++)
				{
					for (int l = Y2 - 1; l < Y2 + 1; l++)
					{
						if (Main.tile[k, l] == null)
						{
							Main.tile[k, l] = new Tile();
						}
						if (Main.tile[k, l].active() && Main.tile[k, l].type != 61 && Main.tile[k, l].type != 62 && Main.tile[k, l].type != 69 && Main.tile[k, l].type != 74 && (Main.tile[k, l].type != 185 || Main.tile[k, l].frameY != 0))
						{
							flag2 = false;
						}
					}
					if (Main.tile[k, Y2 + 1] == null)
					{
						Main.tile[k, Y2 + 1] = new Tile();
					}
					if (!WorldGen.SolidTile(k, Y2 + 1) || Main.tile[k, Y2 + 1].type != 60)
					{
						flag2 = false;
					}
				}
				if (flag2)
				{
					short num4 = (short)(54 * styleX);
					Main.tile[X2 - 1, Y2 - 1].active(true);
					Main.tile[X2 - 1, Y2 - 1].frameY = 0;
					Main.tile[X2 - 1, Y2 - 1].frameX = num4;
					Main.tile[X2 - 1, Y2 - 1].type = type;
					Main.tile[X2, Y2 - 1].active(true);
					Main.tile[X2, Y2 - 1].frameY = 0;
					Main.tile[X2, Y2 - 1].frameX = (short)(num4 + 18);
					Main.tile[X2, Y2 - 1].type = type;
					Main.tile[X2 + 1, Y2 - 1].active(true);
					Main.tile[X2 + 1, Y2 - 1].frameY = 0;
					Main.tile[X2 + 1, Y2 - 1].frameX = (short)(num4 + 36);
					Main.tile[X2 + 1, Y2 - 1].type = type;
					Main.tile[X2 - 1, Y2].active(true);
					Main.tile[X2 - 1, Y2].frameY = 18;
					Main.tile[X2 - 1, Y2].frameX = num4;
					Main.tile[X2 - 1, Y2].type = type;
					Main.tile[X2, Y2].active(true);
					Main.tile[X2, Y2].frameY = 18;
					Main.tile[X2, Y2].frameX = (short)(num4 + 18);
					Main.tile[X2, Y2].type = type;
					Main.tile[X2 + 1, Y2].active(true);
					Main.tile[X2 + 1, Y2].frameY = 18;
					Main.tile[X2 + 1, Y2].frameX = (short)(num4 + 36);
					Main.tile[X2 + 1, Y2].type = type;
				}
			}
		}
		public static void CheckJunglePlant(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			if (Main.tile[i, j].frameY >= 36 || Main.tile[i, j].type == 236 || Main.tile[i, j].type == 238)
			{
				bool flag = false;
				int k = Main.tile[i, j].frameX / 18;
				int num = 0;
				while (k > 1)
				{
					k -= 2;
					num++;
				}
				k = i - k;
				int num2 = 36;
				if (type == 236 || type == 238)
				{
					num2 = 0;
				}
				int l;
				for (l = Main.tile[i, j].frameY / 18; l > 1; l -= 2)
				{
				}
				l = j - l;
				int num3 = num * 36;
				for (int m = k; m < k + 2; m++)
				{
					for (int n = l; n < l + 2; n++)
					{
						if (Main.tile[m, n] == null)
						{
							Main.tile[m, n] = new Tile();
						}
						if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != (m - k) * 18 + num3 || (int)Main.tile[m, n].frameY != (n - l) * 18 + num2)
						{
							flag = true;
						}
					}
					if (Main.tile[m, l + 2] == null)
					{
						Main.tile[m, l + 2] = new Tile();
					}
					if (!WorldGen.SolidTile(m, l + 2) || Main.tile[m, l + 2].type != 60)
					{
						flag = true;
					}
				}
				if (flag)
				{
					if (type == 238)
					{
						float num4 = (float)(i * 16);
						float num5 = (float)(j * 16);
						float num6 = -1f;
						int plr = 0;
						for (int num7 = 0; num7 < 255; num7++)
						{
							float num8 = Math.Abs(Main.player[num7].position.X - num4) + Math.Abs(Main.player[num7].position.Y - num5);
							if (num8 < num6 || num6 == -1f)
							{
								plr = num7;
								num6 = num8;
							}
						}
						if (num6 / 16f < 50f)
						{
							NPC.SpawnOnPlayer(plr, 262);
						}
					}
					if (type == 236)
					{
						Item.NewItem(i * 16, j * 16, 32, 32, 1291, 1, false, 0, false);
					}
					short arg_2A8_0 = Main.tile[i, j].frameX;
					WorldGen.destroyObject = true;
					for (int num9 = k; num9 < k + 2; num9++)
					{
						for (int num10 = l; num10 < l + 2; num10++)
						{
							if (Main.tile[num9, num10] == null)
							{
								Main.tile[num9, num10] = new Tile();
							}
							if ((int)Main.tile[num9, num10].type == type && Main.tile[num9, num10].active())
							{
								WorldGen.KillTile(num9, num10, false, false, false);
							}
						}
					}
					return;
				}
			}
			else
			{
				bool flag2 = false;
				int num11 = j + Main.tile[i, j].frameY / 18 * -1;
				int num12 = Main.tile[i, j].frameX / 18;
				int num13 = 0;
				while (num12 > 2)
				{
					num12 -= 3;
					num13++;
				}
				num12 = i - num12;
				int num14 = num13 * 54;
				for (int num15 = num12; num15 < num12 + 3; num15++)
				{
					for (int num16 = num11; num16 < num11 + 2; num16++)
					{
						if (Main.tile[num15, num16] == null)
						{
							Main.tile[num15, num16] = new Tile();
						}
						if (!Main.tile[num15, num16].active() || (int)Main.tile[num15, num16].type != type || (int)Main.tile[num15, num16].frameX != (num15 - num12) * 18 + num14 || (int)Main.tile[num15, num16].frameY != (num16 - num11) * 18)
						{
							flag2 = true;
						}
					}
					if (Main.tile[num15, num11 + 2] == null)
					{
						Main.tile[num15, num11 + 2] = new Tile();
					}
					if (!WorldGen.SolidTile(num15, num11 + 2) || Main.tile[num15, num11 + 2].type != 60)
					{
						flag2 = true;
					}
				}
				if (flag2)
				{
					short arg_4B4_0 = Main.tile[i, j].frameX;
					WorldGen.destroyObject = true;
					for (int num17 = num12; num17 < num12 + 3; num17++)
					{
						for (int num18 = num11; num18 < num11 + 3; num18++)
						{
							if (Main.tile[num17, num18] == null)
							{
								Main.tile[num17, num18] = new Tile();
							}
							if ((int)Main.tile[num17, num18].type == type && Main.tile[num17, num18].active())
							{
								WorldGen.KillTile(num17, num18, false, false, false);
							}
						}
					}
				}
			}
		}
		public static void Check2x2(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int num = 0;
			int k = Main.tile[i, j].frameX / 18 * -1;
			if (k < -1)
			{
				k += 2;
				num = 36;
			}
			k += i;
			int l = (int)Main.tile[i, j].frameY;
			int num2 = 0;
			while (l >= 36)
			{
				l -= 36;
				num2++;
			}
			int num3 = j - l / 18;
			for (int m = k; m < k + 2; m++)
			{
				for (int n = num3; n < num3 + 2; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != (m - k) * 18 + num || (int)Main.tile[m, n].frameY != (n - num3) * 18 + num2 * 36)
					{
						flag = true;
					}
				}
				if (type == 95 || type == 126)
				{
					if (Main.tile[m, num3 - 1] == null)
					{
						Main.tile[m, num3 - 1] = new Tile();
					}
					if (!Main.tile[m, num3 - 1].active() || !Main.tileSolid[(int)Main.tile[m, num3 - 1].type] || Main.tileSolidTop[(int)Main.tile[m, num3 - 1].type])
					{
						flag = true;
					}
				}
				else if (type != 138 && type != 132)
				{
					if (Main.tile[m, num3 + 2] == null)
					{
						Main.tile[m, num3 + 2] = new Tile();
					}
					if (!Main.tile[m, num3 + 2].active() || (!Main.tileSolid[(int)Main.tile[m, num3 + 2].type] && !Main.tileTable[(int)Main.tile[m, num3 + 2].type]))
					{
						flag = true;
					}
					if (Main.tile[m, num3 + 2].halfBrick())
					{
						flag = true;
					}
				}
			}
			if (type == 138)
			{
				if (Main.tile[k, num3 - 1].type != 21 && Main.tile[k + 1, num3 - 1].type != 21 && !WorldGen.SolidTile2(k, num3 + 2) && !WorldGen.SolidTile2(k + 1, num3 + 2))
				{
					flag = true;
				}
			}
			else if (type == 132)
			{
				flag = false;
				num3 = Main.tile[i, j].frameY / 18 * -1;
				num3 += j;
				num = 0;
				k = Main.tile[i, j].frameX / 18 * -1;
				while (k < -1)
				{
					k += 2;
					num += 36;
				}
				k += i;
				for (int num4 = k; num4 < k + 2; num4++)
				{
					for (int num5 = num3; num5 < num3 + 2; num5++)
					{
						if (Main.tile[num4, num5] == null)
						{
							Main.tile[num4, num5] = new Tile();
						}
						if (!Main.tile[num4, num5].active() || (int)Main.tile[num4, num5].type != type || (int)Main.tile[num4, num5].frameX != (num4 - k) * 18 + num || (int)Main.tile[num4, num5].frameY != (num5 - num3) * 18)
						{
							flag = true;
						}
					}
				}
				if (Main.tile[k, num3 + 2] == null)
				{
					Main.tile[k, num3 + 2] = new Tile();
				}
				if (Main.tile[k + 1, num3 + 2] == null)
				{
					Main.tile[k + 1, num3 + 2] = new Tile();
				}
				bool flag2 = false;
				if (!Main.tile[k, num3 + 2].active() || !Main.tileSolid[(int)Main.tile[k, num3 + 2].type])
				{
					flag2 = true;
				}
				if (!Main.tile[k + 1, num3 + 2].active() || !Main.tileSolid[(int)Main.tile[k + 1, num3 + 2].type])
				{
					flag2 = true;
				}
				if (flag2)
				{
					if (Main.tile[k, num3].wall < 1 || Main.tile[k + 1, num3].wall < 1 || Main.tile[k, num3 + 1].wall < 1 || Main.tile[k + 1, num3 + 1].wall < 1)
					{
						flag = true;
					}
					else if (num < 72)
					{
						for (int num6 = k; num6 < k + 2; num6++)
						{
							for (int num7 = num3; num7 < num3 + 2; num7++)
							{
								Tile expr_528 = Main.tile[num6, num7];
								expr_528.frameX = (short)(expr_528.frameX + 72);
							}
						}
					}
				}
				else if (num >= 72)
				{
					for (int num8 = k; num8 < k + 2; num8++)
					{
						for (int num9 = num3; num9 < num3 + 2; num9++)
						{
							Tile expr_572 = Main.tile[num8, num9];
							expr_572.frameX = (short)(expr_572.frameX - 72);
						}
					}
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num10 = k; num10 < k + 2; num10++)
				{
					for (int num11 = num3; num11 < num3 + 2; num11++)
					{
						if ((int)Main.tile[num10, num11].type == type && Main.tile[num10, num11].active())
						{
							WorldGen.KillTile(num10, num11, false, false, false);
						}
					}
				}
				if (type >= 288 && type <= 295)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2178 + type - 288, 1, false, 0, false);
				}
				if (type >= 316 && type <= 318)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2439 + type - 316, 1, false, 0, false);
				}
				if (type == 85)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 321, 1, false, 0, false);
				}
				if (type == 94)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 352, 1, false, 0, false);
				}
				if (type == 95)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 344, 1, false, 0, false);
				}
				if (type == 96)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 345, 1, false, 0, false);
				}
				if (type == 97)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 346, 1, false, 0, false);
				}
				if (type == 98)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 347, 1, false, 0, false);
				}
				if (type == 99)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 348, 1, false, 0, false);
				}
				if (type == 335)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2700, 1, false, 0, false);
				}
				if (type == 100)
				{
					int type2 = 0;
					if (num2 == 0)
					{
						type2 = 349;
					}
					if (num2 >= 1 && num2 <= 12)
					{
						type2 = 2092 + num2 - 1;
					}
					if (num2 >= 13 && num2 <= 16)
					{
						type2 = 2149 + num2 - 13;
					}
					if (num2 == 17)
					{
						type2 = 2227;
					}
					if (num2 == 18)
					{
						type2 = 2522;
					}
					if (num2 == 19)
					{
						type2 = 2541;
					}
					if (num2 == 20)
					{
						type2 = 2555;
					}
					if (num2 == 21)
					{
						type2 = 2570;
					}
					if (num2 == 22)
					{
						type2 = 2664;
					}
					if (num2 == 23)
					{
						type2 = 2665;
					}
					if (num2 == 24)
					{
						type2 = 2666;
					}
					if (num2 == 25)
					{
						type2 = 2667;
					}
					if (num2 == 26)
					{
						type2 = 2668;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				if (type == 173)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 714, 1, false, 0, false);
				}
				if (type == 125)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 487, 1, false, 0, false);
				}
				if (type == 287)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2177, 1, false, 0, false);
				}
				if (type == 126)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 488, 1, false, 0, false);
				}
				if (type == 132)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 513, 1, false, 0, false);
				}
				if (type == 142)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 581, 1, false, 0, false);
				}
				if (type == 143)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 582, 1, false, 0, false);
				}
				if (type == 282)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 250, 1, false, 0, false);
				}
				if (type == 319)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2490, 1, false, 0, false);
				}
				if (type == 138 && !WorldGen.gen && Main.netMode != 1)
				{
					Projectile.NewProjectile((float)(k * 16) + 15.5f, (float)(num3 * 16 + 16), 0f, 0f, 99, 70, 10f, Main.myPlayer, 0f, 0f);
				}
				WorldGen.destroyObject = false;
				for (int num12 = k - 1; num12 < k + 3; num12++)
				{
					for (int num13 = num3 - 1; num13 < num3 + 3; num13++)
					{
						WorldGen.TileFrame(num12, num13, false, false);
					}
				}
			}
		}
		public static bool CheckBoulderChest(int i, int j)
		{
			int num = Main.tile[i, j].frameX / 18 * -1;
			if (num < -1)
			{
				num += 2;
			}
			num += i;
			int k;
			for (k = (int)Main.tile[i, j].frameY; k >= 36; k -= 36)
			{
			}
			k = j - k / 18;
			return Main.tile[num, k - 1].type == 21 || Main.tile[num + 1, k - 1].type == 21;
		}
		public static void OreRunner(int i, int j, double strength, int steps, ushort type)
		{
			double num = strength;
			float num2 = (float)steps;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			while (num > 0.0 && num2 > 0f)
			{
				if (value.Y < 0f && num2 > 0f && type == 59)
				{
					num2 = 0f;
				}
				num = strength * (double)(num2 / (float)steps);
				num2 -= 1f;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				for (int k = num3; k < num4; k++)
				{
					for (int l = num5; l < num6; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < strength * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[k, l].active() && (Main.tile[k, l].type == 0 || Main.tile[k, l].type == 1 || Main.tile[k, l].type == 23 || Main.tile[k, l].type == 25 || Main.tile[k, l].type == 40 || Main.tile[k, l].type == 53 || Main.tile[k, l].type == 57 || Main.tile[k, l].type == 59 || Main.tile[k, l].type == 60 || Main.tile[k, l].type == 70 || Main.tile[k, l].type == 109 || Main.tile[k, l].type == 112 || Main.tile[k, l].type == 116 || Main.tile[k, l].type == 117 || Main.tile[k, l].type == 147 || Main.tile[k, l].type == 161 || Main.tile[k, l].type == 163 || Main.tile[k, l].type == 164 || Main.tileMoss[(int)Main.tile[k, l].type] || Main.tile[k, l].type == 199 || Main.tile[k, l].type == 200 || Main.tile[k, l].type == 203 || Main.tile[k, l].type == 234))
						{
							Main.tile[k, l].type = type;
							WorldGen.SquareTileFrame(k, l, true);
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
			}
		}
		public static void SmashAltar(int i, int j)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (!Main.hardMode)
			{
				return;
			}
			if (WorldGen.noTileActions)
			{
				return;
			}
			if (WorldGen.gen)
			{
				return;
			}
			int num = WorldGen.altarCount % 3;
			int num2 = WorldGen.altarCount / 3 + 1;
			float num3 = (float)(Main.maxTilesX / 4200);
			int num4 = 1 - num;
			num3 = num3 * 310f - (float)(85 * num);
			num3 *= 0.85f;
			num3 /= (float)num2;
			if (num == 0)
			{
				if (WorldGen.oreTier1 == -1)
				{
					WorldGen.oreTier1 = 107;
					if (WorldGen.genRand.Next(2) == 0)
					{
						WorldGen.oreTier1 = 221;
					}
				}
				int num5 = 12;
				if (WorldGen.oreTier1 == 221)
				{
					num5 += 9;
					num3 *= 0.9f;
				}
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[num5], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[num5], 255, 50f, 255f, 130f, 0);
				}
				num = WorldGen.oreTier1;
				num3 *= 1.05f;
			}
			else if (num == 1)
			{
				if (WorldGen.oreTier2 == -1)
				{
					WorldGen.oreTier2 = 108;
					if (WorldGen.genRand.Next(2) == 0)
					{
						WorldGen.oreTier2 = 222;
					}
				}
				int num6 = 13;
				if (WorldGen.oreTier2 == 222)
				{
					num6 += 9;
					num3 *= 0.9f;
				}
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[num6], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[num6], 255, 50f, 255f, 130f, 0);
				}
				num = WorldGen.oreTier2;
			}
			else
			{
				if (WorldGen.oreTier3 == -1)
				{
					WorldGen.oreTier3 = 111;
					if (WorldGen.genRand.Next(2) == 0)
					{
						WorldGen.oreTier3 = 223;
					}
				}
				int num7 = 14;
				if (WorldGen.oreTier3 == 223)
				{
					num7 += 9;
					num3 *= 0.9f;
				}
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[num7], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[num7], 255, 50f, 255f, 130f, 0);
				}
				num = WorldGen.oreTier3;
			}
			int num8 = 0;
			while ((float)num8 < num3)
			{
				int i2 = WorldGen.genRand.Next(100, Main.maxTilesX - 100);
				double num9 = Main.worldSurface;
				if (num == 108 || num == 222)
				{
					num9 = Main.rockLayer;
				}
				if (num == 111 || num == 223)
				{
					num9 = (Main.rockLayer + Main.rockLayer + (double)Main.maxTilesY) / 3.0;
				}
				int j2 = WorldGen.genRand.Next((int)num9, Main.maxTilesY - 150);
				WorldGen.OreRunner(i2, j2, (double)WorldGen.genRand.Next(5, 9 + num4), WorldGen.genRand.Next(5, 9 + num4), (ushort)num);
				num8++;
			}
			int num10 = WorldGen.genRand.Next(3);
			while (num10 != 2)
			{
				int num11 = WorldGen.genRand.Next(100, Main.maxTilesX - 100);
				int num12 = WorldGen.genRand.Next((int)Main.rockLayer + 50, Main.maxTilesY - 300);
				if (Main.tile[num11, num12].active() && Main.tile[num11, num12].type == 1)
				{
					if (num10 == 0)
					{
						if (WorldGen.crimson)
						{
							Main.tile[num11, num12].type = 203;
						}
						else
						{
							Main.tile[num11, num12].type = 25;
						}
					}
					else
					{
						Main.tile[num11, num12].type = 117;
					}
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, num11, num12, 1);
						break;
					}
					break;
				}
			}
			if (Main.netMode != 1)
			{
				int num13 = Main.rand.Next(2) + 1;
				for (int k = 0; k < num13; k++)
				{
					NPC.SpawnOnPlayer((int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16), 82);
				}
			}
			WorldGen.altarCount++;
		}
		public static void Check3x1(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = Main.tile[i, j].frameX / 18;
			int num = 0;
			while (k > 2)
			{
				k -= 3;
				num++;
			}
			k = i - k;
			int num2 = num * 54;
			for (int l = k; l < k + 3; l++)
			{
				if (Main.tile[l, j] == null)
				{
					Main.tile[l, j] = new Tile();
				}
				if (!Main.tile[l, j].active() || (int)Main.tile[l, j].type != type || (int)Main.tile[l, j].frameX != (l - k) * 18 + num2 || Main.tile[l, j].frameY != 0)
				{
					flag = true;
				}
				if (Main.tile[l, j - 1].active() && Main.tile[l, j - 1].type == 21)
				{
					return;
				}
				if (!WorldGen.SolidTile2(l, j + 1))
				{
					flag = true;
				}
			}
			if (flag)
			{
				short arg_12D_0 = Main.tile[i, j].frameX;
				WorldGen.destroyObject = true;
				if (type == 235)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1263, 1, false, 0, false);
				}
				for (int m = k; m < k + 3; m++)
				{
					if (Main.tile[m, j] == null)
					{
						Main.tile[m, j] = new Tile();
					}
					if ((int)Main.tile[m, j].type == type && Main.tile[m, j].active())
					{
						WorldGen.KillTile(m, j, false, false, false);
					}
				}
				WorldGen.destroyObject = false;
				for (int n = k - 1; n < k + 4; n++)
				{
					WorldGen.TileFrame(n, j, false, false);
				}
			}
		}
		public static void Check3x2(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			bool flag2 = false;
			int num = j + Main.tile[i, j].frameY / 18 * -1;
			int k = Main.tile[i, j].frameX / 18;
			int num2 = 0;
			while (k > 2)
			{
				k -= 3;
				num2++;
			}
			k = i - k;
			int num3 = num2 * 54;
			if (type == 14 && num2 == 25)
			{
				flag2 = true;
			}
			int num4 = num + 2;
			if (flag2)
			{
				num4--;
			}
			for (int l = k; l < k + 3; l++)
			{
				for (int m = num; m < num4; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || (int)Main.tile[l, m].frameX != (l - k) * 18 + num3 || (int)Main.tile[l, m].frameY != (m - num) * 18)
					{
						flag = true;
					}
				}
				if (type == 285 || type == 286 || type == 298 || type == 299 || type == 310 || type == 339)
				{
					if (!WorldGen.SolidTile2(l, num4) && (!Main.tile[l, num4].nactive() || !Main.tileSolidTop[(int)Main.tile[l, num4].type] || Main.tile[l, num4].frameY != 0))
					{
						flag = true;
					}
				}
				else if (!WorldGen.SolidTile2(l, num4))
				{
					flag = true;
				}
			}
			if (type == 187 && Main.tile[k, num].frameX >= 756 && Main.tile[k, num].frameX <= 900 && Main.tile[k, num + 2].type != 2 && Main.tile[k + 1, num + 2].type != 2 && Main.tile[k + 2, num + 2].type != 2)
			{
				Tile expr_25C = Main.tile[k, num];
				expr_25C.frameX = (short)(expr_25C.frameX - 378);
				Tile expr_27C = Main.tile[k + 1, num];
				expr_27C.frameX = (short)(expr_27C.frameX - 378);
				Tile expr_29C = Main.tile[k + 2, num];
				expr_29C.frameX = (short)(expr_29C.frameX - 378);
				Tile expr_2BC = Main.tile[k, num + 1];
				expr_2BC.frameX = (short)(expr_2BC.frameX - 378);
				Tile expr_2DE = Main.tile[k + 1, num + 1];
				expr_2DE.frameX = (short)(expr_2DE.frameX - 378);
				Tile expr_300 = Main.tile[k + 2, num + 1];
				expr_300.frameX = (short)(expr_300.frameX - 378);
				Main.tile[k, num].type = 186;
				Main.tile[k + 1, num].type = 186;
				Main.tile[k + 2, num].type = 186;
				Main.tile[k, num + 1].type = 186;
				Main.tile[k + 1, num + 1].type = 186;
				Main.tile[k + 2, num + 1].type = 186;
			}
			if (flag)
			{
				int frameX = (int)Main.tile[i, j].frameX;
				WorldGen.destroyObject = true;
				num4 = num + 3;
				if (flag2)
				{
					num4--;
				}
				for (int n = k; n < k + 3; n++)
				{
					for (int num5 = num; num5 < num + 3; num5++)
					{
						if (Main.tile[n, num5] == null)
						{
							Main.tile[n, num5] = new Tile();
						}
						if ((int)Main.tile[n, num5].type == type && Main.tile[n, num5].active())
						{
							WorldGen.KillTile(n, num5, false, false, false);
						}
					}
				}
				if (type == 14)
				{
					int type2 = 32;
					if (num2 >= 1 && num2 <= 3)
					{
						type2 = 637 + num2;
					}
					if (num2 >= 15 && num2 <= 20)
					{
						type2 = 1698 + num2;
					}
					if (num2 >= 4 && num2 <= 7)
					{
						type2 = 823 + num2;
					}
					if (num2 == 8)
					{
						type2 = 917;
					}
					if (num2 == 9)
					{
						type2 = 1144;
					}
					if (num2 == 10)
					{
						type2 = 1397;
					}
					if (num2 == 11)
					{
						type2 = 1400;
					}
					if (num2 == 12)
					{
						type2 = 1403;
					}
					if (num2 == 13)
					{
						type2 = 1460;
					}
					if (num2 == 14)
					{
						type2 = 1510;
					}
					if (num2 == 23)
					{
						type2 = 1926;
					}
					if (num2 == 21)
					{
						type2 = 1794;
					}
					if (num2 == 22)
					{
						type2 = 1816;
					}
					if (num2 == 24)
					{
						type2 = 2248;
					}
					if (num2 == 25)
					{
						type2 = 2259;
					}
					if (num2 == 26)
					{
						type2 = 2532;
					}
					if (num2 == 27)
					{
						type2 = 2550;
					}
					if (num2 == 28)
					{
						type2 = 677;
					}
					if (num2 == 29)
					{
						type2 = 2583;
					}
					if (num2 == 30)
					{
						type2 = 2743;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				else if (type == 114)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 398, 1, false, 0, false);
				}
				else if (type == 26)
				{
					if (!WorldGen.noTileActions)
					{
						WorldGen.SmashAltar(i, j);
					}
				}
				else if (type == 298)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2190, 1, false, 0, false);
				}
				else if (type == 299)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2191, 1, false, 0, false);
				}
				else if (type == 285)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2174, 1, false, 0, false);
				}
				else if (type == 286)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2175, 1, false, 0, false);
				}
				else if (type == 310)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2207, 1, false, 0, false);
				}
				else if (type == 339)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2741, 1, false, 0, false);
				}
				else if (type == 217)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 995, 1, false, 0, false);
				}
				else if (type == 218)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 996, 1, false, 0, false);
				}
				else if (type == 219)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 997, 1, false, 0, false);
				}
				else if (type == 220)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 998, 1, false, 0, false);
				}
				else if (type == 228)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1120, 1, false, 0, false);
				}
				else if (type == 215)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 966, 1, false, 0, false);
				}
				else if (type == 244)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1449, 1, false, 0, false);
				}
				else if (type == 17)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 33, 1, false, 0, false);
				}
				else if (type == 77)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 221, 1, false, 0, false);
				}
				else if (type == 86)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 332, 1, false, 0, false);
				}
				else if (type == 237)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1292, 1, false, 0, false);
				}
				else if (type == 87)
				{
					int type3 = 333;
					if (num2 >= 1 && num2 <= 3)
					{
						type3 = 640 + num2;
					}
					if (num2 == 4)
					{
						type3 = 919;
					}
					if (num2 >= 5 && num2 <= 7)
					{
						type3 = 2245 + num2 - 5;
					}
					if (num2 >= 8 && num2 <= 10)
					{
						type3 = 2254 + num2 - 8;
					}
					if (num2 >= 11 && num2 <= 20)
					{
						type3 = 2376 + num2 - 11;
					}
					if (num2 == 21)
					{
						type3 = 2531;
					}
					if (num2 == 22)
					{
						type3 = 2548;
					}
					if (num2 == 23)
					{
						type3 = 2565;
					}
					if (num2 == 24)
					{
						type3 = 2580;
					}
					if (num2 == 25)
					{
						type3 = 2671;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type3, 1, false, 0, false);
				}
				else if (type == 88)
				{
					int type4 = 334;
					if (num2 >= 1 && num2 <= 3)
					{
						type4 = 646 + num2;
					}
					if (num2 == 4)
					{
						type4 = 918;
					}
					if (num2 >= 5 && num2 <= 15)
					{
						type4 = 2386 + num2 - 5;
					}
					if (num2 == 16)
					{
						type4 = 2529;
					}
					if (num2 == 17)
					{
						type4 = 2545;
					}
					if (num2 == 18)
					{
						type4 = 2562;
					}
					if (num2 == 19)
					{
						type4 = 2577;
					}
					if (num2 == 20)
					{
						type4 = 2637;
					}
					if (num2 == 21)
					{
						type4 = 2638;
					}
					if (num2 == 22)
					{
						type4 = 2639;
					}
					if (num2 == 23)
					{
						type4 = 2640;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type4, 1, false, 0, false);
				}
				else if (type == 89)
				{
					int type5 = 335;
					if (num2 >= 1 && num2 <= 20)
					{
						type5 = 2397 + num2 - 1;
					}
					else if (num2 == 21)
					{
						type5 = 2521;
					}
					else if (num2 == 22)
					{
						type5 = 2527;
					}
					else if (num2 == 23)
					{
						type5 = 2539;
					}
					else if (num2 == 24)
					{
						type5 = 858;
					}
					else if (num2 == 25)
					{
						type5 = 2582;
					}
					else if (num2 == 26)
					{
						type5 = 2634;
					}
					else if (num2 == 27)
					{
						type5 = 2635;
					}
					else if (num2 == 28)
					{
						type5 = 2636;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type5, 1, false, 0, false);
				}
				else if (type == 133)
				{
					if (frameX >= 54)
					{
						Item.NewItem(i * 16, j * 16, 32, 32, 1221, 1, false, 0, false);
					}
					else
					{
						Item.NewItem(i * 16, j * 16, 32, 32, 524, 1, false, 0, false);
					}
				}
				else if (type == 186)
				{
					if (frameX >= 864)
					{
						if (frameX <= 954)
						{
							Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							if (WorldGen.genRand.Next(3) != 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) != 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) != 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(4) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(4) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(4) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(5) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(5) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (WorldGen.genRand.Next(5) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 71, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
						}
						else if (frameX <= 1062)
						{
							Item.NewItem(i * 16, j * 16, 32, 32, 72, WorldGen.genRand.Next(10, 100), false, 0, false);
							if (Main.rand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 72, WorldGen.genRand.Next(20, 100), false, 0, false);
							}
							if (Main.rand.Next(3) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 72, WorldGen.genRand.Next(30, 100), false, 0, false);
							}
							if (Main.rand.Next(4) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 72, WorldGen.genRand.Next(40, 100), false, 0, false);
							}
							if (Main.rand.Next(5) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 72, WorldGen.genRand.Next(50, 100), false, 0, false);
							}
						}
						else if (frameX <= 1170)
						{
							Item.NewItem(i * 16, j * 16, 32, 32, 73, WorldGen.genRand.Next(1, 7), false, 0, false);
							if (WorldGen.genRand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 73, WorldGen.genRand.Next(2, 7), false, 0, false);
							}
							if (WorldGen.genRand.Next(3) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 73, WorldGen.genRand.Next(3, 7), false, 0, false);
							}
							if (WorldGen.genRand.Next(4) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 73, WorldGen.genRand.Next(4, 7), false, 0, false);
							}
							if (WorldGen.genRand.Next(5) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 73, WorldGen.genRand.Next(5, 7), false, 0, false);
							}
						}
					}
				}
				else if (type == 187 && frameX >= 918 && frameX <= 970)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 989, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num6 = k - 1; num6 < k + 4; num6++)
				{
					for (int num7 = num - 1; num7 < num + 4; num7++)
					{
						WorldGen.TileFrame(num6, num7, false, false);
					}
				}
			}
		}
		public static void Check3x4(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int num = 0;
			int k;
			for (k = Main.tile[i, j].frameX / 18; k >= 3; k -= 3)
			{
				num++;
			}
			int num2 = i - k;
			int num3 = j + Main.tile[i, j].frameY / 18 * -1;
			for (int l = num2; l < num2 + 3; l++)
			{
				for (int m = num3; m < num3 + 4; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || (int)Main.tile[l, m].frameX != num * 54 + (l - num2) * 18 || (int)Main.tile[l, m].frameY != (m - num3) * 18)
					{
						flag = true;
					}
				}
				if (Main.tile[l, num3 + 4] == null)
				{
					Main.tile[l, num3 + 4] = new Tile();
				}
				if (!WorldGen.SolidTile2(l, num3 + 4))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int n = num2; n < num2 + 3; n++)
				{
					for (int num4 = num3; num4 < num3 + 4; num4++)
					{
						if ((int)Main.tile[n, num4].type == type && Main.tile[n, num4].active())
						{
							WorldGen.KillTile(n, num4, false, false, false);
						}
					}
				}
				if (type == 101)
				{
					int type2 = 0;
					if (num == 0)
					{
						type2 = 354;
					}
					if (num == 1)
					{
						type2 = 1414;
					}
					if (num == 2)
					{
						type2 = 1415;
					}
					if (num == 3)
					{
						type2 = 1416;
					}
					if (num == 4)
					{
						type2 = 1463;
					}
					if (num == 5)
					{
						type2 = 1512;
					}
					if (num == 6)
					{
						type2 = 2020;
					}
					if (num == 7)
					{
						type2 = 2021;
					}
					if (num == 8)
					{
						type2 = 2022;
					}
					if (num == 9)
					{
						type2 = 2023;
					}
					if (num == 10)
					{
						type2 = 2024;
					}
					if (num == 11)
					{
						type2 = 2025;
					}
					if (num == 12)
					{
						type2 = 2026;
					}
					if (num == 13)
					{
						type2 = 2027;
					}
					if (num == 14)
					{
						type2 = 2028;
					}
					if (num == 15)
					{
						type2 = 2029;
					}
					if (num == 16)
					{
						type2 = 2030;
					}
					if (num == 17)
					{
						type2 = 2031;
					}
					if (num >= 18 && num <= 21)
					{
						type2 = 2135 + num - 18;
					}
					if (num == 22)
					{
						type2 = 2233;
					}
					if (num == 23)
					{
						type2 = 2536;
					}
					if (num == 24)
					{
						type2 = 2540;
					}
					if (num == 25)
					{
						type2 = 2554;
					}
					if (num == 26)
					{
						type2 = 2569;
					}
					if (num == 27)
					{
						type2 = 2670;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				else if (type == 102)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 355, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num5 = num2 - 1; num5 < num2 + 4; num5++)
				{
					for (int num6 = num3 - 1; num6 < num3 + 4; num6++)
					{
						WorldGen.TileFrame(num5, num6, false, false);
					}
				}
			}
		}
		public static void Check6x3(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int num = i + Main.tile[i, j].frameX / 18 * -1;
			int num2 = j + Main.tile[i, j].frameY / 18 * -1;
			for (int k = num; k < num + 6; k++)
			{
				for (int l = num2; l < num2 + 3; l++)
				{
					int num3 = (k - num) * 18;
					if (Main.tile[k, l] == null)
					{
						Main.tile[k, l] = new Tile();
					}
					if (!Main.tile[k, l].active() || (int)Main.tile[k, l].type != type || (int)Main.tile[k, l].frameX != num3 || (int)Main.tile[k, l].frameY != (l - num2) * 18)
					{
						flag = true;
					}
				}
				if (Main.tile[k, num2 + 3] == null)
				{
					Main.tile[k, num2 + 3] = new Tile();
				}
				if (!WorldGen.SolidTile2(k, num2 + 3) && (!Main.tile[k, num2 + 3].nactive() || !Main.tileSolidTop[(int)Main.tile[k, num2 + 3].type] || Main.tile[k, num2 + 3].frameY != 0))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int m = num; m < num + 6; m++)
				{
					for (int n = num2; n < num2 + 3; n++)
					{
						if ((int)Main.tile[m, n].type == type && Main.tile[m, n].active())
						{
							WorldGen.KillTile(m, n, false, false, false);
						}
					}
				}
				if (type == 275)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2162, 1, false, 0, false);
				}
				if (type == 276)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2163, 1, false, 0, false);
				}
				if (type == 277)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2164, 1, false, 0, false);
				}
				if (type == 278)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2165, 1, false, 0, false);
				}
				if (type == 279)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2166, 1, false, 0, false);
				}
				if (type == 280)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2167, 1, false, 0, false);
				}
				if (type == 281)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2168, 1, false, 0, false);
				}
				if (type == 296)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2186, 1, false, 0, false);
				}
				if (type == 297)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2187, 1, false, 0, false);
				}
				if (type == 309)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2206, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num4 = num - 1; num4 < num + 7; num4++)
				{
					for (int num5 = num2 - 1; num5 < num2 + 4; num5++)
					{
						WorldGen.TileFrame(num4, num5, false, false);
					}
				}
			}
		}
		public static void Place6x3(int x, int y, ushort type, int direction = -1, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 3; i < x + 3; i++)
			{
				for (int j = y - 2; j <= y; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1) && (!Main.tile[i, y + 1].nactive() || !Main.tileSolidTop[(int)Main.tile[i, y + 1].type] || Main.tile[i, y + 1].frameY != 0))
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num = 0;
				for (int k = x - 3; k < x + 3; k++)
				{
					int num2 = 0;
					for (int l = y - 2; l <= y; l++)
					{
						Main.tile[k, l].active(true);
						Main.tile[k, l].frameY = (short)num2;
						Main.tile[k, l].frameX = (short)num;
						Main.tile[k, l].type = type;
						num2 += 18;
					}
					num += 18;
				}
			}
		}
		public static void Place4x2(int x, int y, ushort type, int direction = -1, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 3; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1))
				{
					flag = false;
				}
			}
			short num = 0;
			if (direction == 1)
			{
				num = 72;
			}
			int num2 = 36 * style;
			if (flag)
			{
				Main.tile[x - 1, y - 1].active(true);
				Main.tile[x - 1, y - 1].frameY = (short)num2;
				Main.tile[x - 1, y - 1].frameX = num;
				Main.tile[x - 1, y - 1].type = type;
				Main.tile[x, y - 1].active(true);
				Main.tile[x, y - 1].frameY = (short)num2;
				Main.tile[x, y - 1].frameX = (short)(18 + num);
				Main.tile[x, y - 1].type = type;
				Main.tile[x + 1, y - 1].active(true);
				Main.tile[x + 1, y - 1].frameY = (short)num2;
				Main.tile[x + 1, y - 1].frameX = (short)(36 + num);
				Main.tile[x + 1, y - 1].type = type;
				Main.tile[x + 2, y - 1].active(true);
				Main.tile[x + 2, y - 1].frameY = (short)num2;
				Main.tile[x + 2, y - 1].frameX = (short)(54 + num);
				Main.tile[x + 2, y - 1].type = type;
				Main.tile[x - 1, y].active(true);
				Main.tile[x - 1, y].frameY = (short)(num2 + 18);
				Main.tile[x - 1, y].frameX = num;
				Main.tile[x - 1, y].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = (short)(num2 + 18);
				Main.tile[x, y].frameX = (short)(18 + num);
				Main.tile[x, y].type = type;
				Main.tile[x + 1, y].active(true);
				Main.tile[x + 1, y].frameY = (short)(num2 + 18);
				Main.tile[x + 1, y].frameX = (short)(36 + num);
				Main.tile[x + 1, y].type = type;
				Main.tile[x + 2, y].active(true);
				Main.tile[x + 2, y].frameY = (short)(num2 + 18);
				Main.tile[x + 2, y].frameX = (short)(54 + num);
				Main.tile[x + 2, y].type = type;
			}
		}
		public static void SwitchCannon(int i, int j)
		{
			int k;
			for (k = Main.tile[i, j].frameX / 18; k >= 4; k -= 4)
			{
			}
			int l;
			for (l = Main.tile[i, j].frameY / 18; l >= 3; l -= 3)
			{
			}
			int num = 1;
			if (k < 2)
			{
				num = -1;
			}
			k = i - k;
			l = j - l;
			if (num == 1 && Main.tile[k, l].frameY <= 52)
			{
				return;
			}
			if (num == -1 && Main.tile[k, l].frameY >= 432)
			{
				return;
			}
			num *= -54;
			for (int m = k; m < k + 4; m++)
			{
				for (int n = l; n < l + 3; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (Main.tile[m, n].active() && Main.tile[m, n].type == 209)
					{
						Main.tile[m, n].frameY = (short)((int)Main.tile[m, n].frameY + num);
					}
				}
			}
			NetMessage.SendTileSquare(-1, k + 1, l + 1, 4);
		}
		public static void CheckCannon(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = Main.tile[i, j].frameX / 18;
			int num = 0;
			while (k >= 4)
			{
				num++;
				k -= 4;
			}
			k = i - k;
			int l = Main.tile[i, j].frameY / 18;
			int num2 = 0;
			while (l >= 3)
			{
				num2 += 54;
				l -= 3;
			}
			l = j - l;
			int num3 = 72 * num;
			for (int m = k; m < k + 4; m++)
			{
				int num4 = num2;
				for (int n = l; n < l + 3; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != num3 || (int)Main.tile[m, n].frameY != num4)
					{
						flag = true;
					}
					num4 += 18;
				}
				if (Main.tile[m, l + 3] == null)
				{
					Main.tile[m, l + 3] = new Tile();
				}
				if (!WorldGen.SolidTile2(m, l + 3) && m != k && m != k + 3)
				{
					flag = true;
				}
				num3 += 18;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num5 = k; num5 < k + 4; num5++)
				{
					for (int num6 = l; num6 < l + 3; num6++)
					{
						if ((int)Main.tile[num5, num6].type == type && Main.tile[num5, num6].active())
						{
							WorldGen.KillTile(num5, num6, false, false, false);
						}
					}
				}
				if (num == 0)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 928, 1, false, 0, false);
				}
				if (num == 1)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1337, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num7 = k; num7 < k + 4; num7++)
				{
					for (int num8 = l; num8 < l + 3; num8++)
					{
						WorldGen.TileFrame(num7, num8, false, false);
					}
				}
			}
		}
		public static void PlaceCannon(int x, int y, ushort type, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 3; i++)
			{
				for (int j = y - 2; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1) && i != x - 1 && i != x + 2)
				{
					flag = false;
				}
			}
			int num = 72 * style;
			int num2 = 0;
			if (flag)
			{
				Main.tile[x - 1, y - 2].active(true);
				Main.tile[x - 1, y - 2].frameY = (short)num2;
				Main.tile[x - 1, y - 2].frameX = (short)num;
				Main.tile[x - 1, y - 2].type = type;
				Main.tile[x, y - 2].active(true);
				Main.tile[x, y - 2].frameY = (short)num2;
				Main.tile[x, y - 2].frameX = (short)(18 + num);
				Main.tile[x, y - 2].type = type;
				Main.tile[x + 1, y - 2].active(true);
				Main.tile[x + 1, y - 2].frameY = (short)num2;
				Main.tile[x + 1, y - 2].frameX = (short)(36 + num);
				Main.tile[x + 1, y - 2].type = type;
				Main.tile[x + 2, y - 2].active(true);
				Main.tile[x + 2, y - 2].frameY = (short)num2;
				Main.tile[x + 2, y - 2].frameX = (short)(54 + num);
				Main.tile[x + 2, y - 2].type = type;
				Main.tile[x - 1, y - 1].active(true);
				Main.tile[x - 1, y - 1].frameY = (short)(num2 + 18);
				Main.tile[x - 1, y - 1].frameX = (short)num;
				Main.tile[x - 1, y - 1].type = type;
				Main.tile[x, y - 1].active(true);
				Main.tile[x, y - 1].frameY = (short)(num2 + 18);
				Main.tile[x, y - 1].frameX = (short)(18 + num);
				Main.tile[x, y - 1].type = type;
				Main.tile[x + 1, y - 1].active(true);
				Main.tile[x + 1, y - 1].frameY = (short)(num2 + 18);
				Main.tile[x + 1, y - 1].frameX = (short)(36 + num);
				Main.tile[x + 1, y - 1].type = type;
				Main.tile[x + 2, y - 1].active(true);
				Main.tile[x + 2, y - 1].frameY = (short)(num2 + 18);
				Main.tile[x + 2, y - 1].frameX = (short)(54 + num);
				Main.tile[x + 2, y - 1].type = type;
				Main.tile[x - 1, y].active(true);
				Main.tile[x - 1, y].frameY = (short)(num2 + 36);
				Main.tile[x - 1, y].frameX = (short)num;
				Main.tile[x - 1, y].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = (short)(num2 + 36);
				Main.tile[x, y].frameX = (short)(18 + num);
				Main.tile[x, y].type = type;
				Main.tile[x + 1, y].active(true);
				Main.tile[x + 1, y].frameY = (short)(num2 + 36);
				Main.tile[x + 1, y].frameX = (short)(36 + num);
				Main.tile[x + 1, y].type = type;
				Main.tile[x + 2, y].active(true);
				Main.tile[x + 2, y].frameY = (short)(num2 + 36);
				Main.tile[x + 2, y].frameX = (short)(54 + num);
				Main.tile[x + 2, y].type = type;
			}
		}
		public static void SwitchMB(int i, int j)
		{
			int k;
			for (k = Main.tile[i, j].frameY / 18; k >= 2; k -= 2)
			{
			}
			int num = Main.tile[i, j].frameX / 18;
			if (num >= 2)
			{
				num -= 2;
			}
			int num2 = i - num;
			int num3 = j - k;
			for (int l = num2; l < num2 + 2; l++)
			{
				for (int m = num3; m < num3 + 2; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (Main.tile[l, m].active() && (Main.tile[l, m].type == 139 || Main.tile[l, m].type == 35))
					{
						if (Main.tile[l, m].frameX < 36)
						{
							Tile expr_E9 = Main.tile[l, m];
							expr_E9.frameX = (short)(expr_E9.frameX + 36);
						}
						else
						{
							Tile expr_108 = Main.tile[l, m];
							expr_108.frameX = (short)(expr_108.frameX - 36);
						}
					}
				}
			}
			if (Wiring.running)
			{
				Wiring.SkipWire(num2, num3);
				Wiring.SkipWire(num2 + 1, num3);
				Wiring.SkipWire(num2, num3 + 1);
				Wiring.SkipWire(num2 + 1, num3 + 1);
			}
			NetMessage.SendTileSquare(-1, num2, num3, 3);
		}
		public static void SwitchFountain(int i, int j)
		{
			int k;
			for (k = Main.tile[i, j].frameX / 18; k >= 2; k -= 2)
			{
			}
			int num = Main.tile[i, j].frameY / 18;
			if (num >= 4)
			{
				num -= 4;
			}
			int num2 = i - k;
			int num3 = j - num;
			for (int l = num2; l < num2 + 2; l++)
			{
				for (int m = num3; m < num3 + 4; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (Main.tile[l, m].active() && Main.tile[l, m].type == 207)
					{
						if (Main.tile[l, m].frameY < 72)
						{
							Tile expr_CF = Main.tile[l, m];
							expr_CF.frameY = (short)(expr_CF.frameY + 72);
						}
						else
						{
							Tile expr_EE = Main.tile[l, m];
							expr_EE.frameY = (short)(expr_EE.frameY - 72);
						}
					}
				}
			}
			if (Wiring.running)
			{
				Wiring.SkipWire(num2, num3);
				Wiring.SkipWire(num2, num3 + 1);
				Wiring.SkipWire(num2, num3 + 2);
				Wiring.SkipWire(num2, num3 + 3);
				Wiring.SkipWire(num2 + 1, num3);
				Wiring.SkipWire(num2 + 1, num3 + 1);
				Wiring.SkipWire(num2 + 1, num3 + 2);
				Wiring.SkipWire(num2 + 1, num3 + 3);
			}
			NetMessage.SendTileSquare(-1, num2, num3 + 1, 4);
		}
		public static void CheckMB(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int num = 0;
			int k;
			for (k = Main.tile[i, j].frameY / 18; k >= 2; k -= 2)
			{
				num++;
			}
			int num2 = Main.tile[i, j].frameX / 18;
			int num3 = 0;
			if (num2 >= 2)
			{
				num2 -= 2;
				num3++;
			}
			int num4 = i - num2;
			int num5 = j - k;
			for (int l = num4; l < num4 + 2; l++)
			{
				for (int m = num5; m < num5 + 2; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || (int)Main.tile[l, m].frameX != (l - num4) * 18 + num3 * 36 || (int)Main.tile[l, m].frameY != (m - num5) * 18 + num * 36)
					{
						flag = true;
					}
				}
				if (!Main.tile[l, num5 + 2].nactive())
				{
					flag = true;
				}
				else if (!Main.tileSolid[(int)Main.tile[l, num5 + 2].type] && !Main.tileTable[(int)Main.tile[l, num5 + 2].type])
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int n = num4; n < num4 + 2; n++)
				{
					for (int num6 = num5; num6 < num5 + 3; num6++)
					{
						if ((int)Main.tile[n, num6].type == type && Main.tile[n, num6].active())
						{
							WorldGen.KillTile(n, num6, false, false, false);
						}
					}
				}
				if (type == 35)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1813, 1, false, 0, false);
				}
				else if (num == 28)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1963, 1, false, 0, false);
				}
				else if (num == 29)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1964, 1, false, 0, false);
				}
				else if (num == 30)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1965, 1, false, 0, false);
				}
				else if (num == 31)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2742, 1, false, 0, false);
				}
				else if (num >= 13)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1596 + num - 13, 1, false, 0, false);
				}
				else
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 562 + num, 1, false, 0, false);
				}
				for (int num7 = num4 - 1; num7 < num4 + 3; num7++)
				{
					for (int num8 = num5 - 1; num8 < num5 + 3; num8++)
					{
						WorldGen.TileFrame(num7, num8, false, false);
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static void PlaceMB(int X, int y, ushort type, int style)
		{
			int num = X + 1;
			if (num < 5 || num > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = num - 1; i < num + 1; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!Main.tile[i, y + 1].active() || Main.tile[i, y + 1].halfBrick() || (!Main.tileSolid[(int)Main.tile[i, y + 1].type] && !Main.tileTable[(int)Main.tile[i, y + 1].type]))
				{
					flag = false;
				}
			}
			if (flag)
			{
				Main.tile[num - 1, y - 1].active(true);
				Main.tile[num - 1, y - 1].frameY = (short)(style * 36);
				Main.tile[num - 1, y - 1].frameX = 0;
				Main.tile[num - 1, y - 1].type = type;
				Main.tile[num, y - 1].active(true);
				Main.tile[num, y - 1].frameY = (short)(style * 36);
				Main.tile[num, y - 1].frameX = 18;
				Main.tile[num, y - 1].type = type;
				Main.tile[num - 1, y].active(true);
				Main.tile[num - 1, y].frameY = (short)(style * 36 + 18);
				Main.tile[num - 1, y].frameX = 0;
				Main.tile[num - 1, y].type = type;
				Main.tile[num, y].active(true);
				Main.tile[num, y].frameY = (short)(style * 36 + 18);
				Main.tile[num, y].frameX = 18;
				Main.tile[num, y].type = type;
			}
		}
		public static void Place2x2(int x, int superY, ushort type, int style)
		{
			int num = superY;
			if (type == 95 || type == 126)
			{
				num++;
			}
			if (x < 5 || x > Main.maxTilesX - 5 || num < 5 || num > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 1; i++)
			{
				for (int j = num - 1; j < num + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
					if (type == 98 && Main.tile[i, j].liquid > 0)
					{
						flag = false;
					}
				}
				if (type == 95 || type == 126)
				{
					if (Main.tile[i, num - 2] == null)
					{
						Main.tile[i, num - 2] = new Tile();
					}
					if (!Main.tile[i, num - 2].nactive() || !Main.tileSolid[(int)Main.tile[i, num - 2].type] || Main.tileSolidTop[(int)Main.tile[i, num - 2].type])
					{
						flag = false;
					}
				}
				else if (type != 132)
				{
					if (Main.tile[i, num + 1] == null)
					{
						Main.tile[i, num + 1] = new Tile();
					}
					if (!Main.tile[i, num + 1].nactive() || (!WorldGen.SolidTile2(i, num + 1) && !Main.tileTable[(int)Main.tile[i, num + 1].type]))
					{
						flag = false;
					}
				}
			}
			if (type == 132 && flag)
			{
				bool flag2 = true;
				if (Main.tile[x - 1, num + 1] == null)
				{
					Main.tile[x - 1, num + 1] = new Tile();
				}
				if (Main.tile[x, num + 1] == null)
				{
					Main.tile[x, num + 1] = new Tile();
				}
				if (!Main.tile[x - 1, num + 1].nactive() || (!WorldGen.SolidTile2(x - 1, num + 1) && !Main.tileTable[(int)Main.tile[x - 1, num + 1].type]))
				{
					flag2 = false;
				}
				if (!Main.tile[x, num + 1].nactive() || (!WorldGen.SolidTile2(x, num + 1) && !Main.tileTable[(int)Main.tile[x, num + 1].type]))
				{
					flag2 = false;
				}
				if (!flag2 && (Main.tile[x - 1, num - 1].wall < 1 || Main.tile[x, num - 1].wall < 1 || Main.tile[x - 1, num].wall < 1 || Main.tile[x - 1, num].wall < 1))
				{
					flag = false;
				}
			}
			if (flag)
			{
				Main.tile[x - 1, num - 1].active(true);
				Main.tile[x - 1, num - 1].frameY = (short)(style * 36);
				Main.tile[x - 1, num - 1].frameX = 0;
				Main.tile[x - 1, num - 1].type = type;
				Main.tile[x, num - 1].active(true);
				Main.tile[x, num - 1].frameY = (short)(style * 36);
				Main.tile[x, num - 1].frameX = 18;
				Main.tile[x, num - 1].type = type;
				Main.tile[x - 1, num].active(true);
				Main.tile[x - 1, num].frameY = (short)(style * 36 + 18);
				Main.tile[x - 1, num].frameX = 0;
				Main.tile[x - 1, num].type = type;
				Main.tile[x, num].active(true);
				Main.tile[x, num].frameY = (short)(style * 36 + 18);
				Main.tile[x, num].frameX = 18;
				Main.tile[x, num].type = type;
			}
		}
		public static void Place3x4(int x, int y, ushort type, int style)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 2; i++)
			{
				for (int j = y - 3; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1))
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num = style * 54;
				for (int k = -3; k <= 0; k++)
				{
					short frameY = (short)((3 + k) * 18);
					Main.tile[x - 1, y + k].active(true);
					Main.tile[x - 1, y + k].frameY = frameY;
					Main.tile[x - 1, y + k].frameX = (short)num;
					Main.tile[x - 1, y + k].type = type;
					Main.tile[x, y + k].active(true);
					Main.tile[x, y + k].frameY = frameY;
					Main.tile[x, y + k].frameX = (short)(num + 18);
					Main.tile[x, y + k].type = type;
					Main.tile[x + 1, y + k].active(true);
					Main.tile[x + 1, y + k].frameY = frameY;
					Main.tile[x + 1, y + k].frameX = (short)(num + 36);
					Main.tile[x + 1, y + k].type = type;
				}
			}
		}
		public static void Place3x1(int x, int y, ushort type, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 2; i++)
			{
				if (Main.tile[i, y] == null)
				{
					Main.tile[i, y] = new Tile();
				}
				if (Main.tile[i, y].active())
				{
					flag = false;
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1))
				{
					flag = false;
				}
			}
			if (flag)
			{
				short num = (short)(54 * style);
				Main.tile[x - 1, y].active(true);
				Main.tile[x - 1, y].frameY = 0;
				Main.tile[x - 1, y].frameX = num;
				Main.tile[x - 1, y].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = 0;
				Main.tile[x, y].frameX = (short)(num + 18);
				Main.tile[x, y].type = type;
				Main.tile[x + 1, y].active(true);
				Main.tile[x + 1, y].frameY = 0;
				Main.tile[x + 1, y].frameX = (short)(num + 36);
				Main.tile[x + 1, y].type = type;
			}
		}
		public static void Place3x2(int x, int y, ushort type, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = false;
			bool flag2 = true;
			if (type == 14 && style == 25)
			{
				flag = true;
			}
			int num = y - 1;
			if (flag)
			{
				num = y;
			}
			for (int i = x - 1; i < x + 2; i++)
			{
				for (int j = num; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag2 = false;
					}
					if (type == 215 && Main.tile[i, j].liquid > 0)
					{
						flag2 = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (type == 285 || type == 286 || type == 298 || type == 299 || type == 310)
				{
					if (!WorldGen.SolidTile2(i, y + 1) && (!Main.tile[i, y + 1].nactive() || !Main.tileSolidTop[(int)Main.tile[i, y + 1].type] || Main.tile[i, y + 1].frameY != 0))
					{
						flag2 = false;
					}
				}
				else if (!WorldGen.SolidTile2(i, y + 1))
				{
					flag2 = false;
				}
			}
			if (flag2)
			{
				short num2 = (short)(54 * style);
				if (flag)
				{
					Main.tile[x - 1, y].active(true);
					Main.tile[x - 1, y].frameY = 0;
					Main.tile[x - 1, y].frameX = num2;
					Main.tile[x - 1, y].type = type;
					Main.tile[x, y].active(true);
					Main.tile[x, y].frameY = 0;
					Main.tile[x, y].frameX = (short)(num2 + 18);
					Main.tile[x, y].type = type;
					Main.tile[x + 1, y].active(true);
					Main.tile[x + 1, y].frameY = 0;
					Main.tile[x + 1, y].frameX = (short)(num2 + 36);
					Main.tile[x + 1, y].type = type;
					return;
				}
				Main.tile[x - 1, y - 1].active(true);
				Main.tile[x - 1, y - 1].frameY = 0;
				Main.tile[x - 1, y - 1].frameX = num2;
				Main.tile[x - 1, y - 1].type = type;
				Main.tile[x, y - 1].active(true);
				Main.tile[x, y - 1].frameY = 0;
				Main.tile[x, y - 1].frameX = (short)(num2 + 18);
				Main.tile[x, y - 1].type = type;
				Main.tile[x + 1, y - 1].active(true);
				Main.tile[x + 1, y - 1].frameY = 0;
				Main.tile[x + 1, y - 1].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y - 1].type = type;
				Main.tile[x - 1, y].active(true);
				Main.tile[x - 1, y].frameY = 18;
				Main.tile[x - 1, y].frameX = num2;
				Main.tile[x - 1, y].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = 18;
				Main.tile[x, y].frameX = (short)(num2 + 18);
				Main.tile[x, y].type = type;
				Main.tile[x + 1, y].active(true);
				Main.tile[x + 1, y].frameY = 18;
				Main.tile[x + 1, y].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y].type = type;
			}
		}
		public static void Place2x2Style(int x, int y, ushort type, int style = 0)
		{
			if (x < 5 || x > Main.maxTilesX - 5 || y < 5 || y > Main.maxTilesY - 5)
			{
				return;
			}
			short num = 0;
			if (type == 254)
			{
				num = (short)(x % 12 / 2);
				num = (short)(num * 36);
			}
			bool flag = true;
			for (int i = x - 1; i < x + 1; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile(i, y + 1))
				{
					flag = false;
				}
				if (type == 254 && Main.tile[i, y + 1].type != 2 && Main.tile[i, y + 1].type != 109)
				{
					flag = false;
				}
			}
			if (flag)
			{
				short num2 = (short)(36 * style);
				Main.tile[x - 1, y - 1].active(true);
				Main.tile[x - 1, y - 1].frameY = num;
				Main.tile[x - 1, y - 1].frameX = num2;
				Main.tile[x - 1, y - 1].type = type;
				Main.tile[x, y - 1].active(true);
				Main.tile[x, y - 1].frameY = num;
				Main.tile[x, y - 1].frameX = (short)(num2 + 18);
				Main.tile[x, y - 1].type = type;
				Main.tile[x - 1, y].active(true);
				Main.tile[x - 1, y].frameY = (short)(num + 18);
				Main.tile[x - 1, y].frameX = num2;
				Main.tile[x - 1, y].type = type;
				Main.tile[x, y].active(true);
				Main.tile[x, y].frameY = (short)(num + 18);
				Main.tile[x, y].frameX = (short)(num2 + 18);
				Main.tile[x, y].type = type;
			}
		}
		public static void Check2x2Style(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k;
			for (k = Main.tile[i, j].frameY / 18; k > 1; k -= 2)
			{
			}
			int num = j - k;
			int l = Main.tile[i, j].frameX / 18;
			int num2 = 0;
			while (l > 1)
			{
				l -= 2;
				num2++;
			}
			l = i - l;
			int num3 = num2 * 36;
			for (int m = l; m < l + 2; m++)
			{
				for (int n = num; n < num + 2; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != (m - l) * 18 + num3)
					{
						flag = true;
					}
				}
				if (!WorldGen.SolidTile(m, num + 2))
				{
					flag = true;
				}
			}
			if (flag)
			{
				int frameX = (int)Main.tile[i, j].frameX;
				WorldGen.destroyObject = true;
				for (int num4 = l; num4 < l + 2; num4++)
				{
					for (int num5 = num; num5 < num + 2; num5++)
					{
						if (Main.tile[num4, num5] == null)
						{
							Main.tile[num4, num5] = new Tile();
						}
						if ((int)Main.tile[num4, num5].type == type && Main.tile[num4, num5].active())
						{
							WorldGen.KillTile(num4, num5, false, false, false);
						}
					}
				}
				if (type == 254)
				{
					if (frameX >= 72)
					{
						if (frameX < 108)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 1725, WorldGen.genRand.Next(1, 3), false, 0, false);
							}
						}
						else if (frameX < 144)
						{
							Item.NewItem(i * 16, j * 16, 32, 32, 1725, WorldGen.genRand.Next(2, 6), false, 0, false);
						}
						else
						{
							Item.NewItem(i * 16, j * 16, 32, 32, 1725, WorldGen.genRand.Next(5, 11), false, 0, false);
							if (Main.halloween && Main.rand.Next(200) == 0)
							{
								Item.NewItem(i * 16, j * 16, 32, 32, 1799, 1, false, 0, false);
							}
						}
					}
				}
				else if (type == 96)
				{
					if (num2 == 0)
					{
						Item.NewItem(i * 16, j * 16, 32, 32, 345, 1, false, 0, false);
					}
					if (num2 == 1)
					{
						Item.NewItem(i * 16, j * 16, 32, 32, 1791, 1, false, 0, false);
					}
				}
				WorldGen.destroyObject = false;
				for (int num6 = l - 1; num6 < l + 3; num6++)
				{
					for (int num7 = num - 1; num7 < num + 3; num7++)
					{
						WorldGen.TileFrame(num6, num7, false, false);
					}
				}
			}
		}
		public static void PlacePumpkin(int x, int superY)
		{
			ushort type = 254;
			int num = WorldGen.genRand.Next(6) * 36;
			if (x < 5 || x > Main.maxTilesX - 5 || superY < 5 || superY > Main.maxTilesY - 5)
			{
				return;
			}
			bool flag = true;
			for (int i = x - 1; i < x + 1; i++)
			{
				for (int j = superY - 1; j < superY + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active() && Main.tile[i, j].type != 3 && Main.tile[i, j].type != 73 && Main.tile[i, j].type != 113 && Main.tile[i, j].type != 110 && (Main.tile[i, j].type != 185 || Main.tile[i, j].frameY != 0))
					{
						flag = false;
					}
					if (Main.tile[i, j].liquid > 0)
					{
						flag = false;
					}
				}
				if (!WorldGen.SolidTile(i, superY + 1) || (Main.tile[i, superY + 1].type != 2 && Main.tile[i, superY + 1].type != 109))
				{
					flag = false;
				}
			}
			if (flag)
			{
				Main.tile[x - 1, superY - 1].active(true);
				Main.tile[x - 1, superY - 1].frameY = (short)num;
				Main.tile[x - 1, superY - 1].frameX = 0;
				Main.tile[x - 1, superY - 1].type = type;
				Main.tile[x, superY - 1].active(true);
				Main.tile[x, superY - 1].frameY = (short)num;
				Main.tile[x, superY - 1].frameX = 18;
				Main.tile[x, superY - 1].type = type;
				Main.tile[x - 1, superY].active(true);
				Main.tile[x - 1, superY].frameY = (short)(num + 18);
				Main.tile[x - 1, superY].frameX = 0;
				Main.tile[x - 1, superY].type = type;
				Main.tile[x, superY].active(true);
				Main.tile[x, superY].frameY = (short)(num + 18);
				Main.tile[x, superY].frameX = 18;
				Main.tile[x, superY].type = type;
			}
		}
		public static void GrowPumpkin(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k;
			for (k = Main.tile[i, j].frameY / 18; k > 1; k -= 2)
			{
			}
			int num = j - k;
			int l = Main.tile[i, j].frameX / 18;
			int num2 = 0;
			while (l > 1)
			{
				l -= 2;
				num2++;
			}
			l = i - l;
			int num3 = num2 * 36;
			if (num2 >= 4)
			{
				return;
			}
			for (int m = l; m < l + 2; m++)
			{
				for (int n = num; n < num + 2; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != (m - l) * 18 + num3)
					{
						flag = true;
					}
				}
				if (!WorldGen.SolidTile(m, num + 2) || (Main.tile[m, num + 2].type != 2 && Main.tile[m, num + 2].type != 109))
				{
					flag = true;
				}
			}
			if (!flag)
			{
				for (int num4 = l; num4 < l + 2; num4++)
				{
					for (int num5 = num; num5 < num + 2; num5++)
					{
						if (Main.tile[num4, num5] == null)
						{
							Main.tile[num4, num5] = new Tile();
						}
						if ((int)Main.tile[num4, num5].type == type && Main.tile[num4, num5].active())
						{
							Tile expr_1AD = Main.tile[num4, num5];
							expr_1AD.frameX = (short)(expr_1AD.frameX + 36);
						}
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendTileSquare(-1, l, num, 4);
			}
		}
		public static void FixChands()
		{
			for (int i = 5; i < Main.maxTilesX - 5; i++)
			{
				for (int j = 5; j < Main.maxTilesY - 5; j++)
				{
					if (Main.tile[i, j].active())
					{
						int type = (int)Main.tile[i, j].type;
						if (Main.tile[i, j].active() && (type == 35 || type == 36 || type == 170 || type == 171 || type == 172))
						{
							WorldGen.FixChand(i, j);
						}
					}
				}
			}
		}
		public static void FixChand(int i, int j)
		{
			int num = 0;
			int type = (int)Main.tile[i, j].type;
			if (Main.tile[i, j].active())
			{
				if (type == 35)
				{
					num = 1;
				}
				if (type == 36)
				{
					num = 2;
				}
				if (type == 170)
				{
					num = 3;
				}
				if (type == 171)
				{
					num = 4;
				}
				if (type == 172)
				{
					num = 5;
				}
			}
			if (num > 0)
			{
				int k;
				for (k = Main.tile[i, j].frameX / 18; k >= 3; k -= 3)
				{
				}
				if (k >= 3)
				{
					k -= 3;
				}
				k = i - k;
				int num2 = j + Main.tile[i, j].frameY / 18 * -1;
				for (int l = k; l < k + 3; l++)
				{
					for (int m = num2; m < num2 + 3; m++)
					{
						if (Main.tile[l, m] == null)
						{
							Main.tile[l, m] = new Tile();
						}
						if (Main.tile[l, m].active() && (int)Main.tile[l, m].type == type)
						{
							Main.tile[l, m].type = 34;
							Main.tile[l, m].frameY = (short)((int)Main.tile[l, m].frameY + num * 54);
						}
					}
				}
			}
		}
		public static void PlaceChand(int x, int y, ushort type, int style = 0)
		{
			bool flag = true;
			int num = 0;
			for (int i = x - 1; i < x + 2; i++)
			{
				for (int j = y; j < y + 3; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
			}
			if (Main.tile[x, y - 1] == null)
			{
				Main.tile[x, y - 1] = new Tile();
			}
			if (!Main.tile[x, y - 1].nactive() || !Main.tileSolid[(int)Main.tile[x, y - 1].type] || Main.tileSolidTop[(int)Main.tile[x, y - 1].type])
			{
				flag = false;
			}
			if (flag)
			{
				int num2 = 0;
				int num3 = style * 18 * 3;
				Main.tile[x - 1, y + num].active(true);
				Main.tile[x - 1, y + num].frameY = (short)num3;
				Main.tile[x - 1, y + num].frameX = (short)num2;
				Main.tile[x - 1, y + num].type = type;
				Main.tile[x, y + num].active(true);
				Main.tile[x, y + num].frameY = (short)num3;
				Main.tile[x, y + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + num].type = type;
				Main.tile[x + 1, y + num].active(true);
				Main.tile[x + 1, y + num].frameY = (short)num3;
				Main.tile[x + 1, y + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + num].type = type;
				Main.tile[x - 1, y + 1 + num].active(true);
				Main.tile[x - 1, y + 1 + num].frameY = (short)(num3 + 18);
				Main.tile[x - 1, y + 1 + num].frameX = (short)num2;
				Main.tile[x - 1, y + 1 + num].type = type;
				Main.tile[x, y + 1 + num].active(true);
				Main.tile[x, y + 1 + num].frameY = (short)(num3 + 18);
				Main.tile[x, y + 1 + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + 1 + num].type = type;
				Main.tile[x + 1, y + 1 + num].active(true);
				Main.tile[x + 1, y + 1 + num].frameY = (short)(num3 + 18);
				Main.tile[x + 1, y + 1 + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + 1 + num].type = type;
				Main.tile[x - 1, y + 2 + num].active(true);
				Main.tile[x - 1, y + 2 + num].frameY = (short)(num3 + 36);
				Main.tile[x - 1, y + 2 + num].frameX = (short)num2;
				Main.tile[x - 1, y + 2 + num].type = type;
				Main.tile[x, y + 2 + num].active(true);
				Main.tile[x, y + 2 + num].frameY = (short)(num3 + 36);
				Main.tile[x, y + 2 + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + 2 + num].type = type;
				Main.tile[x + 1, y + 2 + num].active(true);
				Main.tile[x + 1, y + 2 + num].frameY = (short)(num3 + 36);
				Main.tile[x + 1, y + 2 + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + 2 + num].type = type;
			}
		}
		public static void CheckChand(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = Main.tile[i, j].frameX / 18;
			int num = 0;
			while (k >= 3)
			{
				num++;
				k -= 3;
			}
			int num2 = i - k;
			int num3 = 54 * num;
			if (k >= 3)
			{
				k -= 3;
			}
			k = i - k;
			int l = Main.tile[i, j].frameY / 18;
			int num4 = 0;
			while (l >= 3)
			{
				num4++;
				l -= 3;
			}
			int num5 = 54 * num4;
			if (l >= 3)
			{
				l -= 3;
			}
			l = j - l;
			for (int m = k; m < k + 3; m++)
			{
				for (int n = l; n < l + 3; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || (int)Main.tile[m, n].frameX != (m - num2) * 18 + num3 || (int)Main.tile[m, n].frameY != (n - l) * 18 + num5)
					{
						flag = true;
					}
				}
			}
			if (Main.tile[k + 1, l - 1] == null)
			{
				Main.tile[k + 1, l - 1] = new Tile();
			}
			if (!Main.tile[k + 1, l - 1].nactive() || !Main.tileSolid[(int)Main.tile[k + 1, l - 1].type] || Main.tileSolidTop[(int)Main.tile[k + 1, l - 1].type])
			{
				flag = true;
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num6 = k; num6 < k + 3; num6++)
				{
					for (int num7 = l; num7 < l + 3; num7++)
					{
						if ((int)Main.tile[num6, num7].type == type && Main.tile[num6, num7].active())
						{
							WorldGen.KillTile(num6, num7, false, false, false);
						}
					}
				}
				if (type == 34)
				{
					int type2 = 0;
					if (num4 == 0)
					{
						type2 = 106;
					}
					if (num4 == 1)
					{
						type2 = 107;
					}
					if (num4 == 2)
					{
						type2 = 108;
					}
					if (num4 == 3)
					{
						type2 = 710;
					}
					if (num4 == 4)
					{
						type2 = 711;
					}
					if (num4 == 5)
					{
						type2 = 712;
					}
					if (num4 == 6)
					{
						type2 = 1812;
					}
					if (num4 >= 7 && num4 <= 17)
					{
						type2 = 2055 + num4 - 7;
					}
					if (num4 >= 18 && num4 <= 21)
					{
						type2 = 2141 + num4 - 18;
					}
					if (num4 == 22)
					{
						type2 = 2224;
					}
					if (num4 == 23)
					{
						type2 = 2525;
					}
					if (num4 == 24)
					{
						type2 = 2543;
					}
					if (num4 == 25)
					{
						type2 = 2558;
					}
					if (num4 == 26)
					{
						type2 = 2573;
					}
					if (num4 == 27)
					{
						type2 = 2652;
					}
					if (num4 == 28)
					{
						type2 = 2653;
					}
					if (num4 == 29)
					{
						type2 = 2654;
					}
					if (num4 == 30)
					{
						type2 = 2655;
					}
					if (num4 == 31)
					{
						type2 = 2656;
					}
					if (num4 == 32)
					{
						type2 = 2657;
					}
					Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				}
				WorldGen.destroyObject = false;
				for (int num8 = k - 1; num8 < k + 4; num8++)
				{
					for (int num9 = l - 1; num9 < l + 4; num9++)
					{
						WorldGen.TileFrame(num8, num9, false, false);
					}
				}
			}
		}
		public static void Check3x3(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = Main.tile[i, j].frameX / 18;
			int num = 0;
			while (k >= 3)
			{
				num++;
				k -= 3;
			}
			int num2 = i - k;
			int num3 = 54 * num;
			if (k >= 3)
			{
				k -= 3;
			}
			k = i - k;
			int num4 = j + Main.tile[i, j].frameY / 18 * -1;
			for (int l = k; l < k + 3; l++)
			{
				for (int m = num4; m < num4 + 3; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || (int)Main.tile[l, m].frameX != (l - num2) * 18 + num3 || (int)Main.tile[l, m].frameY != (m - num4) * 18)
					{
						flag = true;
					}
				}
			}
			if (type == 106 || type == 212 || type == 219 || type == 220 || type == 228 || type == 231 || type == 243 || type == 247 || type == 283 || (type >= 300 && type <= 308))
			{
				for (int n = k; n < k + 3; n++)
				{
					if (Main.tile[n, num4 + 3] == null)
					{
						Main.tile[n, num4 + 3] = new Tile();
					}
					if (!WorldGen.SolidTile2(n, num4 + 3))
					{
						flag = true;
						break;
					}
				}
			}
			else
			{
				if (Main.tile[k + 1, num4 - 1] == null)
				{
					Main.tile[k + 1, num4 - 1] = new Tile();
				}
				if (!Main.tile[k + 1, num4 - 1].nactive() || !Main.tileSolid[(int)Main.tile[k + 1, num4 - 1].type] || Main.tileSolidTop[(int)Main.tile[k + 1, num4 - 1].type])
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num5 = k; num5 < k + 3; num5++)
				{
					for (int num6 = num4; num6 < num4 + 3; num6++)
					{
						if ((int)Main.tile[num5, num6].type == type && Main.tile[num5, num6].active())
						{
							WorldGen.KillTile(num5, num6, false, false, false);
						}
					}
				}
				if (type == 106)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 363, 1, false, 0, false);
				}
				else if (type == 243)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1430, 1, false, 0, false);
				}
				else if (type == 212)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 951, 1, false, 0, false);
				}
				else if (type == 219)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 997, 1, false, 0, false);
				}
				else if (type == 220)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 998, 1, false, 0, false);
				}
				else if (type == 228)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1120, 1, false, 0, false);
				}
				else if (type == 247)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 1551, 1, false, 0, false);
				}
				else if (type == 283)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2172, 1, false, 0, false);
				}
				else if (type >= 300 && type <= 306)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2192 + type - 300, 1, false, 0, false);
				}
				else if (type == 307)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2203, 1, false, 0, false);
				}
				else if (type == 308)
				{
					Item.NewItem(i * 16, j * 16, 32, 32, 2204, 1, false, 0, false);
				}
				else if (type == 231)
				{
					int num7 = (i + 1) * 16 + 8;
					int num8 = j * 16;
					Gore.NewGore(new Vector2((float)num7, (float)num8), default(Vector2), 300, 1f);
					Gore.NewGore(new Vector2((float)num7, (float)(num8 + 8)), default(Vector2), 301, 1f);
					Gore.NewGore(new Vector2((float)num7, (float)(num8 + 16)), default(Vector2), 302, 1f);
					float num9 = (float)(i * 16);
					float num10 = (float)(j * 16);
					float num11 = -1f;
					int plr = 0;
					for (int num12 = 0; num12 < 255; num12++)
					{
						if (Main.player[num12].active && !Main.player[num12].dead)
						{
							float num13 = Math.Abs(Main.player[num12].position.X - num9) + Math.Abs(Main.player[num12].position.Y - num10);
							if (num13 < num11 || num11 == -1f)
							{
								plr = num12;
								num11 = num13;
							}
						}
					}
					NPC.SpawnOnPlayer(plr, 222);
				}
				WorldGen.destroyObject = false;
				for (int num14 = k - 1; num14 < k + 4; num14++)
				{
					for (int num15 = num4 - 1; num15 < num4 + 4; num15++)
					{
						WorldGen.TileFrame(num14, num15, false, false);
					}
				}
			}
		}
		public static void Place3x3(int x, int y, ushort type, int style = 0)
		{
			bool flag = true;
			int num = 0;
			if (type == 106 || type == 212 || type == 219 || type == 220 || type == 228 || type == 231 || type == 243 || type == 247 || type == 283 || (type >= 300 && type <= 308))
			{
				num = -2;
				for (int i = x - 1; i < x + 2; i++)
				{
					for (int j = y - 2; j < y + 1; j++)
					{
						if (Main.tile[i, j] == null)
						{
							Main.tile[i, j] = new Tile();
						}
						if (Main.tile[i, j].active())
						{
							flag = false;
						}
					}
				}
				for (int k = x - 1; k < x + 2; k++)
				{
					if (Main.tile[k, y + 1] == null)
					{
						Main.tile[k, y + 1] = new Tile();
					}
					if (!WorldGen.SolidTile2(k, y + 1))
					{
						flag = false;
						break;
					}
				}
			}
			else
			{
				for (int l = x - 1; l < x + 2; l++)
				{
					for (int m = y; m < y + 3; m++)
					{
						if (Main.tile[l, m] == null)
						{
							Main.tile[l, m] = new Tile();
						}
						if (Main.tile[l, m].active())
						{
							flag = false;
						}
					}
				}
				if (Main.tile[x, y - 1] == null)
				{
					Main.tile[x, y - 1] = new Tile();
				}
				if (!Main.tile[x, y - 1].nactive() || !Main.tileSolid[(int)Main.tile[x, y - 1].type] || Main.tileSolidTop[(int)Main.tile[x, y - 1].type])
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num2 = style * 18 * 3;
				Main.tile[x - 1, y + num].active(true);
				Main.tile[x - 1, y + num].frameY = 0;
				Main.tile[x - 1, y + num].frameX = (short)num2;
				Main.tile[x - 1, y + num].type = type;
				Main.tile[x, y + num].active(true);
				Main.tile[x, y + num].frameY = 0;
				Main.tile[x, y + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + num].type = type;
				Main.tile[x + 1, y + num].active(true);
				Main.tile[x + 1, y + num].frameY = 0;
				Main.tile[x + 1, y + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + num].type = type;
				Main.tile[x - 1, y + 1 + num].active(true);
				Main.tile[x - 1, y + 1 + num].frameY = 18;
				Main.tile[x - 1, y + 1 + num].frameX = (short)num2;
				Main.tile[x - 1, y + 1 + num].type = type;
				Main.tile[x, y + 1 + num].active(true);
				Main.tile[x, y + 1 + num].frameY = 18;
				Main.tile[x, y + 1 + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + 1 + num].type = type;
				Main.tile[x + 1, y + 1 + num].active(true);
				Main.tile[x + 1, y + 1 + num].frameY = 18;
				Main.tile[x + 1, y + 1 + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + 1 + num].type = type;
				Main.tile[x - 1, y + 2 + num].active(true);
				Main.tile[x - 1, y + 2 + num].frameY = 36;
				Main.tile[x - 1, y + 2 + num].frameX = (short)num2;
				Main.tile[x - 1, y + 2 + num].type = type;
				Main.tile[x, y + 2 + num].active(true);
				Main.tile[x, y + 2 + num].frameY = 36;
				Main.tile[x, y + 2 + num].frameX = (short)(num2 + 18);
				Main.tile[x, y + 2 + num].type = type;
				Main.tile[x + 1, y + 2 + num].active(true);
				Main.tile[x + 1, y + 2 + num].frameY = 36;
				Main.tile[x + 1, y + 2 + num].frameX = (short)(num2 + 36);
				Main.tile[x + 1, y + 2 + num].type = type;
			}
		}
		public static void PlaceSunflower(int x, int y, ushort type = 27)
		{
			if ((double)y > Main.worldSurface - 1.0)
			{
				return;
			}
			bool flag = true;
			for (int i = x; i < x + 2; i++)
			{
				for (int j = y - 3; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active() || Main.tile[i, j].wall > 0)
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!Main.tile[i, y + 1].nactive() || Main.tile[i, y + 1].halfBrick() || Main.tile[i, y + 1].slope() != 0 || (Main.tile[i, y + 1].type != 2 && Main.tile[i, y + 1].type != 109))
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num = WorldGen.genRand.Next(3);
				for (int k = 0; k < 2; k++)
				{
					for (int l = -3; l < 1; l++)
					{
						int num2 = k * 18 + WorldGen.genRand.Next(3) * 36;
						if (l <= -2)
						{
							num2 = k * 18 + num * 36;
						}
						int num3 = (l + 3) * 18;
						Main.tile[x + k, y + l].active(true);
						Main.tile[x + k, y + l].frameX = (short)num2;
						Main.tile[x + k, y + l].frameY = (short)num3;
						Main.tile[x + k, y + l].type = type;
					}
				}
			}
		}
		public static void FixSunflowers()
		{
			for (int i = 5; i < Main.maxTilesX - 5; i++)
			{
				int num = 5;
				while ((double)num < Main.worldSurface)
				{
					if (Main.tile[i, num].active() && Main.tile[i, num].type == 27)
					{
						WorldGen.FixSunflower(i, num);
					}
					num++;
				}
			}
		}
		public static void FixSunflower(int i, int j)
		{
			if (Main.tile[i, j].type != 27)
			{
				return;
			}
			int k = 0;
			k += Main.tile[i, j].frameX / 18;
			int num = j + Main.tile[i, j].frameY / 18 * -1;
			while (k > 1)
			{
				k -= 2;
			}
			k *= -1;
			k += i;
			int num2 = WorldGen.genRand.Next(3) * 36;
			int num3 = 0;
			for (int l = k; l < k + 2; l++)
			{
				for (int m = num; m < num + 4; m++)
				{
					Main.tile[l, m].frameX = (short)(num3 + num2);
				}
				num3 += 18;
			}
		}
		public static void CheckSunflower(int i, int j, int type = 27)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = 0;
			k += Main.tile[i, j].frameX / 18;
			int num = j + Main.tile[i, j].frameY / 18 * -1;
			while (k > 1)
			{
				k -= 2;
			}
			k *= -1;
			k += i;
			for (int l = k; l < k + 2; l++)
			{
				for (int m = num; m < num + 4; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					int n;
					for (n = Main.tile[l, m].frameX / 18; n > 1; n -= 2)
					{
					}
					if (!Main.tile[l, m].nactive() || (int)Main.tile[l, m].type != type || n != l - k || (int)Main.tile[l, m].frameY != (m - num) * 18)
					{
						flag = true;
					}
				}
				if (Main.tile[l, num + 4] == null)
				{
					Main.tile[l, num + 4] = new Tile();
				}
				if (!Main.tile[l, num + 4].nactive() || (Main.tile[l, num + 4].type != 2 && Main.tile[l, num + 4].type != 109))
				{
					flag = true;
				}
				if (!WorldGen.SolidTile(l, num + 4))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				for (int num2 = k; num2 < k + 2; num2++)
				{
					for (int num3 = num; num3 < num + 4; num3++)
					{
						if ((int)Main.tile[num2, num3].type == type && Main.tile[num2, num3].active())
						{
							WorldGen.KillTile(num2, num3, false, false, false);
						}
					}
				}
				Item.NewItem(i * 16, j * 16, 32, 32, 63, 1, false, 0, false);
				WorldGen.destroyObject = false;
			}
		}
		public static void CheckDye(int x, int y)
		{
			int num = Main.tile[x, y].frameX / 34;
			if (num == 7)
			{
				if (!WorldGen.SolidTile(x, y - 1))
				{
					WorldGen.KillTile(x, y, false, false, false);
					return;
				}
			}
			else if (num == 6)
			{
				if (!Main.tile[x, y + 1].nactive() || Main.tile[x, y + 1].type != 80)
				{
					WorldGen.KillTile(x, y, false, false, false);
					return;
				}
			}
			else if (!WorldGen.SolidTile(x, y + 1))
			{
				WorldGen.KillTile(x, y, false, false, false);
			}
		}
		public static void PlaceDye(int x, int y, int style)
		{
			bool flag = false;
			if (style == 7)
			{
				if (Main.tile[x, y + 1].active() && Main.tile[x, y + 1].type != 3 && Main.tile[x, y + 1].type != 51 && Main.tile[x, y + 1].type != 61 && Main.tile[x, y + 1].type != 73 && Main.tile[x, y + 1].type != 74 && Main.tile[x, y + 1].type != 184)
				{
					return;
				}
				if (WorldGen.SolidTile(x, y - 1) && !Main.tile[x, y + 1].active())
				{
					flag = true;
				}
			}
			else
			{
				if (Main.tile[x, y - 1].active() && Main.tile[x, y - 1].type != 3 && Main.tile[x, y - 1].type != 51 && Main.tile[x, y - 1].type != 61 && Main.tile[x, y - 1].type != 73 && Main.tile[x, y - 1].type != 74 && Main.tile[x, y - 1].type != 184)
				{
					return;
				}
				if (style == 6)
				{
					if (Main.tile[x, y + 1].nactive() && Main.tile[x, y + 1].type == 80 && !Main.tile[x - 1, y + 1].active() && !Main.tile[x + 1, y + 1].active())
					{
						flag = true;
					}
				}
				else if (WorldGen.SolidTile(x, y + 1) && !Main.tile[x, y - 1].active())
				{
					if (style == 5)
					{
						if (Main.tile[x, y].liquid == 255)
						{
							flag = true;
						}
					}
					else if (Main.tile[x, y].liquid == 0)
					{
						if (style == 3 || style == 4)
						{
							if (Main.tile[x, y].wall == 0)
							{
								flag = true;
							}
						}
						else
						{
							flag = true;
						}
					}
				}
			}
			if (flag)
			{
				Main.tile[x, y].type = 227;
				Main.tile[x, y].active(true);
				Main.tile[x, y].halfBrick(false);
				Main.tile[x, y].slope(0);
				Main.tile[x, y].frameY = 0;
				Main.tile[x, y].frameX = (short)(34 * style);
			}
		}
		public static bool PlacePot(int x, int y, ushort type = 28, int style = 0)
		{
			bool flag = true;
			for (int i = x; i < x + 2; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						flag = false;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!Main.tile[i, y + 1].nactive() || Main.tile[i, y + 1].halfBrick() || Main.tile[i, y + 1].slope() != 0 || !Main.tileSolid[(int)Main.tile[i, y + 1].type])
				{
					flag = false;
				}
			}
			if (flag)
			{
				int num = WorldGen.genRand.Next(3) * 36;
				for (int k = 0; k < 2; k++)
				{
					for (int l = -1; l < 1; l++)
					{
						int num2 = k * 18 + num;
						int num3 = (l + 1) * 18;
						Main.tile[x + k, y + l].active(true);
						Main.tile[x + k, y + l].frameX = (short)num2;
						Main.tile[x + k, y + l].frameY = (short)(num3 + style * 36);
						Main.tile[x + k, y + l].type = type;
						Main.tile[x + k, y + l].halfBrick(false);
					}
				}
				return true;
			}
			return false;
		}
		public static bool CheckCactus(int i, int j)
		{
			int num = j;
			int num2 = i;
			while (Main.tile[num2, num] != null && Main.tile[num2, num].active() && Main.tile[num2, num].type == 80)
			{
				num++;
				if (Main.tile[num2, num] == null)
				{
					return false;
				}
				if (!Main.tile[num2, num].active() || Main.tile[num2, num].type != 80)
				{
					if (Main.tile[num2 - 1, num] != null && Main.tile[num2 - 1, num].active() && Main.tile[num2 - 1, num].type == 80 && Main.tile[num2 - 1, num - 1] != null && Main.tile[num2 - 1, num - 1].active() && Main.tile[num2 - 1, num - 1].type == 80 && num2 >= i)
					{
						num2--;
					}
					if (Main.tile[num2 + 1, num] != null && Main.tile[num2 + 1, num].active() && Main.tile[num2 + 1, num].type == 80 && Main.tile[num2 + 1, num - 1] != null && Main.tile[num2 + 1, num - 1].active() && Main.tile[num2 + 1, num - 1].type == 80 && num2 <= i)
					{
						num2++;
					}
				}
			}
			if (!Main.tile[num2, num].nactive() || Main.tile[num2, num].halfBrick() || Main.tile[num2, num].slope() != 0 || (Main.tile[num2, num].type != 53 && Main.tile[num2, num].type != 112 && Main.tile[num2, num].type != 116 && Main.tile[num2, num].type != 234))
			{
				WorldGen.KillTile(i, j, false, false, false);
				return true;
			}
			if (i != num2)
			{
				if ((!Main.tile[i, j + 1].active() || Main.tile[i, j + 1].type != 80) && (!Main.tile[i - 1, j].active() || Main.tile[i - 1, j].type != 80) && (!Main.tile[i + 1, j].active() || Main.tile[i + 1, j].type != 80))
				{
					WorldGen.KillTile(i, j, false, false, false);
					return true;
				}
			}
			else if (i == num2 && (!Main.tile[i, j + 1].active() || (Main.tile[i, j + 1].type != 80 && Main.tile[i, j + 1].type != 53 && Main.tile[i, j + 1].type != 112 && Main.tile[i, j + 1].type != 116 && Main.tile[i, j + 1].type != 234)))
			{
				WorldGen.KillTile(i, j, false, false, false);
				return true;
			}
			return false;
		}
		public static void PlantCactus(int i, int j)
		{
			WorldGen.GrowCactus(i, j);
			for (int k = 0; k < 150; k++)
			{
				int i2 = WorldGen.genRand.Next(i - 1, i + 2);
				int j2 = WorldGen.genRand.Next(j - 10, j + 2);
				WorldGen.GrowCactus(i2, j2);
			}
		}
		public static void CheckOrb(int i, int j, int type)
		{
			int frameX = (int)Main.tile[i, j].frameX;
			bool flag = false;
			if (frameX >= 36)
			{
				flag = true;
			}
			if (!WorldGen.destroyObject)
			{
				int num;
				if (Main.tile[i, j].frameX == 0 || Main.tile[i, j].frameX == 36)
				{
					num = i;
				}
				else
				{
					num = i - 1;
				}
				int num2;
				if (Main.tile[i, j].frameY == 0)
				{
					num2 = j;
				}
				else
				{
					num2 = j - 1;
				}
				if (Main.tile[num, num2] != null && Main.tile[num + 1, num2] != null && Main.tile[num, num2 + 1] != null && Main.tile[num + 1, num2 + 1] != null && (!Main.tile[num, num2].active() || (int)Main.tile[num, num2].type != type || !Main.tile[num + 1, num2].active() || (int)Main.tile[num + 1, num2].type != type || !Main.tile[num, num2 + 1].active() || (int)Main.tile[num, num2 + 1].type != type || !Main.tile[num + 1, num2 + 1].active() || (int)Main.tile[num + 1, num2 + 1].type != type))
				{
					WorldGen.destroyObject = true;
					if ((int)Main.tile[num, num2].type == type)
					{
						WorldGen.KillTile(num, num2, false, false, false);
					}
					if ((int)Main.tile[num + 1, num2].type == type)
					{
						WorldGen.KillTile(num + 1, num2, false, false, false);
					}
					if ((int)Main.tile[num, num2 + 1].type == type)
					{
						WorldGen.KillTile(num, num2 + 1, false, false, false);
					}
					if ((int)Main.tile[num + 1, num2 + 1].type == type)
					{
						WorldGen.KillTile(num + 1, num2 + 1, false, false, false);
					}
					if (Main.netMode != 1 && !WorldGen.noTileActions)
					{
						if (type == 12)
						{
							Item.NewItem(num * 16, num2 * 16, 32, 32, 29, 1, false, 0, false);
						}
						else if (type == 31)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								WorldGen.spawnMeteor = true;
							}
							if (flag)
							{
								int num3 = Main.rand.Next(4);
								if (!WorldGen.shadowOrbSmashed)
								{
									num3 = 0;
								}
								if (num3 == 0)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 800, 1, false, -1, false);
									int stack = WorldGen.genRand.Next(25, 51);
									Item.NewItem(num * 16, num2 * 16, 32, 32, 97, stack, false, 0, false);
								}
								else if (num3 == 1)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 1256, 1, false, -1, false);
								}
								else if (num3 == 2)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 802, 1, false, -1, false);
								}
								else if (num3 == 3)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 1290, 1, false, -1, false);
								}
							}
							else
							{
								int num4 = Main.rand.Next(5);
								if (!WorldGen.shadowOrbSmashed)
								{
									num4 = 0;
								}
								if (num4 == 0)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 96, 1, false, -1, false);
									int stack2 = WorldGen.genRand.Next(25, 51);
									Item.NewItem(num * 16, num2 * 16, 32, 32, 97, stack2, false, 0, false);
								}
								else if (num4 == 1)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 64, 1, false, -1, false);
								}
								else if (num4 == 2)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 162, 1, false, -1, false);
								}
								else if (num4 == 3)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 115, 1, false, -1, false);
								}
								else if (num4 == 4)
								{
									Item.NewItem(num * 16, num2 * 16, 32, 32, 111, 1, false, -1, false);
								}
							}
							WorldGen.shadowOrbSmashed = true;
							WorldGen.shadowOrbCount++;
							if (WorldGen.shadowOrbCount >= 3)
							{
								WorldGen.shadowOrbCount = 0;
								float num5 = (float)(num * 16);
								float num6 = (float)(num2 * 16);
								float num7 = -1f;
								int plr = 0;
								for (int k = 0; k < 255; k++)
								{
									float num8 = Math.Abs(Main.player[k].position.X - num5) + Math.Abs(Main.player[k].position.Y - num6);
									if (num8 < num7 || num7 == -1f)
									{
										plr = k;
										num7 = num8;
									}
								}
								if (flag)
								{
									NPC.SpawnOnPlayer(plr, 266);
								}
								else
								{
									NPC.SpawnOnPlayer(plr, 13);
								}
							}
							else
							{
								string text = Lang.misc[10];
								if (WorldGen.shadowOrbCount == 2)
								{
									text = Lang.misc[11];
								}
								if (Main.netMode == 0)
								{
									Main.NewText(text, 50, 255, 130, false);
								}
								else if (Main.netMode == 2)
								{
									NetMessage.SendData(25, -1, -1, text, 255, 50f, 255f, 130f, 0);
								}
							}
						}
					}
					if (frameX >= 36)
					{
						Main.PlaySound(4, i * 16, j * 16, 1);
					}
					else
					{
						Main.PlaySound(13, i * 16, j * 16, 1);
					}
					WorldGen.destroyObject = false;
				}
			}
		}
		public static void CheckPalmTree(int i, int j)
		{
			int num = -1;
			int num2 = -1;
			int type = (int)Main.tile[i, j].type;
			int frameX = (int)Main.tile[i, j].frameX;
			int frameY = (int)Main.tile[i, j].frameY;
			if (Main.tile[i, j - 1] != null && Main.tile[i, j - 1].active())
			{
				num = (int)Main.tile[i, j - 1].type;
			}
			if (Main.tile[i, j + 1] != null && Main.tile[i, j + 1].active())
			{
				num2 = (int)Main.tile[i, j + 1].type;
			}
			if (num2 == 53)
			{
				num2 = 53;
			}
			if (num2 == 234)
			{
				num2 = 53;
			}
			if (num2 == 116)
			{
				num2 = 53;
			}
			if (num2 == 112)
			{
				num2 = 53;
			}
			if (num2 != 53 && num2 != type)
			{
				WorldGen.KillTile(i, j, false, false, false);
			}
			if ((Main.tile[i, j].frameX == 66 || Main.tile[i, j].frameX == 220) && num2 != 53)
			{
				WorldGen.KillTile(i, j, false, false, false);
			}
			if (num != type && Main.tile[i, j].frameX <= 44)
			{
				Main.tile[i, j].frameX = (short)(Main.rand.Next(7, 10) * 22);
			}
			else if (num != type && Main.tile[i, j].frameX == 66)
			{
				Main.tile[i, j].frameX = 220;
			}
			if ((int)Main.tile[i, j].frameX != frameX && (int)Main.tile[i, j].frameY != frameY && frameX >= 0 && frameY >= 0)
			{
				WorldGen.TileFrame(i - 1, j, false, false);
				WorldGen.TileFrame(i + 1, j, false, false);
				WorldGen.TileFrame(i, j - 1, false, false);
				WorldGen.TileFrame(i, j + 1, false, false);
			}
		}
		public static void CheckTree(int i, int j)
		{
			int num = -1;
			int num2 = -1;
			int num3 = -1;
			int num4 = -1;
			int type = (int)Main.tile[i, j].type;
			int frameX = (int)Main.tile[i, j].frameX;
			int frameY = (int)Main.tile[i, j].frameY;
			if (Main.tile[i - 1, j] != null && Main.tile[i - 1, j].active())
			{
				num2 = (int)Main.tile[i - 1, j].type;
			}
			if (Main.tile[i + 1, j] != null && Main.tile[i + 1, j].active())
			{
				num3 = (int)Main.tile[i + 1, j].type;
			}
			if (Main.tile[i, j - 1] != null && Main.tile[i, j - 1].active())
			{
				num = (int)Main.tile[i, j - 1].type;
			}
			if (Main.tile[i, j + 1] != null && Main.tile[i, j + 1].active())
			{
				num4 = (int)Main.tile[i, j + 1].type;
			}
			if (Main.tile[i - 1, j - 1] != null && Main.tile[i - 1, j - 1].active())
			{
				ushort arg_163_0 = Main.tile[i - 1, j - 1].type;
			}
			if (Main.tile[i + 1, j - 1] != null && Main.tile[i + 1, j - 1].active())
			{
				ushort arg_1A2_0 = Main.tile[i + 1, j - 1].type;
			}
			if (Main.tile[i - 1, j + 1] != null && Main.tile[i - 1, j + 1].active())
			{
				ushort arg_1E1_0 = Main.tile[i - 1, j + 1].type;
			}
			if (Main.tile[i + 1, j + 1] != null && Main.tile[i + 1, j + 1].active())
			{
				ushort arg_220_0 = Main.tile[i + 1, j + 1].type;
			}
			if (num4 == 23)
			{
				num4 = 2;
			}
			if (num4 == 60)
			{
				num4 = 2;
			}
			if (num4 == 70)
			{
				num4 = 2;
			}
			if (num4 == 109)
			{
				num4 = 2;
			}
			if (num4 == 147)
			{
				num4 = 2;
			}
			if (num4 == 199)
			{
				num4 = 2;
			}
			if (num4 != 2 && num4 != type && ((Main.tile[i, j].frameX == 0 && Main.tile[i, j].frameY <= 130) || (Main.tile[i, j].frameX == 22 && Main.tile[i, j].frameY <= 130) || (Main.tile[i, j].frameX == 44 && Main.tile[i, j].frameY <= 130)))
			{
				WorldGen.KillTile(i, j, false, false, false);
			}
			if (Main.tile[i, j].frameX >= 22 && Main.tile[i, j].frameX <= 44 && Main.tile[i, j].frameY >= 132 && Main.tile[i, j].frameY <= 176)
			{
				if (num4 != 2)
				{
					WorldGen.KillTile(i, j, false, false, false);
				}
				else if ((Main.tile[i, j].frameX != 22 || num2 != type) && (Main.tile[i, j].frameX != 44 || num3 != type))
				{
					WorldGen.KillTile(i, j, false, false, false);
				}
			}
			else if ((Main.tile[i, j].frameX == 88 && Main.tile[i, j].frameY >= 0 && Main.tile[i, j].frameY <= 44) || (Main.tile[i, j].frameX == 66 && Main.tile[i, j].frameY >= 66 && Main.tile[i, j].frameY <= 130) || (Main.tile[i, j].frameX == 110 && Main.tile[i, j].frameY >= 66 && Main.tile[i, j].frameY <= 110) || (Main.tile[i, j].frameX == 132 && Main.tile[i, j].frameY >= 0 && Main.tile[i, j].frameY <= 176))
			{
				if (num2 == type && num3 == type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 66;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 88;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 110;
					}
				}
				else if (num2 == type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 0;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 22;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 44;
					}
				}
				else if (num3 == type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 66;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 88;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 110;
					}
				}
				else
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 0;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 22;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 44;
					}
				}
			}
			if (Main.tile[i, j].frameY >= 132 && Main.tile[i, j].frameY <= 176 && (Main.tile[i, j].frameX == 0 || Main.tile[i, j].frameX == 66 || Main.tile[i, j].frameX == 88))
			{
				if (num4 != 2)
				{
					WorldGen.KillTile(i, j, false, false, false);
				}
				if (num2 != type && num3 != type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 0;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 22;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 44;
					}
				}
				else if (num2 != type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 132;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 154;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 0;
						Main.tile[i, j].frameY = 176;
					}
				}
				else if (num3 != type)
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 132;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 154;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 66;
						Main.tile[i, j].frameY = 176;
					}
				}
				else
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 132;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 154;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 88;
						Main.tile[i, j].frameY = 176;
					}
				}
			}
			if ((Main.tile[i, j].frameX == 66 && (Main.tile[i, j].frameY == 0 || Main.tile[i, j].frameY == 22 || Main.tile[i, j].frameY == 44)) || (Main.tile[i, j].frameX == 44 && (Main.tile[i, j].frameY == 198 || Main.tile[i, j].frameY == 220 || Main.tile[i, j].frameY == 242)))
			{
				if (num3 != type)
				{
					WorldGen.KillTile(i, j, false, false, false);
				}
			}
			else if ((Main.tile[i, j].frameX == 88 && (Main.tile[i, j].frameY == 66 || Main.tile[i, j].frameY == 88 || Main.tile[i, j].frameY == 110)) || (Main.tile[i, j].frameX == 66 && (Main.tile[i, j].frameY == 198 || Main.tile[i, j].frameY == 220 || Main.tile[i, j].frameY == 242)))
			{
				if (num2 != type)
				{
					WorldGen.KillTile(i, j, false, false, false);
				}
			}
			else if (num4 == -1 || num4 == 23)
			{
				WorldGen.KillTile(i, j, false, false, false);
			}
			else if (num != type && Main.tile[i, j].frameY < 198 && ((Main.tile[i, j].frameX != 22 && Main.tile[i, j].frameX != 44) || Main.tile[i, j].frameY < 132))
			{
				if (num2 == type || num3 == type)
				{
					if (num4 == type)
					{
						if (num2 == type && num3 == type)
						{
							if (Main.tile[i, j].frameNumber() == 0)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 132;
							}
							if (Main.tile[i, j].frameNumber() == 1)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 154;
							}
							if (Main.tile[i, j].frameNumber() == 2)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 176;
							}
						}
						else if (num2 == type)
						{
							if (Main.tile[i, j].frameNumber() == 0)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 0;
							}
							if (Main.tile[i, j].frameNumber() == 1)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 22;
							}
							if (Main.tile[i, j].frameNumber() == 2)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 44;
							}
						}
						else if (num3 == type)
						{
							if (Main.tile[i, j].frameNumber() == 0)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 66;
							}
							if (Main.tile[i, j].frameNumber() == 1)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 88;
							}
							if (Main.tile[i, j].frameNumber() == 2)
							{
								Main.tile[i, j].frameX = 132;
								Main.tile[i, j].frameY = 110;
							}
						}
					}
					else if (num2 == type && num3 == type)
					{
						if (Main.tile[i, j].frameNumber() == 0)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 132;
						}
						if (Main.tile[i, j].frameNumber() == 1)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 154;
						}
						if (Main.tile[i, j].frameNumber() == 2)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 176;
						}
					}
					else if (num2 == type)
					{
						if (Main.tile[i, j].frameNumber() == 0)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 0;
						}
						if (Main.tile[i, j].frameNumber() == 1)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 22;
						}
						if (Main.tile[i, j].frameNumber() == 2)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 44;
						}
					}
					else if (num3 == type)
					{
						if (Main.tile[i, j].frameNumber() == 0)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 66;
						}
						if (Main.tile[i, j].frameNumber() == 1)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 88;
						}
						if (Main.tile[i, j].frameNumber() == 2)
						{
							Main.tile[i, j].frameX = 154;
							Main.tile[i, j].frameY = 110;
						}
					}
				}
				else
				{
					if (Main.tile[i, j].frameNumber() == 0)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 0;
					}
					if (Main.tile[i, j].frameNumber() == 1)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 22;
					}
					if (Main.tile[i, j].frameNumber() == 2)
					{
						Main.tile[i, j].frameX = 110;
						Main.tile[i, j].frameY = 44;
					}
				}
			}
			if ((int)Main.tile[i, j].frameX != frameX && (int)Main.tile[i, j].frameY != frameY && frameX >= 0 && frameY >= 0)
			{
				WorldGen.TileFrame(i - 1, j, false, false);
				WorldGen.TileFrame(i + 1, j, false, false);
				WorldGen.TileFrame(i, j - 1, false, false);
				WorldGen.TileFrame(i, j + 1, false, false);
			}
		}
		public static void Convert(int i, int j, int type, int size = 4)
		{
			for (int k = i - size; k <= i + size; k++)
			{
				for (int l = j - size; l <= j + size; l++)
				{
					if (Math.Abs(k - i) + Math.Abs(l - j) < 6)
					{
						if (type == 4)
						{
							if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 64 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 67 || Main.tile[k, l].wall == 68 || Main.tile[k, l].wall == 69 || Main.tile[k, l].wall == 70)
							{
								Main.tile[k, l].wall = 81;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].wall == 3 || Main.tile[k, l].wall == 1 || Main.tile[k, l].wall == 28)
							{
								Main.tile[k, l].wall = 83;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							if (Main.tile[k, l].type == 59 && (Main.tile[k - 1, l].type == 199 || Main.tile[k + 1, l].type == 199 || Main.tile[k, l - 1].type == 199 || Main.tile[k, l + 1].type == 199))
							{
								Main.tile[k, l].type = 0;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							if (Main.tile[k, l].type == 2 || Main.tile[k, l].type == 60 || Main.tile[k, l].type == 109 || Main.tile[k, l].type == 23)
							{
								Main.tile[k, l].type = 199;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 1 || Main.tile[k, l].type == 25 || Main.tile[k, l].type == 117 || Main.tileMoss[(int)Main.tile[k, l].type])
							{
								Main.tile[k, l].type = 203;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 163 || Main.tile[k, l].type == 164)
							{
								Main.tile[k, l].type = 200;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 112 || Main.tile[k, l].type == 116)
							{
								Main.tile[k, l].type = 234;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 32 || Main.tile[k, l].type == 69)
							{
								WorldGen.KillTile(k, l, false, false, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(17, -1, -1, "", 0, (float)k, (float)l, 0f, 0);
								}
							}
						}
						else if (type == 2)
						{
							if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 64 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 67 || Main.tile[k, l].wall == 68 || Main.tile[k, l].wall == 69 || Main.tile[k, l].wall == 81)
							{
								Main.tile[k, l].wall = 70;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].wall == 3 || Main.tile[k, l].wall == 1 || Main.tile[k, l].wall == 83)
							{
								Main.tile[k, l].wall = 28;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							if (Main.tile[k, l].type == 59)
							{
								if (Main.tile[k - 1, l].type == 109 || Main.tile[k + 1, l].type == 109 || Main.tile[k, l - 1].type == 109 || Main.tile[k, l + 1].type == 109)
								{
									Main.tile[k, l].type = 0;
									WorldGen.SquareTileFrame(k, l, true);
									NetMessage.SendTileSquare(-1, k, l, 1);
								}
							}
							else if (Main.tile[k, l].type == 2 || Main.tile[k, l].type == 60 || Main.tile[k, l].type == 199)
							{
								Main.tile[k, l].type = 109;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 1 || Main.tileMoss[(int)Main.tile[k, l].type] || Main.tile[k, l].type == 203)
							{
								Main.tile[k, l].type = 117;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 234)
							{
								Main.tile[k, l].type = 116;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 23)
							{
								Main.tile[k, l].type = 109;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 25)
							{
								Main.tile[k, l].type = 117;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 112)
							{
								Main.tile[k, l].type = 116;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 163 || Main.tile[k, l].type == 200)
							{
								Main.tile[k, l].type = 164;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 32 || Main.tile[k, l].type == 69)
							{
								WorldGen.KillTile(k, l, false, false, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(17, -1, -1, "", 0, (float)k, (float)l, 0f, 0);
								}
							}
						}
						else if (type == 1)
						{
							if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 64 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 67 || Main.tile[k, l].wall == 68 || Main.tile[k, l].wall == 70 || Main.tile[k, l].wall == 81)
							{
								Main.tile[k, l].wall = 69;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].wall == 28 || Main.tile[k, l].wall == 1 || Main.tile[k, l].wall == 83)
							{
								Main.tile[k, l].wall = 3;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							if (Main.tile[k, l].type == 59)
							{
								if (Main.tile[k - 1, l].type == 23 || Main.tile[k + 1, l].type == 23 || Main.tile[k, l - 1].type == 23 || Main.tile[k, l + 1].type == 23)
								{
									Main.tile[k, l].type = 0;
									WorldGen.SquareTileFrame(k, l, true);
									NetMessage.SendTileSquare(-1, k, l, 1);
								}
							}
							else if (Main.tile[k, l].type == 2 || Main.tile[k, l].type == 60 || Main.tile[k, l].type == 199)
							{
								Main.tile[k, l].type = 23;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 1 || Main.tileMoss[(int)Main.tile[k, l].type] || Main.tile[k, l].type == 203)
							{
								Main.tile[k, l].type = 25;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 234)
							{
								Main.tile[k, l].type = 112;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 109)
							{
								Main.tile[k, l].type = 23;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 117)
							{
								Main.tile[k, l].type = 25;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 116)
							{
								Main.tile[k, l].type = 112;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 164 || Main.tile[k, l].type == 200)
							{
								Main.tile[k, l].type = 163;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 69)
							{
								WorldGen.KillTile(k, l, false, false, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(17, -1, -1, "", 0, (float)k, (float)l, 0f, 0);
								}
							}
						}
						else if (type == 3)
						{
							if (Main.tile[k, l].wall == 64 || Main.tile[k, l].wall == 15)
							{
								Main.tile[k, l].wall = 80;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 3);
							}
							if (Main.tile[k, l].type == 60)
							{
								Main.tile[k, l].type = 70;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 3);
							}
							else if (Main.tile[k, l].type == 32 || Main.tile[k, l].type == 69)
							{
								WorldGen.KillTile(k, l, false, false, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(17, -1, -1, "", 0, (float)k, (float)l, 0f, 0);
								}
							}
						}
						else
						{
							if (Main.tile[k, l].wall == 69 || Main.tile[k, l].wall == 70 || Main.tile[k, l].wall == 81)
							{
								if ((double)l < Main.worldSurface)
								{
									if (Main.rand.Next(10) == 0)
									{
										Main.tile[k, l].wall = 65;
									}
									else
									{
										Main.tile[k, l].wall = 63;
									}
								}
								else
								{
									Main.tile[k, l].wall = 64;
								}
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].wall == 3 || Main.tile[k, l].wall == 28 || Main.tile[k, l].wall == 83)
							{
								Main.tile[k, l].wall = 1;
								WorldGen.SquareWallFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].wall == 80)
							{
								if ((double)l < Main.worldSurface + 4.0 + (double)WorldGen.genRand.Next(3) || (double)l > ((double)Main.maxTilesY + Main.rockLayer) / 2.0 - 3.0 + (double)WorldGen.genRand.Next(3))
								{
									Main.tile[k, l].wall = 15;
									WorldGen.SquareWallFrame(k, l, true);
									NetMessage.SendTileSquare(-1, k, l, 3);
								}
								else
								{
									Main.tile[k, l].wall = 64;
									WorldGen.SquareWallFrame(k, l, true);
									NetMessage.SendTileSquare(-1, k, l, 3);
								}
							}
							if (Main.tile[k, l].type == 23 || Main.tile[k, l].type == 109 || Main.tile[k, l].type == 199)
							{
								Main.tile[k, l].type = 2;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 117 || Main.tile[k, l].type == 25 || Main.tile[k, l].type == 203)
							{
								Main.tile[k, l].type = 1;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 112 || Main.tile[k, l].type == 116 || Main.tile[k, l].type == 234)
							{
								Main.tile[k, l].type = 53;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 164 || Main.tile[k, l].type == 163 || Main.tile[k, l].type == 200)
							{
								Main.tile[k, l].type = 161;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 70)
							{
								Main.tile[k, l].type = 60;
								WorldGen.SquareTileFrame(k, l, true);
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else if (Main.tile[k, l].type == 32)
							{
								WorldGen.KillTile(k, l, false, false, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(17, -1, -1, "", 0, (float)k, (float)l, 0f, 0);
								}
							}
						}
					}
				}
			}
		}
		public static void CactusFrame(int i, int j)
		{
			try
			{
				int num = j;
				int num2 = i;
				if (!WorldGen.CheckCactus(i, j))
				{
					while (Main.tile[num2, num].active() && Main.tile[num2, num].type == 80)
					{
						num++;
						if (Main.tile[num2, num] == null)
						{
							return;
						}
						if (!Main.tile[num2, num].active() || Main.tile[num2, num].type != 80)
						{
							if (Main.tile[num2 - 1, num].active() && Main.tile[num2 - 1, num].type == 80 && Main.tile[num2 - 1, num - 1].active() && Main.tile[num2 - 1, num - 1].type == 80 && num2 >= i)
							{
								num2--;
							}
							if (Main.tile[num2 + 1, num].active() && Main.tile[num2 + 1, num].type == 80 && Main.tile[num2 + 1, num - 1].active() && Main.tile[num2 + 1, num - 1].type == 80 && num2 <= i)
							{
								num2++;
							}
						}
					}
					num--;
					int num3 = i - num2;
					if (Main.tile[i - 2, j] != null)
					{
						int type = (int)Main.tile[i - 2, j].type;
						if (Main.tile[i - 1, j] != null)
						{
							int num4 = (int)Main.tile[i - 1, j].type;
							if (Main.tile[i + 1, j] != null)
							{
								int num5 = (int)Main.tile[i + 1, j].type;
								int num6 = (int)Main.tile[i, j - 1].type;
								if (num6 == 227)
								{
									num6 = 80;
								}
								int num7 = (int)Main.tile[i, j + 1].type;
								int num8 = (int)Main.tile[i - 1, j + 1].type;
								int num9 = (int)Main.tile[i + 1, j + 1].type;
								if (!Main.tile[i - 1, j].active())
								{
									num4 = -1;
								}
								if (!Main.tile[i + 1, j].active())
								{
									num5 = -1;
								}
								if (!Main.tile[i, j - 1].active())
								{
									num6 = -1;
								}
								if (!Main.tile[i, j + 1].active())
								{
									num7 = -1;
								}
								if (!Main.tile[i - 1, j + 1].active())
								{
									num8 = -1;
								}
								if (!Main.tile[i + 1, j + 1].active())
								{
									num9 = -1;
								}
								short num10 = Main.tile[i, j].frameX;
								short num11 = Main.tile[i, j].frameY;
								if (num3 == 0)
								{
									if (num6 != 80)
									{
										if (num4 == 80 && num5 == 80 && num8 != 80 && num9 != 80 && type != 80)
										{
											num10 = 90;
											num11 = 0;
										}
										else if (num4 == 80 && num8 != 80 && type != 80)
										{
											num10 = 72;
											num11 = 0;
										}
										else if (num5 == 80 && num9 != 80)
										{
											num10 = 18;
											num11 = 0;
										}
										else
										{
											num10 = 0;
											num11 = 0;
										}
									}
									else if (num4 == 80 && num5 == 80 && num8 != 80 && num9 != 80 && type != 80)
									{
										num10 = 90;
										num11 = 36;
									}
									else if (num4 == 80 && num8 != 80 && type != 80)
									{
										num10 = 72;
										num11 = 36;
									}
									else if (num5 == 80 && num9 != 80)
									{
										num10 = 18;
										num11 = 36;
									}
									else if (num7 >= 0 && Main.tileSolid[num7])
									{
										num10 = 0;
										num11 = 36;
									}
									else
									{
										num10 = 0;
										num11 = 18;
									}
								}
								else if (num3 == -1)
								{
									if (num5 == 80)
									{
										if (num6 != 80 && num7 != 80)
										{
											num10 = 108;
											num11 = 36;
										}
										else if (num7 != 80)
										{
											num10 = 54;
											num11 = 36;
										}
										else if (num6 != 80)
										{
											num10 = 54;
											num11 = 0;
										}
										else
										{
											num10 = 54;
											num11 = 18;
										}
									}
									else if (num6 != 80)
									{
										num10 = 54;
										num11 = 0;
									}
									else
									{
										num10 = 54;
										num11 = 18;
									}
								}
								else if (num3 == 1)
								{
									if (num4 == 80)
									{
										if (num6 != 80 && num7 != 80)
										{
											num10 = 108;
											num11 = 18;
										}
										else if (num7 != 80)
										{
											num10 = 36;
											num11 = 36;
										}
										else if (num6 != 80)
										{
											num10 = 36;
											num11 = 0;
										}
										else
										{
											num10 = 36;
											num11 = 18;
										}
									}
									else if (num6 != 80)
									{
										num10 = 36;
										num11 = 0;
									}
									else
									{
										num10 = 36;
										num11 = 18;
									}
								}
								if (num10 != Main.tile[i, j].frameX || num11 != Main.tile[i, j].frameY)
								{
									Main.tile[i, j].frameX = num10;
									Main.tile[i, j].frameY = num11;
									WorldGen.DiamondTileFrame(i, j);
								}
							}
						}
					}
				}
			}
			catch
			{
				Main.tile[i, j].frameX = 0;
				Main.tile[i, j].frameY = 0;
			}
		}
		public static void GrowCactus(int i, int j)
		{
			int num = j;
			int num2 = i;
			if (!Main.tile[i, j].nactive())
			{
				return;
			}
			if (Main.tile[i, j].halfBrick())
			{
				return;
			}
			if (Main.tile[i, j].slope() != 0)
			{
				return;
			}
			if (Main.tile[i, j - 1].liquid > 0)
			{
				return;
			}
			if (Main.tile[i, j].type != 53 && Main.tile[i, j].type != 80 && Main.tile[i, j].type != 234 && Main.tile[i, j].type != 112 && Main.tile[i, j].type != 116)
			{
				return;
			}
			if (Main.tile[i, j].type == 53 || Main.tile[i, j].type == 112 || Main.tile[i, j].type == 116 || Main.tile[i, j].type == 234)
			{
				if (Main.tile[i, j - 1].active() || Main.tile[i - 1, j - 1].active() || Main.tile[i + 1, j - 1].active())
				{
					return;
				}
				int num3 = 0;
				int num4 = 0;
				for (int k = i - 6; k <= i + 6; k++)
				{
					for (int l = j - 3; l <= j + 1; l++)
					{
						try
						{
							if (Main.tile[k, l].active())
							{
								if (Main.tile[k, l].type == 80)
								{
									num3++;
									if (num3 >= 4)
									{
										return;
									}
								}
								if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 112 || Main.tile[k, l].type == 116 || Main.tile[k, l].type == 234)
								{
									num4++;
								}
							}
						}
						catch
						{
						}
					}
				}
				if (num4 > 10)
				{
					Main.tile[i, j - 1].active(true);
					Main.tile[i, j - 1].type = 80;
					if (Main.netMode == 2)
					{
						NetMessage.SendTileSquare(-1, i, j - 1, 1);
					}
					WorldGen.SquareTileFrame(num2, num - 1, true);
					return;
				}
				return;
			}
			else
			{
				if (Main.tile[i, j].type != 80)
				{
					return;
				}
				while (Main.tile[num2, num].active() && Main.tile[num2, num].type == 80)
				{
					num++;
					if (!Main.tile[num2, num].active() || Main.tile[num2, num].type != 80)
					{
						if (Main.tile[num2 - 1, num].active() && Main.tile[num2 - 1, num].type == 80 && Main.tile[num2 - 1, num - 1].active() && Main.tile[num2 - 1, num - 1].type == 80 && num2 >= i)
						{
							num2--;
						}
						if (Main.tile[num2 + 1, num].active() && Main.tile[num2 + 1, num].type == 80 && Main.tile[num2 + 1, num - 1].active() && Main.tile[num2 + 1, num - 1].type == 80 && num2 <= i)
						{
							num2++;
						}
					}
				}
				num--;
				int num5 = num - j;
				int num6 = i - num2;
				num2 = i - num6;
				num = j;
				int num7 = 11 - num5;
				int num8 = 0;
				for (int m = num2 - 2; m <= num2 + 2; m++)
				{
					for (int n = num - num7; n <= num + num5; n++)
					{
						if (Main.tile[m, n].active() && Main.tile[m, n].type == 80)
						{
							num8++;
						}
					}
				}
				if (num8 < WorldGen.genRand.Next(11, 13))
				{
					num2 = i;
					num = j;
					if (num6 == 0)
					{
						if (num5 == 0)
						{
							if (Main.tile[num2, num - 1].active())
							{
								return;
							}
							Main.tile[num2, num - 1].active(true);
							Main.tile[num2, num - 1].type = 80;
							WorldGen.SquareTileFrame(num2, num - 1, true);
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num2, num - 1, 1);
								return;
							}
							return;
						}
						else
						{
							bool flag = false;
							bool flag2 = false;
							if (Main.tile[num2, num - 1].active() && Main.tile[num2, num - 1].type == 80)
							{
								if (!Main.tile[num2 - 1, num].active() && !Main.tile[num2 - 2, num + 1].active() && !Main.tile[num2 - 1, num - 1].active() && !Main.tile[num2 - 1, num + 1].active() && !Main.tile[num2 - 2, num].active())
								{
									flag = true;
								}
								if (!Main.tile[num2 + 1, num].active() && !Main.tile[num2 + 2, num + 1].active() && !Main.tile[num2 + 1, num - 1].active() && !Main.tile[num2 + 1, num + 1].active() && !Main.tile[num2 + 2, num].active())
								{
									flag2 = true;
								}
							}
							int num9 = WorldGen.genRand.Next(3);
							if (num9 == 0 && flag)
							{
								Main.tile[num2 - 1, num].active(true);
								Main.tile[num2 - 1, num].type = 80;
								WorldGen.SquareTileFrame(num2 - 1, num, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num2 - 1, num, 1);
									return;
								}
								return;
							}
							else if (num9 == 1 && flag2)
							{
								Main.tile[num2 + 1, num].active(true);
								Main.tile[num2 + 1, num].type = 80;
								WorldGen.SquareTileFrame(num2 + 1, num, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num2 + 1, num, 1);
									return;
								}
								return;
							}
							else
							{
								if (num5 >= WorldGen.genRand.Next(2, 8))
								{
									return;
								}
								if (Main.tile[num2 - 1, num - 1].active())
								{
									ushort arg_6E3_0 = Main.tile[num2 - 1, num - 1].type;
								}
								if (Main.tile[num2 + 1, num - 1].active() && Main.tile[num2 + 1, num - 1].type == 80)
								{
									return;
								}
								if (Main.tile[num2, num - 1].active())
								{
									return;
								}
								Main.tile[num2, num - 1].active(true);
								Main.tile[num2, num - 1].type = 80;
								WorldGen.SquareTileFrame(num2, num - 1, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num2, num - 1, 1);
									return;
								}
								return;
							}
						}
					}
					else
					{
						if (Main.tile[num2, num - 1].active() || Main.tile[num2, num - 2].active() || Main.tile[num2 + num6, num - 1].active() || !Main.tile[num2 - num6, num - 1].active() || Main.tile[num2 - num6, num - 1].type != 80)
						{
							return;
						}
						Main.tile[num2, num - 1].active(true);
						Main.tile[num2, num - 1].type = 80;
						WorldGen.SquareTileFrame(num2, num - 1, true);
						if (Main.netMode == 2)
						{
							NetMessage.SendTileSquare(-1, num2, num - 1, 1);
							return;
						}
						return;
					}
				}
			}
		}
		public static void CheckPot(int i, int j, int type = 28)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = 0;
			for (k += Main.tile[i, j].frameX / 18; k > 1; k -= 2)
			{
			}
			k *= -1;
			k += i;
			int l = Main.tile[i, j].frameY / 18;
			int num = 0;
			while (l > 1)
			{
				l -= 2;
				num++;
			}
			int num2 = j - l;
			for (int m = k; m < k + 2; m++)
			{
				for (int n = num2; n < num2 + 2; n++)
				{
					if (Main.tile[m, n] == null)
					{
						Main.tile[m, n] = new Tile();
					}
					int num3;
					for (num3 = Main.tile[m, n].frameX / 18; num3 > 1; num3 -= 2)
					{
					}
					if (!Main.tile[m, n].active() || (int)Main.tile[m, n].type != type || num3 != m - k || (int)Main.tile[m, n].frameY != (n - num2) * 18 + num * 36)
					{
						flag = true;
					}
				}
				if (Main.tile[m, num2 + 2] == null)
				{
					Main.tile[m, num2 + 2] = new Tile();
				}
				if (!WorldGen.SolidTile2(m, num2 + 2))
				{
					flag = true;
				}
			}
			if (flag)
			{
				WorldGen.destroyObject = true;
				if (num >= 7 && num <= 9)
				{
					Main.PlaySound(6, i * 16, j * 16, 1);
				}
				else if (num >= 16 && num <= 24)
				{
					Main.PlaySound(4, i * 16, j * 16, 1);
				}
				else
				{
					Main.PlaySound(13, i * 16, j * 16, 1);
				}
				for (int num4 = k; num4 < k + 2; num4++)
				{
					for (int num5 = num2; num5 < num2 + 2; num5++)
					{
						if ((int)Main.tile[num4, num5].type == type && Main.tile[num4, num5].active())
						{
							WorldGen.KillTile(num4, num5, false, false, false);
						}
					}
				}
				if (num == 0)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 51, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 52, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 53, 1f);
				}
				else if (num == 1)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 166, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 167, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 168, 1f);
				}
				else if (num == 2)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 169, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 170, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 171, 1f);
				}
				else if (num == 3)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 172, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 173, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 174, 1f);
				}
				else if (num >= 4 && num <= 6)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 197, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 198, 1f);
				}
				else if (num >= 7 && num <= 9)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 199, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 200, 1f);
				}
				else if (num >= 10 && num <= 12)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 201, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 202, 1f);
				}
				else if (num >= 13 && num <= 15)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 203, 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), 204, 1f);
				}
				else if (num >= 25 && num <= 27)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), WorldGen.genRand.Next(217, 220), 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), WorldGen.genRand.Next(217, 220), 1f);
				}
				else if (num >= 28 && num <= 30)
				{
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), WorldGen.genRand.Next(315, 317), 1f);
					Gore.NewGore(new Vector2((float)(i * 16), (float)(j * 16)), default(Vector2), WorldGen.genRand.Next(315, 317), 1f);
				}
				if (WorldGen.genRand.Next(40) == 0 && Main.wallDungeon[(int)Main.tile[i, j].wall])
				{
					Item.NewItem(i * 16, j * 16, 16, 16, 327, 1, false, 0, false);
				}
				else if (WorldGen.genRand.Next(45) == 0)
				{
					if ((double)j < Main.worldSurface)
					{
						int num6 = WorldGen.genRand.Next(8);
						if (num6 == 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 292, 1, false, 0, false);
						}
						if (num6 == 1)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 298, 1, false, 0, false);
						}
						if (num6 == 2)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 299, 1, false, 0, false);
						}
						if (num6 == 3)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 290, 1, false, 0, false);
						}
						if (num6 == 4)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2322, 1, false, 0, false);
						}
						if (num6 == 5)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2324, 1, false, 0, false);
						}
						if (num6 == 6)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2325, 1, false, 0, false);
						}
						if (num6 == 7)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2350, 1, false, 0, false);
						}
					}
					else if ((double)j < Main.rockLayer)
					{
						int num7 = WorldGen.genRand.Next(10);
						if (num7 == 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 289, 1, false, 0, false);
						}
						if (num7 == 1)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 298, 1, false, 0, false);
						}
						if (num7 == 2)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 299, 1, false, 0, false);
						}
						if (num7 == 3)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 290, 1, false, 0, false);
						}
						if (num7 == 4)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 303, 1, false, 0, false);
						}
						if (num7 == 5)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 291, 1, false, 0, false);
						}
						if (num7 == 6)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 304, 1, false, 0, false);
						}
						if (num7 == 7)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2322, 1, false, 0, false);
						}
						if (num7 == 8)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2329, 1, false, 0, false);
						}
						if (num7 == 9)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2350, 1, false, 0, false);
						}
					}
					else if (j < Main.maxTilesY - 200)
					{
						int num8 = WorldGen.genRand.Next(15);
						if (num8 == 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 296, 1, false, 0, false);
						}
						if (num8 == 1)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 295, 1, false, 0, false);
						}
						if (num8 == 2)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 299, 1, false, 0, false);
						}
						if (num8 == 3)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 302, 1, false, 0, false);
						}
						if (num8 == 4)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 303, 1, false, 0, false);
						}
						if (num8 == 5)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 305, 1, false, 0, false);
						}
						if (num8 == 6)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 301, 1, false, 0, false);
						}
						if (num8 == 7)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 302, 1, false, 0, false);
						}
						if (num8 == 8)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 297, 1, false, 0, false);
						}
						if (num8 == 9)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 304, 1, false, 0, false);
						}
						if (num8 == 10)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2322, 1, false, 0, false);
						}
						if (num8 == 11)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2323, 1, false, 0, false);
						}
						if (num8 == 12)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2327, 1, false, 0, false);
						}
						if (num8 == 13)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2329, 1, false, 0, false);
						}
						if (num8 == 14)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2350, 1, false, 0, false);
						}
					}
					else
					{
						int num9 = WorldGen.genRand.Next(14);
						if (num9 == 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 296, 1, false, 0, false);
						}
						if (num9 == 1)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 295, 1, false, 0, false);
						}
						if (num9 == 2)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 293, 1, false, 0, false);
						}
						if (num9 == 3)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 288, 1, false, 0, false);
						}
						if (num9 == 4)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 294, 1, false, 0, false);
						}
						if (num9 == 5)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 297, 1, false, 0, false);
						}
						if (num9 == 6)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 304, 1, false, 0, false);
						}
						if (num9 == 7)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 305, 1, false, 0, false);
						}
						if (num9 == 8)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 301, 1, false, 0, false);
						}
						if (num9 == 9)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 302, 1, false, 0, false);
						}
						if (num9 == 10)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 288, 1, false, 0, false);
						}
						if (num9 == 11)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 300, 1, false, 0, false);
						}
						if (num9 == 12)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2323, 1, false, 0, false);
						}
						if (num9 == 13)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 2326, 1, false, 0, false);
						}
					}
				}
				else
				{
					int num10 = Main.rand.Next(9);
					if (num10 == 0 && Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].statLife < Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].statLifeMax2)
					{
						Item.NewItem(i * 16, j * 16, 16, 16, 58, 1, false, 0, false);
					}
					else if (num10 == 1 && Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].statMana < Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].statManaMax2)
					{
						Item.NewItem(i * 16, j * 16, 16, 16, 184, 1, false, 0, false);
					}
					else if (num10 == 2)
					{
						int stack = Main.rand.Next(1, 6);
						if (Main.tile[i, j].liquid > 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 282, stack, false, 0, false);
						}
						else
						{
							Item.NewItem(i * 16, j * 16, 16, 16, 8, stack, false, 0, false);
						}
					}
					else if (num10 == 3)
					{
						int stack2 = Main.rand.Next(8) + 3;
						int type2 = 40;
						if ((double)j < Main.rockLayer && WorldGen.genRand.Next(2) == 0)
						{
							if (Main.hardMode)
							{
								type2 = 168;
							}
							else
							{
								type2 = 42;
							}
						}
						if (j > Main.maxTilesY - 200)
						{
							type2 = 265;
						}
						else if (Main.hardMode)
						{
							if (Main.rand.Next(2) == 0)
							{
								type2 = 278;
							}
							else
							{
								type2 = 47;
							}
						}
						Item.NewItem(i * 16, j * 16, 16, 16, type2, stack2, false, 0, false);
					}
					else if (num10 == 4)
					{
						int type3 = 28;
						if (j > Main.maxTilesY - 200 || Main.hardMode)
						{
							type3 = 188;
						}
						Item.NewItem(i * 16, j * 16, 16, 16, type3, 1, false, 0, false);
					}
					else if (num10 == 5 && (double)j > Main.rockLayer)
					{
						int stack3 = Main.rand.Next(4) + 1;
						Item.NewItem(i * 16, j * 16, 16, 16, 166, stack3, false, 0, false);
					}
					else if (num10 == 6 && j < Main.maxTilesY - 200 && !Main.hardMode)
					{
						int stack4 = Main.rand.Next(20, 41);
						Item.NewItem(i * 16, j * 16, 16, 16, 965, stack4, false, 0, false);
					}
					else
					{
						float num11 = (float)(200 + WorldGen.genRand.Next(-100, 101));
						if ((double)j < Main.worldSurface)
						{
							num11 *= 0.5f;
						}
						else if ((double)j < Main.rockLayer)
						{
							num11 *= 0.75f;
						}
						else if (j > Main.maxTilesY - 250)
						{
							num11 *= 1.25f;
						}
						num11 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						if (Main.rand.Next(5) == 0)
						{
							num11 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
						}
						if (Main.rand.Next(10) == 0)
						{
							num11 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
						}
						if (Main.rand.Next(15) == 0)
						{
							num11 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
						}
						if (Main.rand.Next(20) == 0)
						{
							num11 *= 1f + (float)Main.rand.Next(40, 81) * 0.01f;
						}
						if (Main.rand.Next(25) == 0)
						{
							num11 *= 1f + (float)Main.rand.Next(50, 101) * 0.01f;
						}
						while ((int)num11 > 0)
						{
							if (num11 > 1000000f)
							{
								int num12 = (int)(num11 / 1000000f);
								if (num12 > 50 && Main.rand.Next(2) == 0)
								{
									num12 /= Main.rand.Next(3) + 1;
								}
								if (Main.rand.Next(2) == 0)
								{
									num12 /= Main.rand.Next(3) + 1;
								}
								num11 -= (float)(1000000 * num12);
								Item.NewItem(i * 16, j * 16, 16, 16, 74, num12, false, 0, false);
							}
							else if (num11 > 10000f)
							{
								int num13 = (int)(num11 / 10000f);
								if (num13 > 50 && Main.rand.Next(2) == 0)
								{
									num13 /= Main.rand.Next(3) + 1;
								}
								if (Main.rand.Next(2) == 0)
								{
									num13 /= Main.rand.Next(3) + 1;
								}
								num11 -= (float)(10000 * num13);
								Item.NewItem(i * 16, j * 16, 16, 16, 73, num13, false, 0, false);
							}
							else if (num11 > 100f)
							{
								int num14 = (int)(num11 / 100f);
								if (num14 > 50 && Main.rand.Next(2) == 0)
								{
									num14 /= Main.rand.Next(3) + 1;
								}
								if (Main.rand.Next(2) == 0)
								{
									num14 /= Main.rand.Next(3) + 1;
								}
								num11 -= (float)(100 * num14);
								Item.NewItem(i * 16, j * 16, 16, 16, 72, num14, false, 0, false);
							}
							else
							{
								int num15 = (int)num11;
								if (num15 > 50 && Main.rand.Next(2) == 0)
								{
									num15 /= Main.rand.Next(3) + 1;
								}
								if (Main.rand.Next(2) == 0)
								{
									num15 /= Main.rand.Next(4) + 1;
								}
								if (num15 < 1)
								{
									num15 = 1;
								}
								num11 -= (float)num15;
								Item.NewItem(i * 16, j * 16, 16, 16, 71, num15, false, 0, false);
							}
						}
					}
				}
				WorldGen.destroyObject = false;
			}
		}
		public static int PlaceChest(int x, int y, ushort type = 21, bool notNearOtherChests = false, int style = 0)
		{
			for (int i = x; i < x + 2; i++)
			{
				for (int j = y - 1; j < y + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					if (Main.tile[i, j].active())
					{
						return -1;
					}
					if (Main.tile[i, j].lava())
					{
						return -1;
					}
				}
				if (Main.tile[i, y + 1] == null)
				{
					Main.tile[i, y + 1] = new Tile();
				}
				if (!WorldGen.SolidTile2(i, y + 1) || Main.tile[i, y + 1].type == 127)
				{
					return -1;
				}
			}
			if (notNearOtherChests)
			{
				for (int k = x - 25; k < x + 25; k++)
				{
					for (int l = y - 8; l < y + 8; l++)
					{
						try
						{
							if (Main.tile[k, l].active() && Main.tile[k, l].type == 21)
							{
								return -1;
							}
						}
						catch
						{
						}
					}
				}
			}
			int num = Chest.CreateChest(x, y - 1, -1);
			if (num == -1)
			{
				return -1;
			}
			if (Main.netMode == 1)
			{
				NetMessage.SendData(34, -1, -1, "", 0, (float)x, (float)y, (float)style, 0);
			}
			Main.tile[x, y - 1].active(true);
			Main.tile[x, y - 1].frameY = 0;
			Main.tile[x, y - 1].frameX = (short)(36 * style);
			Main.tile[x, y - 1].type = type;
			Main.tile[x, y - 1].halfBrick(false);
			Main.tile[x + 1, y - 1].active(true);
			Main.tile[x + 1, y - 1].frameY = 0;
			Main.tile[x + 1, y - 1].frameX = (short)(18 + 36 * style);
			Main.tile[x + 1, y - 1].type = type;
			Main.tile[x + 1, y - 1].halfBrick(false);
			Main.tile[x, y].active(true);
			Main.tile[x, y].frameY = 18;
			Main.tile[x, y].frameX = (short)(36 * style);
			Main.tile[x, y].type = type;
			Main.tile[x, y].halfBrick(false);
			Main.tile[x + 1, y].active(true);
			Main.tile[x + 1, y].frameY = 18;
			Main.tile[x + 1, y].frameX = (short)(18 + 36 * style);
			Main.tile[x + 1, y].type = type;
			Main.tile[x + 1, y].halfBrick(false);
			return num;
		}
		public static void PlaceChestDirect(int x, int y, ushort type, int style, int id)
		{
			Chest.CreateChest(x, y - 1, id);
			Main.tile[x, y - 1].active(true);
			Main.tile[x, y - 1].frameY = 0;
			Main.tile[x, y - 1].frameX = (short)(36 * style);
			Main.tile[x, y - 1].type = type;
			Main.tile[x, y - 1].halfBrick(false);
			Main.tile[x + 1, y - 1].active(true);
			Main.tile[x + 1, y - 1].frameY = 0;
			Main.tile[x + 1, y - 1].frameX = (short)(18 + 36 * style);
			Main.tile[x + 1, y - 1].type = type;
			Main.tile[x + 1, y - 1].halfBrick(false);
			Main.tile[x, y].active(true);
			Main.tile[x, y].frameY = 18;
			Main.tile[x, y].frameX = (short)(36 * style);
			Main.tile[x, y].type = type;
			Main.tile[x, y].halfBrick(false);
			Main.tile[x + 1, y].active(true);
			Main.tile[x + 1, y].frameY = 18;
			Main.tile[x + 1, y].frameX = (short)(18 + 36 * style);
			Main.tile[x + 1, y].type = type;
			Main.tile[x + 1, y].halfBrick(false);
		}
		public static void CheckChest(int i, int j, int type)
		{
			if (WorldGen.destroyObject)
			{
				return;
			}
			bool flag = false;
			int k = 0;
			k += Main.tile[i, j].frameX / 18;
			int num = j + Main.tile[i, j].frameY / 18 * -1;
			while (k > 1)
			{
				k -= 2;
			}
			k *= -1;
			k += i;
			for (int l = k; l < k + 2; l++)
			{
				for (int m = num; m < num + 2; m++)
				{
					if (Main.tile[l, m] == null)
					{
						Main.tile[l, m] = new Tile();
					}
					int n;
					for (n = Main.tile[l, m].frameX / 18; n > 1; n -= 2)
					{
					}
					if (!Main.tile[l, m].active() || (int)Main.tile[l, m].type != type || n != l - k || (int)Main.tile[l, m].frameY != (m - num) * 18)
					{
						flag = true;
					}
				}
				if (Main.tile[l, num + 2] == null)
				{
					Main.tile[l, num + 2] = new Tile();
				}
				if (!Main.tile[l, num + 2].active() || !Main.tileSolid[(int)Main.tile[l, num + 2].type])
				{
					flag = true;
				}
			}
			if (flag)
			{
				int num2 = Main.tile[i, j].frameX / 36;
				int type2 = Chest.itemSpawn[num2];
				WorldGen.destroyObject = true;
				for (int num3 = k; num3 < k + 2; num3++)
				{
					for (int num4 = num; num4 < num + 3; num4++)
					{
						if ((int)Main.tile[num3, num4].type == type && Main.tile[num3, num4].active())
						{
							Chest.DestroyChest(num3, num4);
							WorldGen.KillTile(num3, num4, false, false, false);
						}
					}
				}
				Item.NewItem(i * 16, j * 16, 32, 32, type2, 1, false, 0, false);
				WorldGen.destroyObject = false;
				if (Main.tile[k, num + 2].type == 138 || Main.tile[k + 1, num + 2].type == 138)
				{
					WorldGen.SquareTileFrame(k, num + 2, true);
				}
			}
		}
		public static bool PlaceActuator(int i, int j)
		{
			if (!Main.tile[i, j].actuator())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].actuator(true);
				return true;
			}
			return false;
		}
		public static bool KillActuator(int i, int j)
		{
			if (Main.tile[i, j].actuator())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].actuator(false);
				if (Main.netMode != 1)
				{
					Item.NewItem(i * 16, j * 16, 16, 16, 849, 1, false, 0, false);
				}
				for (int k = 0; k < 5; k++)
				{
					Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 50, 0f, 0f, 0, default(Color), 1f);
				}
				return true;
			}
			return false;
		}
		public static bool PlaceWire(int i, int j)
		{
			if (!Main.tile[i, j].wire())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire(true);
				return true;
			}
			return false;
		}
		public static bool KillWire(int i, int j)
		{
			if (Main.tile[i, j].wire())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire(false);
				if (Main.netMode != 1)
				{
					Item.NewItem(i * 16, j * 16, 16, 16, 530, 1, false, 0, false);
				}
				for (int k = 0; k < 5; k++)
				{
					Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 50, 0f, 0f, 0, default(Color), 1f);
				}
				return true;
			}
			return false;
		}
		public static bool PlaceWire2(int i, int j)
		{
			if (!Main.tile[i, j].wire2())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire2(true);
				return true;
			}
			return false;
		}
		public static bool KillWire2(int i, int j)
		{
			if (Main.tile[i, j].wire2())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire2(false);
				if (Main.netMode != 1)
				{
					Item.NewItem(i * 16, j * 16, 16, 16, 530, 1, false, 0, false);
				}
				for (int k = 0; k < 5; k++)
				{
					Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 50, 0f, 0f, 0, default(Color), 1f);
				}
				return true;
			}
			return false;
		}
		public static bool PlaceWire3(int i, int j)
		{
			if (!Main.tile[i, j].wire3())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire3(true);
				return true;
			}
			return false;
		}
		public static bool KillWire3(int i, int j)
		{
			if (Main.tile[i, j].wire3())
			{
				Main.PlaySound(0, i * 16, j * 16, 1);
				Main.tile[i, j].wire3(false);
				if (Main.netMode != 1)
				{
					Item.NewItem(i * 16, j * 16, 16, 16, 530, 1, false, 0, false);
				}
				for (int k = 0; k < 5; k++)
				{
					Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 50, 0f, 0f, 0, default(Color), 1f);
				}
				return true;
			}
			return false;
		}
		public static bool PlaceTile(int i, int j, int type, bool mute = false, bool forced = false, int plr = -1, int style = 0)
		{
			if (type >= 340)
			{
				return false;
			}
			bool result = false;
			if (i >= 0 && j >= 0 && i < Main.maxTilesX && j < Main.maxTilesY)
			{
				Tile tile = Main.tile[i, j];
				if (tile == null)
				{
					tile = new Tile();
					Main.tile[i, j] = tile;
				}
				if (forced || Collision.EmptyTile(i, j, false) || !Main.tileSolid[type] || (type == 23 && tile.type == 0 && tile.active()) || (type == 199 && tile.type == 0 && tile.active()) || (type == 2 && tile.type == 0 && tile.active()) || (type == 109 && tile.type == 0 && tile.active()) || (type == 60 && tile.type == 59 && tile.active()) || (type == 70 && tile.type == 59 && tile.active()))
				{
					if (type == 23 && (tile.type != 0 || !tile.active()))
					{
						return false;
					}
					if (type == 2 && (tile.type != 0 || !tile.active()))
					{
						return false;
					}
					if (type == 109 && (tile.type != 0 || !tile.active()))
					{
						return false;
					}
					if (type == 60 && (tile.type != 59 || !tile.active()))
					{
						return false;
					}
					if (type == 81)
					{
						if (Main.tile[i - 1, j] == null)
						{
							Main.tile[i - 1, j] = new Tile();
						}
						if (Main.tile[i + 1, j] == null)
						{
							Main.tile[i + 1, j] = new Tile();
						}
						if (Main.tile[i, j - 1] == null)
						{
							Main.tile[i, j - 1] = new Tile();
						}
						if (Main.tile[i, j + 1] == null)
						{
							Main.tile[i, j + 1] = new Tile();
						}
						if (Main.tile[i - 1, j].active() || Main.tile[i + 1, j].active() || Main.tile[i, j - 1].active())
						{
							return false;
						}
						if (!Main.tile[i, j + 1].active() || !Main.tileSolid[(int)Main.tile[i, j + 1].type] || Main.tile[i, j + 1].halfBrick() || Main.tile[i, j + 1].slope() != 0)
						{
							return false;
						}
					}
					if (tile.liquid > 0)
					{
						if (type == 4)
						{
							if (style != 8 && style != 11)
							{
								return false;
							}
						}
						else if (type == 3 || type == 4 || type == 20 || type == 24 || type == 27 || type == 32 || type == 51 || type == 69 || type == 72 || type == 201)
						{
							return false;
						}
					}
					tile.halfBrick(false);
					tile.frameY = 0;
					tile.frameX = 0;
					if (type == 3 || type == 24 || type == 110 || type == 201)
					{
						if (j + 1 < Main.maxTilesY && Main.tile[i, j + 1].active() && Main.tile[i, j + 1].slope() == 0 && !Main.tile[i, j + 1].halfBrick() && ((Main.tile[i, j + 1].type == 2 && type == 3) || (Main.tile[i, j + 1].type == 23 && type == 24) || (Main.tile[i, j + 1].type == 199 && type == 201) || (Main.tile[i, j + 1].type == 78 && type == 3) || (Main.tile[i, j + 1].type == 109 && type == 110)))
						{
							if (type == 24 && WorldGen.genRand.Next(13) == 0)
							{
								tile.active(true);
								tile.type = 32;
								WorldGen.SquareTileFrame(i, j, true);
							}
							else if (Main.tile[i, j + 1].type == 78)
							{
								tile.active(true);
								tile.type = (ushort)type;
								tile.frameX = (short)(WorldGen.genRand.Next(2) * 18 + 108);
							}
							else if ((tile.wall == 0 || tile.wall == 106 || tile.wall == 107 || (tile.wall >= 63 && tile.wall <= 70)) && (Main.tile[i, j + 1].wall == 0 || Main.tile[i, j + 1].wall == 106 || Main.tile[i, j + 1].wall == 107 || (Main.tile[i, j + 1].wall >= 63 && Main.tile[i, j + 1].wall <= 70)))
							{
								if (type == 3 && WorldGen.genRand.Next(35) == 0)
								{
									tile.active(true);
									tile.type = (ushort)type;
									tile.frameX = (short)(WorldGen.genRand.Next(2) * 18 + 162);
								}
								else if (WorldGen.genRand.Next(50) == 0 || (type == 24 && WorldGen.genRand.Next(40) == 0))
								{
									tile.active(true);
									tile.type = (ushort)type;
									tile.frameX = 144;
								}
								else if (WorldGen.genRand.Next(35) == 0)
								{
									tile.active(true);
									tile.type = (ushort)type;
									tile.frameX = (short)(WorldGen.genRand.Next(2) * 18 + 108);
								}
								else
								{
									tile.active(true);
									tile.type = (ushort)type;
									tile.frameX = (short)(WorldGen.genRand.Next(6) * 18);
								}
							}
						}
					}
					else if (type == 61)
					{
						if (j + 1 < Main.maxTilesY && Main.tile[i, j + 1].active() && Main.tile[i, j + 1].slope() == 0 && !Main.tile[i, j + 1].halfBrick() && Main.tile[i, j + 1].type == 60)
						{
							if (WorldGen.genRand.Next(16) == 0 && (double)j > Main.worldSurface)
							{
								tile.active(true);
								tile.type = 69;
								WorldGen.SquareTileFrame(i, j, true);
							}
							else if (WorldGen.genRand.Next(60) == 0 && (double)j > Main.rockLayer)
							{
								tile.active(true);
								tile.type = (ushort)type;
								tile.frameX = 144;
							}
							else if (WorldGen.genRand.Next(300) == 0 && (double)j > Main.rockLayer)
							{
								tile.active(true);
								tile.type = (ushort)type;
								tile.frameX = 162;
							}
							else if (WorldGen.genRand.Next(15) == 0)
							{
								tile.active(true);
								tile.type = (ushort)type;
								tile.frameX = (short)(WorldGen.genRand.Next(2) * 18 + 108);
							}
							else
							{
								tile.active(true);
								tile.type = (ushort)type;
								tile.frameX = (short)(WorldGen.genRand.Next(6) * 18);
							}
						}
					}
					else if (type == 71)
					{
						if (j + 1 < Main.maxTilesY && Main.tile[i, j + 1].active() && Main.tile[i, j + 1].slope() == 0 && !Main.tile[i, j + 1].halfBrick() && Main.tile[i, j + 1].type == 70)
						{
							tile.active(true);
							tile.type = (ushort)type;
							tile.frameX = (short)(WorldGen.genRand.Next(5) * 18);
						}
					}
					else if (type == 129)
					{
						if (WorldGen.SolidTile(i - 1, j) || WorldGen.SolidTile(i + 1, j) || WorldGen.SolidTile(i, j - 1) || WorldGen.SolidTile(i, j + 1))
						{
							tile.active(true);
							tile.type = (ushort)type;
							tile.frameX = (short)(WorldGen.genRand.Next(8) * 18);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 178)
					{
						if (WorldGen.SolidTile(i - 1, j) || WorldGen.SolidTile(i + 1, j) || WorldGen.SolidTile(i, j - 1) || WorldGen.SolidTile(i, j + 1))
						{
							tile.active(true);
							tile.type = (ushort)type;
							tile.frameX = (short)(style * 18);
							tile.frameY = (short)(WorldGen.genRand.Next(3) * 18);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 184)
					{
						if ((Main.tileMoss[(int)Main.tile[i - 1, j].type] && WorldGen.SolidTile(i - 1, j)) || (Main.tileMoss[(int)Main.tile[i + 1, j].type] && WorldGen.SolidTile(i + 1, j)) || (Main.tileMoss[(int)Main.tile[i, j - 1].type] && WorldGen.SolidTile(i, j - 1)) || (Main.tileMoss[(int)Main.tile[i, j + 1].type] && WorldGen.SolidTile(i, j + 1)))
						{
							tile.active(true);
							tile.type = (ushort)type;
							tile.frameX = (short)(style * 18);
							tile.frameY = (short)(WorldGen.genRand.Next(3) * 18);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 171)
					{
						WorldGen.PlaceXmasTree(i, j, 171);
					}
					else if (type == 254)
					{
						WorldGen.Place2x2Style(i, j, (ushort)type, style);
					}
					else if (type == 335)
					{
						WorldGen.Place2x2(i, j, (ushort)type, 0);
					}
					else if (type == 319 || type == 132 || type == 138 || type == 142 || type == 143 || type == 282 || (type >= 288 && type <= 295) || (type >= 316 && type <= 318))
					{
						WorldGen.Place2x2(i, j, (ushort)type, 0);
					}
					else if (type == 137)
					{
						tile.active(true);
						tile.type = (ushort)type;
						tile.frameY = (short)(18 * style);
					}
					else if (type == 136)
					{
						if (Main.tile[i - 1, j] == null)
						{
							Main.tile[i - 1, j] = new Tile();
						}
						if (Main.tile[i + 1, j] == null)
						{
							Main.tile[i + 1, j] = new Tile();
						}
						if (Main.tile[i, j + 1] == null)
						{
							Main.tile[i, j + 1] = new Tile();
						}
						if ((Main.tile[i - 1, j].nactive() && !Main.tile[i - 1, j].halfBrick() && Main.tile[i - 1, j].type != 10 && Main.tile[i - 1, j].slope() == 0 && (WorldGen.SolidTile(i - 1, j) || Main.tile[i - 1, j].type == 124 || (Main.tile[i - 1, j].type == 5 && Main.tile[i - 1, j - 1].type == 5 && Main.tile[i - 1, j + 1].type == 5))) || (Main.tile[i + 1, j].nactive() && !Main.tile[i + 1, j].halfBrick() && Main.tile[i + 1, j].type != 10 && Main.tile[i + 1, j].slope() == 0 && (WorldGen.SolidTile(i + 1, j) || Main.tile[i + 1, j].type == 124 || (Main.tile[i + 1, j].type == 5 && Main.tile[i + 1, j - 1].type == 5 && Main.tile[i + 1, j + 1].type == 5))) || (Main.tile[i, j + 1].nactive() && !Main.tile[i, j + 1].halfBrick() && WorldGen.SolidTile(i, j + 1) && Main.tile[i, j + 1].slope() == 0) || tile.wall > 0)
						{
							tile.active(true);
							tile.type = (ushort)type;
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 4)
					{
						if (Main.tile[i - 1, j] == null)
						{
							Main.tile[i - 1, j] = new Tile();
						}
						if (Main.tile[i + 1, j] == null)
						{
							Main.tile[i + 1, j] = new Tile();
						}
						if (Main.tile[i, j + 1] == null)
						{
							Main.tile[i, j + 1] = new Tile();
						}
						if (tile.wall > 0 || (Main.tile[i - 1, j].active() && (Main.tile[i - 1, j].slope() == 0 || Main.tile[i - 1, j].slope() % 2 != 1) && (Main.tileSolid[(int)Main.tile[i - 1, j].type] || Main.tile[i - 1, j].type == 124 || (Main.tile[i - 1, j].type == 5 && Main.tile[i - 1, j - 1].type == 5 && Main.tile[i - 1, j + 1].type == 5))) || (Main.tile[i + 1, j].active() && (Main.tile[i + 1, j].slope() == 0 || Main.tile[i + 1, j].slope() % 2 != 0) && (Main.tileSolid[(int)Main.tile[i + 1, j].type] || Main.tile[i + 1, j].type == 124 || (Main.tile[i + 1, j].type == 5 && Main.tile[i + 1, j - 1].type == 5 && Main.tile[i + 1, j + 1].type == 5))) || (Main.tile[i, j + 1].active() && Main.tileSolid[(int)Main.tile[i, j + 1].type] && !Main.tileSolidTop[(int)Main.tile[i, j + 1].type] && !Main.tile[i, j + 1].halfBrick() && Main.tile[i, j + 1].slope() == 0))
						{
							tile.active(true);
							tile.type = (ushort)type;
							tile.frameY = (short)(22 * style);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 10)
					{
						if (Main.tile[i, j - 1] == null)
						{
							Main.tile[i, j - 1] = new Tile();
						}
						if (Main.tile[i, j - 2] == null)
						{
							Main.tile[i, j - 2] = new Tile();
						}
						if (Main.tile[i, j - 3] == null)
						{
							Main.tile[i, j - 3] = new Tile();
						}
						if (Main.tile[i, j + 1] == null)
						{
							Main.tile[i, j + 1] = new Tile();
						}
						if (Main.tile[i, j + 2] == null)
						{
							Main.tile[i, j + 2] = new Tile();
						}
						if (Main.tile[i, j + 3] == null)
						{
							Main.tile[i, j + 3] = new Tile();
						}
						if (!Main.tile[i, j - 1].active() && !Main.tile[i, j - 2].active() && Main.tile[i, j - 3].active() && Main.tileSolid[(int)Main.tile[i, j - 3].type])
						{
							WorldGen.PlaceDoor(i, j - 1, type, style);
							WorldGen.SquareTileFrame(i, j, true);
						}
						else
						{
							if (Main.tile[i, j + 1].active() || Main.tile[i, j + 2].active() || !Main.tile[i, j + 3].active() || !Main.tileSolid[(int)Main.tile[i, j + 3].type])
							{
								return false;
							}
							WorldGen.PlaceDoor(i, j + 1, type, style);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if ((type >= 275 && type <= 281) || type == 296 || type == 297 || type == 309)
					{
						WorldGen.Place6x3(i, j, (ushort)type, -1, 0);
					}
					else if (type == 237 || type == 244 || type == 285 || type == 286 || type == 298 || type == 299 || type == 310 || type == 339)
					{
						WorldGen.Place3x2(i, j, (ushort)type, 0);
					}
					else if (type == 128)
					{
						WorldGen.PlaceMan(i, j, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 269)
					{
						WorldGen.PlaceWoman(i, j, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 334)
					{
						int style2 = 0;
						if (style == -1)
						{
							style2 = 1;
						}
						WorldGen.Place3x3Wall(i, j, 334, style2);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 149)
					{
						if (WorldGen.SolidTile(i - 1, j) || WorldGen.SolidTile(i + 1, j) || WorldGen.SolidTile(i, j - 1) || WorldGen.SolidTile(i, j + 1))
						{
							tile.frameX = (short)(18 * style);
							tile.active(true);
							tile.type = (ushort)type;
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 139 || type == 35)
					{
						WorldGen.PlaceMB(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 165)
					{
						WorldGen.PlaceTight(i, j, (ushort)type, false);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 235)
					{
						WorldGen.Place3x1(i, j, (ushort)type, 0);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 240)
					{
						WorldGen.Place3x3Wall(i, j, (ushort)type, style);
					}
					else if (type == 245)
					{
						WorldGen.Place2x3Wall(i, j, (ushort)type, style);
					}
					else if (type == 246)
					{
						WorldGen.Place3x2Wall(i, j, (ushort)type, style);
					}
					else if (type == 241)
					{
						WorldGen.Place4x3Wall(i, j, (ushort)type, style);
					}
					else if (type == 242)
					{
						WorldGen.Place6x4Wall(i, j, (ushort)type, style);
					}
					else if (type == 34)
					{
						WorldGen.PlaceChand(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 106 || type == 212 || type == 219 || type == 220 || type == 228 || type == 231 || type == 243 || type == 247 || type == 283 || (type >= 300 && type <= 308))
					{
						WorldGen.Place3x3(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 13 || type == 33 || type == 49 || type == 50 || type == 78 || type == 174)
					{
						WorldGen.PlaceOnTable1x1(i, j, type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 14 || type == 26 || type == 86 || type == 87 || type == 88 || type == 89 || type == 114 || type == 186 || type == 187 || type == 215 || type == 217 || type == 218)
					{
						WorldGen.Place3x2(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 236)
					{
						WorldGen.PlaceJunglePlant(i, j, (ushort)type, WorldGen.genRand.Next(3), 0);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 238)
					{
						WorldGen.PlaceJunglePlant(i, j, (ushort)type, 0, 0);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 20)
					{
						if (Main.tile[i, j + 1] == null)
						{
							Main.tile[i, j + 1] = new Tile();
						}
						int type2 = (int)Main.tile[i, j + 1].type;
						if (Main.tile[i, j + 1].active() && (type2 == 2 || type2 == 109 || type2 == 147 || type2 == 60 || type2 == 23 || type2 == 199 || type2 == 53 || type2 == 234 || type2 == 116 || type2 == 112))
						{
							WorldGen.Place1x2(i, j, (ushort)type, style);
							WorldGen.SquareTileFrame(i, j, true);
						}
					}
					else if (type == 15 || type == 216 || type == 338)
					{
						if (Main.tile[i, j - 1] == null)
						{
							Main.tile[i, j - 1] = new Tile();
						}
						if (Main.tile[i, j] == null)
						{
							Main.tile[i, j] = new Tile();
						}
						WorldGen.Place1x2(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 227)
					{
						WorldGen.PlaceDye(i, j, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 16 || type == 18 || type == 29 || type == 103 || type == 134)
					{
						WorldGen.Place2x1(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 92 || type == 93)
					{
						WorldGen.Place1xX(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 104 || type == 105 || type == 320 || type == 337)
					{
						WorldGen.Place2xX(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 17 || type == 77 || type == 133)
					{
						WorldGen.Place3x2(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 207)
					{
						WorldGen.Place2xX(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 21)
					{
						WorldGen.PlaceChest(i, j, (ushort)type, false, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 91)
					{
						WorldGen.PlaceBanner(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 135 || type == 141 || type == 144 || type == 210 || type == 239 || type == 36 || type == 324)
					{
						WorldGen.Place1x1(i, j, type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 101 || type == 102)
					{
						WorldGen.Place3x4(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 27)
					{
						WorldGen.PlaceSunflower(i, j, 27);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 28)
					{
						WorldGen.PlacePot(i, j, 28, Main.rand.Next(4));
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 42 || type == 270 || type == 271)
					{
						WorldGen.Place1x2Top(i, j, (ushort)type, style);
						WorldGen.SquareTileFrame(i, j, true);
					}
					else if (type == 55 || type == 85)
					{
						WorldGen.PlaceSign(i, j, (ushort)type, style);
					}
					else if (Main.tileAlch[type])
					{
						WorldGen.PlaceAlch(i, j, style);
					}
					else if (type == 94 || type == 95 || type == 97 || type == 98 || type == 99 || type == 100 || type == 125 || type == 126 || type == 173 || type == 287)
					{
						WorldGen.Place2x2(i, j, (ushort)type, style);
					}
					else if (type == 96)
					{
						WorldGen.Place2x2Style(i, j, (ushort)type, style);
					}
					else if (type == 79 || type == 90)
					{
						int direction = 1;
						if (plr > -1)
						{
							direction = Main.player[plr].direction;
						}
						WorldGen.Place4x2(i, j, (ushort)type, direction, style);
					}
					else if (type == 209)
					{
						WorldGen.PlaceCannon(i, j, (ushort)type, style);
					}
					else if (type == 81)
					{
						tile.frameX = (short)(26 * WorldGen.genRand.Next(6));
						tile.active(true);
						tile.type = (ushort)type;
					}
					else if (type == 19)
					{
						tile.frameY = (short)(18 * style);
						tile.active(true);
						tile.type = (ushort)type;
					}
					else if (type == 314)
					{
						Minecart.PlaceTrack(tile, style);
					}
					else
					{
						tile.active(true);
						tile.type = (ushort)type;
					}
					if (tile.active() && !mute)
					{
						WorldGen.SquareTileFrame(i, j, true);
						result = true;
						if (type == 127)
						{
							Main.PlaySound(2, i * 16, j * 16, 30);
						}
						else if (type == 314)
						{
							Main.PlaySound(2, i * 16, j * 16, 52);
						}
						else if (type >= 330 && type <= 333)
						{
							Main.PlaySound(18, i * 16, j * 16, 1);
						}
						else
						{
							Main.PlaySound(0, i * 16, j * 16, 1);
						}
						if (type == 22 || type == 140)
						{
							for (int k = 0; k < 3; k++)
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 14, 0f, 0f, 0, default(Color), 1f);
							}
						}
					}
				}
			}
			return result;
		}
		public static void KillWall(int i, int j, bool fail = false)
		{
			if (i >= 0 && j >= 0 && i < Main.maxTilesX && j < Main.maxTilesY)
			{
				Tile tile = Main.tile[i, j];
				if (tile == null)
				{
					tile = new Tile();
					Main.tile[i, j] = tile;
				}
				if (tile.wall > 0)
				{
					if (tile.wall == 21 || tile.wall == 136 || tile.wall == 137 || tile.wall == 168 || tile.wall == 169)
					{
						Main.PlaySound(13, i * 16, j * 16, 1);
					}
					else if (tile.wall >= 63 && tile.wall <= 70)
					{
						Main.PlaySound(6, i * 16, j * 16, 1);
					}
					else
					{
						Main.PlaySound(0, i * 16, j * 16, 1);
					}
					int num = 10;
					if (fail)
					{
						num = 3;
					}
					for (int k = 0; k < num; k++)
					{
						int num2 = 0;
						if (tile.wall == 148)
						{
							num2 = -1;
						}
						if (tile.wall == 1 || tile.wall == 5 || tile.wall == 6 || tile.wall == 7 || tile.wall == 107 || tile.wall == 8 || tile.wall == 9 || (tile.wall >= 48 && tile.wall <= 53) || (tile.wall >= 54 && tile.wall <= 58))
						{
							num2 = 1;
						}
						if (tile.wall >= 94 && tile.wall <= 105)
						{
							num2 = 1;
						}
						if (tile.wall == 3)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num2 = 14;
							}
							else
							{
								num2 = 1;
							}
						}
						if (tile.wall == 35)
						{
							num2 = 37;
						}
						if (tile.wall == 4 || tile.wall == 106)
						{
							num2 = 7;
						}
						if (tile.wall == 12)
						{
							num2 = 9;
						}
						if (tile.wall == 10)
						{
							num2 = 10;
						}
						if (tile.wall == 11)
						{
							num2 = 11;
						}
						if (tile.wall == 21)
						{
							num2 = 13;
						}
						if (tile.wall == 34)
						{
							num2 = 32;
						}
						if (tile.wall == 145)
						{
							num2 = 8;
						}
						if (tile.wall == 22 || tile.wall == 28)
						{
							num2 = 51;
						}
						if (tile.wall == 23)
						{
							num2 = 38;
						}
						if (tile.wall == 24)
						{
							num2 = 36;
						}
						if (tile.wall == 25)
						{
							num2 = 48;
						}
						if (tile.wall == 113)
						{
							num2 = 189;
						}
						if (tile.wall == 114)
						{
							num2 = 190;
						}
						if (tile.wall == 115)
						{
							num2 = 191;
						}
						if (tile.wall == 142)
						{
							num2 = 210;
						}
						if (tile.wall == 143)
						{
							num2 = 210;
						}
						if (tile.wall >= 153 && tile.wall <= 166)
						{
							switch (tile.wall)
							{
							case 153:
							case 157:
								num2 = 138;
								break;
							case 154:
							case 158:
								num2 = 86;
								break;
							case 155:
							case 159:
								num2 = 91;
								break;
							case 156:
							case 160:
								num2 = 89;
								break;
							case 161:
							case 164:
								num2 = 90;
								break;
							case 162:
							case 165:
								num2 = 88;
								break;
							case 163:
							case 166:
								num2 = 87;
								break;
							}
						}
						if (tile.wall == 26 || tile.wall == 30)
						{
							num2 = 49;
						}
						if (tile.wall == 29 || tile.wall == 32)
						{
							num2 = 50;
						}
						if (tile.wall == 31)
						{
							num2 = 51;
						}
						if (tile.wall == 14 || tile.wall == 20)
						{
							num2 = 109;
						}
						if (tile.wall >= 88 && tile.wall <= 93)
						{
							num2 = 86 + tile.wall - 88;
							if (tile.wall == 93)
							{
								num2 = WorldGen.genRand.Next(88, 94);
							}
						}
						if (tile.wall == 33)
						{
							num2 = 14;
						}
						if (tile.wall == 41)
						{
							num2 = 77;
						}
						if (tile.wall == 42)
						{
							num2 = 78;
						}
						if (tile.wall == 43)
						{
							num2 = 78;
						}
						if (tile.wall == 43)
						{
							num2 = 78;
						}
						if (tile.wall == 36)
						{
							num2 = 26;
						}
						if (tile.wall == 37)
						{
							num2 = 32;
						}
						if (tile.wall == 38)
						{
							num2 = 2;
						}
						if (tile.wall == 39)
						{
							num2 = 1;
						}
						if (tile.wall == 40)
						{
							num2 = 51;
						}
						if (tile.wall == 45)
						{
							num2 = 81;
						}
						if (tile.wall == 46)
						{
							num2 = 83;
						}
						if (tile.wall == 47)
						{
							num2 = 84;
						}
						if (tile.wall == 85)
						{
							num2 = 126;
						}
						if (tile.wall == 59)
						{
							num2 = 0;
						}
						if (tile.wall == 60)
						{
							num2 = 1;
						}
						if (tile.wall == 61)
						{
							num2 = 0;
						}
						if (tile.wall == 62)
						{
							num2 = 0;
						}
						if (tile.wall == 63)
						{
							num2 = 3;
						}
						if (tile.wall == 65)
						{
							num2 = 3;
						}
						if (tile.wall == 66)
						{
							num2 = 3;
						}
						if (tile.wall == 68)
						{
							num2 = 3;
						}
						if (tile.wall == 64)
						{
							num2 = 40;
						}
						if (tile.wall == 67)
						{
							num2 = 40;
						}
						if (tile.wall == 84)
						{
							num2 = 80;
						}
						if (tile.wall == 71)
						{
							num2 = 80;
						}
						if (tile.wall == 71)
						{
							num2 = 80;
						}
						if (tile.wall == 167)
						{
							num2 = 81;
						}
						if (tile.wall == 147)
						{
							num2 = 51;
						}
						if (tile.wall == 146)
						{
							num2 = 9;
						}
						if (tile.wall == 109)
						{
							num2 = 144;
						}
						if (tile.wall == 110)
						{
							num2 = 145;
						}
						if (tile.wall == 111)
						{
							num2 = 146;
						}
						if (tile.wall == 86 || tile.wall == 108)
						{
							num2 = 147;
						}
						if (tile.wall == 87)
						{
							num2 = 148;
						}
						if (tile.wall == 83)
						{
							num2 = 117;
							if (WorldGen.genRand.Next(2) == 0)
							{
								num2 = 1;
							}
						}
						if (tile.wall == 81)
						{
							num2 = 123;
						}
						if (tile.wall == 136)
						{
							num2 = 13;
						}
						if (tile.wall == 137)
						{
							num2 = 13;
						}
						if (tile.wall == 168)
						{
							num2 = 13;
						}
						if (tile.wall == 169)
						{
							num2 = 13;
						}
						if (tile.wall == 72)
						{
							num2 = 40;
						}
						if (tile.wall == 73)
						{
							num2 = 16;
						}
						if (tile.wall == 74 || tile.wall == 80)
						{
							num2 = 26;
						}
						if (tile.wall == 144)
						{
							if (Main.rand.Next(2) == 0)
							{
								num2 = 10;
							}
							else
							{
								num2 = 118;
							}
						}
						if (tile.wall == 75)
						{
							num2 = 26;
						}
						if (tile.wall == 76)
						{
							num2 = 4;
						}
						if (tile.wall == 77 || tile.wall == 81)
						{
							num2 = 5;
						}
						if (tile.wall == 78)
						{
							num2 = 7;
						}
						if (tile.wall == 79)
						{
							num2 = 37;
						}
						if (tile.wall == 82)
						{
							num2 = 36;
						}
						if (tile.wall == 69)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num2 = 14;
							}
							else
							{
								num2 = 17;
							}
						}
						if (tile.wall == 70)
						{
							num2 = 47;
						}
						if (tile.wall == 27)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num2 = 7;
							}
							else
							{
								num2 = 1;
							}
						}
						if (tile.wall == 138)
						{
							num2 = 77;
						}
						if (tile.wall == 139)
						{
							num2 = 78;
						}
						if (tile.wall == 140)
						{
							num2 = 79;
						}
						if (tile.wall == 141)
						{
							num2 = 126;
						}
						if (tile.wall == 149 || tile.wall == 150)
						{
							num2 = 214;
						}
						if (tile.wall == 151 || tile.wall == 152)
						{
							num2 = 215;
						}
						if (tile.wall == 44)
						{
							int num3 = Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 0.75f);
							Main.dust[num3].noGravity = true;
						}
						else if ((tile.wall < 133 || tile.wall > 135) && (tile.wall < 116 || tile.wall > 125) && (tile.wall < 126 || tile.wall > 132))
						{
							if (tile.wall == 76)
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num2, 0f, 0f, 75, new Color(0, 80, 255, 100), 0.75f);
							}
							else if (num2 >= 0)
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num2, 0f, 0f, 0, default(Color), 1f);
							}
						}
					}
					if (fail)
					{
						WorldGen.SquareWallFrame(i, j, true);
						return;
					}
					int num4 = 0;
					if (tile.wall == 168)
					{
						num4 = 2696;
					}
					if (tile.wall == 169)
					{
						num4 = 2698;
					}
					if (tile.wall == 142)
					{
						num4 = 2263;
					}
					if (tile.wall == 143)
					{
						num4 = 2264;
					}
					if (tile.wall == 144)
					{
						num4 = 2271;
					}
					if (tile.wall == 149)
					{
						num4 = 2505;
					}
					if (tile.wall == 150)
					{
						num4 = 2507;
					}
					if (tile.wall == 151)
					{
						num4 = 2506;
					}
					if (tile.wall == 152)
					{
						num4 = 2508;
					}
					if (tile.wall == 1)
					{
						num4 = 26;
					}
					if (tile.wall == 4)
					{
						num4 = 93;
					}
					if (tile.wall == 5)
					{
						num4 = 130;
					}
					if (tile.wall == 6)
					{
						num4 = 132;
					}
					if (tile.wall == 7)
					{
						num4 = 135;
					}
					if (tile.wall == 8)
					{
						num4 = 138;
					}
					if (tile.wall == 9)
					{
						num4 = 140;
					}
					if (tile.wall == 10)
					{
						num4 = 142;
					}
					if (tile.wall == 11)
					{
						num4 = 144;
					}
					if (tile.wall == 12)
					{
						num4 = 146;
					}
					if (tile.wall == 14)
					{
						num4 = 330;
					}
					if (tile.wall == 167)
					{
						num4 = 2691;
					}
					if (tile.wall >= 153 && tile.wall <= 166)
					{
						switch (tile.wall)
						{
						case 153:
							num4 = 2677;
							break;
						case 154:
							num4 = 2679;
							break;
						case 155:
							num4 = 2681;
							break;
						case 156:
							num4 = 2683;
							break;
						case 157:
							num4 = 2678;
							break;
						case 158:
							num4 = 2680;
							break;
						case 159:
							num4 = 2682;
							break;
						case 160:
							num4 = 2684;
							break;
						case 161:
							num4 = 2686;
							break;
						case 162:
							num4 = 2688;
							break;
						case 163:
							num4 = 2690;
							break;
						case 164:
							num4 = 2685;
							break;
						case 165:
							num4 = 2687;
							break;
						case 166:
							num4 = 2689;
							break;
						}
					}
					if (tile.wall == 136)
					{
						num4 = 2169;
					}
					if (tile.wall == 137)
					{
						num4 = 2170;
					}
					if (tile.wall == 145)
					{
						num4 = 2333;
					}
					if (tile.wall == 16)
					{
						num4 = 30;
					}
					if (tile.wall == 17)
					{
						num4 = 135;
					}
					if (tile.wall == 18)
					{
						num4 = 138;
					}
					if (tile.wall == 19)
					{
						num4 = 140;
					}
					if (tile.wall == 20)
					{
						num4 = 330;
					}
					if (tile.wall == 21)
					{
						num4 = 392;
					}
					if (tile.wall == 86 || tile.wall == 108)
					{
						num4 = 1126;
					}
					if (tile.wall == 133)
					{
						num4 = 2158;
					}
					if (tile.wall == 134)
					{
						num4 = 2159;
					}
					if (tile.wall == 135)
					{
						num4 = 2160;
					}
					else if (tile.wall == 113)
					{
						num4 = 1726;
					}
					else if (tile.wall == 114)
					{
						num4 = 1728;
					}
					else if (tile.wall == 115)
					{
						num4 = 1730;
					}
					else if (tile.wall == 146)
					{
						num4 = 2432;
					}
					else if (tile.wall == 147)
					{
						num4 = 2433;
					}
					else if (tile.wall == 148)
					{
						num4 = 2434;
					}
					if (tile.wall >= 116 && tile.wall <= 125)
					{
						num4 = 1948 + (int)tile.wall - 116;
					}
					if (tile.wall >= 126 && tile.wall <= 132)
					{
						num4 = 2008 + (int)tile.wall - 126;
					}
					if (tile.wall == 22)
					{
						num4 = 417;
					}
					if (tile.wall == 23)
					{
						num4 = 418;
					}
					if (tile.wall == 24)
					{
						num4 = 419;
					}
					if (tile.wall == 25)
					{
						num4 = 420;
					}
					if (tile.wall == 26)
					{
						num4 = 421;
					}
					if (tile.wall == 29)
					{
						num4 = 587;
					}
					if (tile.wall == 30)
					{
						num4 = 592;
					}
					if (tile.wall == 31)
					{
						num4 = 595;
					}
					if (tile.wall == 32)
					{
						num4 = 605;
					}
					if (tile.wall == 33)
					{
						num4 = 606;
					}
					if (tile.wall == 34)
					{
						num4 = 608;
					}
					if (tile.wall == 35)
					{
						num4 = 610;
					}
					if (tile.wall == 36)
					{
						num4 = 615;
					}
					if (tile.wall == 37)
					{
						num4 = 616;
					}
					if (tile.wall == 38)
					{
						num4 = 617;
					}
					if (tile.wall == 39)
					{
						num4 = 618;
					}
					if (tile.wall == 41)
					{
						num4 = 622;
					}
					if (tile.wall == 42)
					{
						num4 = 623;
					}
					if (tile.wall == 43)
					{
						num4 = 624;
					}
					if (tile.wall == 44)
					{
						num4 = 663;
					}
					if (tile.wall == 45)
					{
						num4 = 720;
					}
					if (tile.wall == 46)
					{
						num4 = 721;
					}
					if (tile.wall == 47)
					{
						num4 = 722;
					}
					if (tile.wall == 66)
					{
						num4 = 745;
					}
					if (tile.wall == 67)
					{
						num4 = 746;
					}
					if (tile.wall == 68)
					{
						num4 = 747;
					}
					if (tile.wall == 84)
					{
						num4 = 884;
					}
					if (tile.wall == 72)
					{
						num4 = 750;
					}
					if (tile.wall == 73)
					{
						num4 = 752;
					}
					if (tile.wall == 74)
					{
						num4 = 764;
					}
					if (tile.wall == 85)
					{
						num4 = 927;
					}
					if (tile.wall == 75)
					{
						num4 = 768;
					}
					if (tile.wall == 76)
					{
						num4 = 769;
					}
					if (tile.wall == 77)
					{
						num4 = 770;
					}
					if (tile.wall == 82)
					{
						num4 = 825;
					}
					if (tile.wall == 27)
					{
						num4 = 479;
					}
					if (tile.wall == 106)
					{
						num4 = 1447;
					}
					if (tile.wall == 107)
					{
						num4 = 1448;
					}
					if (tile.wall == 109)
					{
						num4 = 1590;
					}
					if (tile.wall == 110)
					{
						num4 = 1592;
					}
					if (tile.wall == 111)
					{
						num4 = 1594;
					}
					if (tile.wall == 78)
					{
						num4 = 1723;
					}
					if (tile.wall == 87 || tile.wall == 112)
					{
						num4 = 1102;
					}
					if (tile.wall == 94 || tile.wall == 100)
					{
						num4 = 1378;
					}
					if (tile.wall == 95 || tile.wall == 101)
					{
						num4 = 1379;
					}
					if (tile.wall == 96 || tile.wall == 102)
					{
						num4 = 1380;
					}
					if (tile.wall == 97 || tile.wall == 103)
					{
						num4 = 1381;
					}
					if (tile.wall == 98 || tile.wall == 104)
					{
						num4 = 1382;
					}
					if (tile.wall == 99 || tile.wall == 105)
					{
						num4 = 1383;
					}
					if (tile.wall >= 88 && tile.wall <= 93)
					{
						num4 = 1267 + (int)tile.wall - 88;
					}
					if (tile.wall >= 138 && tile.wall <= 141)
					{
						num4 = 2210 + (int)tile.wall - 138;
					}
					if (num4 > 0)
					{
						Item.NewItem(i * 16, j * 16, 16, 16, num4, 1, false, 0, false);
					}
					tile.wall = 0;
					tile.wallColor(0);
					WorldGen.SquareWallFrame(i, j, true);
					if (tile.type == 240 || tile.type == 241 || tile.type == 242 || tile.type == 245 || tile.type == 246 || tile.type == 4 || tile.type == 136 || tile.type == 334)
					{
						WorldGen.TileFrame(i, j, false, false);
					}
				}
			}
		}
		public static void LaunchRocket(int x, int y)
		{
			int i = (int)Main.tile[x, y].frameY;
			int num = 0;
			while (i >= 40)
			{
				i -= 40;
				num++;
			}
			if (i == 18)
			{
				y--;
			}
			Vector2 vector = new Vector2((float)(x * 16 + 8), (float)(y * 16 + 4));
			int type = 167 + num;
			int damage = 150;
			int num2 = 7;
			Projectile.NewProjectile(vector.X, vector.Y + 2f, 0f, -8f, type, damage, (float)num2, Main.myPlayer, 0f, 0f);
			Main.tile[x, y].active(false);
			Main.tile[x, y + 1].active(false);
			NetMessage.SendTileSquare(-1, x - 1, y, 3);
		}
		public static void LaunchRocketSmall(int x, int y)
		{
			if (Main.tile[x, y].frameX == 18)
			{
				x--;
			}
			if (Main.tile[x, y].frameY == 18)
			{
				y--;
			}
			Vector2 vector = new Vector2((float)(x * 16 + 16), (float)(y * 16));
			int type = 415 + Main.rand.Next(4);
			int damage = 0;
			int num = 0;
			Projectile.NewProjectile(vector.X, vector.Y + 2f, 0f, -8f, type, damage, (float)num, Main.myPlayer, 0f, 0f);
		}
		public static void KillTile(int i, int j, bool fail = false, bool effectOnly = false, bool noItem = false)
		{
			if (i >= 0 && j >= 0 && i < Main.maxTilesX && j < Main.maxTilesY)
			{
				Tile tile = Main.tile[i, j];
				if (tile == null)
				{
					tile = new Tile();
					Main.tile[i, j] = tile;
				}
				if (tile.active())
				{
					if (j >= 1 && Main.tile[i, j - 1] == null)
					{
						Main.tile[i, j - 1] = new Tile();
					}
					if (j >= 1 && Main.tile[i, j - 1].active() && ((Main.tile[i, j - 1].type == 5 && tile.type != 5) || (Main.tile[i, j - 1].type == 323 && tile.type != 323) || (Main.tile[i, j - 1].type == 21 && tile.type != 21) || (Main.tile[i, j - 1].type == 26 && tile.type != 26) || (Main.tile[i, j - 1].type == 72 && tile.type != 72) || (Main.tile[i, j - 1].type == 12 && tile.type != 12)))
					{
						if (Main.tile[i, j - 1].type == 5)
						{
							if ((Main.tile[i, j - 1].frameX != 66 || Main.tile[i, j - 1].frameY < 0 || Main.tile[i, j - 1].frameY > 44) && (Main.tile[i, j - 1].frameX != 88 || Main.tile[i, j - 1].frameY < 66 || Main.tile[i, j - 1].frameY > 110) && Main.tile[i, j - 1].frameY < 198)
							{
								return;
							}
						}
						else if (Main.tile[i, j - 1].type != 323 || Main.tile[i, j - 1].frameX == 66 || Main.tile[i, j - 1].frameX == 220)
						{
							return;
						}
					}
					if (tile.type == 10 && tile.frameY >= 594 && tile.frameY <= 646)
					{
						fail = true;
					}
					if (tile.type == 138)
					{
						fail = WorldGen.CheckBoulderChest(i, j);
					}
					if (tile.type == 235)
					{
						int frameX = (int)tile.frameX;
						int num = i - frameX % 54 / 18;
						for (int k = 0; k < 3; k++)
						{
							if (Main.tile[num + k, j - 1].active() && Main.tile[num + k, j - 1].type == 21)
							{
								fail = true;
								break;
							}
						}
					}
					if (!effectOnly && !WorldGen.stopDrops)
					{
						if (tile.type == 127)
						{
							Main.PlaySound(2, i * 16, j * 16, 27);
						}
						else if (tile.type == 147 || tile.type == 224)
						{
							Main.PlaySound(2, i * 16, j * 16, WorldGen.genRand.Next(48, 50));
						}
						else if (tile.type == 161 || tile.type == 163 || tile.type == 164 || tile.type == 200)
						{
							Main.PlaySound(2, i * 16, j * 16, 50);
						}
						else if (tile.type == 3 || tile.type == 110)
						{
							Main.PlaySound(6, i * 16, j * 16, 1);
							if (tile.frameX == 144)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, 5, 1, false, 0, false);
							}
						}
						else if (tile.type == 254)
						{
							Main.PlaySound(6, i * 16, j * 16, 1);
						}
						else if (tile.type == 24)
						{
							Main.PlaySound(6, i * 16, j * 16, 1);
							if (tile.frameX == 144)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, 60, 1, false, 0, false);
							}
						}
						else if (Main.tileAlch[(int)tile.type] || tile.type == 32 || tile.type == 51 || tile.type == 52 || tile.type == 61 || tile.type == 62 || tile.type == 69 || tile.type == 71 || tile.type == 73 || tile.type == 74 || tile.type == 113 || tile.type == 115 || tile.type == 184 || tile.type == 192 || tile.type == 205 || tile.type == 233)
						{
							Main.PlaySound(6, i * 16, j * 16, 1);
						}
						else if (tile.type == 201)
						{
							Main.PlaySound(6, i * 16, j * 16, 1);
						}
						else if (tile.type == 1 || tile.type == 6 || tile.type == 7 || tile.type == 8 || tile.type == 9 || tile.type == 22 || tile.type == 140 || tile.type == 25 || tile.type == 37 || tile.type == 38 || tile.type == 39 || tile.type == 41 || tile.type == 43 || tile.type == 44 || tile.type == 45 || tile.type == 46 || tile.type == 47 || tile.type == 48 || tile.type == 56 || tile.type == 58 || tile.type == 63 || tile.type == 64 || tile.type == 65 || tile.type == 66 || tile.type == 67 || tile.type == 68 || tile.type == 75 || tile.type == 76 || tile.type == 107 || tile.type == 108 || tile.type == 111 || tile.type == 117 || tile.type == 118 || tile.type == 119 || tile.type == 120 || tile.type == 121 || tile.type == 122 || tile.type == 150 || tile.type == 151 || tile.type == 152 || tile.type == 153 || tile.type == 154 || tile.type == 155 || tile.type == 156 || tile.type == 160 || tile.type == 161 || tile.type == 166 || tile.type == 167 || tile.type == 168 || tile.type == 169 || tile.type == 175 || tile.type == 176 || tile.type == 177 || tile.type == 203 || tile.type == 202 || tile.type == 204 || tile.type == 206 || tile.type == 211 || tile.type == 221 || tile.type == 222 || tile.type == 223 || tile.type == 226 || tile.type == 248 || tile.type == 249 || tile.type == 250 || tile.type == 272 || tile.type == 273 || tile.type == 274 || tile.type == 284 || tile.type == 325)
						{
							Main.PlaySound(21, i * 16, j * 16, 1);
						}
						else if (tile.type == 231 || tile.type == 195)
						{
							Main.PlaySound(4, i * 16, j * 16, 1);
						}
						else if (tile.type == 26 && tile.frameX >= 54)
						{
							Main.PlaySound(4, i * 16, j * 16, 1);
						}
						else if (tile.type == 314)
						{
							Main.PlaySound(2, i * 16, j * 16, 52);
						}
						else if (tile.type >= 330 && tile.type <= 333)
						{
							Main.PlaySound(18, i * 16, j * 16, 1);
						}
						else if (tile.type != 138)
						{
							Main.PlaySound(0, i * 16, j * 16, 1);
						}
						if ((tile.type == 162 || tile.type == 129 || (tile.type == 165 && tile.frameX < 54)) && !fail)
						{
							Main.PlaySound(2, i * 16, j * 16, 27);
						}
					}
					int num2 = 10;
					if (tile.type == 231)
					{
						num2 = 6;
					}
					if (tile.type == 128 || tile.type == 269)
					{
						int num3 = i;
						int l = (int)tile.frameX;
						int m;
						for (m = (int)tile.frameX; m >= 100; m -= 100)
						{
						}
						while (m >= 36)
						{
							m -= 36;
						}
						if (m == 18)
						{
							l = (int)Main.tile[i - 1, j].frameX;
							num3--;
						}
						if (l >= 100)
						{
							int num4 = 0;
							while (l >= 100)
							{
								l -= 100;
								num4++;
							}
							int num5 = Main.tile[num3, j].frameY / 18;
							if (num5 == 0)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, Item.headType[num4], 1, false, 0, false);
							}
							if (num5 == 1)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, Item.bodyType[num4], 1, false, 0, false);
							}
							if (num5 == 2)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, Item.legType[num4], 1, false, 0, false);
							}
							for (l = (int)Main.tile[num3, j].frameX; l >= 100; l -= 100)
							{
							}
							Main.tile[num3, j].frameX = (short)l;
						}
					}
					if (tile.type == 334)
					{
						int num6 = i;
						int n = (int)tile.frameX;
						int num7 = (int)tile.frameX;
						int num8 = 0;
						while (num7 >= 5000)
						{
							num7 -= 5000;
							num8++;
						}
						if (num8 != 0)
						{
							num7 = (num8 - 1) * 18;
						}
						num7 %= 54;
						if (num7 == 18)
						{
							n = (int)Main.tile[i - 1, j].frameX;
							num6--;
						}
						if (num7 == 36)
						{
							n = (int)Main.tile[i - 2, j].frameX;
							num6 -= 2;
						}
						if (n >= 5000)
						{
							int num9 = n % 5000;
							num9 -= 100;
							int num10 = (int)Main.tile[num6 + 1, j].frameX;
							if (num10 >= 25000)
							{
								num10 -= 25000;
							}
							else
							{
								num10 -= 10000;
							}
							if (Main.netMode != 1)
							{
								Item item = new Item();
								item.netDefaults(num9);
								item.Prefix(num10);
								int num11 = Item.NewItem(i * 16, j * 16, 16, 16, num9, 1, true, 0, false);
								item.position = Main.item[num11].position;
								Main.item[num11] = item;
								NetMessage.SendData(21, -1, -1, "", num11, 0f, 0f, 0f, 0);
							}
							n = (int)Main.tile[num6, j].frameX;
							int num12 = 0;
							while (n >= 5000)
							{
								n -= 5000;
								num12++;
							}
							if (num12 != 0)
							{
								n = (num12 - 1) * 18;
							}
							Main.tile[num6, j].frameX = (short)n;
							Main.tile[num6 + 1, j].frameX = (short)(n + 18);
						}
					}
					if (fail)
					{
						num2 = 3;
					}
					if (tile.type == 138)
					{
						num2 = 0;
					}
					if (tile.type >= 300 && tile.type <= 308)
					{
						num2 = 0;
					}
					if (tile.type == 125)
					{
						num2 = 0;
					}
					if (tile.type == 287)
					{
						num2 = 0;
					}
					int num13 = 0;
					while (num13 < num2)
					{
						int num14 = 0;
						if (tile.type == 216)
						{
							num14 = -1;
						}
						if (tile.type == 335)
						{
							num14 = -1;
						}
						if (tile.type == 338)
						{
							num14 = -1;
						}
						if (tile.type == 0)
						{
							num14 = 0;
						}
						if (tile.type == 192)
						{
							num14 = 3;
						}
						if (tile.type == 208)
						{
							num14 = 126;
						}
						if (tile.type == 16)
						{
							num14 = 1;
							if (tile.frameX >= 36)
							{
								num14 = 82;
							}
						}
						if (tile.type == 1 || tile.type == 17 || tile.type == 38 || tile.type == 39 || tile.type == 41 || tile.type == 43 || tile.type == 44 || tile.type == 48 || Main.tileStone[(int)tile.type] || tile.type == 85 || tile.type == 90 || tile.type == 92 || tile.type == 96 || tile.type == 97 || tile.type == 99 || tile.type == 117 || tile.type == 130 || tile.type == 131 || tile.type == 132 || tile.type == 135 || tile.type == 135 || tile.type == 142 || tile.type == 143 || tile.type == 144 || tile.type == 210 || tile.type == 207 || tile.type == 235 || tile.type == 247 || tile.type == 272 || tile.type == 273 || tile.type == 283)
						{
							num14 = 1;
						}
						if (tile.type == 311)
						{
							num14 = 207;
						}
						if (tile.type == 312)
						{
							num14 = 208;
						}
						if (tile.type == 313)
						{
							num14 = 209;
						}
						if (tile.type == 104)
						{
							num14 = -1;
						}
						if (tile.type == 95 || tile.type == 98 || tile.type == 100 || tile.type == 174 || tile.type == 173)
						{
							num14 = 6;
						}
						if (tile.type == 30 || tile.type == 86 || tile.type == 94 || tile.type == 106 || tile.type == 114 || tile.type == 124 || tile.type == 128 || tile.type == 269)
						{
							num14 = 7;
						}
						if (tile.type == 334)
						{
							num14 = 7;
						}
						ushort type = tile.type;
						if (type <= 89)
						{
							switch (type)
							{
							case 10:
							case 11:
								goto IL_1144;
							default:
								switch (type)
								{
								case 87:
								case 89:
									goto IL_1144;
								}
								break;
							}
						}
						else
						{
							if (type == 93 || type == 139)
							{
								goto IL_1144;
							}
							switch (type)
							{
							case 319:
							case 320:
								goto IL_1144;
							}
						}
						IL_1147:
						if (tile.type == 240)
						{
							int num15 = tile.frameX / 54;
							if (tile.frameY >= 54)
							{
								num15 += 36;
							}
							num14 = 7;
							if (num15 == 16 || num15 == 17)
							{
								num14 = 26;
							}
							if (num15 >= 46 && num15 <= 49)
							{
								num14 = -1;
							}
						}
						if (tile.type == 241)
						{
							num14 = 1;
						}
						if (tile.type == 242)
						{
							num14 = -1;
						}
						if (tile.type == 246)
						{
							num14 = -1;
						}
						if (tile.type == 36)
						{
							num14 = -1;
						}
						if (tile.type == 170)
						{
							num14 = 196;
						}
						if (tile.type == 315)
						{
							num14 = 225;
						}
						if (tile.type == 171)
						{
							if (Main.rand.Next(2) == 0)
							{
								num14 = 196;
							}
							else
							{
								num14 = -1;
							}
						}
						if (tile.type == 326)
						{
							num14 = 13;
						}
						if (tile.type == 327)
						{
							num14 = 13;
						}
						if (tile.type == 336)
						{
							num14 = 6;
						}
						if (tile.type == 328)
						{
							num14 = 13;
						}
						if (tile.type == 329)
						{
							num14 = 13;
						}
						if (tile.type == 330)
						{
							num14 = 9;
						}
						if (tile.type == 331)
						{
							num14 = 11;
						}
						if (tile.type == 332)
						{
							num14 = 19;
						}
						if (tile.type == 333)
						{
							num14 = 11;
						}
						if (tile.type == 101)
						{
							num14 = -1;
						}
						if (tile.type == 19)
						{
							int num16 = tile.frameY / 18;
							if (num16 == 0 || num16 == 9 || num16 == 10 || num16 == 11 || num16 == 12)
							{
								num14 = 7;
							}
							else if (num16 == 1)
							{
								num14 = 77;
							}
							else if (num16 == 2)
							{
								num14 = 78;
							}
							else if (num16 == 3)
							{
								num14 = 79;
							}
							else if (num16 == 4)
							{
								num14 = 26;
							}
							else if (num16 == 5)
							{
								num14 = 126;
							}
							else if (num16 == 13)
							{
								num14 = 109;
							}
							else if (num16 == 14)
							{
								num14 = 13;
							}
							else if (num16 >= 15 || num16 <= 16)
							{
								num14 = -1;
							}
							else if (num16 == 17)
							{
								num14 = 215;
							}
							else if (num16 == 18)
							{
								num14 = 214;
							}
							else
							{
								num14 = 1;
							}
						}
						if (tile.type == 79)
						{
							int num17 = tile.frameY / 36;
							if (num17 == 0)
							{
								num14 = 7;
							}
							else if (num17 == 1)
							{
								num14 = 77;
							}
							else if (num17 == 2)
							{
								num14 = 78;
							}
							else if (num17 == 3)
							{
								num14 = 79;
							}
							else if (num17 == 4)
							{
								num14 = 126;
							}
							else if (num17 == 8)
							{
								num14 = 109;
							}
							else if (num17 >= 9)
							{
								num14 = -1;
							}
							else
							{
								num14 = 1;
							}
						}
						if (tile.type == 18)
						{
							int num18 = tile.frameX / 36;
							if (num18 == 0)
							{
								num14 = 7;
							}
							else if (num18 == 1)
							{
								num14 = 77;
							}
							else if (num18 == 2)
							{
								num14 = 78;
							}
							else if (num18 == 3)
							{
								num14 = 79;
							}
							else if (num18 == 4)
							{
								num14 = 26;
							}
							else if (num18 == 5)
							{
								num14 = 40;
							}
							else if (num18 == 6)
							{
								num14 = 5;
							}
							else if (num18 == 7)
							{
								num14 = 26;
							}
							else if (num18 == 8)
							{
								num14 = 4;
							}
							else if (num18 == 9)
							{
								num14 = 126;
							}
							else if (num18 == 10)
							{
								num14 = 148;
							}
							else if (num18 == 11 || num18 == 12 || num18 == 13)
							{
								num14 = 1;
							}
							else if (num18 == 14)
							{
								num14 = 109;
							}
							else if (num18 == 15)
							{
								num14 = 126;
							}
							else
							{
								num14 = -1;
							}
						}
						if (tile.type == 14 || tile.type == 87 || tile.type == 88)
						{
							num14 = -1;
						}
						if (tile.type >= 255 && tile.type <= 261)
						{
							int num19 = tile.type - 255;
							num14 = 86 + num19;
							if (num19 == 6)
							{
								num14 = 138;
							}
						}
						if (tile.type >= 262 && tile.type <= 268)
						{
							int num20 = tile.type - 262;
							num14 = 86 + num20;
							if (num20 == 6)
							{
								num14 = 138;
							}
						}
						if (tile.type == 178)
						{
							int num21 = tile.frameX / 18;
							num14 = 86 + num21;
							if (num21 == 6)
							{
								num14 = 138;
							}
						}
						if (tile.type == 186)
						{
							if (tile.frameX <= 360)
							{
								num14 = 26;
							}
							else if (tile.frameX <= 846)
							{
								num14 = 1;
							}
							else if (tile.frameX <= 954)
							{
								num14 = 9;
							}
							else if (tile.frameX <= 1062)
							{
								num14 = 11;
							}
							else if (tile.frameX <= 1170)
							{
								num14 = 10;
							}
							else if (tile.frameX <= 1332)
							{
								num14 = 0;
							}
							else if (tile.frameX <= 1386)
							{
								num14 = 10;
							}
							else
							{
								num14 = 80;
							}
						}
						if (tile.type == 187)
						{
							if (tile.frameX <= 144)
							{
								num14 = 1;
							}
							else if (tile.frameX <= 306)
							{
								num14 = 38;
							}
							else if (tile.frameX <= 468)
							{
								num14 = 36;
							}
							else if (tile.frameX <= 738)
							{
								num14 = 30;
							}
							else if (tile.frameX <= 970)
							{
								num14 = 1;
							}
							else if (tile.frameX <= 1132)
							{
								num14 = 148;
							}
							else if (tile.frameX <= 1132)
							{
								num14 = 155;
							}
							else if (tile.frameX <= 1348)
							{
								num14 = 1;
							}
							else if (tile.frameX <= 1564)
							{
								num14 = 0;
							}
						}
						if (tile.type == 105)
						{
							num14 = 1;
							if (tile.frameX >= 1548 && tile.frameX <= 1654)
							{
								num14 = 148;
							}
						}
						if (tile.type == 337)
						{
							num14 = 1;
						}
						if (tile.type == 239)
						{
							int num22 = tile.frameX / 18;
							if (num22 == 0)
							{
								num14 = 9;
							}
							if (num22 == 1)
							{
								num14 = 81;
							}
							if (num22 == 2)
							{
								num14 = 8;
							}
							if (num22 == 3)
							{
								num14 = 82;
							}
							if (num22 == 4)
							{
								num14 = 11;
							}
							if (num22 == 5)
							{
								num14 = 83;
							}
							if (num22 == 6)
							{
								num14 = 10;
							}
							if (num22 == 7)
							{
								num14 = 84;
							}
							if (num22 == 8)
							{
								num14 = 14;
							}
							if (num22 == 9)
							{
								num14 = 23;
							}
							if (num22 == 10)
							{
								num14 = 25;
							}
							if (num22 == 11)
							{
								num14 = 48;
							}
							if (num22 == 12)
							{
								num14 = 144;
							}
							if (num22 == 13)
							{
								num14 = 49;
							}
							if (num22 == 14)
							{
								num14 = 145;
							}
							if (num22 == 15)
							{
								num14 = 50;
							}
							if (num22 == 16)
							{
								num14 = 146;
							}
							if (num22 == 17)
							{
								num14 = 128;
							}
							if (num22 == 18)
							{
								num14 = 84;
							}
							if (num22 == 19)
							{
								num14 = 117;
							}
							if (num22 == 20)
							{
								num14 = 26;
							}
						}
						if (tile.type == 185)
						{
							if (tile.frameY == 18)
							{
								int num23 = tile.frameX / 36;
								if (num23 < 6)
								{
									num14 = 1;
								}
								else if (num23 < 16)
								{
									num14 = 26;
								}
								else if (num23 == 16)
								{
									num14 = 9;
								}
								else if (num23 == 17)
								{
									num14 = 11;
								}
								else if (num23 == 18)
								{
									num14 = 10;
								}
								else if (num23 == 19)
								{
									num14 = 86;
								}
								else if (num23 == 20)
								{
									num14 = 87;
								}
								else if (num23 == 21)
								{
									num14 = 88;
								}
								else if (num23 == 22)
								{
									num14 = 89;
								}
								else if (num23 == 23)
								{
									num14 = 90;
								}
								else if (num23 == 24)
								{
									num14 = 91;
								}
								else if (num23 < 31)
								{
									num14 = 80;
								}
								else if (num23 < 33)
								{
									num14 = 7;
								}
								else if (num23 < 34)
								{
									num14 = 8;
								}
								else if (num23 < 39)
								{
									num14 = 30;
								}
								else if (num23 < 42)
								{
									num14 = 1;
								}
							}
							else
							{
								int num24 = tile.frameX / 18;
								if (num24 < 6)
								{
									num14 = 1;
								}
								else if (num24 < 12)
								{
									num14 = 0;
								}
								else if (num24 < 27)
								{
									num14 = 26;
								}
								else if (num24 < 32)
								{
									num14 = 1;
								}
								else if (num24 < 35)
								{
									num14 = 0;
								}
								else if (num24 < 46)
								{
									num14 = 80;
								}
								else if (num24 < 52)
								{
									num14 = 30;
								}
							}
						}
						if (tile.type == 184)
						{
							int num25 = tile.frameX / 22;
							num14 = 93 + num25;
						}
						if (tile.type == 237)
						{
							num14 = 148;
						}
						if (tile.type == 157)
						{
							num14 = 77;
						}
						if (tile.type == 158 || tile.type == 232)
						{
							num14 = 78;
						}
						if (tile.type == 159)
						{
							num14 = 78;
						}
						if (tile.type == 15)
						{
							num14 = -1;
						}
						if (tile.type == 191)
						{
							num14 = 7;
						}
						if (tile.type == 5)
						{
							num14 = 7;
							if (i > 5 && i < Main.maxTilesX - 5)
							{
								int num26 = i;
								int num27 = j;
								if (tile.frameX == 66 && tile.frameY <= 45)
								{
									num26++;
								}
								if (tile.frameX == 88 && tile.frameY >= 66 && tile.frameY <= 110)
								{
									num26--;
								}
								if (tile.frameX == 22 && tile.frameY >= 132 && tile.frameY <= 176)
								{
									num26--;
								}
								if (tile.frameX == 44 && tile.frameY >= 132 && tile.frameY <= 176)
								{
									num26++;
								}
								if (tile.frameX == 44 && tile.frameY >= 132 && tile.frameY <= 176)
								{
									num26++;
								}
								if (tile.frameX == 44 && tile.frameY >= 198)
								{
									num26++;
								}
								if (tile.frameX == 66 && tile.frameY >= 198)
								{
									num26--;
								}
								while (Main.tile[num26, num27] != null && (!Main.tile[num26, num27].active() || !Main.tileSolid[(int)Main.tile[num26, num27].type]))
								{
									num27++;
								}
								if (Main.tile[num26, num27] != null)
								{
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 23)
									{
										num14 = 77;
									}
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 60)
									{
										num14 = 78;
									}
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 70)
									{
										num14 = 26;
									}
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 109)
									{
										num14 = 79;
									}
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 199)
									{
										num14 = 121;
									}
									if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 147)
									{
										num14 = 122;
									}
								}
							}
						}
						if (tile.type == 323)
						{
							num14 = 215;
							if (i > 5 && i < Main.maxTilesX - 5)
							{
								int num28 = j;
								while (Main.tile[i, num28] != null && (!Main.tile[i, num28].active() || !Main.tileSolid[(int)Main.tile[i, num28].type]))
								{
									num28++;
								}
								if (Main.tile[i, num28] != null)
								{
									if (Main.tile[i, num28].active() && Main.tile[i, num28].type == 234)
									{
										num14 = 121;
									}
									if (Main.tile[i, num28].active() && Main.tile[i, num28].type == 116)
									{
										num14 = 79;
									}
									if (Main.tile[i, num28].active() && Main.tile[i, num28].type == 112)
									{
										num14 = 77;
									}
								}
							}
						}
						if (tile.type == 137)
						{
							num14 = 1;
							int num29 = tile.frameY / 18;
							if (num29 > 0)
							{
								num14 = 148;
							}
						}
						if (tile.type == 212)
						{
							num14 = -1;
						}
						if (tile.type == 213)
						{
							num14 = 129;
						}
						if (tile.type == 214)
						{
							num14 = 1;
						}
						if (tile.type == 215)
						{
							num14 = 6;
						}
						if (tile.type == 325)
						{
							num14 = 81;
						}
						if (tile.type == 251)
						{
							num14 = 189;
						}
						if (tile.type == 252)
						{
							num14 = 190;
						}
						if (tile.type == 253)
						{
							num14 = 191;
						}
						if (tile.type == 254)
						{
							if (tile.frameX < 72)
							{
								num14 = 3;
							}
							else if (tile.frameX < 108)
							{
								num14 = 3;
								if (Main.rand.Next(3) == 0)
								{
									num14 = 189;
								}
							}
							else if (tile.frameX < 144)
							{
								num14 = 3;
								if (Main.rand.Next(2) == 0)
								{
									num14 = 189;
								}
							}
							else
							{
								num14 = 3;
								if (Main.rand.Next(4) != 0)
								{
									num14 = 189;
								}
							}
						}
						if (tile.type == 21)
						{
							if (tile.frameX >= 1008)
							{
								num14 = -1;
							}
							else if (tile.frameX >= 612)
							{
								num14 = 11;
							}
							else if (tile.frameX >= 576)
							{
								num14 = 148;
							}
							else if (tile.frameX >= 540)
							{
								num14 = 26;
							}
							else if (tile.frameX >= 504)
							{
								num14 = 126;
							}
							else if (tile.frameX >= 468)
							{
								num14 = 116;
							}
							else if (tile.frameX >= 432)
							{
								num14 = 7;
							}
							else if (tile.frameX >= 396)
							{
								num14 = 11;
							}
							else if (tile.frameX >= 360)
							{
								num14 = 10;
							}
							else if (tile.frameX >= 324)
							{
								num14 = 79;
							}
							else if (tile.frameX >= 288)
							{
								num14 = 78;
							}
							else if (tile.frameX >= 252)
							{
								num14 = 77;
							}
							else if (tile.frameX >= 216)
							{
								num14 = 1;
							}
							else if (tile.frameX >= 180)
							{
								num14 = 7;
							}
							else if (tile.frameX >= 108)
							{
								num14 = 37;
							}
							else if (tile.frameX >= 36)
							{
								num14 = 10;
							}
							else
							{
								num14 = 7;
							}
						}
						if (tile.type == 2)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 0;
							}
							else
							{
								num14 = 2;
							}
						}
						if (Main.tileMoss[(int)tile.type])
						{
							num14 = tile.type - 179 + 93;
						}
						if (tile.type == 127)
						{
							num14 = 67;
						}
						if (tile.type == 91)
						{
							num14 = -1;
						}
						if (tile.type == 198)
						{
							num14 = 109;
						}
						if (tile.type == 26)
						{
							if (tile.frameX >= 54)
							{
								num14 = 5;
							}
							else
							{
								num14 = 8;
							}
						}
						if (tile.type == 34)
						{
							num14 = -1;
						}
						if (tile.type == 6)
						{
							num14 = 8;
						}
						if (tile.type == 7 || tile.type == 47 || tile.type == 284)
						{
							num14 = 9;
						}
						if (tile.type == 8 || tile.type == 45 || tile.type == 102)
						{
							num14 = 10;
						}
						if (tile.type == 9 || tile.type == 42 || tile.type == 46 || tile.type == 126 || tile.type == 136)
						{
							num14 = 11;
						}
						if (tile.type == 166 || tile.type == 175)
						{
							num14 = 81;
						}
						if (tile.type == 167)
						{
							num14 = 82;
						}
						if (tile.type == 168 || tile.type == 176)
						{
							num14 = 83;
						}
						if (tile.type == 169 || tile.type == 177)
						{
							num14 = 84;
						}
						if (tile.type == 199)
						{
							num14 = 117;
						}
						if (tile.type == 205)
						{
							num14 = 125;
						}
						if (tile.type == 201)
						{
							num14 = 125;
						}
						if (tile.type == 211)
						{
							num14 = 128;
						}
						if (tile.type == 227)
						{
							int num30 = tile.frameX / 34;
							if (num30 == 0 || num30 == 1)
							{
								num14 = 26;
							}
							else if (num30 == 3)
							{
								num14 = 3;
							}
							else if (num30 == 2 || num30 == 4 || num30 == 5 || num30 == 6)
							{
								num14 = 40;
							}
							else if (num30 == 7)
							{
								num14 = 117;
							}
						}
						if (tile.type == 204)
						{
							num14 = 117;
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 1;
							}
						}
						if (tile.type == 203)
						{
							num14 = 117;
						}
						if (tile.type == 243)
						{
							if (Main.rand.Next(2) == 0)
							{
								num14 = 7;
							}
							else
							{
								num14 = 13;
							}
						}
						if (tile.type == 244)
						{
							if (Main.rand.Next(2) == 0)
							{
								num14 = 1;
							}
							else
							{
								num14 = 13;
							}
						}
						else if ((tile.type >= 275 && tile.type <= 282) || (tile.type == 285 || tile.type == 286 || (tile.type >= 288 && tile.type <= 297)) || (tile.type >= 316 && tile.type <= 318) || tile.type == 298 || tile.type == 299 || tile.type == 309 || tile.type == 310 || tile.type == 339)
						{
							num14 = 13;
							if (Main.rand.Next(3) != 0)
							{
								num14 = -1;
							}
						}
						if (tile.type == 13)
						{
							if (tile.frameX >= 90)
							{
								num14 = -1;
							}
							else
							{
								num14 = 13;
							}
						}
						if (tile.type == 189)
						{
							num14 = 16;
						}
						if (tile.type == 12)
						{
							num14 = 12;
						}
						if (tile.type == 3 || tile.type == 73)
						{
							num14 = 3;
						}
						if (tile.type == 54)
						{
							num14 = 13;
						}
						if (tile.type == 22 || tile.type == 140)
						{
							num14 = 14;
						}
						if (tile.type == 78)
						{
							num14 = 22;
						}
						if (tile.type == 28)
						{
							num14 = 22;
							if (tile.frameY >= 72 && tile.frameY <= 90)
							{
								num14 = 1;
							}
							if (tile.frameY >= 144 && tile.frameY <= 234)
							{
								num14 = 48;
							}
							if (tile.frameY >= 252 && tile.frameY <= 358)
							{
								num14 = 85;
							}
							if (tile.frameY >= 360 && tile.frameY <= 466)
							{
								num14 = 26;
							}
							if (tile.frameY >= 468 && tile.frameY <= 574)
							{
								num14 = 36;
							}
							if (tile.frameY >= 576 && tile.frameY <= 790)
							{
								num14 = 18;
							}
							if (tile.frameY >= 792 && tile.frameY <= 898)
							{
								num14 = 5;
							}
							if (tile.frameY >= 900 && tile.frameY <= 1006)
							{
								num14 = 0;
							}
							if (tile.frameY >= 1008 && tile.frameY <= 1114)
							{
								num14 = 148;
							}
						}
						if (tile.type == 163)
						{
							num14 = 118;
						}
						if (tile.type == 164)
						{
							num14 = 119;
						}
						if (tile.type == 200)
						{
							num14 = 120;
						}
						if (tile.type == 221 || tile.type == 248)
						{
							num14 = 144;
						}
						if (tile.type == 222 || tile.type == 249)
						{
							num14 = 145;
						}
						if (tile.type == 223 || tile.type == 250)
						{
							num14 = 146;
						}
						if (tile.type == 224)
						{
							num14 = 149;
						}
						if (tile.type == 225)
						{
							num14 = 147;
						}
						if (tile.type == 229)
						{
							num14 = 153;
						}
						if (tile.type == 231)
						{
							num14 = 153;
							if (Main.rand.Next(3) == 0)
							{
								num14 = 26;
							}
						}
						if (tile.type == 226)
						{
							num14 = 148;
						}
						if (tile.type == 103)
						{
							num14 = -1;
						}
						if (tile.type == 29)
						{
							num14 = 23;
						}
						if (tile.type == 40)
						{
							num14 = 28;
						}
						if (tile.type == 49)
						{
							num14 = 29;
						}
						if (tile.type == 50)
						{
							num14 = 22;
						}
						if (tile.type == 51)
						{
							num14 = 30;
						}
						if (tile.type == 52)
						{
							num14 = 3;
						}
						if (tile.type == 53 || tile.type == 81 || tile.type == 151 || tile.type == 202 || tile.type == 274)
						{
							num14 = 32;
						}
						if (tile.type == 56 || tile.type == 152)
						{
							num14 = 37;
						}
						if (tile.type == 75)
						{
							num14 = 109;
						}
						if (tile.type == 57 || tile.type == 119 || tile.type == 141 || tile.type == 234)
						{
							num14 = 36;
						}
						if (tile.type == 59 || tile.type == 120)
						{
							num14 = 38;
						}
						if (tile.type == 61 || tile.type == 62 || tile.type == 74 || tile.type == 80 || tile.type == 188 || tile.type == 233 || tile.type == 236)
						{
							num14 = 40;
						}
						if (tile.type == 238)
						{
							if (WorldGen.genRand.Next(3) == 0)
							{
								num14 = 167;
							}
							else
							{
								num14 = 166;
							}
						}
						if (tile.type == 69)
						{
							num14 = 7;
						}
						if (tile.type == 71 || tile.type == 72 || tile.type == 190)
						{
							num14 = 26;
						}
						if (tile.type == 70)
						{
							num14 = 17;
						}
						if (tile.type == 112)
						{
							num14 = 14;
						}
						if (tile.type == 123)
						{
							num14 = 53;
						}
						if (tile.type == 161)
						{
							num14 = 80;
						}
						if (tile.type == 206)
						{
							num14 = 80;
						}
						if (tile.type == 162)
						{
							num14 = 80;
						}
						if (tile.type == 165)
						{
							if (tile.frameX < 54)
							{
								num14 = 80;
							}
							else if (tile.frameX >= 324)
							{
								num14 = 117;
							}
							else if (tile.frameX >= 270)
							{
								num14 = 14;
							}
							else if (tile.frameX >= 216)
							{
								num14 = 1;
							}
							else if (tile.frameX >= 162)
							{
								num14 = 147;
							}
							else if (tile.frameX >= 108)
							{
								num14 = 30;
							}
							else
							{
								num14 = 1;
							}
						}
						if (tile.type == 193)
						{
							num14 = 4;
						}
						if (tile.type == 194)
						{
							num14 = 26;
						}
						if (tile.type == 195)
						{
							num14 = 5;
						}
						if (tile.type == 196)
						{
							num14 = 108;
						}
						if (tile.type == 197)
						{
							num14 = 4;
						}
						if (tile.type == 153)
						{
							num14 = 26;
						}
						if (tile.type == 154)
						{
							num14 = 32;
						}
						if (tile.type == 155)
						{
							num14 = 2;
						}
						if (tile.type == 156)
						{
							num14 = 1;
						}
						if (tile.type == 116 || tile.type == 118 || tile.type == 147 || tile.type == 148)
						{
							num14 = 51;
						}
						if (tile.type == 109)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 0;
							}
							else
							{
								num14 = 47;
							}
						}
						if (tile.type == 110 || tile.type == 113 || tile.type == 115)
						{
							num14 = 47;
						}
						if (tile.type == 107 || tile.type == 121)
						{
							num14 = 48;
						}
						if (tile.type == 108 || tile.type == 122 || tile.type == 146)
						{
							num14 = 49;
						}
						if (tile.type == 111 || tile.type == 145 || tile.type == 150)
						{
							num14 = 50;
						}
						if (tile.type == 133)
						{
							num14 = 50;
							if (tile.frameX >= 54)
							{
								num14 = 146;
							}
						}
						if (tile.type == 134)
						{
							num14 = 49;
							if (tile.frameX >= 36)
							{
								num14 = 145;
							}
						}
						if (tile.type == 149)
						{
							num14 = 49;
						}
						if (Main.tileAlch[(int)tile.type])
						{
							int num31 = tile.frameX / 18;
							if (num31 == 0)
							{
								num14 = 3;
							}
							if (num31 == 1)
							{
								num14 = 3;
							}
							if (num31 == 2)
							{
								num14 = 7;
							}
							if (num31 == 3)
							{
								num14 = 17;
							}
							if (num31 == 4)
							{
								num14 = 3;
							}
							if (num31 == 5)
							{
								num14 = 6;
							}
							if (num31 == 6)
							{
								num14 = 224;
							}
						}
						if (tile.type == 58 || tile.type == 76 || tile.type == 77)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 6;
							}
							else
							{
								num14 = 25;
							}
						}
						if (tile.type == 37)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 6;
							}
							else
							{
								num14 = 23;
							}
						}
						if (tile.type == 32)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 14;
							}
							else
							{
								num14 = 24;
							}
						}
						if (tile.type == 23 || tile.type == 24)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 14;
							}
							else
							{
								num14 = 17;
							}
						}
						if (tile.type == 25 || tile.type == 31)
						{
							if (tile.type == 31 && tile.frameX >= 36)
							{
								num14 = 5;
							}
							else if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 14;
							}
							else
							{
								num14 = 1;
							}
						}
						if (tile.type == 20)
						{
							int num32 = tile.frameX / 54;
							if (num32 == 1)
							{
								num14 = 122;
							}
							else if (num32 == 2)
							{
								num14 = 78;
							}
							else if (num32 == 3)
							{
								num14 = 77;
							}
							else if (num32 == 4)
							{
								num14 = 121;
							}
							else if (num32 == 5)
							{
								num14 = 79;
							}
							else
							{
								num14 = 7;
							}
						}
						if (tile.type == 27)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								num14 = 3;
							}
							else
							{
								num14 = 19;
							}
						}
						if (tile.type == 129)
						{
							if (tile.frameX == 0 || tile.frameX == 54 || tile.frameX == 108)
							{
								num14 = 68;
							}
							else if (tile.frameX == 18 || tile.frameX == 72 || tile.frameX == 126)
							{
								num14 = 69;
							}
							else
							{
								num14 = 70;
							}
						}
						if (tile.type == 4)
						{
							int num33 = tile.frameY / 22;
							if (num33 == 0)
							{
								num14 = 6;
							}
							else if (num33 == 8)
							{
								num14 = 75;
							}
							else if (num33 == 9)
							{
								num14 = 135;
							}
							else if (num33 == 10)
							{
								num14 = 158;
							}
							else if (num33 == 11)
							{
								num14 = 169;
							}
							else if (num33 == 12)
							{
								num14 = 156;
							}
							else
							{
								num14 = 58 + num33;
							}
						}
						if (tile.type == 35)
						{
							num14 = 189;
							if (tile.frameX < 36 && WorldGen.genRand.Next(2) == 0)
							{
								num14 = 6;
							}
						}
						if ((tile.type == 34 || tile.type == 42) && Main.rand.Next(2) == 0)
						{
							num14 = 6;
						}
						if (tile.type == 270)
						{
							num14 = -1;
						}
						if (tile.type == 271)
						{
							num14 = -1;
						}
						if (tile.type == 79 || tile.type == 90 || tile.type == 101)
						{
							num14 = -1;
						}
						if (tile.type == 33 || tile.type == 34 || tile.type == 42 || tile.type == 93 || tile.type == 100)
						{
							num14 = -1;
						}
						if (tile.type == 321)
						{
							num14 = 214;
						}
						if (tile.type == 322)
						{
							num14 = 215;
						}
						if (num14 >= 0)
						{
							if (tile.type == 160)
							{
								int num34 = Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 0.75f);
								Main.dust[num34].noGravity = true;
							}
							else if (tile.type == 323)
							{
								int frameY = (int)tile.frameY;
								Dust.NewDust(new Vector2((float)(i * 16 + frameY), (float)(j * 16)), 16, 16, num14, 0f, 0f, 0, default(Color), 1f);
							}
							else if (tile.type == 314)
							{
								int num35 = Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, 213, (float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3), 0, default(Color), 1f);
								Main.dust[num35].noGravity = true;
								Main.dust[num35].fadeIn = Main.dust[num35].scale + 1f + 0.01f * (float)Main.rand.Next(0, 51);
								Main.dust[num35].noGravity = true;
							}
							else if (tile.type == 178)
							{
								int num36 = Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num14, 0f, 0f, 75, default(Color), 0.75f);
								Main.dust[num36].noLight = true;
							}
							else if (tile.type == 193 || (tile.type == 18 && num14 == 4))
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num14, 0f, 0f, 75, new Color(0, 80, 255, 100), 0.75f);
							}
							else if (tile.type == 197)
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num14, 0f, 0f, 75, new Color(97, 200, 255, 100), 0.75f);
							}
							else if (tile.type == 185 && num14 >= 86 && num14 <= 91)
							{
								int num37 = Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num14, 0f, 0f, 75, default(Color), 0.75f);
								Main.dust[num37].noLight = true;
							}
							else
							{
								Dust.NewDust(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16, num14, 0f, 0f, 0, default(Color), 1f);
							}
						}
						num13++;
						continue;
						IL_1144:
						num14 = -1;
						goto IL_1147;
					}
					if (effectOnly)
					{
						return;
					}
					if (fail)
					{
						if (tile.type == 2 || tile.type == 23 || tile.type == 109 || tile.type == 199)
						{
							tile.type = 0;
						}
						if (tile.type == 60 || tile.type == 70)
						{
							tile.type = 59;
						}
						if (Main.tileMoss[(int)tile.type])
						{
							tile.type = 1;
						}
						WorldGen.SquareTileFrame(i, j, true);
						return;
					}
					if (tile.type == 21 && Main.netMode != 1)
					{
						int num38 = tile.frameX / 18;
						int y = j - tile.frameY / 18;
						while (num38 > 1)
						{
							num38 -= 2;
						}
						num38 = i - num38;
						if (!Chest.DestroyChest(num38, y))
						{
							return;
						}
					}
					if (tile.type == 51 && tile.wall == 62 && WorldGen.genRand.Next(4) != 0)
					{
						noItem = true;
					}
					if (!noItem && !WorldGen.stopDrops && Main.netMode != 1)
					{
						int num39 = -1;
						int num40 = -1;
						if ((double)j < Main.worldSurface)
						{
							if (tile.type == 3 || tile.type == 60)
							{
								num39 = 400;
								num40 = 100;
							}
							if (tile.type == 73 || tile.type == 74)
							{
								num39 = 200;
								num40 = 50;
							}
						}
						else
						{
							if (tile.type == 3 || tile.type == 60)
							{
								num39 = 600;
							}
							if (tile.type == 73 || tile.type == 74)
							{
								num39 = 300;
							}
						}
						if (tile.type == 185)
						{
							if (tile.frameY == 0 && tile.frameX < 214)
							{
								num39 = 6;
							}
							if (tile.frameY == 18 && (tile.frameX < 214 || tile.frameX >= 1368))
							{
								num39 = 6;
							}
						}
						else if (tile.type == 186)
						{
							if (tile.frameX >= 378 && tile.frameX <= 700)
							{
								num39 = 6;
							}
						}
						else if (tile.type == 187)
						{
							if (tile.frameX >= 756 && tile.frameX <= 916)
							{
								num39 = 6;
							}
							if (tile.frameX <= 322)
							{
								num39 = 6;
							}
						}
						if (NPC.CountNPCS(357) < 5 && num39 > 0 && Main.rand.Next(num39) == 0)
						{
							int num41 = NPC.NewNPC(i * 16 + 10, j * 16, 357, 0);
							Main.npc[num41].TargetClosest(true);
							Main.npc[num41].velocity.Y = (float)Main.rand.Next(-50, -21) * 0.1f;
							Main.npc[num41].velocity.X = (float)Main.rand.Next(0, 26) * 0.1f * (float)(-(float)Main.npc[num41].direction);
							Main.npc[num41].direction *= -1;
							Main.npc[num41].netUpdate = true;
						}
						if (NPC.CountNPCS(377) < 5 && num40 > 0 && Main.rand.Next(num40) == 0)
						{
							int num42 = NPC.NewNPC(i * 16 + 10, j * 16, 377, 0);
							Main.npc[num42].TargetClosest(true);
							Main.npc[num42].velocity.Y = (float)Main.rand.Next(-50, -21) * 0.1f;
							Main.npc[num42].velocity.X = (float)Main.rand.Next(0, 26) * 0.1f * (float)(-(float)Main.npc[num42].direction);
							Main.npc[num42].direction *= -1;
							Main.npc[num42].netUpdate = true;
						}
						int num43 = 0;
						if (tile.type == 0 || tile.type == 2 || tile.type == 109)
						{
							num43 = 2;
						}
						else if (tile.type == 1)
						{
							num43 = 3;
						}
						else if (tile.type == 3 || tile.type == 73)
						{
							if (Main.rand.Next(2) == 0 && (Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].HasItem(281) || Main.player[(int)Player.FindClosest(new Vector2((float)(i * 16), (float)(j * 16)), 16, 16)].HasItem(986)))
							{
								num43 = 283;
							}
						}
						else if (tile.type == 227)
						{
							int num44 = tile.frameX / 34;
							num43 = 1107 + num44;
						}
						else if (tile.type == 4)
						{
							int num45 = tile.frameY / 22;
							if (num45 == 0)
							{
								num43 = 8;
							}
							else if (num45 == 8)
							{
								num43 = 523;
							}
							else if (num45 == 9)
							{
								num43 = 974;
							}
							else if (num45 == 10)
							{
								num43 = 1245;
							}
							else if (num45 == 11)
							{
								num43 = 1333;
							}
							else if (num45 == 12)
							{
								num43 = 2274;
							}
							else
							{
								num43 = 426 + num45;
							}
						}
						else if (tile.type == 239)
						{
							int num46 = tile.frameX / 18;
							if (num46 == 0)
							{
								num43 = 20;
							}
							if (num46 == 1)
							{
								num43 = 703;
							}
							if (num46 == 2)
							{
								num43 = 22;
							}
							if (num46 == 3)
							{
								num43 = 704;
							}
							if (num46 == 4)
							{
								num43 = 21;
							}
							if (num46 == 5)
							{
								num43 = 705;
							}
							if (num46 == 6)
							{
								num43 = 19;
							}
							if (num46 == 7)
							{
								num43 = 706;
							}
							if (num46 == 8)
							{
								num43 = 57;
							}
							if (num46 == 9)
							{
								num43 = 117;
							}
							if (num46 == 10)
							{
								num43 = 175;
							}
							if (num46 == 11)
							{
								num43 = 381;
							}
							if (num46 == 12)
							{
								num43 = 1184;
							}
							if (num46 == 13)
							{
								num43 = 382;
							}
							if (num46 == 14)
							{
								num43 = 1191;
							}
							if (num46 == 15)
							{
								num43 = 391;
							}
							if (num46 == 16)
							{
								num43 = 1198;
							}
							if (num46 == 17)
							{
								num43 = 1006;
							}
							if (num46 == 18)
							{
								num43 = 1225;
							}
							if (num46 == 19)
							{
								num43 = 1257;
							}
							if (num46 == 20)
							{
								num43 = 1552;
							}
						}
						else if (tile.type == 315)
						{
							num43 = 2435;
						}
						else if (tile.type == 330)
						{
							num43 = 71;
						}
						else if (tile.type == 331)
						{
							num43 = 72;
						}
						else if (tile.type == 332)
						{
							num43 = 73;
						}
						else if (tile.type == 333)
						{
							num43 = 74;
						}
						else if (tile.type == 5)
						{
							if (tile.frameX >= 22 && tile.frameY >= 198)
							{
								if (Main.netMode != 1)
								{
									if (WorldGen.genRand.Next(2) == 0)
									{
										int num47 = j;
										while (Main.tile[i, num47] != null && (!Main.tile[i, num47].active() || !Main.tileSolid[(int)Main.tile[i, num47].type] || Main.tileSolidTop[(int)Main.tile[i, num47].type]))
										{
											num47++;
										}
										if (Main.tile[i, num47] != null)
										{
											if (Main.tile[i, num47].type == 2 || Main.tile[i, num47].type == 109 || Main.tile[i, num47].type == 147)
											{
												num43 = 27;
											}
											else
											{
												num43 = 9;
											}
										}
									}
									else
									{
										num43 = 9;
									}
								}
							}
							else
							{
								num43 = 9;
							}
							if (num43 == 9)
							{
								int num48 = i;
								int num49 = j;
								if (tile.frameX == 66 && tile.frameY <= 45)
								{
									num48++;
								}
								if (tile.frameX == 88 && tile.frameY >= 66 && tile.frameY <= 110)
								{
									num48--;
								}
								if (tile.frameX == 22 && tile.frameY >= 132 && tile.frameY <= 176)
								{
									num48--;
								}
								if (tile.frameX == 44 && tile.frameY >= 132 && tile.frameY <= 176)
								{
									num48++;
								}
								if (tile.frameX == 44 && tile.frameY >= 198)
								{
									num48++;
								}
								if (tile.frameX == 66 && tile.frameY >= 198)
								{
									num48--;
								}
								while (!Main.tile[num48, num49].active() || !Main.tileSolid[(int)Main.tile[num48, num49].type])
								{
									num49++;
								}
								if (Main.tile[num48, num49].active())
								{
									ushort type = Main.tile[num48, num49].type;
									if (type <= 70)
									{
										if (type != 23)
										{
											if (type != 60)
											{
												if (type == 70)
												{
													num43 = 183;
												}
											}
											else
											{
												num43 = 620;
											}
										}
										else
										{
											num43 = 619;
										}
									}
									else if (type != 109)
									{
										if (type != 147)
										{
											if (type == 199)
											{
												num43 = 911;
											}
										}
										else
										{
											num43 = 2503;
										}
									}
									else
									{
										num43 = 621;
									}
								}
							}
						}
						else if (tile.type == 323)
						{
							num43 = 2504;
							int num50 = j;
							while (!Main.tile[i, num50].active() || !Main.tileSolid[(int)Main.tile[i, num50].type])
							{
								num50++;
							}
							if (Main.tile[i, num50].active())
							{
								ushort type = Main.tile[i, num50].type;
								if (type != 112)
								{
									if (type != 116)
									{
										if (type == 234)
										{
											num43 = 911;
										}
									}
									else
									{
										num43 = 621;
									}
								}
								else
								{
									num43 = 619;
								}
							}
						}
						else if (tile.type >= 255 && tile.type <= 261)
						{
							num43 = 1970 + tile.type - 255;
						}
						else if (tile.type >= 262 && tile.type <= 268)
						{
							num43 = 1970 + tile.type - 262;
						}
						else if (tile.type == 171)
						{
							if (tile.frameX >= 10)
							{
								WorldGen.dropXmasTree(i, j, 0);
								WorldGen.dropXmasTree(i, j, 1);
								WorldGen.dropXmasTree(i, j, 2);
								WorldGen.dropXmasTree(i, j, 3);
							}
						}
						else if (tile.type == 324)
						{
							switch (tile.frameY / 22)
							{
							case 0:
								num43 = 2625;
								break;
							case 1:
								num43 = 2626;
								break;
							}
						}
						else if (tile.type == 272)
						{
							num43 = 1344;
						}
						else if (tile.type == 273)
						{
							num43 = 2119;
						}
						else if (tile.type == 274)
						{
							num43 = 2120;
						}
						else if (tile.type == 326)
						{
							num43 = 2693;
							Main.PlaySound(13, i * 16, j * 16, 1);
						}
						else if (tile.type == 327)
						{
							num43 = 2694;
							Main.PlaySound(13, i * 16, j * 16, 1);
						}
						else if (tile.type == 328)
						{
							num43 = 2695;
							Main.PlaySound(13, i * 16, j * 16, 1);
						}
						else if (tile.type == 329)
						{
							num43 = 2697;
							Main.PlaySound(13, i * 16, j * 16, 1);
						}
						else if (tile.type == 336)
						{
							num43 = 2701;
						}
						else if (tile.type == 251)
						{
							num43 = 1725;
						}
						else if (tile.type == 252)
						{
							num43 = 1727;
						}
						else if (tile.type == 253)
						{
							num43 = 1729;
						}
						else if (tile.type == 325)
						{
							num43 = 2692;
						}
						else if (tile.type == 170)
						{
							num43 = 1872;
						}
						else if (tile.type == 284)
						{
							num43 = 2173;
						}
						else if (tile.type == 214)
						{
							num43 = 85;
						}
						else if (tile.type == 213)
						{
							num43 = 965;
						}
						else if (tile.type == 211)
						{
							num43 = 947;
						}
						else if (tile.type == 6)
						{
							num43 = 11;
						}
						else if (tile.type == 7)
						{
							num43 = 12;
						}
						else if (tile.type == 8)
						{
							num43 = 13;
						}
						else if (tile.type == 9)
						{
							num43 = 14;
						}
						else if (tile.type == 202)
						{
							num43 = 824;
						}
						else if (tile.type == 234)
						{
							num43 = 1246;
						}
						else if (tile.type == 226)
						{
							num43 = 1101;
						}
						else if (tile.type == 224)
						{
							num43 = 1103;
						}
						else if (tile.type == 36)
						{
							num43 = 1869;
						}
						else if (tile.type == 311)
						{
							num43 = 2260;
						}
						else if (tile.type == 312)
						{
							num43 = 2261;
						}
						else if (tile.type == 313)
						{
							num43 = 2262;
						}
						else if (tile.type == 229)
						{
							num43 = 1125;
						}
						else if (tile.type == 230)
						{
							num43 = 1127;
						}
						else if (tile.type == 225)
						{
							if (WorldGen.genRand.Next(3) == 0)
							{
								tile.honey(true);
								tile.liquid = 255;
							}
							else
							{
								num43 = 1124;
								if (Main.netMode != 1 && WorldGen.genRand.Next(2) == 0)
								{
									int num51 = 1;
									if (WorldGen.genRand.Next(3) == 0)
									{
										num51 = 2;
									}
									for (int num52 = 0; num52 < num51; num52++)
									{
										int type2 = WorldGen.genRand.Next(210, 212);
										int num53 = NPC.NewNPC(i * 16 + 8, j * 16 + 15, type2, 1);
										Main.npc[num53].velocity.X = (float)WorldGen.genRand.Next(-200, 201) * 0.002f;
										Main.npc[num53].velocity.Y = (float)WorldGen.genRand.Next(-200, 201) * 0.002f;
										Main.npc[num53].netUpdate = true;
									}
								}
							}
						}
						else if (tile.type == 221)
						{
							num43 = 1104;
						}
						else if (tile.type == 222)
						{
							num43 = 1105;
						}
						else if (tile.type == 223)
						{
							num43 = 1106;
						}
						else if (tile.type == 248)
						{
							num43 = 1589;
						}
						else if (tile.type == 249)
						{
							num43 = 1591;
						}
						else if (tile.type == 250)
						{
							num43 = 1593;
						}
						else if (tile.type == 191)
						{
							num43 = 9;
						}
						else if (tile.type == 203)
						{
							num43 = 836;
						}
						else if (tile.type == 204)
						{
							num43 = 880;
						}
						else if (tile.type == 166)
						{
							num43 = 699;
						}
						else if (tile.type == 167)
						{
							num43 = 700;
						}
						else if (tile.type == 168)
						{
							num43 = 701;
						}
						else if (tile.type == 169)
						{
							num43 = 702;
						}
						else if (tile.type == 123)
						{
							num43 = 424;
						}
						else if (tile.type == 124)
						{
							num43 = 480;
						}
						else if (tile.type == 157)
						{
							num43 = 619;
						}
						else if (tile.type == 158)
						{
							num43 = 620;
						}
						else if (tile.type == 159)
						{
							num43 = 621;
						}
						else if (tile.type == 161)
						{
							num43 = 664;
						}
						else if (tile.type == 206)
						{
							num43 = 883;
						}
						else if (tile.type == 232)
						{
							num43 = 1150;
						}
						else if (tile.type == 198)
						{
							num43 = 775;
						}
						else if (tile.type == 314)
						{
							num43 = Minecart.GetTrackItem(tile);
						}
						else if (tile.type == 189)
						{
							num43 = 751;
						}
						else if (tile.type == 195)
						{
							num43 = 763;
						}
						else if (tile.type == 194)
						{
							num43 = 766;
						}
						else if (tile.type == 193)
						{
							num43 = 762;
						}
						else if (tile.type == 196)
						{
							num43 = 765;
						}
						else if (tile.type == 197)
						{
							num43 = 767;
						}
						else if (tile.type == 178)
						{
							int num54 = tile.frameX / 18;
							if (num54 == 0)
							{
								num43 = 181;
							}
							else if (num54 == 1)
							{
								num43 = 180;
							}
							else if (num54 == 2)
							{
								num43 = 177;
							}
							else if (num54 == 3)
							{
								num43 = 179;
							}
							else if (num54 == 4)
							{
								num43 = 178;
							}
							else if (num54 == 5)
							{
								num43 = 182;
							}
							else if (num54 == 6)
							{
								num43 = 999;
							}
						}
						else if (tile.type == 149)
						{
							if (tile.frameX == 0 || tile.frameX == 54)
							{
								num43 = 596;
							}
							else if (tile.frameX == 18 || tile.frameX == 72)
							{
								num43 = 597;
							}
							else if (tile.frameX == 36 || tile.frameX == 90)
							{
								num43 = 598;
							}
						}
						else if (tile.type == 13)
						{
							Main.PlaySound(13, i * 16, j * 16, 1);
							int num55 = tile.frameX / 18;
							if (num55 == 1)
							{
								num43 = 28;
							}
							else if (num55 == 2)
							{
								num43 = 110;
							}
							else if (num55 == 3)
							{
								num43 = 350;
							}
							else if (num55 == 4)
							{
								num43 = 351;
							}
							else if (num55 == 5)
							{
								num43 = 2234;
							}
							else if (num55 == 6)
							{
								num43 = 2244;
							}
							else if (num55 == 7)
							{
								num43 = 2257;
							}
							else if (num55 == 8)
							{
								num43 = 2258;
							}
							else
							{
								num43 = 31;
							}
						}
						else if (tile.type == 19)
						{
							int num56 = tile.frameY / 18;
							if (num56 == 0)
							{
								num43 = 94;
							}
							else if (num56 == 1)
							{
								num43 = 631;
							}
							else if (num56 == 2)
							{
								num43 = 632;
							}
							else if (num56 == 3)
							{
								num43 = 633;
							}
							else if (num56 == 4)
							{
								num43 = 634;
							}
							else if (num56 == 5)
							{
								num43 = 913;
							}
							else if (num56 == 6)
							{
								num43 = 1384;
							}
							else if (num56 == 7)
							{
								num43 = 1385;
							}
							else if (num56 == 8)
							{
								num43 = 1386;
							}
							else if (num56 == 9)
							{
								num43 = 1387;
							}
							else if (num56 == 10)
							{
								num43 = 1388;
							}
							else if (num56 == 11)
							{
								num43 = 1389;
							}
							else if (num56 == 12)
							{
								num43 = 1418;
							}
							else if (num56 == 13)
							{
								num43 = 1457;
							}
							else if (num56 == 14)
							{
								num43 = 1702;
							}
							else if (num56 == 15)
							{
								num43 = 1796;
							}
							else if (num56 == 16)
							{
								num43 = 1818;
							}
							else if (num56 == 17)
							{
								num43 = 2518;
							}
							else if (num56 == 18)
							{
								num43 = 2549;
							}
							else if (num56 == 19)
							{
								num43 = 2566;
							}
							else if (num56 == 20)
							{
								num43 = 2581;
							}
							else if (num56 == 21)
							{
								num43 = 2627;
							}
							else if (num56 == 22)
							{
								num43 = 2628;
							}
							else if (num56 == 23)
							{
								num43 = 2629;
							}
							else if (num56 == 24)
							{
								num43 = 2630;
							}
							else if (num56 == 25)
							{
								num43 = 2744;
							}
						}
						else if (tile.type == 22)
						{
							num43 = 56;
						}
						else if (tile.type == 140)
						{
							num43 = 577;
						}
						else if (tile.type == 23)
						{
							num43 = 2;
						}
						else if (tile.type == 25)
						{
							num43 = 61;
						}
						else if (tile.type == 30)
						{
							num43 = 9;
						}
						else if (tile.type == 191)
						{
							num43 = 9;
						}
						else if (tile.type == 208)
						{
							num43 = 911;
						}
						else if (tile.type == 33)
						{
							int num57 = tile.frameY / 22;
							num43 = 105;
							if (num57 == 1)
							{
								num43 = 1405;
							}
							else if (num57 == 2)
							{
								num43 = 1406;
							}
							else if (num57 == 3)
							{
								num43 = 1407;
							}
							else if (num57 >= 4 && num57 <= 13)
							{
								num43 = 2045 + num57 - 4;
							}
							else if (num57 >= 14 && num57 <= 16)
							{
								num43 = 2153 + num57 - 14;
							}
							else if (num57 == 17)
							{
								num43 = 2236;
							}
							else if (num57 == 18)
							{
								num43 = 2523;
							}
							else if (num57 == 19)
							{
								num43 = 2542;
							}
							else if (num57 == 20)
							{
								num43 = 2556;
							}
							else if (num57 == 21)
							{
								num43 = 2571;
							}
							else if (num57 == 22)
							{
								num43 = 2648;
							}
							else if (num57 == 23)
							{
								num43 = 2649;
							}
							else if (num57 == 24)
							{
								num43 = 2650;
							}
							else if (num57 == 25)
							{
								num43 = 2651;
							}
						}
						else if (tile.type == 174)
						{
							num43 = 713;
						}
						else if (tile.type == 37)
						{
							num43 = 116;
						}
						else if (tile.type == 38)
						{
							num43 = 129;
						}
						else if (tile.type == 39)
						{
							num43 = 131;
						}
						else if (tile.type == 40)
						{
							num43 = 133;
						}
						else if (tile.type == 41)
						{
							num43 = 134;
						}
						else if (tile.type == 43)
						{
							num43 = 137;
						}
						else if (tile.type == 44)
						{
							num43 = 139;
						}
						else if (tile.type == 45)
						{
							num43 = 141;
						}
						else if (tile.type == 46)
						{
							num43 = 143;
						}
						else if (tile.type == 47)
						{
							num43 = 145;
						}
						else if (tile.type == 48)
						{
							num43 = 147;
						}
						else if (tile.type == 49)
						{
							num43 = 148;
						}
						else if (tile.type == 51)
						{
							num43 = 150;
						}
						else if (tile.type == 53)
						{
							num43 = 169;
						}
						else if (tile.type == 151)
						{
							num43 = 607;
						}
						else if (tile.type == 152)
						{
							num43 = 609;
						}
						else if (tile.type == 54)
						{
							num43 = 170;
							Main.PlaySound(13, i * 16, j * 16, 1);
						}
						else if (tile.type == 56)
						{
							num43 = 173;
						}
						else if (tile.type == 57)
						{
							num43 = 172;
						}
						else if (tile.type == 58)
						{
							num43 = 174;
						}
						else if (tile.type == 60)
						{
							num43 = 176;
						}
						else if (tile.type == 70)
						{
							num43 = 176;
						}
						else if (tile.type == 75)
						{
							num43 = 192;
						}
						else if (tile.type == 76)
						{
							num43 = 214;
						}
						else if (tile.type == 78)
						{
							num43 = 222;
						}
						else if (tile.type == 81)
						{
							num43 = 275;
						}
						else if (tile.type == 80)
						{
							num43 = 276;
						}
						else if (tile.type == 188)
						{
							num43 = 276;
						}
						else if (tile.type == 107)
						{
							num43 = 364;
						}
						else if (tile.type == 108)
						{
							num43 = 365;
						}
						else if (tile.type == 111)
						{
							num43 = 366;
						}
						else if (tile.type == 150)
						{
							num43 = 604;
						}
						else if (tile.type == 112)
						{
							num43 = 370;
						}
						else if (tile.type == 116)
						{
							num43 = 408;
						}
						else if (tile.type == 117)
						{
							num43 = 409;
						}
						else if (tile.type == 129)
						{
							num43 = 502;
						}
						else if (tile.type == 118)
						{
							num43 = 412;
						}
						else if (tile.type == 119)
						{
							num43 = 413;
						}
						else if (tile.type == 120)
						{
							num43 = 414;
						}
						else if (tile.type == 121)
						{
							num43 = 415;
						}
						else if (tile.type == 122)
						{
							num43 = 416;
						}
						else if (tile.type == 136)
						{
							num43 = 538;
						}
						else if (tile.type == 137)
						{
							int num58 = tile.frameY / 18;
							if (num58 == 0)
							{
								num43 = 539;
							}
							if (num58 == 1)
							{
								num43 = 1146;
							}
							if (num58 == 2)
							{
								num43 = 1147;
							}
							if (num58 == 3)
							{
								num43 = 1148;
							}
							if (num58 == 4)
							{
								num43 = 1149;
							}
						}
						else if (tile.type == 141)
						{
							num43 = 580;
						}
						else if (tile.type == 145)
						{
							num43 = 586;
						}
						else if (tile.type == 146)
						{
							num43 = 591;
						}
						else if (tile.type == 147)
						{
							num43 = 593;
						}
						else if (tile.type == 148)
						{
							num43 = 594;
						}
						else if (tile.type == 153)
						{
							num43 = 611;
						}
						else if (tile.type == 154)
						{
							num43 = 612;
						}
						else if (tile.type == 155)
						{
							num43 = 613;
						}
						else if (tile.type == 156)
						{
							num43 = 614;
						}
						else if (tile.type == 160)
						{
							num43 = 662;
						}
						else if (tile.type == 175)
						{
							num43 = 717;
						}
						else if (tile.type == 176)
						{
							num43 = 718;
						}
						else if (tile.type == 177)
						{
							num43 = 719;
						}
						else if (tile.type == 163)
						{
							num43 = 833;
						}
						else if (tile.type == 164)
						{
							num43 = 834;
						}
						else if (tile.type == 200)
						{
							num43 = 835;
						}
						else if (tile.type == 210)
						{
							num43 = 937;
						}
						else if (tile.type == 135)
						{
							int num59 = tile.frameY / 18;
							if (num59 == 0)
							{
								num43 = 529;
							}
							if (num59 == 1)
							{
								num43 = 541;
							}
							if (num59 == 2)
							{
								num43 = 542;
							}
							if (num59 == 3)
							{
								num43 = 543;
							}
							if (num59 == 4)
							{
								num43 = 852;
							}
							if (num59 == 5)
							{
								num43 = 853;
							}
							if (num59 == 6)
							{
								num43 = 1151;
							}
						}
						else if (tile.type == 144)
						{
							if (tile.frameX == 0)
							{
								num43 = 583;
							}
							if (tile.frameX == 18)
							{
								num43 = 584;
							}
							if (tile.frameX == 36)
							{
								num43 = 585;
							}
						}
						else if (tile.type == 130)
						{
							num43 = 511;
						}
						else if (tile.type == 131)
						{
							num43 = 512;
						}
						else if (tile.type == 61 || tile.type == 74)
						{
							if (tile.frameX == 144 && tile.type == 61)
							{
								Item.NewItem(i * 16, j * 16, 16, 16, 331, WorldGen.genRand.Next(2, 4), false, 0, false);
							}
							else if (tile.frameX == 162 && tile.type == 61)
							{
								num43 = 223;
							}
							else if (tile.frameX >= 108 && tile.frameX <= 126 && tile.type == 61 && WorldGen.genRand.Next(20) == 0)
							{
								num43 = 208;
							}
							else if (WorldGen.genRand.Next(100) == 0)
							{
								num43 = 195;
							}
						}
						else if (tile.type == 59 || tile.type == 60)
						{
							num43 = 176;
						}
						else if (tile.type == 190)
						{
							num43 = 183;
						}
						else if (tile.type == 71 || tile.type == 72)
						{
							if (WorldGen.genRand.Next(50) == 0)
							{
								num43 = 194;
							}
							else if (WorldGen.genRand.Next(2) == 0)
							{
								num43 = 183;
							}
						}
						else if (tile.type >= 63 && tile.type <= 68)
						{
							num43 = tile.type - 63 + 177;
						}
						else if (tile.type == 50)
						{
							if (tile.frameX == 90)
							{
								num43 = 165;
							}
							else
							{
								num43 = 149;
							}
						}
						else if (Main.tileAlch[(int)tile.type])
						{
							if (tile.type > 82)
							{
								int num60 = tile.frameX / 18;
								bool flag = false;
								num43 = 313 + num60;
								int type3 = 307 + num60;
								if (tile.type == 84)
								{
									flag = true;
								}
								if (num60 == 0 && Main.dayTime)
								{
									flag = true;
								}
								if (num60 == 1 && !Main.dayTime)
								{
									flag = true;
								}
								if (num60 == 3 && Main.bloodMoon)
								{
									flag = true;
								}
								if (num60 == 4 && (Main.raining || Main.cloudAlpha > 0f))
								{
									flag = true;
								}
								if (num60 == 6)
								{
									num43 = 2358;
									type3 = 2357;
								}
								if (flag)
								{
									Item.NewItem(i * 16, j * 16, 16, 16, type3, WorldGen.genRand.Next(1, 4), false, 0, false);
								}
							}
						}
						else if (tile.type == 321)
						{
							num43 = 2503;
						}
						else if (tile.type == 322)
						{
							num43 = 2504;
						}
						if (num43 > 0)
						{
							Item.NewItem(i * 16, j * 16, 16, 16, num43, 1, false, -1, false);
						}
					}
					tile.active(false);
					tile.halfBrick(false);
					tile.frameX = -1;
					tile.frameY = -1;
					tile.color(0);
					tile.frameNumber(0);
					if (tile.type == 58 && j > Main.maxTilesY - 200)
					{
						tile.lava(true);
						tile.liquid = 128;
					}
					tile.type = 0;
					tile.inActive(false);
					WorldGen.SquareTileFrame(i, j, true);
				}
			}
		}
		public static bool PlayerLOS(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16, y * 16, 16, 16);
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					Rectangle value = new Rectangle((int)((double)Main.player[i].position.X + (double)Main.player[i].width * 0.5 - (double)NPC.sWidth * 0.6), (int)((double)Main.player[i].position.Y + (double)Main.player[i].height * 0.5 - (double)NPC.sHeight * 0.6), (int)((double)NPC.sWidth * 1.2), (int)((double)NPC.sHeight * 1.2));
					if (rectangle.Intersects(value))
					{
						return true;
					}
				}
			}
			return false;
		}
		public static bool Chlorophyte(int i, int j)
		{
			int num = 23;
			int num2 = 110;
			int num3 = 38;
			int num4 = 95;
			if ((double)j < Main.rockLayer)
			{
				num /= 2;
				num2 /= 2;
				num3 = (int)((double)num3 * 1.5);
				num4 = (int)((double)num4 * 1.5);
			}
			int num5 = 0;
			for (int k = i - num3; k < i + num3; k++)
			{
				for (int l = j - num3; l < j + num3; l++)
				{
					if (k < Main.maxTilesX - 10 && k > 10 && Main.tile[k, l].active() && Main.tile[k, l].type == 211)
					{
						num5++;
					}
				}
			}
			if (num5 > num)
			{
				return false;
			}
			num5 = 0;
			for (int m = i - num4; m < i + num4; m++)
			{
				for (int n = j - num4; n < j + num4; n++)
				{
					if (m < Main.maxTilesX - 10 && m > 10 && Main.tile[m, n].active() && Main.tile[m, n].type == 211)
					{
						num5++;
					}
				}
			}
			return num5 <= num2;
		}
		public static void hardUpdateWorld(int i, int j)
		{
			if (Main.hardMode)
			{
				if (Main.tile[i, j].inActive())
				{
					return;
				}
				int type = (int)Main.tile[i, j].type;
				if ((type == 117 || type == 164) && (double)j > Main.rockLayer && Main.rand.Next(110) == 0)
				{
					int num = WorldGen.genRand.Next(4);
					int num2 = 0;
					int num3 = 0;
					if (num == 0)
					{
						num2 = -1;
					}
					else if (num == 1)
					{
						num2 = 1;
					}
					else if (num == 0)
					{
						num3 = -1;
					}
					else
					{
						num3 = 1;
					}
					if (!Main.tile[i + num2, j + num3].active())
					{
						int num4 = 0;
						int num5 = 6;
						for (int k = i - num5; k <= i + num5; k++)
						{
							for (int l = j - num5; l <= j + num5; l++)
							{
								if (Main.tile[k, l].active() && Main.tile[k, l].type == 129)
								{
									num4++;
								}
							}
						}
						if (num4 < 2)
						{
							WorldGen.PlaceTile(i + num2, j + num3, 129, true, false, -1, 0);
							NetMessage.SendTileSquare(-1, i + num2, j + num3, 1);
						}
					}
				}
				if ((double)j > (Main.worldSurface + Main.rockLayer) / 2.0)
				{
					if (type == 60 && WorldGen.genRand.Next(325) == 0)
					{
						int num6 = i + WorldGen.genRand.Next(-10, 11);
						int num7 = j + WorldGen.genRand.Next(-10, 11);
						if (Main.tile[num6, num7].active() && Main.tile[num6, num7].type == 59 && (!Main.tile[num6, num7 - 1].active() || (Main.tile[num6, num7 - 1].type != 5 && Main.tile[num6, num7 - 1].type != 236 && Main.tile[num6, num7 - 1].type != 238)) && WorldGen.Chlorophyte(num6, num7))
						{
							Main.tile[num6, num7].type = 211;
							WorldGen.SquareTileFrame(num6, num7, true);
						}
					}
					if (type == 211 && WorldGen.genRand.Next(3) != 0)
					{
						int num8 = i;
						int num9 = j;
						int num10 = WorldGen.genRand.Next(4);
						if (num10 == 0)
						{
							num8++;
						}
						if (num10 == 1)
						{
							num8--;
						}
						if (num10 == 2)
						{
							num9++;
						}
						if (num10 == 3)
						{
							num9--;
						}
						if (Main.tile[num8, num9].active() && (Main.tile[num8, num9].type == 59 || Main.tile[num8, num9].type == 60) && WorldGen.Chlorophyte(num8, num9))
						{
							Main.tile[num8, num9].type = 211;
							WorldGen.SquareTileFrame(num8, num9, true);
						}
					}
				}
				if (NPC.downedPlantBoss && WorldGen.genRand.Next(3) != 0)
				{
					return;
				}
				if (type == 23 || type == 25 || type == 32 || type == 112 || type == 163)
				{
					bool flag = true;
					while (flag)
					{
						flag = false;
						int num11 = i + WorldGen.genRand.Next(-3, 4);
						int num12 = j + WorldGen.genRand.Next(-3, 4);
						if (Main.tile[num11, num12 - 1].type != 27)
						{
							if (Main.tile[num11, num12].type == 2)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 23;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 1 || Main.tileMoss[(int)Main.tile[num11, num12].type])
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 25;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 53)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 112;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 59)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 0;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 60)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 23;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 69)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 32;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
							else if (Main.tile[num11, num12].type == 161)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag = true;
								}
								Main.tile[num11, num12].type = 163;
								WorldGen.SquareTileFrame(num11, num12, true);
								NetMessage.SendTileSquare(-1, num11, num12, 1);
							}
						}
					}
				}
				if (type == 199 || type == 200 || type == 201 || type == 203 || type == 205 || type == 234)
				{
					bool flag2 = true;
					while (flag2)
					{
						flag2 = false;
						int num13 = i + WorldGen.genRand.Next(-3, 4);
						int num14 = j + WorldGen.genRand.Next(-3, 4);
						if (Main.tile[num13, num14 - 1].type != 27)
						{
							if (Main.tile[num13, num14].type == 2)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 199;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 1 || Main.tileMoss[(int)Main.tile[num13, num14].type])
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 203;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 53)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 234;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 59)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 0;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 60)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 199;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 69)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								WorldGen.KillTile(num13, num14, false, false, false);
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
							else if (Main.tile[num13, num14].type == 161)
							{
								if (WorldGen.genRand.Next(2) == 0)
								{
									flag2 = true;
								}
								Main.tile[num13, num14].type = 200;
								WorldGen.SquareTileFrame(num13, num14, true);
								NetMessage.SendTileSquare(-1, num13, num14, 1);
							}
						}
					}
				}
				if (type == 109 || type == 110 || type == 113 || type == 115 || type == 116 || type == 117 || type == 164)
				{
					bool flag3 = true;
					while (flag3)
					{
						flag3 = false;
						int num15 = i + WorldGen.genRand.Next(-3, 4);
						int num16 = j + WorldGen.genRand.Next(-3, 4);
						if (Main.tile[num15, num16].type == 2)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								flag3 = true;
							}
							Main.tile[num15, num16].type = 109;
							WorldGen.SquareTileFrame(num15, num16, true);
							NetMessage.SendTileSquare(-1, num15, num16, 1);
						}
						else if (Main.tile[num15, num16].type == 1 || Main.tileMoss[(int)Main.tile[num15, num16].type])
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								flag3 = true;
							}
							Main.tile[num15, num16].type = 117;
							WorldGen.SquareTileFrame(num15, num16, true);
							NetMessage.SendTileSquare(-1, num15, num16, 1);
						}
						else if (Main.tile[num15, num16].type == 53)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								flag3 = true;
							}
							Main.tile[num15, num16].type = 116;
							WorldGen.SquareTileFrame(num15, num16, true);
							NetMessage.SendTileSquare(-1, num15, num16, 1);
						}
						else if (Main.tile[num15, num16].type == 161)
						{
							if (WorldGen.genRand.Next(2) == 0)
							{
								flag3 = true;
							}
							Main.tile[num15, num16].type = 164;
							WorldGen.SquareTileFrame(num15, num16, true);
							NetMessage.SendTileSquare(-1, num15, num16, 1);
						}
					}
				}
			}
		}
		public static bool SolidTile(Tile testTile)
		{
			try
			{
				if (testTile == null)
				{
					bool result = true;
					return result;
				}
				if (testTile.active() && Main.tileSolid[(int)testTile.type] && !Main.tileSolidTop[(int)testTile.type] && !testTile.halfBrick() && testTile.slope() == 0 && !testTile.inActive())
				{
					bool result = true;
					return result;
				}
			}
			catch
			{
			}
			return false;
		}
		public static bool SolidTile(int i, int j)
		{
			try
			{
				if (Main.tile[i, j] == null)
				{
					bool result = true;
					return result;
				}
				if (Main.tile[i, j].active() && Main.tileSolid[(int)Main.tile[i, j].type] && !Main.tileSolidTop[(int)Main.tile[i, j].type] && !Main.tile[i, j].halfBrick() && Main.tile[i, j].slope() == 0 && !Main.tile[i, j].inActive())
				{
					bool result = true;
					return result;
				}
			}
			catch
			{
			}
			return false;
		}
		public static bool SolidTile2(int i, int j)
		{
			try
			{
				if (Main.tile[i, j] == null)
				{
					bool result = true;
					return result;
				}
				if (Main.tile[i, j].active() && Main.tileSolid[(int)Main.tile[i, j].type] && Main.tile[i, j].slope() == 0 && !Main.tile[i, j].halfBrick() && !Main.tile[i, j].inActive())
				{
					bool result = true;
					return result;
				}
			}
			catch
			{
			}
			return false;
		}
		public static bool SolidTileNoAttach(int i, int j)
		{
			try
			{
				if (Main.tile[i, j] == null)
				{
					bool result = true;
					return result;
				}
				if (Main.tile[i, j].active() && Main.tileSolid[(int)Main.tile[i, j].type] && !Main.tileNoAttach[(int)Main.tile[i, j].type] && Main.tile[i, j].slope() == 0 && !Main.tile[i, j].halfBrick() && !Main.tile[i, j].inActive())
				{
					bool result = true;
					return result;
				}
			}
			catch
			{
			}
			return false;
		}
		public static Vector2 Hive(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(12, 21);
			double num2 = num;
			float num3 = (float)WorldGen.genRand.Next(10, 21);
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.2f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.2f;
			while (num > 0.0 && num3 > 0f)
			{
				num = num2 * (double)(1f + (float)WorldGen.genRand.Next(-20, 20) * 0.01f);
				num3 -= 1f;
				int num4 = (int)((double)value.X - num);
				int num5 = (int)((double)value.X + num);
				int num6 = (int)((double)value.Y - num);
				int num7 = (int)((double)value.Y + num);
				if (num4 < 1)
				{
					num4 = 1;
				}
				if (num5 > Main.maxTilesX - 1)
				{
					num5 = Main.maxTilesX - 1;
				}
				if (num6 < 1)
				{
					num6 = 1;
				}
				if (num7 > Main.maxTilesY - 1)
				{
					num7 = Main.maxTilesY - 1;
				}
				for (int k = num4; k < num5; k++)
				{
					for (int l = num6; l < num7; l++)
					{
						float num8 = Math.Abs((float)k - value.X);
						float num9 = Math.Abs((float)l - value.Y);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num2 * 0.4 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.005))
						{
							if (WorldGen.genRand.Next(3) == 0)
							{
								Main.tile[k, l].liquid = 255;
							}
							Main.tile[k, l].honey(true);
							Main.tile[k, l].wall = 86;
							Main.tile[k, l].active(false);
							Main.tile[k, l].halfBrick(false);
							Main.tile[k, l].slope(0);
							WorldGen.SquareWallFrame(k, l, true);
						}
						else if (num10 < num2 * 0.75 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.005))
						{
							Main.tile[k, l].liquid = 0;
							if (Main.tile[k, l].wall != 86)
							{
								Main.tile[k, l].active(true);
								Main.tile[k, l].halfBrick(false);
								Main.tile[k, l].slope(0);
								Main.tile[k, l].type = 225;
							}
						}
						if (num10 < num2 * 0.6 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.005))
						{
							Main.tile[k, l].wall = 86;
						}
						WorldGen.SquareWallFrame(k, l, true);
						WorldGen.SquareTileFrame(k, l, true);
					}
				}
				value += value2;
				num3 -= 1f;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
			}
			return new Vector2(value.X, value.Y);
		}
		public static void MineHouse(int i, int j)
		{
			if (i < 50 || i > Main.maxTilesX - 50 || j < 50 || j > Main.maxTilesY - 50)
			{
				return;
			}
			int num = WorldGen.genRand.Next(6, 12);
			int num2 = WorldGen.genRand.Next(3, 6);
			int num3 = WorldGen.genRand.Next(15, 30);
			int num4 = WorldGen.genRand.Next(15, 30);
			if (WorldGen.SolidTile(i, j))
			{
				return;
			}
			if (Main.tile[i, j].wall > 0)
			{
				return;
			}
			int num5 = j - num;
			int num6 = j + num2;
			for (int k = 0; k < 2; k++)
			{
				bool flag = true;
				int num7 = i;
				int num8 = j;
				int num9 = -1;
				int num10 = num3;
				if (k == 1)
				{
					num9 = 1;
					num10 = num4;
					num7++;
				}
				while (flag)
				{
					if (num8 - num < num5)
					{
						num5 = num8 - num;
					}
					if (num8 + num2 > num6)
					{
						num6 = num8 + num2;
					}
					for (int l = 0; l < 2; l++)
					{
						int num11 = num8;
						bool flag2 = true;
						int num12 = num;
						int num13 = -1;
						if (l == 1)
						{
							num11++;
							num12 = num2;
							num13 = 1;
						}
						while (flag2)
						{
							if (num7 != i && Main.tile[num7 - num9, num11].wall != 27 && (WorldGen.SolidTile(num7 - num9, num11) || !Main.tile[num7 - num9, num11].active() || Main.tile[num7 - num9, num11].halfBrick() || Main.tile[num7 - num9, num11].slope() != 0))
							{
								Main.tile[num7 - num9, num11].active(true);
								Main.tile[num7 - num9, num11].type = 30;
							}
							if (WorldGen.SolidTile(num7 - 1, num11) || Main.tile[num7 - 1, num11].halfBrick() || Main.tile[num7 - 1, num11].slope() != 0)
							{
								Main.tile[num7 - 1, num11].type = 30;
							}
							if (WorldGen.SolidTile(num7 + 1, num11) || Main.tile[num7 + 1, num11].halfBrick() || Main.tile[num7 + 1, num11].slope() != 0)
							{
								Main.tile[num7 + 1, num11].type = 30;
							}
							if (WorldGen.SolidTile(num7, num11) || Main.tile[num7, num11].halfBrick() || Main.tile[num7, num11].slope() != 0)
							{
								int num14 = 0;
								if (WorldGen.SolidTile(num7 - 1, num11))
								{
									num14++;
								}
								if (WorldGen.SolidTile(num7 + 1, num11))
								{
									num14++;
								}
								if (WorldGen.SolidTile(num7, num11 - 1))
								{
									num14++;
								}
								if (WorldGen.SolidTile(num7, num11 + 1))
								{
									num14++;
								}
								if (num14 < 2)
								{
									Main.tile[num7, num11].active(false);
								}
								else
								{
									flag2 = false;
									Main.tile[num7, num11].type = 30;
								}
							}
							else
							{
								Main.tile[num7, num11].wall = 27;
								Main.tile[num7, num11].liquid = 0;
								Main.tile[num7, num11].lava(false);
							}
							num11 += num13;
							num12--;
							if (num12 <= 0)
							{
								if (!Main.tile[num7, num11].active())
								{
									Main.tile[num7, num11].active(true);
									Main.tile[num7, num11].type = 30;
								}
								flag2 = false;
							}
						}
					}
					num10--;
					num7 += num9;
					if (WorldGen.SolidTile(num7, num8))
					{
						int num15 = 0;
						int num16 = 0;
						int num17 = num8;
						bool flag3 = true;
						while (flag3)
						{
							num17--;
							num15++;
							if (WorldGen.SolidTile(num7 - num9, num17))
							{
								num15 = 999;
								flag3 = false;
							}
							else if (!WorldGen.SolidTile(num7, num17))
							{
								flag3 = false;
							}
						}
						num17 = num8;
						flag3 = true;
						while (flag3)
						{
							num17++;
							num16++;
							if (WorldGen.SolidTile(num7 - num9, num17))
							{
								num16 = 999;
								flag3 = false;
							}
							else if (!WorldGen.SolidTile(num7, num17))
							{
								flag3 = false;
							}
						}
						if (num16 <= num15)
						{
							if (num16 > num2)
							{
								num10 = 0;
							}
							else
							{
								num8 += num16 + 1;
							}
						}
						else if (num15 > num)
						{
							num10 = 0;
						}
						else
						{
							num8 -= num15 + 1;
						}
					}
					if (num10 <= 0)
					{
						flag = false;
					}
				}
			}
			int num18 = i - num3 - 1;
			int num19 = i + num4 + 2;
			int num20 = num5 - 1;
			int num21 = num6 + 2;
			for (int m = num18; m < num19; m++)
			{
				for (int n = num20; n < num21; n++)
				{
					if (Main.tile[m, n].wall == 27 && !Main.tile[m, n].active())
					{
						if (Main.tile[m - 1, n].wall != 27 && m < i && !WorldGen.SolidTile(m - 1, n))
						{
							WorldGen.PlaceTile(m, n, 30, true, false, -1, 0);
							Main.tile[m, n].wall = 0;
						}
						if (Main.tile[m + 1, n].wall != 27 && m > i && !WorldGen.SolidTile(m + 1, n))
						{
							WorldGen.PlaceTile(m, n, 30, true, false, -1, 0);
							Main.tile[m, n].wall = 0;
						}
						for (int num22 = m - 1; num22 <= m + 1; num22++)
						{
							for (int num23 = n - 1; num23 <= n + 1; num23++)
							{
								if (WorldGen.SolidTile(num22, num23))
								{
									Main.tile[num22, num23].type = 30;
								}
							}
						}
					}
					if (Main.tile[m, n].type == 30 && Main.tile[m - 1, n].wall == 27 && Main.tile[m + 1, n].wall == 27 && (Main.tile[m, n - 1].wall == 27 || Main.tile[m, n - 1].active()) && (Main.tile[m, n + 1].wall == 27 || Main.tile[m, n + 1].active()))
					{
						Main.tile[m, n].active(false);
						Main.tile[m, n].wall = 27;
					}
				}
			}
			for (int num24 = num18; num24 < num19; num24++)
			{
				for (int num25 = num20; num25 < num21; num25++)
				{
					if (Main.tile[num24, num25].type == 30)
					{
						if (Main.tile[num24 - 1, num25].wall == 27 && Main.tile[num24 + 1, num25].wall == 27 && !Main.tile[num24 - 1, num25].active() && !Main.tile[num24 + 1, num25].active())
						{
							Main.tile[num24, num25].active(false);
							Main.tile[num24, num25].wall = 27;
						}
						if (Main.tile[num24, num25 - 1].type != 21 && Main.tile[num24 - 1, num25].wall == 27 && Main.tile[num24 + 1, num25].type == 30 && Main.tile[num24 + 2, num25].wall == 27 && !Main.tile[num24 - 1, num25].active() && !Main.tile[num24 + 2, num25].active())
						{
							Main.tile[num24, num25].active(false);
							Main.tile[num24, num25].wall = 27;
							Main.tile[num24 + 1, num25].active(false);
							Main.tile[num24 + 1, num25].wall = 27;
						}
						if (Main.tile[num24, num25 - 1].wall == 27 && Main.tile[num24, num25 + 1].wall == 27 && !Main.tile[num24, num25 - 1].active() && !Main.tile[num24, num25 + 1].active())
						{
							Main.tile[num24, num25].active(false);
							Main.tile[num24, num25].wall = 27;
						}
					}
				}
			}
			for (int num26 = num18; num26 < num19; num26++)
			{
				for (int num27 = num21; num27 > num20; num27--)
				{
					bool flag4 = false;
					if (Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 30)
					{
						int num28 = -1;
						for (int num29 = 0; num29 < 2; num29++)
						{
							if (!WorldGen.SolidTile(num26 + num28, num27) && Main.tile[num26 + num28, num27].wall == 0)
							{
								int num30 = 0;
								int num31 = num27;
								int num32 = num27;
								while (Main.tile[num26, num31].active() && Main.tile[num26, num31].type == 30 && !WorldGen.SolidTile(num26 + num28, num31) && Main.tile[num26 + num28, num31].wall == 0)
								{
									num31--;
									num30++;
								}
								num31++;
								int num33 = num31 + 1;
								if (num30 > 4)
								{
									if (WorldGen.genRand.Next(2) == 0)
									{
										num31 = num32 - 1;
										bool flag5 = true;
										for (int num34 = num26 - 2; num34 <= num26 + 2; num34++)
										{
											for (int num35 = num31 - 2; num35 <= num31; num35++)
											{
												if (num34 != num26 && Main.tile[num34, num35].active())
												{
													flag5 = false;
												}
											}
										}
										if (flag5)
										{
											Main.tile[num26, num31].active(false);
											Main.tile[num26, num31 - 1].active(false);
											Main.tile[num26, num31 - 2].active(false);
											WorldGen.PlaceTile(num26, num31, 10, true, false, -1, 0);
											flag4 = true;
										}
									}
									if (!flag4)
									{
										for (int num36 = num33; num36 < num32; num36++)
										{
											Main.tile[num26, num36].type = 124;
										}
									}
								}
							}
							num28 = 1;
						}
					}
					if (flag4)
					{
						break;
					}
				}
			}
			int num37 = WorldGen.genRand.Next(1, 2);
			if (WorldGen.genRand.Next(4) == 0)
			{
				num37 = 0;
			}
			if (WorldGen.genRand.Next(6) == 0)
			{
				num37++;
			}
			if (WorldGen.genRand.Next(10) == 0)
			{
				num37++;
			}
			for (int num38 = 0; num38 < num37; num38++)
			{
				int num39 = 0;
				int num40 = WorldGen.genRand.Next(num18, num19);
				int num41 = WorldGen.genRand.Next(num20, num21);
				while (!Main.wallHouse[(int)Main.tile[num40, num41].wall] || Main.tile[num40, num41].active())
				{
					num39++;
					if (num39 > 1000)
					{
						break;
					}
					num40 = WorldGen.genRand.Next(num18, num19);
					num41 = WorldGen.genRand.Next(num20, num21);
				}
				if (num39 > 1000)
				{
					break;
				}
				int num43;
				int num44;
				int num45;
				int num46;
				for (int num42 = 0; num42 < 2; num42++)
				{
					num43 = num40;
					num44 = num40;
					while (!Main.tile[num43, num41].active() && Main.wallHouse[(int)Main.tile[num43, num41].wall])
					{
						num43--;
					}
					num43++;
					while (!Main.tile[num44, num41].active() && Main.wallHouse[(int)Main.tile[num44, num41].wall])
					{
						num44++;
					}
					num44--;
					i = (num43 + num44) / 2;
					num45 = num41;
					num46 = num41;
					while (!Main.tile[num40, num45].active() && Main.wallHouse[(int)Main.tile[num40, num45].wall])
					{
						num45--;
					}
					num45++;
					while (!Main.tile[num40, num46].active() && Main.wallHouse[(int)Main.tile[num40, num46].wall])
					{
						num46++;
					}
					num46--;
					num41 = (num45 + num46) / 2;
				}
				num43 = num40;
				num44 = num40;
				while (!Main.tile[num43, num41].active() && !Main.tile[num43, num41 - 1].active() && !Main.tile[num43, num41 + 1].active())
				{
					num43--;
				}
				num43++;
				while (!Main.tile[num44, num41].active() && !Main.tile[num44, num41 - 1].active() && !Main.tile[num44, num41 + 1].active())
				{
					num44++;
				}
				num44--;
				num45 = num41;
				num46 = num41;
				while (!Main.tile[num40, num45].active() && !Main.tile[num40 - 1, num45].active() && !Main.tile[num40 + 1, num45].active())
				{
					num45--;
				}
				num45++;
				while (!Main.tile[num40, num46].active() && !Main.tile[num40 - 1, num46].active() && !Main.tile[num40 + 1, num46].active())
				{
					num46++;
				}
				num46--;
				num40 = (num43 + num44) / 2;
				num41 = (num45 + num46) / 2;
				int num47 = num44 - num43;
				int num48 = num46 - num45;
				if (num47 > 7 && num48 > 5)
				{
					int num49 = 0;
					if (WorldGen.nearPicture2(i, num41))
					{
						num49 = -1;
					}
					if (num49 == 0)
					{
						Vector2 vector = WorldGen.randHousePicture();
						int type = (int)vector.X;
						int style = (int)vector.Y;
						if (!WorldGen.nearPicture(num40, num41))
						{
							WorldGen.PlaceTile(num40, num41, type, true, false, -1, style);
						}
					}
				}
			}
			for (int num50 = num18; num50 < num19; num50++)
			{
				bool flag6 = true;
				for (int num51 = num20; num51 < num21; num51++)
				{
					for (int num52 = num50 - 3; num52 <= num50 + 3; num52++)
					{
						if (Main.tile[num52, num51].active() && (!WorldGen.SolidTile(num52, num51) || Main.tile[num52, num51].type == 10))
						{
							flag6 = false;
						}
					}
				}
				if (flag6)
				{
					for (int num53 = num20; num53 < num21; num53++)
					{
						if (Main.tile[num50, num53].wall == 27 && !Main.tile[num50, num53].active())
						{
							WorldGen.PlaceTile(num50, num53, 124, true, false, -1, 0);
						}
					}
				}
				num50 += WorldGen.genRand.Next(4);
			}
			for (int num54 = 0; num54 < 4; num54++)
			{
				int num55 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
				int num56 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				while (Main.tile[num55, num56].wall != 27)
				{
					num55 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
					num56 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				}
				while (Main.tile[num55, num56].active())
				{
					num56--;
				}
				while (!Main.tile[num55, num56].active())
				{
					num56++;
				}
				num56--;
				if (Main.tile[num55, num56].wall == 27)
				{
					if (WorldGen.genRand.Next(3) == 0)
					{
						int num57 = WorldGen.genRand.Next(9);
						if (num57 == 0)
						{
							num57 = 14;
						}
						if (num57 == 1)
						{
							num57 = 16;
						}
						if (num57 == 2)
						{
							num57 = 18;
						}
						if (num57 == 3)
						{
							num57 = 86;
						}
						if (num57 == 4)
						{
							num57 = 87;
						}
						if (num57 == 5)
						{
							num57 = 94;
						}
						if (num57 == 6)
						{
							num57 = 101;
						}
						if (num57 == 7)
						{
							num57 = 104;
						}
						if (num57 == 8)
						{
							num57 = 106;
						}
						WorldGen.PlaceTile(num55, num56, num57, true, false, -1, 0);
					}
					else
					{
						int style2 = WorldGen.genRand.Next(2, 43);
						WorldGen.PlaceTile(num55, num56, 105, true, true, -1, style2);
					}
				}
			}
			for (int num58 = 0; num58 < 40; num58++)
			{
				int num59 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
				int num60 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				while (Main.tile[num59, num60].wall != 27)
				{
					num59 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
					num60 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				}
				while (Main.tile[num59, num60].active())
				{
					num60--;
				}
				while (!Main.tile[num59, num60].active())
				{
					num60++;
				}
				num60--;
				if (Main.tile[num59, num60].wall == 27 && WorldGen.genRand.Next(2) == 0)
				{
					int style3 = WorldGen.genRand.Next(22, 26);
					WorldGen.PlaceTile(num59, num60, 186, true, false, -1, style3);
				}
			}
			for (int num61 = 0; num61 < 20; num61++)
			{
				int num62 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
				int num63 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				while (Main.tile[num62, num63].wall != 27)
				{
					num62 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
					num63 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				}
				while (Main.tile[num62, num63].active())
				{
					num63--;
				}
				while (!Main.tile[num62, num63].active())
				{
					num63++;
				}
				num63--;
				if (Main.tile[num62, num63].wall == 27 && WorldGen.genRand.Next(2) == 0)
				{
					int x = WorldGen.genRand.Next(31, 34);
					WorldGen.PlaceSmallPile(num62, num63, x, 1, 185);
				}
			}
			for (int num64 = 0; num64 < 15; num64++)
			{
				int num65 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
				int num66 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				while (Main.tile[num65, num66].wall != 27)
				{
					num65 = WorldGen.genRand.Next(num18 + 2, num19 - 1);
					num66 = WorldGen.genRand.Next(num20 + 2, num21 - 1);
				}
				while (Main.tile[num65, num66].active())
				{
					num66--;
				}
				while (num66 > 0 && !Main.tile[num65, num66 - 1].active())
				{
					num66--;
				}
				if (Main.tile[num65, num66].wall == 27)
				{
					int style4 = 0;
					int num67 = WorldGen.genRand.Next(10);
					int num68;
					if (num67 < 9)
					{
						num68 = -1;
					}
					else
					{
						num68 = 34;
						style4 = WorldGen.genRand.Next(6);
					}
					if (num68 > 0)
					{
						WorldGen.PlaceTile(num65, num66, num68, true, false, -1, style4);
						if ((int)Main.tile[num65, num66].type == num68)
						{
							if (num68 == 4)
							{
								Tile expr_14DE = Main.tile[num65, num66];
								expr_14DE.frameX = (short)(expr_14DE.frameX + 54);
							}
							else
							{
								int num69 = num65;
								int num70 = num66;
								num66 = num70 - Main.tile[num69, num70].frameY / 18;
								num65 = Main.tile[num69, num70].frameX / 18;
								if (num65 > 2)
								{
									num65 -= 3;
								}
								num65 = num69 - num65;
								short num71 = 54;
								if (Main.tile[num65, num66].frameX > 0)
								{
									num71 = -54;
								}
								for (int num72 = num65; num72 < num65 + 3; num72++)
								{
									for (int num73 = num66; num73 < num66 + 3; num73++)
									{
										Tile expr_1577 = Main.tile[num72, num73];
										expr_1577.frameX = (short)(expr_1577.frameX + num71);
									}
								}
							}
						}
					}
				}
			}
		}
		public static void CountTiles(int X)
		{
			if (X == 0)
			{
				WorldGen.totalEvil = WorldGen.totalEvil2;
				WorldGen.totalBlood = WorldGen.totalBlood2;
				WorldGen.totalSolid = WorldGen.totalSolid2;
				WorldGen.totalGood = WorldGen.totalGood2;
				WorldGen.tGood = (byte)Math.Round((double)((float)WorldGen.totalGood / (float)WorldGen.totalSolid * 100f));
				WorldGen.tEvil = (byte)Math.Round((double)((float)WorldGen.totalEvil / (float)WorldGen.totalSolid * 100f));
				WorldGen.tBlood = (byte)Math.Round((double)((float)WorldGen.totalBlood / (float)WorldGen.totalSolid * 100f));
				if (WorldGen.tGood == 0 && WorldGen.totalGood > 0)
				{
					WorldGen.tGood = 1;
				}
				if (WorldGen.tEvil == 0 && WorldGen.totalEvil > 0)
				{
					WorldGen.tEvil = 1;
				}
				if (WorldGen.tBlood == 0 && WorldGen.totalBlood > 0)
				{
					WorldGen.tBlood = 1;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(57, -1, -1, "", 0, 0f, 0f, 0f, 0);
				}
				WorldGen.totalEvil2 = 0;
				WorldGen.totalSolid2 = 0;
				WorldGen.totalGood2 = 0;
				WorldGen.totalBlood2 = 0;
			}
			ushort num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			do
			{
				int num5;
				int num6;
				if (num3 == 0)
				{
					num5 = 0;
					num4 = (int)(Main.worldSurface + 1.0);
					num6 = 5;
				}
				else
				{
					num5 = num4;
					num4 = Main.maxTilesY;
					num6 = 1;
				}
				for (int i = num5; i < num4; i++)
				{
					Tile tile = Main.tile[X, i];
					ushort type = tile.type;
					if (type != 0 || tile.active())
					{
						if (type == num)
						{
							num2 += num6;
						}
						else
						{
							WorldGen.tileCounts[(int)num] += num2;
							num = type;
							num2 = num6;
						}
					}
				}
				WorldGen.tileCounts[(int)num] += num2;
				num2 = 0;
				num3++;
			}
			while (num3 < 2);
			WorldGen.AddUpAlignmentCounts(false);
		}
		public static void AddUpAlignmentCounts(bool clearCounts = false)
		{
			if (clearCounts)
			{
				WorldGen.totalEvil2 = 0;
				WorldGen.totalSolid2 = 0;
				WorldGen.totalGood2 = 0;
				WorldGen.totalBlood2 = 0;
			}
			WorldGen.totalGood2 += WorldGen.tileCounts[164] + WorldGen.tileCounts[109] + WorldGen.tileCounts[117] + WorldGen.tileCounts[116];
			WorldGen.totalEvil2 += WorldGen.tileCounts[23] + WorldGen.tileCounts[163] + WorldGen.tileCounts[112] + WorldGen.tileCounts[25];
			WorldGen.totalBlood2 += WorldGen.tileCounts[199] + WorldGen.tileCounts[234] + WorldGen.tileCounts[203] + WorldGen.tileCounts[200];
			WorldGen.totalSolid2 += WorldGen.tileCounts[2] + WorldGen.tileCounts[1] + WorldGen.tileCounts[60] + WorldGen.tileCounts[53] + WorldGen.tileCounts[161];
			WorldGen.totalSolid2 += WorldGen.tileCounts[164] + WorldGen.tileCounts[109] + WorldGen.tileCounts[117] + WorldGen.tileCounts[116];
			WorldGen.totalSolid2 += WorldGen.tileCounts[23] + WorldGen.tileCounts[163] + WorldGen.tileCounts[112] + WorldGen.tileCounts[25];
			WorldGen.totalSolid2 += WorldGen.tileCounts[199] + WorldGen.tileCounts[234] + WorldGen.tileCounts[203] + WorldGen.tileCounts[200];
			Array.Clear(WorldGen.tileCounts, 0, WorldGen.tileCounts.Length);
		}
		public static void plantDye(int i, int j)
		{
			if (Main.tile[i, j].active())
			{
				if (i < 95 || i > Main.maxTilesX - 95 || j < 95 || j > Main.maxTilesY - 95)
				{
					return;
				}
				int num = 90;
				if ((double)j < Main.worldSurface)
				{
					if (Main.tile[i, j - 1].active() && Main.tile[i, j - 1].type != 3 && Main.tile[i, j - 1].type != 51 && Main.tile[i, j - 1].type != 61 && Main.tile[i, j - 1].type != 73 && Main.tile[i, j - 1].type != 74 && Main.tile[i, j - 1].type != 184)
					{
						return;
					}
					for (int k = i - num; k < i + num; k++)
					{
						for (int l = j - num; l < j + num; l++)
						{
							if (Main.tile[k, l].active() && Main.tile[k, l].type == 227)
							{
								return;
							}
						}
					}
					if (Main.tile[i, j].type == 2 || Main.tile[i, j].type == 109)
					{
						if (Main.rand.Next(4) == 0)
						{
							WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 4);
							return;
						}
						WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 3);
						return;
					}
					else if (Main.tile[i, j].type == 60)
					{
						if (Main.rand.Next(2) == 0)
						{
							WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 2);
							return;
						}
						WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 4);
						return;
					}
					else
					{
						if (Main.tile[i, j].type == 53 && Main.tile[i, j - 1].liquid == 255 && Main.tile[i, j - 2].liquid == 255)
						{
							WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 2);
							return;
						}
						if (Main.tile[i, j].type != 80 || Main.tile[i - 1, j - 1].active() || Main.tile[i + 1, j - 1].active())
						{
							return;
						}
						try
						{
							bool flag = true;
							for (int m = i - 5; m <= i + 5; m++)
							{
								for (int n = j - 5; n <= j + 15; n++)
								{
									if (Main.tile[m, n].active() && (Main.tile[m, n].type == 112 || Main.tile[m, n].type == 234))
									{
										flag = false;
									}
								}
							}
							if (flag)
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 6);
							}
							return;
						}
						catch
						{
							return;
						}
					}
				}
				if (j < Main.maxTilesY - 200)
				{
					if (!Main.tile[i, j - 1].active() || Main.tile[i, j - 1].type == 3 || Main.tile[i, j - 1].type == 51 || Main.tile[i, j - 1].type == 61 || Main.tile[i, j - 1].type == 73 || Main.tile[i, j - 1].type == 74 || Main.tile[i, j - 1].type == 184)
					{
						for (int num2 = i - num; num2 < i + num; num2++)
						{
							for (int num3 = j - num; num3 < j + num; num3++)
							{
								if (Main.tile[num2, num3].active() && Main.tile[num2, num3].type == 227)
								{
									return;
								}
							}
						}
						if (Main.tile[i, j].type == 60)
						{
							if (Main.rand.Next(2) == 0)
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 2);
							}
							else if (Main.rand.Next(2) == 0)
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 0);
							}
							else
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 1);
							}
						}
						else if (Main.tile[i, j].type == 0 || Main.tile[i, j].type == 1 || Main.tile[i, j].type == 59)
						{
							if (Main.rand.Next(2) == 0)
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 0);
							}
							else
							{
								WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 1);
							}
						}
						else if (Main.tile[i, j - 1].liquid == 255 && Main.tile[i, j - 2].liquid == 255)
						{
							WorldGen.PlaceTile(i, j - 1, 227, true, false, -1, 5);
						}
					}
					if (!Main.tile[i, j + 1].active())
					{
						for (int num4 = i - num; num4 < i + num; num4++)
						{
							for (int num5 = j - num; num5 < j + num; num5++)
							{
								if (Main.tile[num4, num5].active() && Main.tile[num4, num5].type == 227)
								{
									return;
								}
							}
						}
						if (Main.tile[i, j].type == 0)
						{
							WorldGen.PlaceTile(i, j + 1, 227, true, false, -1, 7);
						}
					}
				}
			}
		}
		public static void UpdateWorld()
		{
			int num = 20;
			Wiring.UpdateMech();
			if (Main.netMode != 1)
			{
				WorldGen.totalD++;
				if (WorldGen.totalD >= 30)
				{
					WorldGen.totalD = 0;
					WorldGen.CountTiles(WorldGen.totalX);
					WorldGen.totalX++;
					if (WorldGen.totalX >= Main.maxTilesX)
					{
						WorldGen.totalX = 0;
					}
				}
			}
			if (Main.worldRate == 0)
			{
				return;
			}
			Liquid.skipCount++;
			if (Liquid.skipCount > 1)
			{
				Liquid.UpdateLiquid();
				Liquid.skipCount = 0;
			}
			float num2 = 3E-05f * (float)Main.worldRate;
			float num3 = 1.5E-05f * (float)Main.worldRate;
			bool flag = false;
			WorldGen.spawnDelay++;
			if (Main.invasionType > 0 || Main.eclipse)
			{
				WorldGen.spawnDelay = 0;
			}
			if (WorldGen.spawnDelay >= 20)
			{
				flag = true;
				WorldGen.spawnDelay = 0;
				if (WorldGen.spawnNPC != 37)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && Main.npc[i].homeless && Main.npc[i].townNPC && Main.npc[i].type != 368)
						{
							WorldGen.spawnNPC = Main.npc[i].type;
							break;
						}
					}
				}
			}
			int num4 = 0;
			while ((float)num4 < (float)(Main.maxTilesX * Main.maxTilesY) * num2)
			{
				int num5 = WorldGen.genRand.Next(10, Main.maxTilesX - 10);
				int num6 = WorldGen.genRand.Next(10, (int)Main.worldSurface - 1);
				int num7 = num5 - 1;
				int num8 = num5 + 2;
				int num9 = num6 - 1;
				int num10 = num6 + 2;
				if (num7 < 10)
				{
					num7 = 10;
				}
				if (num8 > Main.maxTilesX - 10)
				{
					num8 = Main.maxTilesX - 10;
				}
				if (num9 < 10)
				{
					num9 = 10;
				}
				if (num10 > Main.maxTilesY - 10)
				{
					num10 = Main.maxTilesY - 10;
				}
				if (Main.tile[num5, num6] != null)
				{
					if (Main.tileAlch[(int)Main.tile[num5, num6].type])
					{
						WorldGen.GrowAlch(num5, num6);
					}
					if (Main.tile[num5, num6].liquid > 32)
					{
						if (Main.tile[num5, num6].active() && (Main.tile[num5, num6].type == 3 || Main.tile[num5, num6].type == 20 || Main.tile[num5, num6].type == 24 || Main.tile[num5, num6].type == 27 || Main.tile[num5, num6].type == 73))
						{
							WorldGen.KillTile(num5, num6, false, false, false);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(17, -1, -1, "", 0, (float)num5, (float)num6, 0f, 0);
							}
						}
					}
					else if (Main.tile[num5, num6].nactive())
					{
						WorldGen.hardUpdateWorld(num5, num6);
						if (Main.rand.Next(3000) == 0)
						{
							WorldGen.plantDye(num5, num6);
						}
						if (Main.tile[num5, num6].type == 80)
						{
							if (WorldGen.genRand.Next(15) == 0)
							{
								WorldGen.GrowCactus(num5, num6);
							}
						}
						else if (Main.tile[num5, num6].type == 53)
						{
							if (!Main.tile[num5, num9].active())
							{
								if (num5 < 250 || num5 > Main.maxTilesX - 250)
								{
									if (WorldGen.genRand.Next(500) == 0 && Main.tile[num5, num9].liquid == 255 && Main.tile[num5, num9 - 1].liquid == 255 && Main.tile[num5, num9 - 2].liquid == 255 && Main.tile[num5, num9 - 3].liquid == 255 && Main.tile[num5, num9 - 4].liquid == 255)
									{
										WorldGen.PlaceTile(num5, num9, 81, true, false, -1, 0);
										if (Main.netMode == 2 && Main.tile[num5, num9].active())
										{
											NetMessage.SendTileSquare(-1, num5, num9, 1);
										}
									}
								}
								else if (num5 > 400 && num5 < Main.maxTilesX - 400 && WorldGen.genRand.Next(300) == 0)
								{
									WorldGen.GrowCactus(num5, num6);
								}
							}
						}
						else if (Main.tile[num5, num6].type == 116 || Main.tile[num5, num6].type == 112 || Main.tile[num5, num6].type == 234)
						{
							if (!Main.tile[num5, num9].active() && num5 > 400 && num5 < Main.maxTilesX - 400 && WorldGen.genRand.Next(300) == 0)
							{
								WorldGen.GrowCactus(num5, num6);
							}
						}
						else if (Main.tile[num5, num6].type == 147 || Main.tile[num5, num6].type == 161 || Main.tile[num5, num6].type == 163 || Main.tile[num5, num6].type == 164 || Main.tile[num5, num6].type == 200)
						{
							if (Main.rand.Next(10) == 0 && !Main.tile[num5, num6 + 1].active() && !Main.tile[num5, num6 + 2].active())
							{
								int num11 = num5 - 3;
								int num12 = num5 + 4;
								int num13 = 0;
								for (int j = num11; j < num12; j++)
								{
									if (Main.tile[j, num6].type == 165 && Main.tile[j, num6].active())
									{
										num13++;
									}
									if (Main.tile[j, num6 + 1].type == 165 && Main.tile[j, num6 + 1].active())
									{
										num13++;
									}
									if (Main.tile[j, num6 + 2].type == 165 && Main.tile[j, num6 + 2].active())
									{
										num13++;
									}
									if (Main.tile[j, num6 + 3].type == 165 && Main.tile[j, num6 + 3].active())
									{
										num13++;
									}
								}
								if (num13 < 2)
								{
									WorldGen.PlaceTight(num5, num6 + 1, 165, false);
									WorldGen.SquareTileFrame(num5, num6 + 1, true);
									if (Main.netMode == 2 && Main.tile[num5, num6 + 1].active())
									{
										NetMessage.SendTileSquare(-1, num5, num6 + 1, 3);
									}
								}
							}
						}
						else if (Main.tile[num5, num6].type == 254)
						{
							if (Main.rand.Next((Main.tile[num5, num6].frameX + 10) / 10) == 0)
							{
								WorldGen.GrowPumpkin(num5, num6, 254);
							}
						}
						else if (Main.tile[num5, num6].type == 78)
						{
							if (!Main.tile[num5, num9].active())
							{
								WorldGen.PlaceTile(num5, num9, 3, true, false, -1, 0);
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
						}
						else if (Main.tile[num5, num6].type == 2 || Main.tile[num5, num6].type == 23 || Main.tile[num5, num6].type == 32 || Main.tile[num5, num6].type == 109 || Main.tile[num5, num6].type == 199)
						{
							int num14 = (int)Main.tile[num5, num6].type;
							if (Main.halloween && WorldGen.genRand.Next(75) == 0 && (num14 == 2 || num14 == 109))
							{
								int num15 = 100;
								int num16 = 0;
								for (int k = num5 - num15; k < num5 + num15; k += 2)
								{
									for (int l = num6 - num15; l < num6 + num15; l += 2)
									{
										if (k > 1 && k < Main.maxTilesX - 2 && l > 1 && l < Main.maxTilesY - 2 && Main.tile[k, l].active() && Main.tile[k, l].type == 254)
										{
											num16++;
										}
									}
								}
								if (num16 < 6)
								{
									WorldGen.PlacePumpkin(num5, num9);
									if (Main.netMode == 2 && Main.tile[num5, num9].type == 254)
									{
										NetMessage.SendTileSquare(-1, num5, num9, 4);
									}
								}
							}
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(12) == 0 && num14 == 2)
							{
								WorldGen.PlaceTile(num5, num9, 3, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(10) == 0 && num14 == 23)
							{
								WorldGen.PlaceTile(num5, num9, 24, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(10) == 0 && num14 == 109)
							{
								WorldGen.PlaceTile(num5, num9, 110, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(10) == 0 && num14 == 199)
							{
								WorldGen.PlaceTile(num5, num9, 201, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							bool flag2 = false;
							for (int m = num7; m < num8; m++)
							{
								for (int n = num9; n < num10; n++)
								{
									if ((num5 != m || num6 != n) && Main.tile[m, n].active())
									{
										if (num14 == 32)
										{
											num14 = 23;
										}
										if (Main.tile[m, n].type == 0 || (num14 == 23 && Main.tile[m, n].type == 2) || (num14 == 199 && Main.tile[m, n].type == 2) || (num14 == 23 && Main.tile[m, n].type == 109))
										{
											WorldGen.SpreadGrass(m, n, 0, num14, false, Main.tile[num5, num6].color());
											if (num14 == 23)
											{
												WorldGen.SpreadGrass(m, n, 2, num14, false, Main.tile[num5, num6].color());
											}
											if (num14 == 23)
											{
												WorldGen.SpreadGrass(m, n, 109, num14, false, Main.tile[num5, num6].color());
											}
											if (num14 == 199)
											{
												WorldGen.SpreadGrass(m, n, 2, num14, false, Main.tile[num5, num6].color());
											}
											if (num14 == 199)
											{
												WorldGen.SpreadGrass(m, n, 109, num14, false, Main.tile[num5, num6].color());
											}
											if ((int)Main.tile[m, n].type == num14)
											{
												WorldGen.SquareTileFrame(m, n, true);
												flag2 = true;
											}
										}
										if (Main.tile[m, n].type == 0 || (num14 == 109 && Main.tile[m, n].type == 2) || (num14 == 109 && Main.tile[m, n].type == 23) || (num14 == 109 && Main.tile[m, n].type == 199))
										{
											WorldGen.SpreadGrass(m, n, 0, num14, false, Main.tile[num5, num6].color());
											if (num14 == 109)
											{
												WorldGen.SpreadGrass(m, n, 2, num14, false, Main.tile[num5, num6].color());
											}
											if (num14 == 109)
											{
												WorldGen.SpreadGrass(m, n, 23, num14, false, Main.tile[num5, num6].color());
											}
											if (num14 == 109)
											{
												WorldGen.SpreadGrass(m, n, 199, num14, false, Main.tile[num5, num6].color());
											}
											if ((int)Main.tile[m, n].type == num14)
											{
												WorldGen.SquareTileFrame(m, n, true);
												flag2 = true;
											}
										}
									}
								}
							}
							if (Main.netMode == 2 && flag2)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						else if (Main.tile[num5, num6].type == 20 && WorldGen.genRand.Next(20) == 0 && !WorldGen.PlayerLOS(num5, num6))
						{
							if (Main.tile[num5, num6].frameX >= 324 && Main.tile[num5, num6].frameX < 540)
							{
								WorldGen.GrowPalmTree(num5, num6);
							}
							else
							{
								WorldGen.GrowTree(num5, num6);
							}
						}
						if (Main.tile[num5, num6].type == 3 && WorldGen.genRand.Next(20) == 0 && Main.tile[num5, num6].frameX != 144)
						{
							if ((Main.tile[num5, num6].frameX < 144 && Main.rand.Next(10) == 0) || (Main.tile[num5, num6 + 1].type == 78 && Main.rand.Next(2) == 0))
							{
								Main.tile[num5, num6].frameX = (short)(198 + WorldGen.genRand.Next(10) * 18);
							}
							Main.tile[num5, num6].type = 73;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						if (Main.tile[num5, num6].type == 110 && WorldGen.genRand.Next(20) == 0 && Main.tile[num5, num6].frameX < 144)
						{
							Main.tile[num5, num6].type = 113;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						if (Main.tile[num5, num6].type == 32 && WorldGen.genRand.Next(3) == 0)
						{
							int num17 = num5;
							int num18 = num6;
							int num19 = 0;
							if (Main.tile[num17 + 1, num18].active() && Main.tile[num17 + 1, num18].type == 32)
							{
								num19++;
							}
							if (Main.tile[num17 - 1, num18].active() && Main.tile[num17 - 1, num18].type == 32)
							{
								num19++;
							}
							if (Main.tile[num17, num18 + 1].active() && Main.tile[num17, num18 + 1].type == 32)
							{
								num19++;
							}
							if (Main.tile[num17, num18 - 1].active() && Main.tile[num17, num18 - 1].type == 32)
							{
								num19++;
							}
							if (num19 < 3 || Main.tile[num5, num6].type == 23)
							{
								int num20 = WorldGen.genRand.Next(4);
								if (num20 == 0)
								{
									num18--;
								}
								else if (num20 == 1)
								{
									num18++;
								}
								else if (num20 == 2)
								{
									num17--;
								}
								else if (num20 == 3)
								{
									num17++;
								}
								if (!Main.tile[num17, num18].active())
								{
									num19 = 0;
									if (Main.tile[num17 + 1, num18].active() && Main.tile[num17 + 1, num18].type == 32)
									{
										num19++;
									}
									if (Main.tile[num17 - 1, num18].active() && Main.tile[num17 - 1, num18].type == 32)
									{
										num19++;
									}
									if (Main.tile[num17, num18 + 1].active() && Main.tile[num17, num18 + 1].type == 32)
									{
										num19++;
									}
									if (Main.tile[num17, num18 - 1].active() && Main.tile[num17, num18 - 1].type == 32)
									{
										num19++;
									}
									if (num19 < 2)
									{
										int num21 = 7;
										int num22 = num17 - num21;
										int num23 = num17 + num21;
										int num24 = num18 - num21;
										int num25 = num18 + num21;
										bool flag3 = false;
										for (int num26 = num22; num26 < num23; num26++)
										{
											for (int num27 = num24; num27 < num25; num27++)
											{
												if (Math.Abs(num26 - num17) * 2 + Math.Abs(num27 - num18) < 9 && Main.tile[num26, num27].active() && Main.tile[num26, num27].type == 23 && Main.tile[num26, num27 - 1].active() && Main.tile[num26, num27 - 1].type == 32 && Main.tile[num26, num27 - 1].liquid == 0)
												{
													flag3 = true;
													break;
												}
											}
										}
										if (flag3)
										{
											Main.tile[num17, num18].type = 32;
											Main.tile[num17, num18].active(true);
											WorldGen.SquareTileFrame(num17, num18, true);
											if (Main.netMode == 2)
											{
												NetMessage.SendTileSquare(-1, num17, num18, 3);
											}
										}
									}
								}
							}
						}
					}
					else if (flag && WorldGen.spawnNPC > 0)
					{
						if (Main.tile[num5, num6].wall == 34)
						{
							if (Main.rand.Next(4) == 0)
							{
								WorldGen.SpawnNPC(num5, num6);
							}
						}
						else
						{
							WorldGen.SpawnNPC(num5, num6);
						}
					}
					if (Main.tile[num5, num6].wall == 81 || Main.tile[num5, num6].wall == 83 || (Main.tile[num5, num6].type == 199 && Main.tile[num5, num6].active()))
					{
						int num28 = num5 + WorldGen.genRand.Next(-2, 3);
						int num29 = num6 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num28, num29].wall >= 63 && Main.tile[num28, num29].wall <= 68)
						{
							bool flag4 = false;
							for (int num30 = num5 - num; num30 < num5 + num; num30++)
							{
								for (int num31 = num6 - num; num31 < num6 + num; num31++)
								{
									if (Main.tile[num30, num31].active())
									{
										int type = (int)Main.tile[num30, num31].type;
										if (type == 199 || type == 200 || type == 201 || type == 203 || type == 205 || type == 234)
										{
											flag4 = true;
											break;
										}
									}
								}
							}
							if (flag4)
							{
								Main.tile[num28, num29].wall = 81;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num28, num29, 3);
								}
							}
						}
					}
					if (Main.tile[num5, num6].wall == 69 || Main.tile[num5, num6].wall == 3 || (Main.tile[num5, num6].type == 23 && Main.tile[num5, num6].active()))
					{
						int num32 = num5 + WorldGen.genRand.Next(-2, 3);
						int num33 = num6 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num32, num33].wall >= 63 && Main.tile[num32, num33].wall <= 68)
						{
							bool flag5 = false;
							for (int num34 = num5 - num; num34 < num5 + num; num34++)
							{
								for (int num35 = num6 - num; num35 < num6 + num; num35++)
								{
									if (Main.tile[num34, num35].active())
									{
										int type2 = (int)Main.tile[num34, num35].type;
										if (type2 == 22 || type2 == 23 || type2 == 24 || type2 == 25 || type2 == 32 || type2 == 112 || type2 == 163)
										{
											flag5 = true;
											break;
										}
									}
								}
							}
							if (flag5)
							{
								Main.tile[num32, num33].wall = 69;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num32, num33, 3);
								}
							}
						}
					}
					if (Main.tile[num5, num6].wall == 70 || (Main.tile[num5, num6].type == 109 && Main.tile[num5, num6].active()))
					{
						int num36 = num5 + WorldGen.genRand.Next(-2, 3);
						int num37 = num6 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num36, num37].wall == 63 || Main.tile[num36, num37].wall == 65 || Main.tile[num36, num37].wall == 66 || Main.tile[num36, num37].wall == 68)
						{
							bool flag6 = false;
							for (int num38 = num5 - num; num38 < num5 + num; num38++)
							{
								for (int num39 = num6 - num; num39 < num6 + num; num39++)
								{
									if (Main.tile[num38, num39].active())
									{
										int type3 = (int)Main.tile[num38, num39].type;
										if (type3 == 109 || type3 == 110 || type3 == 113 || type3 == 115 || type3 == 116 || type3 == 117 || type3 == 164)
										{
											flag6 = true;
											break;
										}
									}
								}
							}
							if (flag6)
							{
								Main.tile[num36, num37].wall = 70;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num36, num37, 3);
								}
							}
						}
					}
					if (Main.tile[num5, num6].active())
					{
						if ((Main.tile[num5, num6].type == 2 || Main.tile[num5, num6].type == 52 || (Main.tile[num5, num6].type == 192 && WorldGen.genRand.Next(10) == 0)) && WorldGen.genRand.Next(40) == 0 && !Main.tile[num5, num6 + 1].active() && !Main.tile[num5, num6 + 1].lava())
						{
							bool flag7 = false;
							for (int num40 = num6; num40 > num6 - 10; num40--)
							{
								if (Main.tile[num5, num40].bottomSlope())
								{
									flag7 = false;
									break;
								}
								if (Main.tile[num5, num40].active() && Main.tile[num5, num40].type == 2 && !Main.tile[num5, num40].bottomSlope())
								{
									flag7 = true;
									break;
								}
							}
							if (flag7)
							{
								int num41 = num5;
								int num42 = num6 + 1;
								Main.tile[num41, num42].type = 52;
								Main.tile[num41, num42].active(true);
								Main.tile[num41, num42].color(Main.tile[num5, num6].color());
								WorldGen.SquareTileFrame(num41, num42, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num41, num42, 3);
								}
							}
						}
						if (Main.tile[num5, num6].type == 70)
						{
							int type4 = (int)Main.tile[num5, num6].type;
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(10) == 0)
							{
								WorldGen.PlaceTile(num5, num9, 71, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							if (WorldGen.genRand.Next(100) == 0 && !WorldGen.PlayerLOS(num5, num6))
							{
								WorldGen.GrowTree(num5, num6);
							}
							bool flag8 = false;
							for (int num43 = num7; num43 < num8; num43++)
							{
								for (int num44 = num9; num44 < num10; num44++)
								{
									if ((num5 != num43 || num6 != num44) && Main.tile[num43, num44].active() && Main.tile[num43, num44].type == 59)
									{
										WorldGen.SpreadGrass(num43, num44, 59, type4, false, Main.tile[num5, num6].color());
										if ((int)Main.tile[num43, num44].type == type4)
										{
											WorldGen.SquareTileFrame(num43, num44, true);
											flag8 = true;
										}
									}
								}
							}
							if (Main.netMode == 2 && flag8)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						if (Main.tile[num5, num6].type == 60)
						{
							int type5 = (int)Main.tile[num5, num6].type;
							if (!Main.tile[num5, num9].active() && WorldGen.genRand.Next(7) == 0)
							{
								WorldGen.PlaceTile(num5, num9, 61, true, false, -1, 0);
								if (Main.tile[num5, num9].active())
								{
									Main.tile[num5, num9].color(Main.tile[num5, num6].color());
								}
								if (Main.netMode == 2 && Main.tile[num5, num9].active())
								{
									NetMessage.SendTileSquare(-1, num5, num9, 1);
								}
							}
							else if (WorldGen.genRand.Next(500) == 0 && (!Main.tile[num5, num9].active() || Main.tile[num5, num9].type == 61 || Main.tile[num5, num9].type == 74 || Main.tile[num5, num9].type == 69))
							{
								if (!WorldGen.PlayerLOS(num5, num6))
								{
									WorldGen.GrowTree(num5, num6);
								}
							}
							else if (WorldGen.genRand.Next(25) == 0 && Main.tile[num5, num9].liquid == 0)
							{
								WorldGen.PlaceJunglePlant(num5, num9, 233, WorldGen.genRand.Next(8), 0);
								if (Main.tile[num5, num9].type == 233)
								{
									if (Main.netMode == 2)
									{
										NetMessage.SendTileSquare(-1, num5, num9, 4);
									}
									else
									{
										WorldGen.PlaceJunglePlant(num5, num9, 233, WorldGen.genRand.Next(12), 1);
										if (Main.tile[num5, num9].type == 233 && Main.netMode == 2)
										{
											NetMessage.SendTileSquare(-1, num5, num9, 3);
										}
									}
								}
							}
							bool flag9 = false;
							for (int num45 = num7; num45 < num8; num45++)
							{
								for (int num46 = num9; num46 < num10; num46++)
								{
									if ((num5 != num45 || num6 != num46) && Main.tile[num45, num46].active() && Main.tile[num45, num46].type == 59)
									{
										WorldGen.SpreadGrass(num45, num46, 59, type5, false, Main.tile[num5, num6].color());
										if ((int)Main.tile[num45, num46].type == type5)
										{
											WorldGen.SquareTileFrame(num45, num46, true);
											flag9 = true;
										}
									}
								}
							}
							if (Main.netMode == 2 && flag9)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						if (Main.tile[num5, num6].type == 61 && WorldGen.genRand.Next(3) == 0 && Main.tile[num5, num6].frameX < 144)
						{
							if (Main.rand.Next(4) == 0)
							{
								Main.tile[num5, num6].frameX = (short)(162 + WorldGen.genRand.Next(8) * 18);
							}
							Main.tile[num5, num6].type = 74;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, num5, num6, 3);
							}
						}
						if ((Main.tile[num5, num6].type == 60 || Main.tile[num5, num6].type == 62) && WorldGen.genRand.Next(15) == 0 && !Main.tile[num5, num6 + 1].active() && !Main.tile[num5, num6 + 1].lava())
						{
							bool flag10 = false;
							for (int num47 = num6; num47 > num6 - 10; num47--)
							{
								if (Main.tile[num5, num47].bottomSlope())
								{
									flag10 = false;
									break;
								}
								if (Main.tile[num5, num47].active() && Main.tile[num5, num47].type == 60 && !Main.tile[num5, num47].bottomSlope())
								{
									flag10 = true;
									break;
								}
							}
							if (flag10)
							{
								int num48 = num5;
								int num49 = num6 + 1;
								Main.tile[num48, num49].type = 62;
								Main.tile[num48, num49].active(true);
								WorldGen.SquareTileFrame(num48, num49, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num48, num49, 3);
								}
							}
						}
						if ((Main.tile[num5, num6].type == 109 || Main.tile[num5, num6].type == 115) && WorldGen.genRand.Next(15) == 0 && !Main.tile[num5, num6 + 1].active() && !Main.tile[num5, num6 + 1].lava())
						{
							bool flag11 = false;
							for (int num50 = num6; num50 > num6 - 10; num50--)
							{
								if (Main.tile[num5, num50].bottomSlope())
								{
									flag11 = false;
									break;
								}
								if (Main.tile[num5, num50].active() && Main.tile[num5, num50].type == 109 && !Main.tile[num5, num50].bottomSlope())
								{
									flag11 = true;
									break;
								}
							}
							if (flag11)
							{
								int num51 = num5;
								int num52 = num6 + 1;
								Main.tile[num51, num52].type = 115;
								Main.tile[num51, num52].active(true);
								WorldGen.SquareTileFrame(num51, num52, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num51, num52, 3);
								}
							}
						}
						if ((Main.tile[num5, num6].type == 199 || Main.tile[num5, num6].type == 205) && WorldGen.genRand.Next(15) == 0 && !Main.tile[num5, num6 + 1].active() && !Main.tile[num5, num6 + 1].lava())
						{
							bool flag12 = false;
							for (int num53 = num6; num53 > num6 - 10; num53--)
							{
								if (Main.tile[num5, num53].bottomSlope())
								{
									flag12 = false;
									break;
								}
								if (Main.tile[num5, num53].active() && Main.tile[num5, num53].type == 199 && !Main.tile[num5, num53].bottomSlope())
								{
									flag12 = true;
									break;
								}
							}
							if (flag12)
							{
								int num54 = num5;
								int num55 = num6 + 1;
								Main.tile[num54, num55].type = 205;
								Main.tile[num54, num55].active(true);
								WorldGen.SquareTileFrame(num54, num55, true);
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num54, num55, 3);
								}
							}
						}
					}
				}
				num4++;
			}
			int num56 = 0;
			while ((float)num56 < (float)(Main.maxTilesX * Main.maxTilesY) * num3)
			{
				int num57 = WorldGen.genRand.Next(10, Main.maxTilesX - 10);
				int num58 = WorldGen.genRand.Next((int)Main.worldSurface - 1, Main.maxTilesY - 20);
				int num59 = num57 - 1;
				int num60 = num57 + 2;
				int num61 = num58 - 1;
				int num62 = num58 + 2;
				if (num59 < 10)
				{
					num59 = 10;
				}
				if (num60 > Main.maxTilesX - 10)
				{
					num60 = Main.maxTilesX - 10;
				}
				if (num61 < 10)
				{
					num61 = 10;
				}
				if (num62 > Main.maxTilesY - 10)
				{
					num62 = Main.maxTilesY - 10;
				}
				if (Main.tile[num57, num58] != null)
				{
					if (Main.tileAlch[(int)Main.tile[num57, num58].type])
					{
						WorldGen.GrowAlch(num57, num58);
					}
					if (Main.tile[num57, num58].liquid <= 32)
					{
						if (Main.tile[num57, num58].nactive())
						{
							WorldGen.hardUpdateWorld(num57, num58);
							if (Main.rand.Next(3000) == 0)
							{
								WorldGen.plantDye(num57, num58);
							}
							if (Main.tile[num57, num58].type == 23 && !Main.tile[num57, num61].active() && WorldGen.genRand.Next(1) == 0)
							{
								WorldGen.PlaceTile(num57, num61, 24, true, false, -1, 0);
								if (Main.netMode == 2 && Main.tile[num57, num61].active())
								{
									NetMessage.SendTileSquare(-1, num57, num61, 1);
								}
							}
							if (Main.tile[num57, num58].type == 32 && WorldGen.genRand.Next(3) == 0)
							{
								int num63 = num57;
								int num64 = num58;
								int num65 = 0;
								if (Main.tile[num63 + 1, num64].active() && Main.tile[num63 + 1, num64].type == 32)
								{
									num65++;
								}
								if (Main.tile[num63 - 1, num64].active() && Main.tile[num63 - 1, num64].type == 32)
								{
									num65++;
								}
								if (Main.tile[num63, num64 + 1].active() && Main.tile[num63, num64 + 1].type == 32)
								{
									num65++;
								}
								if (Main.tile[num63, num64 - 1].active() && Main.tile[num63, num64 - 1].type == 32)
								{
									num65++;
								}
								if (num65 < 3 || Main.tile[num57, num58].type == 23)
								{
									int num66 = WorldGen.genRand.Next(4);
									if (num66 == 0)
									{
										num64--;
									}
									else if (num66 == 1)
									{
										num64++;
									}
									else if (num66 == 2)
									{
										num63--;
									}
									else if (num66 == 3)
									{
										num63++;
									}
									if (!Main.tile[num63, num64].active())
									{
										num65 = 0;
										if (Main.tile[num63 + 1, num64].active() && Main.tile[num63 + 1, num64].type == 32)
										{
											num65++;
										}
										if (Main.tile[num63 - 1, num64].active() && Main.tile[num63 - 1, num64].type == 32)
										{
											num65++;
										}
										if (Main.tile[num63, num64 + 1].active() && Main.tile[num63, num64 + 1].type == 32)
										{
											num65++;
										}
										if (Main.tile[num63, num64 - 1].active() && Main.tile[num63, num64 - 1].type == 32)
										{
											num65++;
										}
										if (num65 < 2)
										{
											int num67 = 7;
											int num68 = num63 - num67;
											int num69 = num63 + num67;
											int num70 = num64 - num67;
											int num71 = num64 + num67;
											bool flag13 = false;
											for (int num72 = num68; num72 < num69; num72++)
											{
												for (int num73 = num70; num73 < num71; num73++)
												{
													if (Math.Abs(num72 - num63) * 2 + Math.Abs(num73 - num64) < 9 && Main.tile[num72, num73].active() && Main.tile[num72, num73].type == 23 && Main.tile[num72, num73 - 1].active() && Main.tile[num72, num73 - 1].type == 32 && Main.tile[num72, num73 - 1].liquid == 0)
													{
														flag13 = true;
														break;
													}
												}
											}
											if (flag13)
											{
												Main.tile[num63, num64].type = 32;
												Main.tile[num63, num64].active(true);
												WorldGen.SquareTileFrame(num63, num64, true);
												if (Main.netMode == 2)
												{
													NetMessage.SendTileSquare(-1, num63, num64, 3);
												}
											}
										}
									}
								}
							}
							if (Main.tile[num57, num58].type == 199)
							{
								int type6 = (int)Main.tile[num57, num58].type;
								bool flag14 = false;
								for (int num74 = num59; num74 < num60; num74++)
								{
									for (int num75 = num61; num75 < num62; num75++)
									{
										if ((num57 != num74 || num58 != num75) && Main.tile[num74, num75].active() && Main.tile[num74, num75].type == 0)
										{
											WorldGen.SpreadGrass(num74, num75, 0, type6, false, Main.tile[num57, num58].color());
											if ((int)Main.tile[num74, num75].type == type6)
											{
												WorldGen.SquareTileFrame(num74, num75, true);
												flag14 = true;
											}
										}
									}
								}
								if (Main.netMode == 2 && flag14)
								{
									NetMessage.SendTileSquare(-1, num57, num58, 3);
								}
							}
							if (Main.tile[num57, num58].type == 60)
							{
								int type7 = (int)Main.tile[num57, num58].type;
								if (!Main.tile[num57, num61].active() && WorldGen.genRand.Next(10) == 0)
								{
									WorldGen.PlaceTile(num57, num61, 61, true, false, -1, 0);
									if (Main.netMode == 2 && Main.tile[num57, num61].active())
									{
										NetMessage.SendTileSquare(-1, num57, num61, 1);
									}
								}
								else if (WorldGen.genRand.Next(25) == 0 && Main.tile[num57, num61].liquid == 0)
								{
									if (Main.hardMode && NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && WorldGen.genRand.Next(60) == 0)
									{
										bool flag15 = true;
										int num76 = 150;
										for (int num77 = num57 - num76; num77 < num57 + num76; num77 += 2)
										{
											for (int num78 = num58 - num76; num78 < num58 + num76; num78 += 2)
											{
												if (num77 > 1 && num77 < Main.maxTilesX - 2 && num78 > 1 && num78 < Main.maxTilesY - 2 && Main.tile[num77, num78].active() && Main.tile[num77, num78].type == 238)
												{
													flag15 = false;
													break;
												}
											}
										}
										if (flag15)
										{
											WorldGen.PlaceJunglePlant(num57, num61, 238, 0, 0);
											WorldGen.SquareTileFrame(num57, num61, true);
											WorldGen.SquareTileFrame(num57 + 1, num61 + 1, true);
											if (Main.tile[num57, num61].type == 238 && Main.netMode == 2)
											{
												NetMessage.SendTileSquare(-1, num57, num61, 4);
											}
										}
									}
									if (Main.hardMode && WorldGen.genRand.Next(40) == 0)
									{
										bool flag16 = true;
										int num79 = 80;
										for (int num80 = num57 - num79; num80 < num57 + num79; num80 += 2)
										{
											for (int num81 = num58 - num79; num81 < num58 + num79; num81 += 2)
											{
												if (num80 > 1 && num80 < Main.maxTilesX - 2 && num81 > 1 && num81 < Main.maxTilesY - 2 && Main.tile[num80, num81].active() && Main.tile[num80, num81].type == 236)
												{
													flag16 = false;
													break;
												}
											}
										}
										if (flag16)
										{
											WorldGen.PlaceJunglePlant(num57, num61, 236, WorldGen.genRand.Next(3), 0);
											WorldGen.SquareTileFrame(num57, num61, true);
											WorldGen.SquareTileFrame(num57 + 1, num61 + 1, true);
											if (Main.tile[num57, num61].type == 236 && Main.netMode == 2)
											{
												NetMessage.SendTileSquare(-1, num57, num61, 4);
											}
										}
									}
									else
									{
										WorldGen.PlaceJunglePlant(num57, num61, 233, WorldGen.genRand.Next(8), 0);
										if (Main.tile[num57, num61].type == 233)
										{
											if (Main.netMode == 2)
											{
												NetMessage.SendTileSquare(-1, num57, num61, 4);
											}
											else
											{
												WorldGen.PlaceJunglePlant(num57, num61, 233, WorldGen.genRand.Next(12), 1);
												if (Main.tile[num57, num61].type == 233 && Main.netMode == 2)
												{
													NetMessage.SendTileSquare(-1, num57, num61, 3);
												}
											}
										}
									}
								}
								bool flag17 = false;
								for (int num82 = num59; num82 < num60; num82++)
								{
									for (int num83 = num61; num83 < num62; num83++)
									{
										if ((num57 != num82 || num58 != num83) && Main.tile[num82, num83].active() && Main.tile[num82, num83].type == 59)
										{
											WorldGen.SpreadGrass(num82, num83, 59, type7, false, Main.tile[num57, num58].color());
											if ((int)Main.tile[num82, num83].type == type7)
											{
												WorldGen.SquareTileFrame(num82, num83, true);
												flag17 = true;
											}
										}
									}
								}
								if (Main.netMode == 2 && flag17)
								{
									NetMessage.SendTileSquare(-1, num57, num58, 3);
								}
							}
							if (Main.tile[num57, num58].type == 61 && WorldGen.genRand.Next(3) == 0 && Main.tile[num57, num58].frameX < 144)
							{
								if (Main.rand.Next(4) == 0)
								{
									Main.tile[num57, num58].frameX = (short)(162 + WorldGen.genRand.Next(8) * 18);
								}
								Main.tile[num57, num58].type = 74;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num57, num58, 3);
								}
							}
							if ((Main.tile[num57, num58].type == 60 || Main.tile[num57, num58].type == 62) && WorldGen.genRand.Next(5) == 0 && !Main.tile[num57, num58 + 1].active() && !Main.tile[num57, num58 + 1].lava())
							{
								bool flag18 = false;
								for (int num84 = num58; num84 > num58 - 10; num84--)
								{
									if (Main.tile[num57, num84].bottomSlope())
									{
										flag18 = false;
										break;
									}
									if (Main.tile[num57, num84].active() && Main.tile[num57, num84].type == 60 && !Main.tile[num57, num84].bottomSlope())
									{
										flag18 = true;
										break;
									}
								}
								if (flag18)
								{
									int num85 = num57;
									int num86 = num58 + 1;
									Main.tile[num85, num86].type = 62;
									Main.tile[num85, num86].active(true);
									WorldGen.SquareTileFrame(num85, num86, true);
									if (Main.netMode == 2)
									{
										NetMessage.SendTileSquare(-1, num85, num86, 3);
									}
								}
							}
							if (Main.tile[num57, num58].type == 69 && WorldGen.genRand.Next(3) == 0)
							{
								int num87 = num57;
								int num88 = num58;
								int num89 = 0;
								if (Main.tile[num87 + 1, num88].active() && Main.tile[num87 + 1, num88].type == 69)
								{
									num89++;
								}
								if (Main.tile[num87 - 1, num88].active() && Main.tile[num87 - 1, num88].type == 69)
								{
									num89++;
								}
								if (Main.tile[num87, num88 + 1].active() && Main.tile[num87, num88 + 1].type == 69)
								{
									num89++;
								}
								if (Main.tile[num87, num88 - 1].active() && Main.tile[num87, num88 - 1].type == 69)
								{
									num89++;
								}
								if (num89 < 3 || Main.tile[num57, num58].type == 60)
								{
									int num90 = WorldGen.genRand.Next(4);
									if (num90 == 0)
									{
										num88--;
									}
									else if (num90 == 1)
									{
										num88++;
									}
									else if (num90 == 2)
									{
										num87--;
									}
									else if (num90 == 3)
									{
										num87++;
									}
									if (!Main.tile[num87, num88].active())
									{
										num89 = 0;
										if (Main.tile[num87 + 1, num88].active() && Main.tile[num87 + 1, num88].type == 69)
										{
											num89++;
										}
										if (Main.tile[num87 - 1, num88].active() && Main.tile[num87 - 1, num88].type == 69)
										{
											num89++;
										}
										if (Main.tile[num87, num88 + 1].active() && Main.tile[num87, num88 + 1].type == 69)
										{
											num89++;
										}
										if (Main.tile[num87, num88 - 1].active() && Main.tile[num87, num88 - 1].type == 69)
										{
											num89++;
										}
										if (num89 < 2)
										{
											int num91 = 7;
											int num92 = num87 - num91;
											int num93 = num87 + num91;
											int num94 = num88 - num91;
											int num95 = num88 + num91;
											bool flag19 = false;
											for (int num96 = num92; num96 < num93; num96++)
											{
												for (int num97 = num94; num97 < num95; num97++)
												{
													if (Math.Abs(num96 - num87) * 2 + Math.Abs(num97 - num88) < 9 && Main.tile[num96, num97].active() && Main.tile[num96, num97].type == 60 && Main.tile[num96, num97 - 1].active() && Main.tile[num96, num97 - 1].type == 69 && Main.tile[num96, num97 - 1].liquid == 0)
													{
														flag19 = true;
														break;
													}
												}
											}
											if (flag19)
											{
												Main.tile[num87, num88].type = 69;
												Main.tile[num87, num88].active(true);
												WorldGen.SquareTileFrame(num87, num88, true);
												if (Main.netMode == 2)
												{
													NetMessage.SendTileSquare(-1, num87, num88, 3);
												}
											}
										}
									}
								}
							}
							else if (Main.tile[num57, num58].type == 147 || Main.tile[num57, num58].type == 161 || Main.tile[num57, num58].type == 163 || Main.tile[num57, num58].type == 164 || Main.tile[num57, num58].type == 200)
							{
								if (Main.rand.Next(10) == 0 && !Main.tile[num57, num58 + 1].active() && !Main.tile[num57, num58 + 2].active())
								{
									int num98 = num57 - 3;
									int num99 = num57 + 4;
									int num100 = 0;
									for (int num101 = num98; num101 < num99; num101++)
									{
										if (Main.tile[num101, num58].type == 165 && Main.tile[num101, num58].active())
										{
											num100++;
										}
										if (Main.tile[num101, num58 + 1].type == 165 && Main.tile[num101, num58 + 1].active())
										{
											num100++;
										}
										if (Main.tile[num101, num58 + 2].type == 165 && Main.tile[num101, num58 + 2].active())
										{
											num100++;
										}
										if (Main.tile[num101, num58 + 3].type == 165 && Main.tile[num101, num58 + 3].active())
										{
											num100++;
										}
									}
									if (num100 < 2)
									{
										WorldGen.PlaceTight(num57, num58 + 1, 165, false);
										WorldGen.SquareTileFrame(num57, num58 + 1, true);
										if (Main.netMode == 2 && Main.tile[num57, num58 + 1].active())
										{
											NetMessage.SendTileSquare(-1, num57, num58 + 1, 3);
										}
									}
								}
							}
							else if (Main.tileMoss[(int)Main.tile[num57, num58].type])
							{
								int type8 = (int)Main.tile[num57, num58].type;
								bool flag20 = false;
								for (int num102 = num59; num102 < num60; num102++)
								{
									for (int num103 = num61; num103 < num62; num103++)
									{
										if ((num57 != num102 || num58 != num103) && Main.tile[num102, num103].active() && Main.tile[num102, num103].type == 1)
										{
											WorldGen.SpreadGrass(num102, num103, 1, type8, false, Main.tile[num57, num58].color());
											if ((int)Main.tile[num102, num103].type == type8)
											{
												WorldGen.SquareTileFrame(num102, num103, true);
												flag20 = true;
											}
										}
									}
								}
								if (Main.netMode == 2 && flag20)
								{
									NetMessage.SendTileSquare(-1, num57, num58, 3);
								}
								if (WorldGen.genRand.Next(6) == 0)
								{
									int num104 = num57;
									int num105 = num58;
									int num106 = WorldGen.genRand.Next(4);
									if (num106 == 0)
									{
										num104--;
									}
									else if (num106 == 1)
									{
										num104++;
									}
									else if (num106 == 2)
									{
										num105--;
									}
									else
									{
										num105++;
									}
									if (!Main.tile[num104, num105].active())
									{
										WorldGen.PlaceTile(num104, num105, 184, true, false, -1, 0);
										if (Main.netMode == 2 && Main.tile[num104, num105].active())
										{
											NetMessage.SendTileSquare(-1, num104, num105, 1);
										}
									}
								}
							}
							if (Main.tile[num57, num58].type == 70)
							{
								int type9 = (int)Main.tile[num57, num58].type;
								if (!Main.tile[num57, num61].active() && WorldGen.genRand.Next(10) == 0)
								{
									WorldGen.PlaceTile(num57, num61, 71, true, false, -1, 0);
									if (Main.netMode == 2 && Main.tile[num57, num61].active())
									{
										NetMessage.SendTileSquare(-1, num57, num61, 1);
									}
								}
								if (WorldGen.genRand.Next(200) == 0 && !WorldGen.PlayerLOS(num57, num58))
								{
									WorldGen.GrowShroom(num57, num58);
								}
								bool flag21 = false;
								for (int num107 = num59; num107 < num60; num107++)
								{
									for (int num108 = num61; num108 < num62; num108++)
									{
										if ((num57 != num107 || num58 != num108) && Main.tile[num107, num108].active() && Main.tile[num107, num108].type == 59)
										{
											WorldGen.SpreadGrass(num107, num108, 59, type9, false, Main.tile[num57, num58].color());
											if ((int)Main.tile[num107, num108].type == type9)
											{
												WorldGen.SquareTileFrame(num107, num108, true);
												flag21 = true;
											}
										}
									}
								}
								if (Main.netMode == 2 && flag21)
								{
									NetMessage.SendTileSquare(-1, num57, num58, 3);
								}
							}
						}
						else
						{
							if (Main.tile[num57, num58].wall == 62 && Main.tile[num57, num58].liquid == 0 && WorldGen.genRand.Next(10) == 0)
							{
								int num109 = WorldGen.genRand.Next(2, 4);
								int num110 = num57 - num109;
								int num111 = num57 + num109;
								int num112 = num58 - num109;
								int num113 = num58 + num109;
								bool flag22 = false;
								for (int num114 = num110; num114 <= num111; num114++)
								{
									for (int num115 = num112; num115 <= num113; num115++)
									{
										if (WorldGen.SolidTile(num114, num115))
										{
											flag22 = true;
											break;
										}
									}
								}
								if (flag22 && !Main.tile[num57, num58].active())
								{
									WorldGen.PlaceTile(num57, num58, 51, true, false, -1, 0);
									WorldGen.TileFrame(num57, num58, true, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendTileSquare(-1, num57, num58, 3);
									}
								}
							}
							if (flag && WorldGen.spawnNPC > 0)
							{
								if (Main.tile[num57, num58].wall == 34)
								{
									if (Main.rand.Next(4) == 0)
									{
										WorldGen.SpawnNPC(num57, num58);
									}
								}
								else
								{
									WorldGen.SpawnNPC(num57, num58);
								}
							}
						}
					}
					if (Main.tile[num57, num58].wall == 81 || Main.tile[num57, num58].wall == 83 || (Main.tile[num57, num58].type == 199 && Main.tile[num57, num58].active()))
					{
						int num116 = num57 + WorldGen.genRand.Next(-2, 3);
						int num117 = num58 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num116, num117].wall >= 63 && Main.tile[num116, num117].wall <= 68)
						{
							bool flag23 = false;
							for (int num118 = num57 - num; num118 < num57 + num; num118++)
							{
								for (int num119 = num58 - num; num119 < num58 + num; num119++)
								{
									if (Main.tile[num57, num58].active())
									{
										int type10 = (int)Main.tile[num57, num58].type;
										if (type10 == 199 || type10 == 200 || type10 == 201 || type10 == 203 || type10 == 205 || type10 == 234)
										{
											flag23 = true;
											break;
										}
									}
								}
							}
							if (flag23)
							{
								Main.tile[num116, num117].wall = 81;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num116, num117, 3);
								}
							}
						}
					}
					if (Main.tile[num57, num58].wall == 69 || Main.tile[num57, num58].wall == 3 || (Main.tile[num57, num58].type == 23 && Main.tile[num57, num58].active()))
					{
						int num120 = num57 + WorldGen.genRand.Next(-2, 3);
						int num121 = num58 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num120, num121].wall >= 63 && Main.tile[num120, num121].wall <= 68)
						{
							bool flag24 = false;
							for (int num122 = num57 - num; num122 < num57 + num; num122++)
							{
								for (int num123 = num58 - num; num123 < num58 + num; num123++)
								{
									if (Main.tile[num57, num58].active())
									{
										int type11 = (int)Main.tile[num57, num58].type;
										if (type11 == 22 || type11 == 23 || type11 == 24 || type11 == 25 || type11 == 32 || type11 == 112 || type11 == 163)
										{
											flag24 = true;
											break;
										}
									}
								}
							}
							if (flag24)
							{
								Main.tile[num120, num121].wall = 69;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num120, num121, 3);
								}
							}
						}
					}
					if (Main.tile[num57, num58].wall == 70 || (Main.tile[num57, num58].type == 109 && Main.tile[num57, num58].active()))
					{
						int num124 = num57 + WorldGen.genRand.Next(-2, 3);
						int num125 = num58 + WorldGen.genRand.Next(-2, 3);
						if (Main.tile[num124, num125].wall == 63 || Main.tile[num124, num125].wall == 65 || Main.tile[num124, num125].wall == 66 || Main.tile[num124, num125].wall == 68)
						{
							bool flag25 = false;
							for (int num126 = num57 - num; num126 < num57 + num; num126++)
							{
								for (int num127 = num58 - num; num127 < num58 + num; num127++)
								{
									if (Main.tile[num57, num58].active())
									{
										int type12 = (int)Main.tile[num57, num58].type;
										if (type12 == 109 || type12 == 110 || type12 == 113 || type12 == 115 || type12 == 116 || type12 == 117 || type12 == 164)
										{
											flag25 = true;
											break;
										}
									}
								}
							}
							if (flag25)
							{
								Main.tile[num124, num125].wall = 70;
								if (Main.netMode == 2)
								{
									NetMessage.SendTileSquare(-1, num124, num125, 3);
								}
							}
						}
					}
				}
				num56++;
			}
			if (Main.rand.Next(100) == 0)
			{
				WorldGen.PlantAlch();
			}
			if (!Main.dayTime)
			{
				float num128 = (float)(Main.maxTilesX / 4200);
				if ((float)Main.rand.Next(8000) < 10f * num128)
				{
					int num129 = 12;
					int num130 = Main.rand.Next(Main.maxTilesX - 50) + 100;
					num130 *= 16;
					int num131 = Main.rand.Next((int)((double)Main.maxTilesY * 0.05));
					num131 *= 16;
					Vector2 vector = new Vector2((float)num130, (float)num131);
					float num132 = (float)Main.rand.Next(-100, 101);
					float num133 = (float)(Main.rand.Next(200) + 100);
					float num134 = (float)Math.Sqrt((double)(num132 * num132 + num133 * num133));
					num134 = (float)num129 / num134;
					num132 *= num134;
					num133 *= num134;
					Projectile.NewProjectile(vector.X, vector.Y, num132, num133, 12, 1000, 10f, Main.myPlayer, 0f, 0f);
				}
			}
		}
		public static void PlaceWall(int i, int j, int type, bool mute = false)
		{
			if (i <= 1 || j <= 1 || i >= Main.maxTilesX - 2 || j >= Main.maxTilesY - 2)
			{
				return;
			}
			if (Main.tile[i, j] == null)
			{
				Main.tile[i, j] = new Tile();
			}
			if (Main.tile[i, j].wall == 0)
			{
				Main.tile[i, j].wall = (byte)type;
				WorldGen.SquareWallFrame(i, j, true);
				if (!mute)
				{
					Main.PlaySound(0, i * 16, j * 16, 1);
				}
			}
		}
		public static void AddPlants()
		{
			for (int i = 0; i < Main.maxTilesX; i++)
			{
				for (int j = 1; j < Main.maxTilesY; j++)
				{
					if (Main.tile[i, j].type == 2 && Main.tile[i, j].nactive())
					{
						if (!Main.tile[i, j - 1].active())
						{
							WorldGen.PlaceTile(i, j - 1, 3, true, false, -1, 0);
						}
					}
					else if (Main.tile[i, j].type == 23 && Main.tile[i, j].nactive())
					{
						if (!Main.tile[i, j - 1].active())
						{
							WorldGen.PlaceTile(i, j - 1, 24, true, false, -1, 0);
						}
					}
					else if (Main.tile[i, j].type == 199 && Main.tile[i, j].nactive() && !Main.tile[i, j - 1].active())
					{
						WorldGen.PlaceTile(i, j - 1, 201, true, false, -1, 0);
					}
				}
			}
		}
		public static void SpreadGrass(int i, int j, int dirt = 0, int grass = 2, bool repeat = true, byte color = 0)
		{
			try
			{
				if ((int)Main.tile[i, j].type == dirt && Main.tile[i, j].active() && ((double)j < Main.worldSurface || dirt != 0))
				{
					int num = i - 1;
					int num2 = i + 2;
					int num3 = j - 1;
					int num4 = j + 2;
					if (num < 0)
					{
						num = 0;
					}
					if (num2 > Main.maxTilesX)
					{
						num2 = Main.maxTilesX;
					}
					if (num3 < 0)
					{
						num3 = 0;
					}
					if (num4 > Main.maxTilesY)
					{
						num4 = Main.maxTilesY;
					}
					bool flag = true;
					for (int k = num; k < num2; k++)
					{
						for (int l = num3; l < num4; l++)
						{
							if (!Main.tile[k, l].active() || !Main.tileSolid[(int)Main.tile[k, l].type])
							{
								flag = false;
							}
							if (Main.tile[k, l].lava() && Main.tile[k, l].liquid > 0)
							{
								flag = true;
								break;
							}
						}
					}
					if (!flag)
					{
						if (grass != 23 || Main.tile[i, j - 1].type != 27)
						{
							Main.tile[i, j].type = (ushort)grass;
							Main.tile[i, j].color(color);
							for (int m = num; m < num2; m++)
							{
								for (int n = num3; n < num4; n++)
								{
									if (Main.tile[m, n].active() && (int)Main.tile[m, n].type == dirt)
									{
										try
										{
											if (repeat && WorldGen.grassSpread < 1000)
											{
												WorldGen.grassSpread++;
												WorldGen.SpreadGrass(m, n, dirt, grass, true, 0);
												WorldGen.grassSpread--;
											}
										}
										catch
										{
										}
									}
								}
							}
						}
					}
				}
			}
			catch
			{
			}
		}
		public static void ChasmRunnerSideways(int i, int j, int direction, int steps)
		{
			float num = (float)steps;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(10, 21) * 0.1f * (float)direction;
			value2.Y = (float)WorldGen.genRand.Next(-10, 10) * 0.01f;
			double num2 = (double)(WorldGen.genRand.Next(5) + 7);
			while (num2 > 0.0)
			{
				if (num > 0f)
				{
					num2 += (double)WorldGen.genRand.Next(3);
					num2 -= (double)WorldGen.genRand.Next(3);
					if (num2 < 7.0)
					{
						num2 = 7.0;
					}
					if (num2 > 20.0)
					{
						num2 = 20.0;
					}
					if (num == 1f && num2 < 10.0)
					{
						num2 = 10.0;
					}
				}
				else
				{
					num2 -= (double)WorldGen.genRand.Next(4);
				}
				if ((double)value.Y > Main.rockLayer && num > 0f)
				{
					num = 0f;
				}
				num -= 1f;
				int num3 = (int)((double)value.X - num2 * 0.5);
				int num4 = (int)((double)value.X + num2 * 0.5);
				int num5 = (int)((double)value.Y - num2 * 0.5);
				int num6 = (int)((double)value.Y + num2 * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX - 1)
				{
					num4 = Main.maxTilesX - 1;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				for (int k = num3; k < num4; k++)
				{
					for (int l = num5; l < num6; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < num2 * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[k, l].type != 31 && Main.tile[k, l].type != 22)
						{
							Main.tile[k, l].active(false);
						}
					}
				}
				value += value2;
				value2.Y += (float)WorldGen.genRand.Next(-10, 10) * 0.1f;
				if (value.Y < (float)(j - 20))
				{
					value2.Y += (float)WorldGen.genRand.Next(20) * 0.01f;
				}
				if (value.Y > (float)(j + 20))
				{
					value2.Y -= (float)WorldGen.genRand.Next(20) * 0.01f;
				}
				if ((double)value2.Y < -0.5)
				{
					value2.Y = -0.5f;
				}
				if ((double)value2.Y > 0.5)
				{
					value2.Y = 0.5f;
				}
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.01f;
				if (direction == -1)
				{
					if ((double)value2.X > -0.5)
					{
						value2.X = -0.5f;
					}
					if (value2.X < -2f)
					{
						value2.X = -2f;
					}
				}
				else if (direction == 1)
				{
					if ((double)value2.X < 0.5)
					{
						value2.X = 0.5f;
					}
					if (value2.X > 2f)
					{
						value2.X = 2f;
					}
				}
				num3 = (int)((double)value.X - num2 * 1.1);
				num4 = (int)((double)value.X + num2 * 1.1);
				num5 = (int)((double)value.Y - num2 * 1.1);
				num6 = (int)((double)value.Y + num2 * 1.1);
				if (num3 < 1)
				{
					num3 = 1;
				}
				if (num4 > Main.maxTilesX - 1)
				{
					num4 = Main.maxTilesX - 1;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				for (int m = num3; m < num4; m++)
				{
					for (int n = num5; n < num6; n++)
					{
						if ((double)(Math.Abs((float)m - value.X) + Math.Abs((float)n - value.Y)) < num2 * 1.1 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[m, n].wall != 3)
						{
							if (Main.tile[m, n].type != 25 && n > j + WorldGen.genRand.Next(3, 20))
							{
								Main.tile[m, n].active(true);
							}
							Main.tile[m, n].active(true);
							if (Main.tile[m, n].type != 31 && Main.tile[m, n].type != 22)
							{
								Main.tile[m, n].type = 25;
							}
							if (Main.tile[m, n].wall == 2)
							{
								Main.tile[m, n].wall = 0;
							}
						}
					}
				}
				for (int num7 = num3; num7 < num4; num7++)
				{
					for (int num8 = num5; num8 < num6; num8++)
					{
						if ((double)(Math.Abs((float)num7 - value.X) + Math.Abs((float)num8 - value.Y)) < num2 * 1.1 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[num7, num8].wall != 3)
						{
							if (Main.tile[num7, num8].type != 31 && Main.tile[num7, num8].type != 22)
							{
								Main.tile[num7, num8].type = 25;
							}
							Main.tile[num7, num8].active(true);
							WorldGen.PlaceWall(num7, num8, 3, true);
						}
					}
				}
			}
			if (WorldGen.genRand.Next(3) == 0)
			{
				int num9 = (int)value.X;
				int num10 = (int)value.Y;
				while (!Main.tile[num9, num10].active())
				{
					num10++;
				}
				WorldGen.TileRunner(num9, num10, (double)WorldGen.genRand.Next(2, 6), WorldGen.genRand.Next(3, 7), 22, false, 0f, 0f, false, true);
			}
		}
		public static void CrimStart(int i, int j)
		{
			int crimDir = 1;
			WorldGen.heartCount = 0;
			WorldGen.crimson = true;
			int num = j;
			if ((double)num > Main.worldSurface)
			{
				num = (int)Main.worldSurface;
			}
			while (!WorldGen.SolidTile(i, num))
			{
				num++;
			}
			int num2 = num;
			Vector2 vector = new Vector2((float)i, (float)num);
			Vector2 value = new Vector2((float)WorldGen.genRand.Next(-20, 21) * 0.1f, (float)WorldGen.genRand.Next(20, 201) * 0.01f);
			if (value.X < 0f)
			{
				crimDir = -1;
			}
			float num3 = (float)WorldGen.genRand.Next(15, 26);
			bool flag = true;
			int num4 = 0;
			while (flag)
			{
				num3 += (float)Main.rand.Next(-50, 51) * 0.01f;
				if (num3 < 15f)
				{
					num3 = 15f;
				}
				if (num3 > 25f)
				{
					num3 = 25f;
				}
				int num5 = (int)(vector.X - num3 / 2f);
				while ((float)num5 < vector.X + num3 / 2f)
				{
					int num6 = (int)(vector.Y - num3 / 2f);
					while ((float)num6 < vector.Y + num3 / 2f)
					{
						if (num6 > num2)
						{
							if ((double)(Math.Abs((float)num5 - vector.X) + Math.Abs((float)num6 - vector.Y)) < (double)num3 * 0.3)
							{
								Main.tile[num5, num6].active(false);
								Main.tile[num5, num6].wall = 83;
							}
							else if ((double)(Math.Abs((float)num5 - vector.X) + Math.Abs((float)num6 - vector.Y)) < (double)num3 * 0.8 && Main.tile[num5, num6].wall != 83)
							{
								Main.tile[num5, num6].active(true);
								Main.tile[num5, num6].type = 203;
								if ((double)(Math.Abs((float)num5 - vector.X) + Math.Abs((float)num6 - vector.Y)) < (double)num3 * 0.6)
								{
									Main.tile[num5, num6].wall = 83;
								}
							}
						}
						else if ((double)(Math.Abs((float)num5 - vector.X) + Math.Abs((float)num6 - vector.Y)) < (double)num3 * 0.3 && Main.tile[num5, num6].active())
						{
							Main.tile[num5, num6].active(false);
							Main.tile[num5, num6].wall = 83;
						}
						num6++;
					}
					num5++;
				}
				if (vector.X > (float)(i + 50))
				{
					num4 = -100;
				}
				if (vector.X < (float)(i - 50))
				{
					num4 = 100;
				}
				if (num4 < 0)
				{
					value.X -= (float)WorldGen.genRand.Next(20, 51) * 0.01f;
				}
				else if (num4 > 0)
				{
					value.X += (float)WorldGen.genRand.Next(20, 51) * 0.01f;
				}
				else
				{
					value.X += (float)WorldGen.genRand.Next(-50, 51) * 0.01f;
				}
				value.Y += (float)WorldGen.genRand.Next(-50, 51) * 0.01f;
				if ((double)value.Y < 0.25)
				{
					value.Y = 0.25f;
				}
				if (value.Y > 2f)
				{
					value.Y = 2f;
				}
				if (value.X < -2f)
				{
					value.X = -2f;
				}
				if (value.X > 2f)
				{
					value.X = 2f;
				}
				vector += value;
				if ((double)vector.Y > Main.worldSurface + 100.0)
				{
					flag = false;
				}
			}
			num3 = (float)WorldGen.genRand.Next(40, 55);
			for (int k = 0; k < 50; k++)
			{
				int num7 = (int)vector.X + WorldGen.genRand.Next(-20, 21);
				int num8 = (int)vector.Y + WorldGen.genRand.Next(-20, 21);
				int num9 = (int)((float)num7 - num3 / 2f);
				while ((float)num9 < (float)num7 + num3 / 2f)
				{
					int num10 = (int)((float)num8 - num3 / 2f);
					while ((float)num10 < (float)num8 + num3 / 2f)
					{
						float num11 = (float)Math.Abs(num9 - num7);
						float num12 = (float)Math.Abs(num10 - num8);
						float num13 = 1f + (float)WorldGen.genRand.Next(-20, 21) * 0.01f;
						float num14 = 1f + (float)WorldGen.genRand.Next(-20, 21) * 0.01f;
						num11 *= num13;
						num12 *= num14;
						double num15 = Math.Sqrt((double)(num11 * num11 + num12 * num12));
						if (num15 < (double)num3 * 0.25)
						{
							Main.tile[num9, num10].active(false);
							Main.tile[num9, num10].wall = 83;
						}
						else if (num15 < (double)num3 * 0.4 && Main.tile[num9, num10].wall != 83)
						{
							Main.tile[num9, num10].active(true);
							Main.tile[num9, num10].type = 203;
							if (num15 < (double)num3 * 0.35)
							{
								Main.tile[num9, num10].wall = 83;
							}
						}
						num10++;
					}
					num9++;
				}
			}
			int num16 = WorldGen.genRand.Next(5, 9);
			Vector2[] array = new Vector2[num16];
			for (int l = 0; l < num16; l++)
			{
				int num17 = (int)vector.X;
				int num18 = (int)vector.Y;
				int num19 = 0;
				bool flag2 = true;
				Vector2 vector2 = new Vector2((float)WorldGen.genRand.Next(-20, 21) * 0.15f, (float)WorldGen.genRand.Next(0, 21) * 0.15f);
				while (flag2)
				{
					vector2 = new Vector2((float)WorldGen.genRand.Next(-20, 21) * 0.15f, (float)WorldGen.genRand.Next(0, 21) * 0.15f);
					while ((double)(Math.Abs(vector2.X) + Math.Abs(vector2.Y)) < 1.5)
					{
						vector2 = new Vector2((float)WorldGen.genRand.Next(-20, 21) * 0.15f, (float)WorldGen.genRand.Next(0, 21) * 0.15f);
					}
					flag2 = false;
					for (int m = 0; m < l; m++)
					{
						if ((double)value.X > (double)array[m].X - 0.75 && (double)value.X < (double)array[m].X + 0.75 && (double)value.Y > (double)array[m].Y - 0.75 && (double)value.Y < (double)array[m].Y + 0.75)
						{
							flag2 = true;
							num19++;
							break;
						}
					}
					if (num19 > 10000)
					{
						break;
					}
				}
				array[l] = vector2;
				WorldGen.CrimVein(new Vector2((float)num17, (float)num18), vector2);
			}
			for (int n = 0; n < WorldGen.heartCount; n++)
			{
				num3 = (float)WorldGen.genRand.Next(16, 21);
				int num20 = (int)WorldGen.heartPos[n].X;
				int num21 = (int)WorldGen.heartPos[n].Y;
				int num22 = (int)((float)num20 - num3 / 2f);
				while ((float)num22 < (float)num20 + num3 / 2f)
				{
					int num23 = (int)((float)num21 - num3 / 2f);
					while ((float)num23 < (float)num21 + num3 / 2f)
					{
						float num24 = (float)Math.Abs(num22 - num20);
						float num25 = (float)Math.Abs(num23 - num21);
						double num26 = Math.Sqrt((double)(num24 * num24 + num25 * num25));
						if (num26 < (double)num3 * 0.4)
						{
							Main.tile[num22, num23].active(true);
							Main.tile[num22, num23].type = 203;
							Main.tile[num22, num23].wall = 83;
						}
						num23++;
					}
					num22++;
				}
			}
			for (int num27 = 0; num27 < WorldGen.heartCount; num27++)
			{
				num3 = (float)WorldGen.genRand.Next(10, 14);
				int num28 = (int)WorldGen.heartPos[num27].X;
				int num29 = (int)WorldGen.heartPos[num27].Y;
				int num30 = (int)((float)num28 - num3 / 2f);
				while ((float)num30 < (float)num28 + num3 / 2f)
				{
					int num31 = (int)((float)num29 - num3 / 2f);
					while ((float)num31 < (float)num29 + num3 / 2f)
					{
						float num32 = (float)Math.Abs(num30 - num28);
						float num33 = (float)Math.Abs(num31 - num29);
						double num34 = Math.Sqrt((double)(num32 * num32 + num33 * num33));
						if (num34 < (double)num3 * 0.3)
						{
							Main.tile[num30, num31].active(false);
							Main.tile[num30, num31].wall = 83;
						}
						num31++;
					}
					num30++;
				}
			}
			for (int num35 = 0; num35 < WorldGen.heartCount; num35++)
			{
				WorldGen.AddShadowOrb((int)WorldGen.heartPos[num35].X, (int)WorldGen.heartPos[num35].Y);
			}
			int num36 = Main.maxTilesX;
			int num37 = 0;
			vector.X = (float)i;
			vector.Y = (float)num2;
			num3 = (float)WorldGen.genRand.Next(25, 35);
			float num38 = (float)WorldGen.genRand.Next(0, 6);
			for (int num39 = 0; num39 < 50; num39++)
			{
				if (num38 > 0f)
				{
					float num40 = (float)WorldGen.genRand.Next(10, 30) * 0.01f;
					num38 -= num40;
					vector.Y -= num40;
				}
				int num41 = (int)vector.X + WorldGen.genRand.Next(-2, 3);
				int num42 = (int)vector.Y + WorldGen.genRand.Next(-2, 3);
				int num43 = (int)((float)num41 - num3 / 2f);
				while ((float)num43 < (float)num41 + num3 / 2f)
				{
					int num44 = (int)((float)num42 - num3 / 2f);
					while ((float)num44 < (float)num42 + num3 / 2f)
					{
						float num45 = (float)Math.Abs(num43 - num41);
						float num46 = (float)Math.Abs(num44 - num42);
						float num47 = 1f + (float)WorldGen.genRand.Next(-20, 21) * 0.005f;
						float num48 = 1f + (float)WorldGen.genRand.Next(-20, 21) * 0.005f;
						num45 *= num47;
						num46 *= num48;
						double num49 = Math.Sqrt((double)(num45 * num45 + num46 * num46));
						if (num49 < (double)num3 * 0.2 * ((double)WorldGen.genRand.Next(90, 111) * 0.01))
						{
							Main.tile[num43, num44].active(false);
							Main.tile[num43, num44].wall = 83;
						}
						else if (num49 < (double)num3 * 0.45)
						{
							if (num43 < num36)
							{
								num36 = num43;
							}
							if (num43 > num37)
							{
								num37 = num43;
							}
							if (Main.tile[num43, num44].wall != 83)
							{
								Main.tile[num43, num44].active(true);
								Main.tile[num43, num44].type = 203;
								if (num49 < (double)num3 * 0.35)
								{
									Main.tile[num43, num44].wall = 83;
								}
							}
						}
						num44++;
					}
					num43++;
				}
			}
			for (int num50 = num36; num50 <= num37; num50++)
			{
				int num51 = num2;
				while ((Main.tile[num50, num51].type == 203 && Main.tile[num50, num51].active()) || Main.tile[num50, num51].wall == 83)
				{
					num51++;
				}
				int num52 = WorldGen.genRand.Next(15, 20);
				while (!Main.tile[num50, num51].active() && num52 > 0 && Main.tile[num50, num51].wall != 83)
				{
					num52--;
					Main.tile[num50, num51].type = 203;
					Main.tile[num50, num51].active(true);
					num51++;
				}
			}
			WorldGen.CrimEnt(vector, crimDir);
		}
		public static void CrimEnt(Vector2 position, int crimDir)
		{
			float num = 0f;
			float num2 = (float)WorldGen.genRand.Next(6, 11);
			bool flag = true;
			Vector2 value = new Vector2(2f, (float)WorldGen.genRand.Next(-20, 0) * 0.01f);
			value.X *= (float)(-(float)crimDir);
			while (flag)
			{
				num += 1f;
				if (num >= 20f)
				{
					flag = false;
				}
				num2 += (float)Main.rand.Next(-10, 11) * 0.02f;
				if (num2 < 6f)
				{
					num2 = 6f;
				}
				if (num2 > 10f)
				{
					num2 = 10f;
				}
				int num3 = (int)(position.X - num2 / 2f);
				while ((float)num3 < position.X + num2 / 2f)
				{
					int num4 = (int)(position.Y - num2 / 2f);
					while ((float)num4 < position.Y + num2 / 2f)
					{
						float num5 = Math.Abs((float)num3 - position.X);
						float num6 = Math.Abs((float)num4 - position.Y);
						double num7 = Math.Sqrt((double)(num5 * num5 + num6 * num6));
						if (num7 < (double)num2 * 0.5 && Main.tile[num3, num4].active() && Main.tile[num3, num4].type == 203)
						{
							Main.tile[num3, num4].active(false);
							flag = true;
							num = 0f;
						}
						num4++;
					}
					num3++;
				}
				position += value;
			}
		}
		public static void CrimVein(Vector2 position, Vector2 velocity)
		{
			float num = (float)WorldGen.genRand.Next(15, 26);
			bool flag = true;
			Vector2 vector = velocity;
			Vector2 vector2 = position;
			int num2 = WorldGen.genRand.Next(100, 150);
			if (velocity.Y < 0f)
			{
				num2 -= 25;
			}
			while (flag)
			{
				num += (float)Main.rand.Next(-50, 51) * 0.02f;
				if (num < 15f)
				{
					num = 15f;
				}
				if (num > 25f)
				{
					num = 25f;
				}
				int num3 = (int)(position.X - num / 2f);
				while ((float)num3 < position.X + num / 2f)
				{
					int num4 = (int)(position.Y - num / 2f);
					while ((float)num4 < position.Y + num / 2f)
					{
						float num5 = Math.Abs((float)num3 - position.X);
						float num6 = Math.Abs((float)num4 - position.Y);
						double num7 = Math.Sqrt((double)(num5 * num5 + num6 * num6));
						if (num7 < (double)num * 0.2)
						{
							Main.tile[num3, num4].active(false);
							Main.tile[num3, num4].wall = 83;
						}
						else if (num7 < (double)num * 0.5 && Main.tile[num3, num4].wall != 83)
						{
							Main.tile[num3, num4].active(true);
							Main.tile[num3, num4].type = 203;
							if (num7 < (double)num * 0.4)
							{
								Main.tile[num3, num4].wall = 83;
							}
						}
						num4++;
					}
					num3++;
				}
				velocity.X += (float)WorldGen.genRand.Next(-50, 51) * 0.05f;
				velocity.Y += (float)WorldGen.genRand.Next(-50, 51) * 0.05f;
				if ((double)velocity.Y < (double)vector.Y - 0.75)
				{
					velocity.Y = vector.Y - 0.75f;
				}
				if ((double)velocity.Y > (double)vector.Y + 0.75)
				{
					velocity.Y = vector.Y + 0.75f;
				}
				if ((double)velocity.X < (double)vector.X - 0.75)
				{
					velocity.X = vector.X - 0.75f;
				}
				if ((double)velocity.X > (double)vector.X + 0.75)
				{
					velocity.X = vector.X + 0.75f;
				}
				position += velocity;
				if (Math.Abs(position.X - vector2.X) + Math.Abs(position.Y - vector2.Y) > (float)num2)
				{
					flag = false;
				}
			}
			WorldGen.heartPos[WorldGen.heartCount] = position;
			WorldGen.heartCount++;
		}
		public static void ChasmRunner(int i, int j, int steps, bool makeOrb = false)
		{
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			if (!makeOrb)
			{
				flag2 = true;
			}
			float num = (float)steps;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(11) * 0.2f + 0.5f;
			int num2 = 5;
			double num3 = (double)(WorldGen.genRand.Next(5) + 7);
			while (num3 > 0.0)
			{
				if (num > 0f)
				{
					num3 += (double)WorldGen.genRand.Next(3);
					num3 -= (double)WorldGen.genRand.Next(3);
					if (num3 < 7.0)
					{
						num3 = 7.0;
					}
					if (num3 > 20.0)
					{
						num3 = 20.0;
					}
					if (num == 1f && num3 < 10.0)
					{
						num3 = 10.0;
					}
				}
				else if ((double)value.Y > Main.worldSurface + 45.0)
				{
					num3 -= (double)WorldGen.genRand.Next(4);
				}
				if ((double)value.Y > Main.rockLayer && num > 0f)
				{
					num = 0f;
				}
				num -= 1f;
				if (!flag && (double)value.Y > Main.worldSurface + 20.0)
				{
					flag = true;
					WorldGen.ChasmRunnerSideways((int)value.X, (int)value.Y, -1, WorldGen.genRand.Next(20, 40));
					WorldGen.ChasmRunnerSideways((int)value.X, (int)value.Y, 1, WorldGen.genRand.Next(20, 40));
				}
				int num4;
				int num5;
				int num6;
				int num7;
				if (num > (float)num2)
				{
					num4 = (int)((double)value.X - num3 * 0.5);
					num5 = (int)((double)value.X + num3 * 0.5);
					num6 = (int)((double)value.Y - num3 * 0.5);
					num7 = (int)((double)value.Y + num3 * 0.5);
					if (num4 < 0)
					{
						num4 = 0;
					}
					if (num5 > Main.maxTilesX - 1)
					{
						num5 = Main.maxTilesX - 1;
					}
					if (num6 < 0)
					{
						num6 = 0;
					}
					if (num7 > Main.maxTilesY)
					{
						num7 = Main.maxTilesY;
					}
					for (int k = num4; k < num5; k++)
					{
						for (int l = num6; l < num7; l++)
						{
							if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < num3 * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[k, l].type != 31 && Main.tile[k, l].type != 22)
							{
								Main.tile[k, l].active(false);
							}
						}
					}
				}
				if (num <= 2f && (double)value.Y < Main.worldSurface + 45.0)
				{
					num = 2f;
				}
				if (num <= 0f)
				{
					if (!flag2)
					{
						flag2 = true;
						WorldGen.AddShadowOrb((int)value.X, (int)value.Y);
					}
					else if (!flag3)
					{
						flag3 = false;
						bool flag4 = false;
						int num8 = 0;
						while (!flag4)
						{
							int num9 = WorldGen.genRand.Next((int)value.X - 25, (int)value.X + 25);
							int num10 = WorldGen.genRand.Next((int)value.Y - 50, (int)value.Y);
							if (num9 < 5)
							{
								num9 = 5;
							}
							if (num9 > Main.maxTilesX - 5)
							{
								num9 = Main.maxTilesX - 5;
							}
							if (num10 < 5)
							{
								num10 = 5;
							}
							if (num10 > Main.maxTilesY - 5)
							{
								num10 = Main.maxTilesY - 5;
							}
							if ((double)num10 > Main.worldSurface)
							{
								WorldGen.Place3x2(num9, num10, 26, 0);
								if (Main.tile[num9, num10].type == 26)
								{
									flag4 = true;
								}
								else
								{
									num8++;
									if (num8 >= 10000)
									{
										flag4 = true;
									}
								}
							}
							else
							{
								flag4 = true;
							}
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.01f;
				if ((double)value2.X > 0.3)
				{
					value2.X = 0.3f;
				}
				if ((double)value2.X < -0.3)
				{
					value2.X = -0.3f;
				}
				num4 = (int)((double)value.X - num3 * 1.1);
				num5 = (int)((double)value.X + num3 * 1.1);
				num6 = (int)((double)value.Y - num3 * 1.1);
				num7 = (int)((double)value.Y + num3 * 1.1);
				if (num4 < 1)
				{
					num4 = 1;
				}
				if (num5 > Main.maxTilesX - 1)
				{
					num5 = Main.maxTilesX - 1;
				}
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesY)
				{
					num7 = Main.maxTilesY;
				}
				for (int m = num4; m < num5; m++)
				{
					for (int n = num6; n < num7; n++)
					{
						if ((double)(Math.Abs((float)m - value.X) + Math.Abs((float)n - value.Y)) < num3 * 1.1 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015))
						{
							if (Main.tile[m, n].type != 25 && n > j + WorldGen.genRand.Next(3, 20))
							{
								Main.tile[m, n].active(true);
							}
							if (steps <= num2)
							{
								Main.tile[m, n].active(true);
							}
							if (Main.tile[m, n].type != 31)
							{
								Main.tile[m, n].type = 25;
							}
						}
					}
				}
				for (int num11 = num4; num11 < num5; num11++)
				{
					for (int num12 = num6; num12 < num7; num12++)
					{
						if ((double)(Math.Abs((float)num11 - value.X) + Math.Abs((float)num12 - value.Y)) < num3 * 1.1 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015))
						{
							if (Main.tile[num11, num12].type != 31)
							{
								Main.tile[num11, num12].type = 25;
							}
							if (steps <= num2)
							{
								Main.tile[num11, num12].active(true);
							}
							if (num12 > j + WorldGen.genRand.Next(3, 20))
							{
								Main.tile[num11, num12].wall = 3;
							}
						}
					}
				}
			}
		}
		public static void JungleRunner(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(5, 11);
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(10, 20) * 0.1f;
			int num2 = 0;
			bool flag = true;
			while (flag)
			{
				if ((double)value.Y < Main.worldSurface)
				{
					int num3 = (int)value.X;
					int num4 = (int)value.Y;
					if (num4 < 5)
					{
						num4 = 5;
					}
					if (Main.tile[num3, num4].wall == 0 && !Main.tile[num3, num4].active() && Main.tile[num3, num4 - 3].wall == 0 && !Main.tile[num3, num4 - 3].active() && Main.tile[num3, num4 - 1].wall == 0 && !Main.tile[num3, num4 - 1].active() && Main.tile[num3, num4 - 4].wall == 0 && !Main.tile[num3, num4 - 4].active() && Main.tile[num3, num4 - 2].wall == 0 && !Main.tile[num3, num4 - 2].active() && Main.tile[num3, num4 - 5].wall == 0 && !Main.tile[num3, num4 - 5].active())
					{
						flag = false;
					}
				}
				WorldGen.JungleX = (int)value.X;
				num += (double)((float)WorldGen.genRand.Next(-20, 21) * 0.1f);
				if (num < 5.0)
				{
					num = 5.0;
				}
				if (num > 10.0)
				{
					num = 10.0;
				}
				int num5 = (int)((double)value.X - num * 0.5);
				int num6 = (int)((double)value.X + num * 0.5);
				int num7 = (int)((double)value.Y - num * 0.5);
				int num8 = (int)((double)value.Y + num * 0.5);
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesX)
				{
					num6 = Main.maxTilesX;
				}
				if (num7 < 0)
				{
					num7 = 0;
				}
				if (num8 > Main.maxTilesY)
				{
					num8 = Main.maxTilesY;
				}
				for (int k = num5; k < num6; k++)
				{
					for (int l = num7; l < num8; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < num * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015))
						{
							WorldGen.KillTile(k, l, false, false, false);
						}
					}
				}
				num2++;
				if (num2 > 10 && WorldGen.genRand.Next(50) < num2)
				{
					num2 = 0;
					int num9 = -2;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num9 = 2;
					}
					WorldGen.TileRunner((int)value.X, (int)value.Y, (double)WorldGen.genRand.Next(3, 20), WorldGen.genRand.Next(10, 100), -1, false, (float)num9, 0f, false, true);
				}
				value += value2;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.01f;
				if (value2.Y > 0f)
				{
					value2.Y = 0f;
				}
				if (value2.Y < -2f)
				{
					value2.Y = -2f;
				}
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
				if (value.X < (float)(i - 200))
				{
					value2.X += (float)WorldGen.genRand.Next(5, 21) * 0.1f;
				}
				if (value.X > (float)(i + 200))
				{
					value2.X -= (float)WorldGen.genRand.Next(5, 21) * 0.1f;
				}
				if ((double)value2.X > 1.5)
				{
					value2.X = 1.5f;
				}
				if ((double)value2.X < -1.5)
				{
					value2.X = -1.5f;
				}
			}
		}
		public static void GERunner(int i, int j, float speedX = 0f, float speedY = 0f, bool good = true)
		{
			int num = WorldGen.genRand.Next(200, 250);
			float num2 = (float)(Main.maxTilesX / 4200);
			num = (int)((float)num * num2);
			double num3 = (double)num;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			if (speedX != 0f || speedY != 0f)
			{
				value2.X = speedX;
				value2.Y = speedY;
			}
			bool flag = true;
			while (flag)
			{
				int num4 = (int)((double)value.X - num3 * 0.5);
				int num5 = (int)((double)value.X + num3 * 0.5);
				int num6 = (int)((double)value.Y - num3 * 0.5);
				int num7 = (int)((double)value.Y + num3 * 0.5);
				if (num4 < 0)
				{
					num4 = 0;
				}
				if (num5 > Main.maxTilesX)
				{
					num5 = Main.maxTilesX;
				}
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesY)
				{
					num7 = Main.maxTilesY;
				}
				for (int k = num4; k < num5; k++)
				{
					for (int l = num6; l < num7; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < (double)num * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015))
						{
							if (good)
							{
								if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 68 || Main.tile[k, l].wall == 69 || Main.tile[k, l].wall == 81)
								{
									Main.tile[k, l].wall = 70;
								}
								if (Main.tile[k, l].wall == 3 || Main.tile[k, l].wall == 83)
								{
									Main.tile[k, l].wall = 28;
								}
								if (Main.tile[k, l].type == 2)
								{
									Main.tile[k, l].type = 109;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 1)
								{
									Main.tile[k, l].type = 117;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 123)
								{
									Main.tile[k, l].type = 116;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 23 || Main.tile[k, l].type == 199)
								{
									Main.tile[k, l].type = 109;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 25 || Main.tile[k, l].type == 203)
								{
									Main.tile[k, l].type = 117;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 112 || Main.tile[k, l].type == 234)
								{
									Main.tile[k, l].type = 116;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 163 || Main.tile[k, l].type == 200)
								{
									Main.tile[k, l].type = 164;
									WorldGen.SquareTileFrame(k, l, true);
								}
							}
							else if (WorldGen.crimson)
							{
								if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 68)
								{
									Main.tile[k, l].wall = 81;
								}
								if (Main.tile[k, l].type == 2)
								{
									Main.tile[k, l].type = 199;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 1)
								{
									Main.tile[k, l].type = 203;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 123)
								{
									Main.tile[k, l].type = 234;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 109)
								{
									Main.tile[k, l].type = 199;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 117)
								{
									Main.tile[k, l].type = 203;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 116)
								{
									Main.tile[k, l].type = 234;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 164)
								{
									Main.tile[k, l].type = 200;
									WorldGen.SquareTileFrame(k, l, true);
								}
							}
							else
							{
								if (Main.tile[k, l].wall == 63 || Main.tile[k, l].wall == 65 || Main.tile[k, l].wall == 66 || Main.tile[k, l].wall == 68)
								{
									Main.tile[k, l].wall = 69;
								}
								if (Main.tile[k, l].type == 2)
								{
									Main.tile[k, l].type = 23;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 1)
								{
									Main.tile[k, l].type = 25;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 53 || Main.tile[k, l].type == 123)
								{
									Main.tile[k, l].type = 112;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 109)
								{
									Main.tile[k, l].type = 23;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 117)
								{
									Main.tile[k, l].type = 25;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 116)
								{
									Main.tile[k, l].type = 112;
									WorldGen.SquareTileFrame(k, l, true);
								}
								else if (Main.tile[k, l].type == 161 || Main.tile[k, l].type == 164)
								{
									Main.tile[k, l].type = 163;
									WorldGen.SquareTileFrame(k, l, true);
								}
							}
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > speedX + 1f)
				{
					value2.X = speedX + 1f;
				}
				if (value2.X < speedX - 1f)
				{
					value2.X = speedX - 1f;
				}
				if (value.X < (float)(-(float)num) || value.Y < (float)(-(float)num) || value.X > (float)(Main.maxTilesX + num) || value.Y > (float)(Main.maxTilesX + num))
				{
					flag = false;
				}
			}
		}
		public static void TileRunner(int i, int j, double strength, int steps, int type, bool addTile = false, float speedX = 0f, float speedY = 0f, bool noYChange = false, bool overRide = true)
		{
			double num = strength;
			float num2 = (float)steps;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			if (speedX != 0f || speedY != 0f)
			{
				value2.X = speedX;
				value2.Y = speedY;
			}
			while (num > 0.0 && num2 > 0f)
			{
				if (value.Y < 0f && num2 > 0f && type == 59)
				{
					num2 = 0f;
				}
				num = strength * (double)(num2 / (float)steps);
				num2 -= 1f;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 1)
				{
					num3 = 1;
				}
				if (num4 > Main.maxTilesX - 1)
				{
					num4 = Main.maxTilesX - 1;
				}
				if (num5 < 1)
				{
					num5 = 1;
				}
				if (num6 > Main.maxTilesY - 1)
				{
					num6 = Main.maxTilesY - 1;
				}
				for (int k = num3; k < num4; k++)
				{
					for (int l = num5; l < num6; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < strength * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015))
						{
							if (WorldGen.mudWall && (double)l > Main.worldSurface && Main.tile[k, l - 1].wall != 2 && l < Main.maxTilesY - 210 - WorldGen.genRand.Next(3))
							{
								if (l > WorldGen.lavaLine - WorldGen.genRand.Next(0, 4) - 50)
								{
									if (Main.tile[k, l - 1].wall != 64 && Main.tile[k, l + 1].wall != 64 && Main.tile[k - 1, l].wall != 64 && Main.tile[k, l + 1].wall != 64)
									{
										WorldGen.PlaceWall(k, l, 15, true);
									}
								}
								else if (Main.tile[k, l - 1].wall != 15 && Main.tile[k, l + 1].wall != 15 && Main.tile[k - 1, l].wall != 15 && Main.tile[k, l + 1].wall != 15)
								{
									WorldGen.PlaceWall(k, l, 64, true);
								}
							}
							if (type < 0)
							{
								if (type == -2 && Main.tile[k, l].active() && (l < WorldGen.waterLine || l > WorldGen.lavaLine))
								{
									Main.tile[k, l].liquid = 255;
									if (l > WorldGen.lavaLine)
									{
										Main.tile[k, l].lava(true);
									}
								}
								Main.tile[k, l].active(false);
							}
							else
							{
								if ((overRide || !Main.tile[k, l].active()) && (type != 40 || Main.tile[k, l].type != 53) && (!Main.tileStone[type] || Main.tile[k, l].type == 1) && Main.tile[k, l].type != 189 && Main.tile[k, l].type != 196 && Main.tile[k, l].type != 45 && Main.tile[k, l].type != 147 && Main.tile[k, l].type != 190 && (Main.tile[k, l].type != 1 || type != 59 || (double)l >= Main.worldSurface + (double)WorldGen.genRand.Next(-50, 50)))
								{
									if (Main.tile[k, l].type != 53 || (double)l >= Main.worldSurface)
									{
										Main.tile[k, l].type = (ushort)type;
									}
									else if (type == 59)
									{
										Main.tile[k, l].type = (ushort)type;
									}
								}
								if (addTile)
								{
									Main.tile[k, l].active(true);
									Main.tile[k, l].liquid = 0;
									Main.tile[k, l].lava(false);
								}
								if (noYChange && (double)l < Main.worldSurface && type != 59)
								{
									Main.tile[k, l].wall = 2;
								}
								if (type == 59 && l > WorldGen.waterLine && Main.tile[k, l].liquid > 0)
								{
									Main.tile[k, l].lava(false);
									Main.tile[k, l].liquid = 0;
								}
							}
						}
					}
				}
				value += value2;
				if (num > 50.0)
				{
					value += value2;
					num2 -= 1f;
					value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
					value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
					if (num > 100.0)
					{
						value += value2;
						num2 -= 1f;
						value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
						value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
						if (num > 150.0)
						{
							value += value2;
							num2 -= 1f;
							value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
							value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
							if (num > 200.0)
							{
								value += value2;
								num2 -= 1f;
								value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
								value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
								if (num > 250.0)
								{
									value += value2;
									num2 -= 1f;
									value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
									value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
									if (num > 300.0)
									{
										value += value2;
										num2 -= 1f;
										value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
										value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
										if (num > 400.0)
										{
											value += value2;
											num2 -= 1f;
											value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
											value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
											if (num > 500.0)
											{
												value += value2;
												num2 -= 1f;
												value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
												value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
												if (num > 600.0)
												{
													value += value2;
													num2 -= 1f;
													value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
													value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
													if (num > 700.0)
													{
														value += value2;
														num2 -= 1f;
														value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
														value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
														if (num > 800.0)
														{
															value += value2;
															num2 -= 1f;
															value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
															value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
															if (num > 900.0)
															{
																value += value2;
																num2 -= 1f;
																value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
																value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				if (!noYChange)
				{
					value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
					if (value2.Y > 1f)
					{
						value2.Y = 1f;
					}
					if (value2.Y < -1f)
					{
						value2.Y = -1f;
					}
				}
				else if (type != 59 && num < 3.0)
				{
					if (value2.Y > 1f)
					{
						value2.Y = 1f;
					}
					if (value2.Y < -1f)
					{
						value2.Y = -1f;
					}
				}
				if (type == 59 && !noYChange)
				{
					if ((double)value2.Y > 0.5)
					{
						value2.Y = 0.5f;
					}
					if ((double)value2.Y < -0.5)
					{
						value2.Y = -0.5f;
					}
					if ((double)value.Y < Main.rockLayer + 100.0)
					{
						value2.Y = 1f;
					}
					if (value.Y > (float)(Main.maxTilesY - 300))
					{
						value2.Y = -1f;
					}
				}
			}
		}
		public static void DirtyRockRunner(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(2, 6);
			float num2 = (float)WorldGen.genRand.Next(5, 50);
			float num3 = num2;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			while (num > 0.0 && num3 > 0f)
			{
				double num4 = num * (double)(num3 / num2);
				num3 -= 1f;
				int num5 = (int)((double)value.X - num4 * 0.5);
				int num6 = (int)((double)value.X + num4 * 0.5);
				int num7 = (int)((double)value.Y - num4 * 0.5);
				int num8 = (int)((double)value.Y + num4 * 0.5);
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesX)
				{
					num6 = Main.maxTilesX;
				}
				if (num7 < 0)
				{
					num7 = 0;
				}
				if (num8 > Main.maxTilesY)
				{
					num8 = Main.maxTilesY;
				}
				for (int k = num5; k < num6; k++)
				{
					for (int l = num7; l < num8; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < num * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && Main.tile[k, l].wall == 2)
						{
							Main.tile[k, l].wall = 59;
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.Y > 1f)
				{
					value2.Y = 1f;
				}
				if (value2.Y < -1f)
				{
					value2.Y = -1f;
				}
			}
		}
		public static void MudWallRunner(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(8, 21);
			float num2 = (float)WorldGen.genRand.Next(8, 33);
			float num3 = num2;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			while (num > 0.0 && num3 > 0f)
			{
				double num4 = num * (double)(num3 / num2);
				num3 -= 1f;
				int num5 = (int)((double)value.X - num4 * 0.5);
				int num6 = (int)((double)value.X + num4 * 0.5);
				int num7 = (int)((double)value.Y - num4 * 0.5);
				int num8 = (int)((double)value.Y + num4 * 0.5);
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesX)
				{
					num6 = Main.maxTilesX;
				}
				if (num7 < 0)
				{
					num7 = 0;
				}
				if (num8 > Main.maxTilesY)
				{
					num8 = Main.maxTilesY;
				}
				for (int k = num5; k < num6; k++)
				{
					for (int l = num7; l < num8; l++)
					{
						if ((double)(Math.Abs((float)k - value.X) + Math.Abs((float)l - value.Y)) < num * 0.5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.015) && (double)l > Main.worldSurface)
						{
							Main.tile[k, l].wall = 0;
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.Y > 1f)
				{
					value2.Y = 1f;
				}
				if (value2.Y < -1f)
				{
					value2.Y = -1f;
				}
			}
		}
		public static void CloudIsland(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(100, 150);
			float num2 = (float)WorldGen.genRand.Next(20, 30);
			int num3 = i;
			int num4 = i;
			int num5 = i;
			int num6 = j;
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			while (value2.X > -2f && value2.X < 2f)
			{
				value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			}
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.02f;
			while (num > 0.0 && num2 > 0f)
			{
				num -= (double)WorldGen.genRand.Next(4);
				num2 -= 1f;
				int num7 = (int)((double)value.X - num * 0.5);
				int num8 = (int)((double)value.X + num * 0.5);
				int num9 = (int)((double)value.Y - num * 0.5);
				int num10 = (int)((double)value.Y + num * 0.5);
				if (num7 < 0)
				{
					num7 = 0;
				}
				if (num8 > Main.maxTilesX)
				{
					num8 = Main.maxTilesX;
				}
				if (num9 < 0)
				{
					num9 = 0;
				}
				if (num10 > Main.maxTilesY)
				{
					num10 = Main.maxTilesY;
				}
				double num11 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				float num12 = value.Y + 1f;
				for (int k = num7; k < num8; k++)
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num12 += (float)WorldGen.genRand.Next(-1, 2);
					}
					if (num12 < value.Y)
					{
						num12 = value.Y;
					}
					if (num12 > value.Y + 2f)
					{
						num12 = value.Y + 2f;
					}
					for (int l = num9; l < num10; l++)
					{
						if ((float)l > num12)
						{
							float num13 = Math.Abs((float)k - value.X);
							float num14 = Math.Abs((float)l - value.Y) * 3f;
							double num15 = Math.Sqrt((double)(num13 * num13 + num14 * num14));
							if (num15 < num11 * 0.4)
							{
								if (k < num3)
								{
									num3 = k;
								}
								if (k > num4)
								{
									num4 = k;
								}
								if (l < num5)
								{
									num5 = l;
								}
								if (l > num6)
								{
									num6 = l;
								}
								Main.tile[k, l].active(true);
								Main.tile[k, l].type = 189;
								WorldGen.SquareTileFrame(k, l, true);
							}
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-20, 21) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				if ((double)value2.Y > 0.2)
				{
					value2.Y = -0.2f;
				}
				if ((double)value2.Y < -0.2)
				{
					value2.Y = -0.2f;
				}
			}
			int m = num3;
			int num17;
			for (m += WorldGen.genRand.Next(5); m < num4; m += WorldGen.genRand.Next(num17, (int)((double)num17 * 1.5)))
			{
				int num16 = num6;
				while (!Main.tile[m, num16].active())
				{
					num16--;
				}
				num16 += WorldGen.genRand.Next(-3, 4);
				num17 = WorldGen.genRand.Next(4, 8);
				int num18 = 189;
				if (WorldGen.genRand.Next(4) == 0)
				{
					num18 = 196;
				}
				for (int n = m - num17; n <= m + num17; n++)
				{
					for (int num19 = num16 - num17; num19 <= num16 + num17; num19++)
					{
						if (num19 > num5)
						{
							float num20 = (float)Math.Abs(n - m);
							float num21 = (float)(Math.Abs(num19 - num16) * 2);
							double num22 = Math.Sqrt((double)(num20 * num20 + num21 * num21));
							if (num22 < (double)(num17 + WorldGen.genRand.Next(2)))
							{
								Main.tile[n, num19].active(true);
								Main.tile[n, num19].type = (ushort)num18;
								WorldGen.SquareTileFrame(n, num19, true);
							}
						}
					}
				}
			}
			num = (double)WorldGen.genRand.Next(80, 95);
			num2 = (float)WorldGen.genRand.Next(10, 15);
			value.X = (float)i;
			value.Y = (float)num5;
			value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			while (value2.X > -2f && value2.X < 2f)
			{
				value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			}
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.02f;
			while (num > 0.0 && num2 > 0f)
			{
				num -= (double)WorldGen.genRand.Next(4);
				num2 -= 1f;
				int num7 = (int)((double)value.X - num * 0.5);
				int num8 = (int)((double)value.X + num * 0.5);
				int num9 = num5 - 1;
				int num10 = (int)((double)value.Y + num * 0.5);
				if (num7 < 0)
				{
					num7 = 0;
				}
				if (num8 > Main.maxTilesX)
				{
					num8 = Main.maxTilesX;
				}
				if (num9 < 0)
				{
					num9 = 0;
				}
				if (num10 > Main.maxTilesY)
				{
					num10 = Main.maxTilesY;
				}
				double num11 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				float num23 = value.Y + 1f;
				for (int num24 = num7; num24 < num8; num24++)
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num23 += (float)WorldGen.genRand.Next(-1, 2);
					}
					if (num23 < value.Y)
					{
						num23 = value.Y;
					}
					if (num23 > value.Y + 2f)
					{
						num23 = value.Y + 2f;
					}
					for (int num25 = num9; num25 < num10; num25++)
					{
						if ((float)num25 > num23)
						{
							float num26 = Math.Abs((float)num24 - value.X);
							float num27 = Math.Abs((float)num25 - value.Y) * 3f;
							double num28 = Math.Sqrt((double)(num26 * num26 + num27 * num27));
							if (num28 < num11 * 0.4 && Main.tile[num24, num25].type == 189)
							{
								Main.tile[num24, num25].type = 0;
								WorldGen.SquareTileFrame(num24, num25, true);
							}
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-20, 21) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				if ((double)value2.Y > 0.2)
				{
					value2.Y = -0.2f;
				}
				if ((double)value2.Y < -0.2)
				{
					value2.Y = -0.2f;
				}
			}
			int num29 = num3;
			num29 += WorldGen.genRand.Next(5);
			while (num29 < num4)
			{
				int num30 = num6;
				while ((!Main.tile[num29, num30].active() || Main.tile[num29, num30].type != 0) && num29 < num4)
				{
					num30--;
					if (num30 < num5)
					{
						num30 = num6;
						num29 += WorldGen.genRand.Next(1, 4);
					}
				}
				if (num29 < num4)
				{
					num30 += WorldGen.genRand.Next(0, 4);
					int num31 = WorldGen.genRand.Next(2, 5);
					int num32 = 189;
					for (int num33 = num29 - num31; num33 <= num29 + num31; num33++)
					{
						for (int num34 = num30 - num31; num34 <= num30 + num31; num34++)
						{
							if (num34 > num5)
							{
								float num35 = (float)Math.Abs(num33 - num29);
								float num36 = (float)(Math.Abs(num34 - num30) * 2);
								double num37 = Math.Sqrt((double)(num35 * num35 + num36 * num36));
								if (num37 < (double)num31)
								{
									Main.tile[num33, num34].type = (ushort)num32;
									WorldGen.SquareTileFrame(num33, num34, true);
								}
							}
						}
					}
					num29 += WorldGen.genRand.Next(num31, (int)((double)num31 * 1.5));
				}
			}
			for (int num38 = num3 - 20; num38 <= num4 + 20; num38++)
			{
				for (int num39 = num5 - 20; num39 <= num6 + 20; num39++)
				{
					bool flag = true;
					for (int num40 = num38 - 1; num40 <= num38 + 1; num40++)
					{
						for (int num41 = num39 - 1; num41 <= num39 + 1; num41++)
						{
							if (!Main.tile[num40, num41].active())
							{
								flag = false;
							}
						}
					}
					if (flag)
					{
						Main.tile[num38, num39].wall = 73;
						WorldGen.SquareWallFrame(num38, num39, true);
					}
				}
			}
			for (int num42 = num3; num42 <= num4; num42++)
			{
				int num43 = num5 - 10;
				while (!Main.tile[num42, num43 + 1].active())
				{
					num43++;
				}
				if (num43 < num6 && Main.tile[num42, num43 + 1].type == 189)
				{
					if (WorldGen.genRand.Next(10) == 0)
					{
						int num44 = WorldGen.genRand.Next(1, 3);
						for (int num45 = num42 - num44; num45 <= num42 + num44; num45++)
						{
							if (Main.tile[num45, num43].type == 189)
							{
								Main.tile[num45, num43].active(false);
								Main.tile[num45, num43].liquid = 255;
								Main.tile[num45, num43].lava(false);
								WorldGen.SquareTileFrame(num42, num43, true);
							}
							if (Main.tile[num45, num43 + 1].type == 189)
							{
								Main.tile[num45, num43 + 1].active(false);
								Main.tile[num45, num43 + 1].liquid = 255;
								Main.tile[num45, num43 + 1].lava(false);
								WorldGen.SquareTileFrame(num42, num43 + 1, true);
							}
							if (num45 > num42 - num44 && num45 < num42 + 2 && Main.tile[num45, num43 + 2].type == 189)
							{
								Main.tile[num45, num43 + 2].active(false);
								Main.tile[num45, num43 + 2].liquid = 255;
								Main.tile[num45, num43 + 2].lava(false);
								WorldGen.SquareTileFrame(num42, num43 + 2, true);
							}
						}
					}
					if (WorldGen.genRand.Next(5) == 0)
					{
						Main.tile[num42, num43].liquid = 255;
					}
					Main.tile[num42, num43].lava(false);
					WorldGen.SquareTileFrame(num42, num43, true);
				}
			}
			int num46 = WorldGen.genRand.Next(4);
			for (int num47 = 0; num47 <= num46; num47++)
			{
				int num48 = WorldGen.genRand.Next(num3 - 5, num4 + 5);
				int num49 = num5 - WorldGen.genRand.Next(20, 40);
				int num50 = WorldGen.genRand.Next(4, 8);
				int num51 = 189;
				if (WorldGen.genRand.Next(2) == 0)
				{
					num51 = 196;
				}
				for (int num52 = num48 - num50; num52 <= num48 + num50; num52++)
				{
					for (int num53 = num49 - num50; num53 <= num49 + num50; num53++)
					{
						float num54 = (float)Math.Abs(num52 - num48);
						float num55 = (float)(Math.Abs(num53 - num49) * 2);
						double num56 = Math.Sqrt((double)(num54 * num54 + num55 * num55));
						if (num56 < (double)(num50 + WorldGen.genRand.Next(-1, 2)))
						{
							Main.tile[num52, num53].active(true);
							Main.tile[num52, num53].type = (ushort)num51;
							WorldGen.SquareTileFrame(num52, num53, true);
						}
					}
				}
				for (int num57 = num48 - num50 + 2; num57 <= num48 + num50 - 2; num57++)
				{
					int num58 = num49 - num50;
					while (!Main.tile[num57, num58].active())
					{
						num58++;
					}
					Main.tile[num57, num58].active(false);
					Main.tile[num57, num58].liquid = 255;
					WorldGen.SquareTileFrame(num57, num58, true);
				}
			}
		}
		public static void FloatingIsland(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(80, 120);
			float num2 = (float)WorldGen.genRand.Next(20, 25);
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			while (value2.X > -2f && value2.X < 2f)
			{
				value2.X = (float)WorldGen.genRand.Next(-20, 21) * 0.2f;
			}
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.02f;
			while (num > 0.0 && num2 > 0f)
			{
				num -= (double)WorldGen.genRand.Next(4);
				num2 -= 1f;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				double num7 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				float num8 = value.Y + 1f;
				for (int k = num3; k < num4; k++)
				{
					if (WorldGen.genRand.Next(2) == 0)
					{
						num8 += (float)WorldGen.genRand.Next(-1, 2);
					}
					if (num8 < value.Y)
					{
						num8 = value.Y;
					}
					if (num8 > value.Y + 2f)
					{
						num8 = value.Y + 2f;
					}
					for (int l = num5; l < num6; l++)
					{
						if ((float)l > num8)
						{
							float num9 = Math.Abs((float)k - value.X);
							float num10 = Math.Abs((float)l - value.Y) * 2f;
							double num11 = Math.Sqrt((double)(num9 * num9 + num10 * num10));
							if (num11 < num7 * 0.4)
							{
								Main.tile[k, l].active(true);
								if (Main.tile[k, l].type == 59)
								{
									Main.tile[k, l].type = 0;
								}
							}
						}
					}
				}
				num3 = (int)((double)value.X - num * 0.4);
				num4 = (int)((double)value.X + num * 0.4);
				num5 = (int)((double)value.Y - num * 0.4);
				num6 = (int)((double)value.Y + num * 0.4);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				num7 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int m = num3; m < num4; m++)
				{
					for (int n = num5; n < num6; n++)
					{
						if ((float)n > value.Y + 2f)
						{
							float num12 = Math.Abs((float)m - value.X);
							float num13 = Math.Abs((float)n - value.Y) * 2f;
							double num14 = Math.Sqrt((double)(num12 * num12 + num13 * num13));
							if (num14 < num7 * 0.4)
							{
								Main.tile[m, n].wall = 2;
							}
						}
					}
				}
				value += value2;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > 1f)
				{
					value2.X = 1f;
				}
				if (value2.X < -1f)
				{
					value2.X = -1f;
				}
				if ((double)value2.Y > 0.2)
				{
					value2.Y = -0.2f;
				}
				if ((double)value2.Y < -0.2)
				{
					value2.Y = -0.2f;
				}
			}
		}
		public static void Caverer(int X, int Y)
		{
			int num = WorldGen.genRand.Next(2);
			if (num == 0)
			{
				int num2 = WorldGen.genRand.Next(7, 9);
				float num3 = (float)WorldGen.genRand.Next(100) * 0.01f;
				float num4 = 1f - num3;
				if (WorldGen.genRand.Next(2) == 0)
				{
					num3 = -num3;
				}
				if (WorldGen.genRand.Next(2) == 0)
				{
					num4 = -num4;
				}
				Vector2 vector = new Vector2((float)X, (float)Y);
				for (int i = 0; i < num2; i++)
				{
					vector = WorldGen.digTunnel(vector.X, vector.Y, num3, num4, WorldGen.genRand.Next(6, 20), WorldGen.genRand.Next(4, 9), false);
					num3 += (float)WorldGen.genRand.Next(-20, 21) * 0.1f;
					num4 += (float)WorldGen.genRand.Next(-20, 21) * 0.1f;
					if ((double)num3 < -1.5)
					{
						num3 = -1.5f;
					}
					if ((double)num3 > 1.5)
					{
						num3 = 1.5f;
					}
					if ((double)num4 < -1.5)
					{
						num4 = -1.5f;
					}
					if ((double)num4 > 1.5)
					{
						num4 = 1.5f;
					}
					float num5 = (float)WorldGen.genRand.Next(100) * 0.01f;
					float num6 = 1f - num5;
					if (WorldGen.genRand.Next(2) == 0)
					{
						num5 = -num5;
					}
					if (WorldGen.genRand.Next(2) == 0)
					{
						num6 = -num6;
					}
					Vector2 vector2 = WorldGen.digTunnel(vector.X, vector.Y, num5, num6, WorldGen.genRand.Next(30, 50), WorldGen.genRand.Next(3, 6), false);
					WorldGen.TileRunner((int)vector2.X, (int)vector2.Y, (double)WorldGen.genRand.Next(10, 20), WorldGen.genRand.Next(5, 10), -1, false, 0f, 0f, false, true);
				}
				return;
			}
			if (num == 1)
			{
				int num7 = WorldGen.genRand.Next(15, 30);
				float num8 = (float)WorldGen.genRand.Next(100) * 0.01f;
				float num9 = 1f - num8;
				if (WorldGen.genRand.Next(2) == 0)
				{
					num8 = -num8;
				}
				if (WorldGen.genRand.Next(2) == 0)
				{
					num9 = -num9;
				}
				Vector2 vector3 = new Vector2((float)X, (float)Y);
				for (int j = 0; j < num7; j++)
				{
					vector3 = WorldGen.digTunnel(vector3.X, vector3.Y, num8, num9, WorldGen.genRand.Next(5, 15), WorldGen.genRand.Next(2, 6), true);
					num8 += (float)WorldGen.genRand.Next(-20, 21) * 0.1f;
					num9 += (float)WorldGen.genRand.Next(-20, 21) * 0.1f;
					if ((double)num8 < -1.5)
					{
						num8 = -1.5f;
					}
					if ((double)num8 > 1.5)
					{
						num8 = 1.5f;
					}
					if ((double)num9 < -1.5)
					{
						num9 = -1.5f;
					}
					if ((double)num9 > 1.5)
					{
						num9 = 1.5f;
					}
				}
			}
		}
		public static Vector2 digTunnel(float X, float Y, float xDir, float yDir, int Steps, int Size, bool Wet = false)
		{
			float num = X;
			float num2 = Y;
			try
			{
				float num3 = 0f;
				float num4 = 0f;
				float num5 = (float)Size;
				for (int i = 0; i < Steps; i++)
				{
					int num6 = (int)(num - num5);
					while ((float)num6 <= num + num5)
					{
						int num7 = (int)(num2 - num5);
						while ((float)num7 <= num2 + num5)
						{
							if ((double)(Math.Abs((float)num6 - num) + Math.Abs((float)num7 - num2)) < (double)num5 * (1.0 + (double)WorldGen.genRand.Next(-10, 11) * 0.005))
							{
								Main.tile[num6, num7].active(false);
								if (Wet)
								{
									Main.tile[num6, num7].liquid = 255;
								}
							}
							num7++;
						}
						num6++;
					}
					num5 += (float)WorldGen.genRand.Next(-50, 51) * 0.03f;
					if ((double)num5 < (double)Size * 0.6)
					{
						num5 = (float)Size * 0.6f;
					}
					if (num5 > (float)(Size * 2))
					{
						num5 = (float)Size * 2f;
					}
					num3 += (float)WorldGen.genRand.Next(-20, 21) * 0.01f;
					num4 += (float)WorldGen.genRand.Next(-20, 21) * 0.01f;
					if (num3 < -1f)
					{
						num3 = -1f;
					}
					if (num3 > 1f)
					{
						num3 = 1f;
					}
					if (num4 < -1f)
					{
						num4 = -1f;
					}
					if (num4 > 1f)
					{
						num4 = 1f;
					}
					num += (xDir + num3) * 0.6f;
					num2 += (yDir + num4) * 0.6f;
				}
			}
			catch
			{
			}
			return new Vector2(num, num2);
		}
		public static void IslandHouse(int i, int j)
		{
			byte type = 202;
			byte wall = 82;
			Vector2 vector = new Vector2((float)i, (float)j);
			int num = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num = -1;
			}
			int num2 = WorldGen.genRand.Next(7, 12);
			int num3 = WorldGen.genRand.Next(5, 7);
			vector.X = (float)(i + (num2 + 2) * num);
			for (int k = j - 15; k < j + 30; k++)
			{
				if (Main.tile[(int)vector.X, k].active())
				{
					vector.Y = (float)(k - 1);
					break;
				}
			}
			vector.X = (float)i;
			int num4 = (int)(vector.X - (float)num2 - 1f);
			int num5 = (int)(vector.X + (float)num2 + 1f);
			int num6 = (int)(vector.Y - (float)num3 - 1f);
			int num7 = (int)(vector.Y + 2f);
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num5 > Main.maxTilesX)
			{
				num5 = Main.maxTilesX;
			}
			if (num6 < 0)
			{
				num6 = 0;
			}
			if (num7 > Main.maxTilesY)
			{
				num7 = Main.maxTilesY;
			}
			for (int l = num4; l <= num5; l++)
			{
				for (int m = num6 - 1; m < num7 + 1; m++)
				{
					if (m != num6 - 1 || (l != num4 && l != num5))
					{
						Main.tile[l, m].active(true);
						Main.tile[l, m].liquid = 0;
						Main.tile[l, m].type = (ushort)type;
						Main.tile[l, m].wall = 0;
						Main.tile[l, m].halfBrick(false);
						Main.tile[l, m].slope(0);
					}
				}
			}
			num4 = (int)(vector.X - (float)num2);
			num5 = (int)(vector.X + (float)num2);
			num6 = (int)(vector.Y - (float)num3);
			num7 = (int)(vector.Y + 1f);
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num5 > Main.maxTilesX)
			{
				num5 = Main.maxTilesX;
			}
			if (num6 < 0)
			{
				num6 = 0;
			}
			if (num7 > Main.maxTilesY)
			{
				num7 = Main.maxTilesY;
			}
			for (int n = num4; n <= num5; n++)
			{
				for (int num8 = num6; num8 < num7; num8++)
				{
					if ((num8 != num6 || (n != num4 && n != num5)) && Main.tile[n, num8].wall == 0)
					{
						Main.tile[n, num8].active(false);
						Main.tile[n, num8].wall = wall;
					}
				}
			}
			int num9 = i + (num2 + 1) * num;
			int num10 = (int)vector.Y;
			for (int num11 = num9 - 2; num11 <= num9 + 2; num11++)
			{
				Main.tile[num11, num10].active(false);
				Main.tile[num11, num10 - 1].active(false);
				Main.tile[num11, num10 - 2].active(false);
			}
			WorldGen.PlaceTile(num9, num10, 10, true, false, -1, 9);
			num9 = i + (num2 + 1) * -num - num;
			for (int num12 = num6; num12 <= num7 + 1; num12++)
			{
				Main.tile[num9, num12].active(true);
				Main.tile[num9, num12].liquid = 0;
				Main.tile[num9, num12].type = (ushort)type;
				Main.tile[num9, num12].wall = 0;
				Main.tile[num9, num12].halfBrick(false);
				Main.tile[num9, num12].slope(0);
			}
			int contain = 0;
			int num13 = WorldGen.houseCount;
			if (num13 > 2)
			{
				num13 = WorldGen.genRand.Next(3);
			}
			if (num13 == 0)
			{
				contain = 159;
			}
			else if (num13 == 1)
			{
				contain = 65;
			}
			else if (num13 == 2)
			{
				contain = 158;
			}
			WorldGen.AddBuriedChest(i, num10 - 3, contain, false, 13);
			WorldGen.houseCount++;
			int num14 = i - num2 / 2 + 1;
			int num15 = i + num2 / 2 - 1;
			int num16 = 1;
			if (num2 > 10)
			{
				num16 = 2;
			}
			int num17 = (num6 + num7) / 2 - 1;
			for (int num18 = num14 - num16; num18 <= num14 + num16; num18++)
			{
				for (int num19 = num17 - 1; num19 <= num17 + 1; num19++)
				{
					Main.tile[num18, num19].wall = 21;
				}
			}
			for (int num20 = num15 - num16; num20 <= num15 + num16; num20++)
			{
				for (int num21 = num17 - 1; num21 <= num17 + 1; num21++)
				{
					Main.tile[num20, num21].wall = 21;
				}
			}
			int num22 = i + (num2 / 2 + 1) * -num;
			WorldGen.PlaceTile(num22, num7 - 1, 14, true, false, -1, 7);
			WorldGen.PlaceTile(num22 - 2, num7 - 1, 15, true, false, 0, 10);
			Tile expr_51A = Main.tile[num22 - 2, num7 - 1];
			expr_51A.frameX = (short)(expr_51A.frameX + 18);
			Tile expr_53B = Main.tile[num22 - 2, num7 - 2];
			expr_53B.frameX = (short)(expr_53B.frameX + 18);
			WorldGen.PlaceTile(num22 + 2, num7 - 1, 15, true, false, 0, 10);
			int i2 = num4 + 1;
			int j2 = num6;
			WorldGen.PlaceTile(i2, j2, 91, true, false, -1, WorldGen.genRand.Next(7, 10));
			i2 = num5 - 1;
			j2 = num6;
			WorldGen.PlaceTile(i2, j2, 91, true, false, -1, WorldGen.genRand.Next(7, 10));
			if (num > 0)
			{
				i2 = num4;
				j2 = num6 + 1;
			}
			else
			{
				i2 = num5;
				j2 = num6 + 1;
			}
			WorldGen.PlaceTile(i2, j2, 91, true, false, -1, WorldGen.genRand.Next(7, 10));
		}
		public static void Mountinater(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(80, 120);
			float num2 = (float)WorldGen.genRand.Next(40, 55);
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j + num2 / 2f;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.1f;
			while (num > 0.0 && num2 > 0f)
			{
				num -= (double)WorldGen.genRand.Next(4);
				num2 -= 1f;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				double num7 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int k = num3; k < num4; k++)
				{
					for (int l = num5; l < num6; l++)
					{
						float num8 = Math.Abs((float)k - value.X);
						float num9 = Math.Abs((float)l - value.Y);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num7 * 0.4 && !Main.tile[k, l].active())
						{
							Main.tile[k, l].active(true);
							Main.tile[k, l].type = 0;
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if ((double)value2.X > 0.5)
				{
					value2.X = 0.5f;
				}
				if ((double)value2.X < -0.5)
				{
					value2.X = -0.5f;
				}
				if ((double)value2.Y > -0.5)
				{
					value2.Y = -0.5f;
				}
				if ((double)value2.Y < -1.5)
				{
					value2.Y = -1.5f;
				}
			}
		}
		public static void MakeWateryIceThing(int i, int j)
		{
			if (Main.tile[i, j].liquid > 0 && !Main.tile[i, j].active() && !Main.tile[i, j].lava())
			{
				int num = j;
				while (!Main.tile[i, num].active() && Main.tile[i, num].liquid > 0)
				{
					num++;
					if (num > Main.maxTilesY - 50)
					{
						return;
					}
				}
				if (Main.tile[i, num].type == 147 || Main.tile[i, num].type == 161)
				{
					num--;
					while (Main.tile[i, num].liquid > 0)
					{
						num--;
						if (num < 10)
						{
							return;
						}
					}
					if (Main.tile[i, num].active())
					{
						return;
					}
					num++;
					if (Main.tile[i, num].active())
					{
						return;
					}
					int num2 = i;
					while (!Main.tile[num2, num].active() && Main.tile[num2, num].liquid > 0 && Main.tile[num2, num - 1].liquid == 0 && !Main.tile[num2, num - 1].active() && !Main.tile[num2 - 1, num].halfBrick())
					{
						WorldGen.PlaceTile(num2, num, 162, true, false, -1, 0);
						num2--;
					}
					num2 = i + 1;
					while (!Main.tile[num2, num].active() && Main.tile[num2, num].liquid > 0 && Main.tile[num2, num - 1].liquid == 0 && !Main.tile[num2, num - 1].active() && !Main.tile[num2 + 1, num].halfBrick())
					{
						WorldGen.PlaceTile(num2, num, 162, true, false, -1, 0);
						num2++;
					}
				}
			}
		}
		public static void Lakinater(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(25, 50);
			double num2 = num;
			float num3 = (float)WorldGen.genRand.Next(30, 80);
			if (WorldGen.genRand.Next(5) == 0)
			{
				num *= 1.5;
				num2 *= 1.5;
				num3 *= 1.2f;
			}
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j - num3 * 0.3f;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.1f;
			while (num > 0.0 && num3 > 0f)
			{
				if ((double)value.Y + num2 * 0.5 > Main.worldSurface)
				{
					num3 = 0f;
				}
				num -= (double)WorldGen.genRand.Next(3);
				num3 -= 1f;
				int num4 = (int)((double)value.X - num * 0.5);
				int num5 = (int)((double)value.X + num * 0.5);
				int num6 = (int)((double)value.Y - num * 0.5);
				int num7 = (int)((double)value.Y + num * 0.5);
				if (num4 < 0)
				{
					num4 = 0;
				}
				if (num5 > Main.maxTilesX)
				{
					num5 = Main.maxTilesX;
				}
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesY)
				{
					num7 = Main.maxTilesY;
				}
				num2 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int k = num4; k < num5; k++)
				{
					for (int l = num6; l < num7; l++)
					{
						float num8 = Math.Abs((float)k - value.X);
						float num9 = Math.Abs((float)l - value.Y);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num2 * 0.4)
						{
							if (Main.tile[k, l].active())
							{
								Main.tile[k, l].liquid = 255;
							}
							Main.tile[k, l].active(false);
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if ((double)value2.X > 0.5)
				{
					value2.X = 0.5f;
				}
				if ((double)value2.X < -0.5)
				{
					value2.X = -0.5f;
				}
				if ((double)value2.Y > 1.5)
				{
					value2.Y = 1.5f;
				}
				if ((double)value2.Y < 0.5)
				{
					value2.Y = 0.5f;
				}
			}
		}
		public static void ShroomPatch(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(40, 70);
			double num2 = num;
			float num3 = (float)WorldGen.genRand.Next(20, 30);
			if (WorldGen.genRand.Next(5) == 0)
			{
				num *= 1.5;
				num2 *= 1.5;
				num3 *= 1.2f;
			}
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j - num3 * 0.3f;
			Vector2 value2;
			value2.X = (float)WorldGen.genRand.Next(-10, 11) * 0.1f;
			value2.Y = (float)WorldGen.genRand.Next(-20, -10) * 0.1f;
			while (num > 0.0 && num3 > 0f)
			{
				num -= (double)WorldGen.genRand.Next(3);
				num3 -= 1f;
				int num4 = (int)((double)value.X - num * 0.5);
				int num5 = (int)((double)value.X + num * 0.5);
				int num6 = (int)((double)value.Y - num * 0.5);
				int num7 = (int)((double)value.Y + num * 0.5);
				if (num4 < 0)
				{
					num4 = 0;
				}
				if (num5 > Main.maxTilesX)
				{
					num5 = Main.maxTilesX;
				}
				if (num6 < 0)
				{
					num6 = 0;
				}
				if (num7 > Main.maxTilesY)
				{
					num7 = Main.maxTilesY;
				}
				num2 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int k = num4; k < num5; k++)
				{
					for (int l = num6; l < num7; l++)
					{
						float num8 = Math.Abs((float)k - value.X);
						float num9 = Math.Abs(((float)l - value.Y) * 2.3f);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num2 * 0.4)
						{
							if ((double)l < (double)value.Y + num2 * 0.02)
							{
								if (Main.tile[k, l].type != 59)
								{
									Main.tile[k, l].active(false);
								}
							}
							else
							{
								Main.tile[k, l].type = 59;
							}
							Main.tile[k, l].liquid = 0;
							Main.tile[k, l].lava(false);
						}
					}
				}
				value += value2;
				value.X += value2.X;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.Y -= (float)WorldGen.genRand.Next(11) * 0.05f;
				if ((double)value2.X > -0.5 && (double)value2.X < 0.5)
				{
					if (value2.X < 0f)
					{
						value2.X = -0.5f;
					}
					else
					{
						value2.X = 0.5f;
					}
				}
				if (value2.X > 2f)
				{
					value2.X = 1f;
				}
				if (value2.X < -2f)
				{
					value2.X = -1f;
				}
				if (value2.Y > 1f)
				{
					value2.Y = 1f;
				}
				if (value2.Y < -1f)
				{
					value2.Y = -1f;
				}
				for (int m = 0; m < 2; m++)
				{
					int num11 = (int)value.X + WorldGen.genRand.Next(-20, 20);
					int num12 = (int)value.Y + WorldGen.genRand.Next(0, 20);
					while (!Main.tile[num11, num12].active() && Main.tile[num11, num12].type != 59)
					{
						num11 = (int)value.X + WorldGen.genRand.Next(-20, 20);
						num12 = (int)value.Y + WorldGen.genRand.Next(0, 20);
					}
					int num13 = WorldGen.genRand.Next(7, 10);
					int num14 = WorldGen.genRand.Next(7, 10);
					WorldGen.TileRunner(num11, num12, (double)num13, num14, 59, false, 0f, 2f, true, true);
					if (WorldGen.genRand.Next(3) == 0)
					{
						WorldGen.TileRunner(num11, num12, (double)(num13 - 3), num14 - 3, -1, false, 0f, 2f, true, true);
					}
				}
			}
		}
		public static void Cavinator(int i, int j, int steps)
		{
			double num = (double)WorldGen.genRand.Next(7, 15);
			int num2 = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num2 = -1;
			}
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			int k = WorldGen.genRand.Next(20, 40);
			Vector2 value2;
			value2.Y = (float)WorldGen.genRand.Next(10, 20) * 0.01f;
			value2.X = (float)num2;
			while (k > 0)
			{
				k--;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				double num7 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int l = num3; l < num4; l++)
				{
					for (int m = num5; m < num6; m++)
					{
						float num8 = Math.Abs((float)l - value.X);
						float num9 = Math.Abs((float)m - value.Y);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num7 * 0.4)
						{
							Main.tile[l, m].active(false);
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > (float)num2 + 0.5f)
				{
					value2.X = (float)num2 + 0.5f;
				}
				if (value2.X < (float)num2 - 0.5f)
				{
					value2.X = (float)num2 - 0.5f;
				}
				if (value2.Y > 2f)
				{
					value2.Y = 2f;
				}
				if (value2.Y < 0f)
				{
					value2.Y = 0f;
				}
			}
			if (steps > 0 && (double)((int)value.Y) < Main.rockLayer + 50.0)
			{
				WorldGen.Cavinator((int)value.X, (int)value.Y, steps - 1);
			}
		}
		public static void CaveOpenater(int i, int j)
		{
			double num = (double)WorldGen.genRand.Next(7, 12);
			int num2 = 1;
			if (WorldGen.genRand.Next(2) == 0)
			{
				num2 = -1;
			}
			Vector2 value;
			value.X = (float)i;
			value.Y = (float)j;
			int k = 100;
			Vector2 value2;
			value2.Y = 0f;
			value2.X = (float)num2;
			while (k > 0)
			{
				if (Main.tile[(int)value.X, (int)value.Y].wall == 0)
				{
					k = 0;
				}
				k--;
				int num3 = (int)((double)value.X - num * 0.5);
				int num4 = (int)((double)value.X + num * 0.5);
				int num5 = (int)((double)value.Y - num * 0.5);
				int num6 = (int)((double)value.Y + num * 0.5);
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesX)
				{
					num4 = Main.maxTilesX;
				}
				if (num5 < 0)
				{
					num5 = 0;
				}
				if (num6 > Main.maxTilesY)
				{
					num6 = Main.maxTilesY;
				}
				double num7 = num * (double)WorldGen.genRand.Next(80, 120) * 0.01;
				for (int l = num3; l < num4; l++)
				{
					for (int m = num5; m < num6; m++)
					{
						float num8 = Math.Abs((float)l - value.X);
						float num9 = Math.Abs((float)m - value.Y);
						double num10 = Math.Sqrt((double)(num8 * num8 + num9 * num9));
						if (num10 < num7 * 0.4)
						{
							Main.tile[l, m].active(false);
						}
					}
				}
				value += value2;
				value2.X += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				value2.Y += (float)WorldGen.genRand.Next(-10, 11) * 0.05f;
				if (value2.X > (float)num2 + 0.5f)
				{
					value2.X = (float)num2 + 0.5f;
				}
				if (value2.X < (float)num2 - 0.5f)
				{
					value2.X = (float)num2 - 0.5f;
				}
				if (value2.Y > 0f)
				{
					value2.Y = 0f;
				}
				if ((double)value2.Y < -0.5)
				{
					value2.Y = -0.5f;
				}
			}
		}
		public static void DiamondTileFrame(int i, int j)
		{
			WorldGen.TileFrame(i - 1, j, false, false);
			WorldGen.TileFrame(i, j - 1, false, false);
			WorldGen.TileFrame(i, j + 1, false, false);
			WorldGen.TileFrame(i + 1, j, false, false);
		}
		public static void SquareTileFrame(int i, int j, bool resetFrame = true)
		{
			WorldGen.TileFrame(i - 1, j - 1, false, false);
			WorldGen.TileFrame(i - 1, j, false, false);
			WorldGen.TileFrame(i - 1, j + 1, false, false);
			WorldGen.TileFrame(i, j - 1, false, false);
			WorldGen.TileFrame(i, j, resetFrame, false);
			WorldGen.TileFrame(i, j + 1, false, false);
			WorldGen.TileFrame(i + 1, j - 1, false, false);
			WorldGen.TileFrame(i + 1, j, false, false);
			WorldGen.TileFrame(i + 1, j + 1, false, false);
		}
		public static void SquareWallFrame(int i, int j, bool resetFrame = true)
		{
			Framing.WallFrame(i - 1, j - 1, false);
			Framing.WallFrame(i - 1, j, false);
			Framing.WallFrame(i - 1, j + 1, false);
			Framing.WallFrame(i, j - 1, false);
			Framing.WallFrame(i, j, resetFrame);
			Framing.WallFrame(i, j + 1, false);
			Framing.WallFrame(i + 1, j - 1, false);
			Framing.WallFrame(i + 1, j, false);
			Framing.WallFrame(i + 1, j + 1, false);
		}
		public static void SectionTileFrameWithCheck(int startX, int startY, int endX, int endY)
		{
			int sectionX = Netplay.GetSectionX(startX);
			int sectionY = Netplay.GetSectionY(startY);
			int sectionX2 = Netplay.GetSectionX(endX);
			int sectionY2 = Netplay.GetSectionY(endY);
			for (int i = sectionX; i <= sectionX2; i++)
			{
				for (int j = sectionY; j <= sectionY2; j++)
				{
					if (Main.sectionManager.SectionLoaded(i, j) && !Main.sectionManager.SectionFramed(i, j))
					{
						WorldGen.SectionTileFrame(i, j, i, j);
						if (Main.sectionManager.FrameSectionsLeft == 0)
						{
							return;
						}
					}
				}
			}
		}
		public static void SectionTileFrame(int startX, int startY, int endX, int endY)
		{
			Main.mapTime = Main.mapTimeMax + 10;
			WorldGen.noMapUpdate = true;
			int num = startX * 200;
			int num2 = (endX + 1) * 200;
			int num3 = startY * 150;
			int num4 = (endY + 1) * 150;
			if (num < 1)
			{
				num = 1;
			}
			if (num3 < 1)
			{
				num3 = 1;
			}
			if (num > Main.maxTilesX - 2)
			{
				num = Main.maxTilesX - 2;
			}
			if (num3 > Main.maxTilesY - 2)
			{
				num3 = Main.maxTilesY - 2;
			}
			if (num2 > Main.maxTilesX - 2)
			{
				num2 = Main.maxTilesX - 2;
			}
			if (num4 > Main.maxTilesY - 2)
			{
				num4 = Main.maxTilesY - 2;
			}
			for (int i = num - 1; i < num2 + 1; i++)
			{
				for (int j = num3 - 1; j < num4 + 1; j++)
				{
					if (Main.tile[i, j] == null)
					{
						Main.tile[i, j] = new Tile();
					}
					WorldGen.TileFrame(i, j, true, true);
					Framing.WallFrame(i, j, true);
				}
			}
			for (int k = startX; k <= endX; k++)
			{
				for (int l = startY; l <= endY; l++)
				{
					Main.sectionManager.SetSectionFramed(k, l);
				}
			}
			WorldGen.noMapUpdate = false;
		}
		public static void RangeFrame(int startX, int startY, int endX, int endY)
		{
			int num = endX + 1;
			int num2 = endY + 1;
			for (int i = startX - 1; i < num + 1; i++)
			{
				for (int j = startY - 1; j < num2 + 1; j++)
				{
					WorldGen.TileFrame(i, j, false, false);
					Framing.WallFrame(i, j, false);
				}
			}
		}
		public static void WaterCheck()
		{
			Liquid.numLiquid = 0;
			LiquidBuffer.numLiquidBuffer = 0;
			for (int i = 1; i < Main.maxTilesX - 1; i++)
			{
				for (int j = Main.maxTilesY - 2; j > 0; j--)
				{
					Tile tile = Main.tile[i, j];
					tile.checkingLiquid(false);
					if (tile.liquid > 0 && tile.nactive() && Main.tileSolid[(int)tile.type] && !Main.tileSolidTop[(int)tile.type])
					{
						tile.liquid = 0;
					}
					else if (tile.liquid > 0)
					{
						if (tile.active())
						{
							if (Main.tileWaterDeath[(int)tile.type] && (tile.type != 4 || (tile.frameY != 176 && tile.frameY != 242)))
							{
								WorldGen.KillTile(i, j, false, false, false);
							}
							if (tile.lava() && Main.tileLavaDeath[(int)tile.type] && (tile.type != 19 || tile.frameY != 234) && (tile.type != 11 || tile.frameY < 1026 || tile.frameY > 1078) && (tile.type != 15 || tile.frameY < 640 || tile.frameY > 678) && (tile.type != 14 || tile.frameX < 702 || tile.frameX > 754) && (tile.type != 18 || tile.frameX < 504 || tile.frameX > 538) && (tile.type != 105 || tile.frameX < 1764 || tile.frameX > 1798) && (tile.type != 101 || tile.frameX < 216 || tile.frameX > 268))
							{
								WorldGen.KillTile(i, j, false, false, false);
							}
						}
						Tile tile2 = Main.tile[i, j + 1];
						if ((!tile2.nactive() || !Main.tileSolid[(int)tile2.type] || Main.tileSolidTop[(int)tile2.type]) && tile2.liquid < 255)
						{
							if (tile2.liquid > 250)
							{
								tile2.liquid = 255;
							}
							else
							{
								Liquid.AddWater(i, j);
							}
						}
						Tile tile3 = Main.tile[i - 1, j];
						Tile tile4 = Main.tile[i + 1, j];
						if ((!tile3.nactive() || !Main.tileSolid[(int)tile3.type] || Main.tileSolidTop[(int)tile3.type]) && tile3.liquid != tile.liquid)
						{
							Liquid.AddWater(i, j);
						}
						else if ((!tile4.nactive() || !Main.tileSolid[(int)tile4.type] || Main.tileSolidTop[(int)tile4.type]) && tile4.liquid != tile.liquid)
						{
							Liquid.AddWater(i, j);
						}
						if (tile.lava())
						{
							if (tile3.liquid > 0 && !tile3.lava())
							{
								Liquid.AddWater(i, j);
							}
							else if (tile4.liquid > 0 && !tile4.lava())
							{
								Liquid.AddWater(i, j);
							}
							else if (Main.tile[i, j - 1].liquid > 0 && !Main.tile[i, j - 1].lava())
							{
								Liquid.AddWater(i, j);
							}
							else if (tile2.liquid > 0 && !tile2.lava())
							{
								Liquid.AddWater(i, j);
							}
						}
					}
				}
			}
		}
		public static void EveryTileFrame()
		{
			Stopwatch stopwatch = new Stopwatch();
			stopwatch.Start();
			WorldGen.noLiquidCheck = true;
			WorldGen.noTileActions = true;
			for (int i = 0; i < Main.maxTilesX; i++)
			{
				float num = (float)i / (float)Main.maxTilesX;
				Main.statusText = string.Concat(new object[]
				{
					Lang.gen[55],
					" ",
					(int)(num * 100f + 1f),
					"%"
				});
				for (int j = 0; j < Main.maxTilesY; j++)
				{
					if (Main.tile[i, j].active())
					{
						WorldGen.TileFrame(i, j, true, false);
					}
					if (Main.tile[i, j].wall > 0)
					{
						Framing.WallFrame(i, j, true);
					}
				}
			}
			WorldGen.noLiquidCheck = false;
			WorldGen.noTileActions = false;
			long arg_DB_0 = stopwatch.ElapsedMilliseconds;
		}
		public static void PlantCheck(int i, int j)
		{
			int num = -1;
			int num2 = (int)Main.tile[i, j].type;
			int arg_19_0 = i - 1;
			int arg_23_0 = i + 1;
			int arg_22_0 = Main.maxTilesX;
			int arg_29_0 = j - 1;
			if (j + 1 >= Main.maxTilesY)
			{
				num = num2;
			}
			if (i - 1 >= 0 && Main.tile[i - 1, j] != null && Main.tile[i - 1, j].nactive())
			{
				ushort arg_74_0 = Main.tile[i - 1, j].type;
			}
			if (i + 1 < Main.maxTilesX && Main.tile[i + 1, j] != null && Main.tile[i + 1, j].nactive())
			{
				ushort arg_B7_0 = Main.tile[i + 1, j].type;
			}
			if (j - 1 >= 0 && Main.tile[i, j - 1] != null && Main.tile[i, j - 1].nactive())
			{
				ushort arg_F6_0 = Main.tile[i, j - 1].type;
			}
			if (j + 1 < Main.maxTilesY && Main.tile[i, j + 1] != null && Main.tile[i, j + 1].nactive() && !Main.tile[i, j + 1].halfBrick() && Main.tile[i, j + 1].slope() == 0)
			{
				num = (int)Main.tile[i, j + 1].type;
			}
			if (i - 1 >= 0 && j - 1 >= 0 && Main.tile[i - 1, j - 1] != null && Main.tile[i - 1, j - 1].nactive())
			{
				ushort arg_1AE_0 = Main.tile[i - 1, j - 1].type;
			}
			if (i + 1 < Main.maxTilesX && j - 1 >= 0 && Main.tile[i + 1, j - 1] != null && Main.tile[i + 1, j - 1].nactive())
			{
				ushort arg_1FD_0 = Main.tile[i + 1, j - 1].type;
			}
			if (i - 1 >= 0 && j + 1 < Main.maxTilesY && Main.tile[i - 1, j + 1] != null && Main.tile[i - 1, j + 1].nactive())
			{
				ushort arg_24C_0 = Main.tile[i - 1, j + 1].type;
			}
			if (i + 1 < Main.maxTilesX && j + 1 < Main.maxTilesY && Main.tile[i + 1, j + 1] != null && Main.tile[i + 1, j + 1].nactive())
			{
				ushort arg_29F_0 = Main.tile[i + 1, j + 1].type;
			}
			if ((num2 == 3 && num != 2 && num != 78) || (num2 == 24 && num != 23) || (num2 == 61 && num != 60) || (num2 == 71 && num != 70) || (num2 == 73 && num != 2 && num != 78) || (num2 == 74 && num != 60) || (num2 == 110 && num != 109) || (num2 == 113 && num != 109) || (num2 == 201 && num != 199))
			{
				if ((num2 == 3 || num2 == 73) && num != 2 && Main.tile[i, j].frameX >= 162)
				{
					Main.tile[i, j].frameX = 126;
				}
				if (num2 == 74 && num != 60 && Main.tile[i, j].frameX >= 162)
				{
					Main.tile[i, j].frameX = 126;
				}
				if (num == 23)
				{
					num2 = 24;
					if (Main.tile[i, j].frameX >= 162)
					{
						Main.tile[i, j].frameX = 126;
					}
				}
				else if (num == 2)
				{
					if (num2 == 113)
					{
						num2 = 73;
					}
					else
					{
						num2 = 3;
					}
				}
				else if (num == 109)
				{
					if (num2 == 73)
					{
						num2 = 113;
					}
					else
					{
						num2 = 110;
					}
				}
				else if (num == 199)
				{
					num2 = 201;
				}
				else if (num == 70)
				{
					num2 = 71;
					while (Main.tile[i, j].frameX > 72)
					{
						Tile expr_3FE = Main.tile[i, j];
						expr_3FE.frameX = (short)(expr_3FE.frameX - 72);
					}
				}
				if (num2 != (int)Main.tile[i, j].type)
				{
					Main.tile[i, j].type = (ushort)num2;
					return;
				}
				WorldGen.KillTile(i, j, false, false, false);
			}
		}
		public static bool CheckPound(int i, int j)
		{
			if (Main.tile[i, j] == null)
			{
				Main.tile[i, j] = new Tile();
			}
			if (Main.tile[i, j - 1] == null)
			{
				Main.tile[i, j - 1] = new Tile();
			}
			if (Main.tile[i, j + 1] == null)
			{
				Main.tile[i, j + 1] = new Tile();
			}
			if (Main.tile[i, j].type == 48)
			{
				return false;
			}
			if (Main.tile[i, j].type == 137)
			{
				return false;
			}
			if (Main.tile[i, j].type == 138)
			{
				return false;
			}
			if (Main.tile[i, j].type == 232)
			{
				return false;
			}
			if (WorldGen.gen)
			{
				if (Main.tile[i, j].type == 190)
				{
					return false;
				}
				if (Main.tile[i, j].type == 30)
				{
					return false;
				}
			}
			return (!Main.tile[i, j - 1].active() || (Main.tile[i, j - 1].type != 5 && Main.tile[i, j - 1].type != 26 && Main.tile[i, j - 1].type != 21 && Main.tile[i, j - 1].type != 77 && Main.tile[i, j - 1].type != 237)) && Main.tile[i, j].type != 10;
		}
		public static bool SlopeTile(int i, int j, int slope = 0)
		{
			if (!WorldGen.CheckPound(i, j))
			{
				return false;
			}
			Main.tile[i, j].halfBrick(false);
			Main.tile[i, j].slope((byte)slope);
			if (!WorldGen.gen)
			{
				WorldGen.KillTile(i, j, true, true, false);
				Main.PlaySound(0, i * 16, j * 16, 1);
				WorldGen.SquareTileFrame(i, j, true);
				if (Main.tile[i, j].slope() == 0)
				{
					Rectangle rectangle = new Rectangle(i * 16, j * 16, 16, 16);
					for (int k = 0; k < 255; k++)
					{
						if (Main.player[k].active && !Main.player[k].dead && rectangle.Intersects(new Rectangle((int)Main.player[k].position.X, (int)Main.player[k].position.Y, Main.player[k].width, Main.player[k].height)))
						{
							Main.player[k].gfxOffY += Main.player[k].position.Y + (float)Main.player[k].height - (float)rectangle.Y;
							Main.player[k].position.Y = (float)(rectangle.Y - Main.player[k].height);
						}
					}
				}
			}
			return true;
		}
		public static bool PoundTile(int i, int j)
		{
			if (!WorldGen.CheckPound(i, j))
			{
				return false;
			}
			if (!Main.tile[i, j].halfBrick())
			{
				Main.tile[i, j].halfBrick(true);
			}
			else
			{
				Main.tile[i, j].halfBrick(false);
			}
			if (!WorldGen.gen)
			{
				WorldGen.KillTile(i, j, true, true, false);
				Main.PlaySound(0, i * 16, j * 16, 1);
				WorldGen.SquareTileFrame(i, j, true);
				if (!Main.tile[i, j].halfBrick())
				{
					Rectangle rectangle = new Rectangle(i * 16, j * 16, 16, 16);
					for (int k = 0; k < 255; k++)
					{
						if (Main.player[k].active && !Main.player[k].dead && rectangle.Intersects(new Rectangle((int)Main.player[k].position.X, (int)Main.player[k].position.Y, Main.player[k].width, Main.player[k].height)))
						{
							Main.player[k].gfxOffY += Main.player[k].position.Y + (float)Main.player[k].height - (float)rectangle.Y;
							Main.player[k].position.Y = (float)(rectangle.Y - Main.player[k].height);
						}
					}
				}
			}
			return true;
		}
		public static bool UpdateMapTile(int i, int j, bool addToList = true)
		{
			bool result = false;
			if (Main.netMode != 2 && Main.mapEnabled && !WorldGen.noMapUpdate && !WorldGen.gen)
			{
				Map map = Main.map[i, j];
				if (map != null && map.light > 0)
				{
					map.setTile(i, j, map.light);
					if (map.changed && addToList)
					{
						result = true;
						if (Map.numUpdateTile < Map.maxUpdateTile - 1)
						{
							Map.updateTileX[Map.numUpdateTile] = (short)i;
							Map.updateTileY[Map.numUpdateTile] = (short)j;
							Map.numUpdateTile++;
						}
						else
						{
							Main.refreshMap = true;
						}
					}
				}
			}
			return result;
		}
		public static void TileFrame(int i, int j, bool resetFrame = false, bool noBreak = false)
		{
			bool addToList = false;
			try
			{
				if (i > 5 && j > 5 && i < Main.maxTilesX - 5 && j < Main.maxTilesY - 5 && Main.tile[i, j] != null)
				{
					addToList = WorldGen.UpdateMapTile(i, j, true);
					Tile tile = Main.tile[i, j];
					if (!tile.active())
					{
						tile.halfBrick(false);
						tile.color(0);
						tile.slope(0);
					}
					if (tile.liquid > 0 && Main.netMode != 1 && !WorldGen.noLiquidCheck)
					{
						Liquid.AddWater(i, j);
					}
					if (tile.active())
					{
						if (noBreak && Main.tileFrameImportant[(int)tile.type] && tile.type != 4)
						{
							return;
						}
						int num = (int)tile.type;
						if (Main.tileStone[num])
						{
							num = 1;
						}
						int frameX = (int)tile.frameX;
						int frameY = (int)tile.frameY;
						Rectangle rectangle = new Rectangle(-1, -1, 0, 0);
						if (Main.tileFrameImportant[(int)tile.type])
						{
							if (num == 4)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								Tile tile6 = Main.tile[i - 1, j + 1];
								Tile tile7 = Main.tile[i + 1, j + 1];
								Tile tile8 = Main.tile[i - 1, j - 1];
								Tile tile9 = Main.tile[i + 1, j - 1];
								short num2 = 0;
								if (tile.frameX >= 66)
								{
									num2 = 66;
								}
								int num3 = -1;
								int num4 = -1;
								int num5 = -1;
								int num6 = -1;
								int num7 = -1;
								int num8 = -1;
								int num9 = -1;
								if (tile2 != null && tile2.nactive() && !tile2.bottomSlope())
								{
									ushort arg_1C5_0 = tile2.type;
								}
								if (tile3 != null && tile3.nactive() && !tile3.halfBrick() && !tile3.topSlope())
								{
									num3 = (int)tile3.type;
								}
								if (tile4 != null && tile4.nactive() && (tile4.slope() == 0 || tile4.slope() % 2 != 1))
								{
									num4 = (int)tile4.type;
								}
								if (tile5 != null && tile5.nactive() && (tile5.slope() == 0 || tile5.slope() % 2 != 0))
								{
									num5 = (int)tile5.type;
								}
								if (tile6 != null && tile6.nactive())
								{
									num6 = (int)tile6.type;
								}
								if (tile7 != null && tile7.nactive())
								{
									num7 = (int)tile7.type;
								}
								if (tile8 != null && tile8.nactive())
								{
									num8 = (int)tile8.type;
								}
								if (tile9 != null && tile9.nactive())
								{
									num9 = (int)tile9.type;
								}
								if (num3 >= 0 && Main.tileSolid[num3] && !Main.tileNoAttach[num3])
								{
									tile.frameX = num2;
								}
								else if ((num4 >= 0 && Main.tileSolid[num4] && !Main.tileNoAttach[num4]) || num4 == 124 || (num4 == 5 && num8 == 5 && num6 == 5))
								{
									tile.frameX = (short)(22 + num2);
								}
								else if ((num5 >= 0 && Main.tileSolid[num5] && !Main.tileNoAttach[num5]) || num5 == 124 || (num5 == 5 && num9 == 5 && num7 == 5))
								{
									tile.frameX = (short)(44 + num2);
								}
								else if (tile.wall > 0)
								{
									tile.frameX = num2;
								}
								else
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
								return;
							}
							if (num == 136)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								int num10 = -1;
								int num11 = -1;
								int num12 = -1;
								if (tile2 != null && tile2.nactive())
								{
									ushort arg_3BC_0 = tile2.type;
								}
								if (tile3 != null && tile3.nactive() && !tile3.halfBrick() && !tile3.topSlope())
								{
									num10 = (int)tile3.type;
								}
								if (tile4 != null && tile4.nactive())
								{
									num11 = (int)tile4.type;
								}
								if (tile5 != null && tile5.nactive())
								{
									num12 = (int)tile5.type;
								}
								if (num10 >= 0 && Main.tileSolid[num10] && !Main.tileNoAttach[num10])
								{
									tile.frameX = 0;
								}
								else if ((num11 >= 0 && Main.tileSolid[num11] && !Main.tileNoAttach[num11]) || num11 == 124 || num11 == 5)
								{
									tile.frameX = 18;
								}
								else if ((num12 >= 0 && Main.tileSolid[num12] && !Main.tileNoAttach[num12]) || num12 == 124 || num12 == 5)
								{
									tile.frameX = 36;
								}
								else if (tile.wall > 0)
								{
									tile.frameX = 54;
								}
								else
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
								return;
							}
							if (num == 129 || num == 149)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								int num13 = -1;
								int num14 = -1;
								int num15 = -1;
								int num16 = -1;
								if (tile2 != null && tile2.nactive() && !tile2.bottomSlope())
								{
									num14 = (int)tile2.type;
								}
								if (tile3 != null && tile3.nactive() && !tile3.halfBrick() && !tile3.topSlope())
								{
									num13 = (int)tile3.type;
								}
								if (tile4 != null && tile4.nactive())
								{
									num15 = (int)tile4.type;
								}
								if (tile5 != null && tile5.nactive())
								{
									num16 = (int)tile5.type;
								}
								if (num13 >= 0 && Main.tileSolid[num13] && !Main.tileSolidTop[num13])
								{
									tile.frameY = 0;
								}
								else if (num15 >= 0 && Main.tileSolid[num15] && !Main.tileSolidTop[num15])
								{
									tile.frameY = 54;
								}
								else if (num16 >= 0 && Main.tileSolid[num16] && !Main.tileSolidTop[num16])
								{
									tile.frameY = 36;
								}
								else if (num14 >= 0 && Main.tileSolid[num14] && !Main.tileSolidTop[num14])
								{
									tile.frameY = 18;
								}
								else
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
							}
							else if (num == 178)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								int num17 = -1;
								int num18 = -1;
								int num19 = -1;
								int num20 = -1;
								if (tile2 != null && tile2.active() && !tile2.bottomSlope())
								{
									num18 = (int)tile2.type;
								}
								if (tile3 != null && tile3.active() && !tile3.halfBrick() && !tile3.topSlope())
								{
									num17 = (int)tile3.type;
								}
								if (tile4 != null && tile4.active())
								{
									num19 = (int)tile4.type;
								}
								if (tile5 != null && tile5.active())
								{
									num20 = (int)tile5.type;
								}
								short num21 = (short)(WorldGen.genRand.Next(3) * 18);
								if (num17 >= 0 && Main.tileSolid[num17] && !Main.tileSolidTop[num17])
								{
									if (tile.frameY < 0 || tile.frameY > 36)
									{
										tile.frameY = num21;
									}
								}
								else if (num19 >= 0 && Main.tileSolid[num19] && !Main.tileSolidTop[num19])
								{
									if (tile.frameY < 108 || tile.frameY > 54)
									{
										tile.frameY = (short)(108 + num21);
									}
								}
								else if (num20 >= 0 && Main.tileSolid[num20] && !Main.tileSolidTop[num20])
								{
									if (tile.frameY < 162 || tile.frameY > 198)
									{
										tile.frameY = (short)(162 + num21);
									}
								}
								else if (num18 >= 0 && Main.tileSolid[num18] && !Main.tileSolidTop[num18])
								{
									if (tile.frameY < 54 || tile.frameY > 90)
									{
										tile.frameY = (short)(54 + num21);
									}
								}
								else
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
							}
							else if (num == 184)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								int num22 = -1;
								int num23 = -1;
								int num24 = -1;
								int num25 = -1;
								if (tile2 != null && tile2.active() && !tile2.bottomSlope())
								{
									num23 = (int)tile2.type;
								}
								if (tile3 != null && tile3.active() && !tile3.halfBrick() && !tile3.topSlope())
								{
									num22 = (int)tile3.type;
								}
								if (tile4 != null && tile4.active())
								{
									num24 = (int)tile4.type;
								}
								if (tile5 != null && tile5.active())
								{
									num25 = (int)tile5.type;
								}
								short num26 = (short)(WorldGen.genRand.Next(3) * 18);
								if (num22 >= 0 && Main.tileMoss[num22])
								{
									tile.frameX = (short)(22 * (num22 - 179));
									if (tile.frameY < 0 || tile.frameY > 36)
									{
										tile.frameY = num26;
									}
								}
								else if (num23 >= 0 && Main.tileMoss[num23])
								{
									tile.frameX = (short)(22 * (num23 - 179));
									if (tile.frameY < 54 || tile.frameY > 90)
									{
										tile.frameY = (short)(54 + num26);
									}
								}
								else if (num24 >= 0 && Main.tileMoss[num24])
								{
									tile.frameX = (short)(22 * (num24 - 179));
									if (tile.frameY < 108 || tile.frameY > 54)
									{
										tile.frameY = (short)(108 + num26);
									}
								}
								else if (num25 >= 0 && Main.tileMoss[num25])
								{
									tile.frameX = (short)(22 * (num25 - 179));
									if (tile.frameY < 162 || tile.frameY > 198)
									{
										tile.frameY = (short)(162 + num26);
									}
								}
								else
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
							}
							else if (num == 3 || num == 24 || num == 61 || num == 71 || num == 73 || num == 74 || num == 110 || num == 113 || num == 201)
							{
								WorldGen.PlantCheck(i, j);
							}
							else if (num == 227)
							{
								WorldGen.CheckDye(i, j);
							}
							else if (num == 12 || num == 31)
							{
								WorldGen.CheckOrb(i, j, num);
							}
							else if (num == 165)
							{
								WorldGen.CheckTight(i, j);
							}
							else if (num == 324)
							{
								Tile tile3 = Main.tile[i, j + 1];
								if (tile3 == null)
								{
									tile3 = new Tile();
									Main.tile[i, j + 1] = tile3;
								}
								if (!tile3.nactive() || (!Main.tileSolid[(int)tile3.type] && !Main.tileSolidTop[(int)tile3.type]))
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
							}
							else if (num == 235)
							{
								WorldGen.Check3x1(i, j, num);
							}
							else if (num == 185)
							{
								WorldGen.CheckPile(i, j);
							}
							else if ((num >= 275 && num <= 281) || num == 296 || num == 297 || num == 309)
							{
								WorldGen.Check6x3(i, j, num);
							}
							else if (num == 10)
							{
								if (!WorldGen.destroyObject)
								{
									bool flag = false;
									int frameY2 = (int)tile.frameY;
									int num27 = frameY2 / 54;
									int num28 = j - frameY2 % 54 / 18;
									Tile tile10 = Main.tile[i, num28 - 1];
									Tile tile11 = Main.tile[i, num28];
									Tile tile12 = Main.tile[i, num28 + 1];
									Tile tile13 = Main.tile[i, num28 + 2];
									Tile tile14 = Main.tile[i, num28 + 3];
									if (tile10 == null)
									{
										tile10 = new Tile();
										Main.tile[i, num28 - 1] = tile10;
									}
									if (tile11 == null)
									{
										tile11 = new Tile();
										Main.tile[i, num28] = tile11;
									}
									if (tile12 == null)
									{
										tile12 = new Tile();
										Main.tile[i, num28 + 1] = tile12;
									}
									if (tile13 == null)
									{
										tile13 = new Tile();
										Main.tile[i, num28 + 2] = tile13;
									}
									if (tile14 == null)
									{
										tile14 = new Tile();
										Main.tile[i, num28 + 3] = tile14;
									}
									if (!tile10.active() || !Main.tileSolid[(int)tile10.type])
									{
										flag = true;
									}
									if (!WorldGen.SolidTile(tile14))
									{
										flag = true;
									}
									if (!tile11.active() || (int)tile11.type != num)
									{
										flag = true;
									}
									if (!tile12.active() || (int)tile12.type != num)
									{
										flag = true;
									}
									if (!tile13.active() || (int)tile13.type != num)
									{
										flag = true;
									}
									if (flag)
									{
										WorldGen.destroyObject = true;
										WorldGen.KillTile(i, num28, false, false, false);
										WorldGen.KillTile(i, num28 + 1, false, false, false);
										WorldGen.KillTile(i, num28 + 2, false, false, false);
										if (num27 == 0)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 25, 1, false, 0, false);
										}
										else if (num27 == 9)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 837, 1, false, 0, false);
										}
										else if (num27 == 10)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 912, 1, false, 0, false);
										}
										else if (num27 == 12)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1137, 1, false, 0, false);
										}
										else if (num27 == 13)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1138, 1, false, 0, false);
										}
										else if (num27 == 14)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1139, 1, false, 0, false);
										}
										else if (num27 == 15)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1140, 1, false, 0, false);
										}
										else if (num27 == 16)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1411, 1, false, 0, false);
										}
										else if (num27 == 17)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1412, 1, false, 0, false);
										}
										else if (num27 == 18)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1413, 1, false, 0, false);
										}
										else if (num27 == 19)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1458, 1, false, 0, false);
										}
										else if (num27 >= 20 && num27 <= 23)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1709 + num27 - 20, 1, false, 0, false);
										}
										else if (num27 == 24)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1793, 1, false, 0, false);
										}
										else if (num27 == 25)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1815, 1, false, 0, false);
										}
										else if (num27 == 26)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1924, 1, false, 0, false);
										}
										else if (num27 == 27)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2044, 1, false, 0, false);
										}
										else if (num27 == 28)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2265, 1, false, 0, false);
										}
										else if (num27 == 29)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2528, 1, false, 0, false);
										}
										else if (num27 == 30)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2561, 1, false, 0, false);
										}
										else if (num27 == 31)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2576, 1, false, 0, false);
										}
										else if (num27 >= 4 && num27 <= 8)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 812 + num27, 1, false, 0, false);
										}
										else if (num27 != 11)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 649 + num27, 1, false, 0, false);
										}
									}
									WorldGen.destroyObject = false;
								}
							}
							else if (num == 11)
							{
								if (!WorldGen.destroyObject)
								{
									int num29 = 0;
									int num30 = i;
									int frameX2 = (int)tile.frameX;
									int frameY3 = (int)tile.frameY;
									int num31 = frameY3 / 54;
									int num32 = j - frameY3 % 54 / 18;
									bool flag2 = false;
									if (frameX2 == 0)
									{
										num30 = i;
										num29 = 1;
									}
									else if (frameX2 == 18)
									{
										num30 = i - 1;
										num29 = 1;
									}
									else if (frameX2 == 36)
									{
										num30 = i + 1;
										num29 = -1;
									}
									else if (frameX2 == 54)
									{
										num30 = i;
										num29 = -1;
									}
									Tile tile15 = Main.tile[num30, num32 - 1];
									Tile tile16 = Main.tile[num30, num32 + 3];
									if (tile15 == null)
									{
										tile15 = new Tile();
										Main.tile[num30, num32 - 1] = tile15;
									}
									if (tile16 == null)
									{
										tile16 = new Tile();
										Main.tile[num30, num32 + 3] = tile16;
									}
									if (!tile15.active() || !Main.tileSolid[(int)tile15.type] || !WorldGen.SolidTile(tile16))
									{
										flag2 = true;
										WorldGen.destroyObject = true;
										if (num31 == 0)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 25, 1, false, 0, false);
										}
										else if (num31 == 9)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 837, 1, false, 0, false);
										}
										else if (num31 == 10)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 912, 1, false, 0, false);
										}
										else if (num31 == 11 || num31 == 12)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1137, 1, false, 0, false);
										}
										else if (num31 == 13)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1138, 1, false, 0, false);
										}
										else if (num31 == 14)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1139, 1, false, 0, false);
										}
										else if (num31 == 15)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1140, 1, false, 0, false);
										}
										else if (num31 == 16)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1411, 1, false, 0, false);
										}
										else if (num31 == 17)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1412, 1, false, 0, false);
										}
										else if (num31 == 18)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1413, 1, false, 0, false);
										}
										else if (num31 == 19)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1458, 1, false, 0, false);
										}
										else if (num31 >= 20 && num31 <= 23)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1709 + num31 - 20, 1, false, 0, false);
										}
										else if (num31 == 24)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1793, 1, false, 0, false);
										}
										else if (num31 == 25)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1815, 1, false, 0, false);
										}
										else if (num31 == 26)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 1924, 1, false, 0, false);
										}
										else if (num31 == 27)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2044, 1, false, 0, false);
										}
										else if (num31 == 28)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2265, 1, false, 0, false);
										}
										else if (num31 == 29)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2528, 1, false, 0, false);
										}
										else if (num31 == 30)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2561, 1, false, 0, false);
										}
										else if (num31 == 31)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 2576, 1, false, 0, false);
										}
										else if (num31 >= 4 && num31 <= 8)
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 812 + num31, 1, false, 0, false);
										}
										else
										{
											Item.NewItem(i * 16, j * 16, 16, 16, 649 + num31, 1, false, 0, false);
										}
									}
									int num33 = num30;
									if (num29 == -1)
									{
										num33 = num30 - 1;
									}
									for (int k = num33; k < num33 + 2; k++)
									{
										for (int l = num32; l < num32 + 3; l++)
										{
											if (!flag2)
											{
												Tile tile17 = Main.tile[k, l];
												if (!tile17.active() || tile17.type != 11)
												{
													WorldGen.destroyObject = true;
													if (num31 == 0)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 25, 1, false, 0, false);
													}
													else if (num31 == 9)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 837, 1, false, 0, false);
													}
													else if (num31 == 10)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 912, 1, false, 0, false);
													}
													else if (num31 == 11 || num31 == 12)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1137, 1, false, 0, false);
													}
													else if (num31 == 13)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1138, 1, false, 0, false);
													}
													else if (num31 == 14)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1139, 1, false, 0, false);
													}
													else if (num31 == 15)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1140, 1, false, 0, false);
													}
													else if (num31 == 16)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1411, 1, false, 0, false);
													}
													else if (num31 == 17)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1412, 1, false, 0, false);
													}
													else if (num31 == 18)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1413, 1, false, 0, false);
													}
													else if (num31 == 19)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1458, 1, false, 0, false);
													}
													else if (num31 >= 20 && num31 <= 23)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1709 + num31 - 20, 1, false, 0, false);
													}
													else if (num31 == 24)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1793, 1, false, 0, false);
													}
													else if (num31 == 25)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1815, 1, false, 0, false);
													}
													else if (num31 == 26)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 1924, 1, false, 0, false);
													}
													else if (num31 == 27)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 2044, 1, false, 0, false);
													}
													else if (num31 == 28)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 2265, 1, false, 0, false);
													}
													else if (num31 == 29)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 2528, 1, false, 0, false);
													}
													else if (num31 == 30)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 2561, 1, false, 0, false);
													}
													else if (num31 == 31)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 2576, 1, false, 0, false);
													}
													else if (num31 >= 4 && num31 <= 8)
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 812 + num31, 1, false, 0, false);
													}
													else
													{
														Item.NewItem(i * 16, j * 16, 16, 16, 649 + num31, 1, false, 0, false);
													}
													flag2 = true;
													k = num33;
													l = num32;
												}
											}
											if (flag2)
											{
												WorldGen.KillTile(k, l, false, false, false);
											}
										}
									}
									WorldGen.destroyObject = false;
								}
							}
							else if (num == 314)
							{
								Minecart.FrameTrack(i, j, false, false);
							}
							else if (num == 19)
							{
								Tile tile4 = Main.tile[i - 1, j];
								if (tile4 != null)
								{
									Tile tile5 = Main.tile[i + 1, j];
									if (tile5 != null)
									{
										Tile tile6 = Main.tile[i - 1, j + 1];
										if (tile6 != null)
										{
											Tile tile7 = Main.tile[i + 1, j + 1];
											if (tile7 != null)
											{
												Tile tile8 = Main.tile[i - 1, j - 1];
												if (tile8 != null)
												{
													Tile tile9 = Main.tile[i + 1, j - 1];
													if (tile9 != null)
													{
														int num34 = -1;
														int num35 = -1;
														if (tile4 != null && tile4.active())
														{
															if (Main.tileStone[(int)tile4.type])
															{
																num35 = 1;
															}
															else
															{
																num35 = (int)tile4.type;
															}
														}
														if (tile5 != null && tile5.active())
														{
															if (Main.tileStone[(int)tile5.type])
															{
																num34 = 1;
															}
															else
															{
																num34 = (int)tile5.type;
															}
														}
														if (num34 >= 0 && !Main.tileSolid[num34])
														{
															num34 = -1;
														}
														if (num35 >= 0 && !Main.tileSolid[num35])
														{
															num35 = -1;
														}
														if (num35 == num && tile4.halfBrick() != tile.halfBrick())
														{
															num35 = -1;
														}
														if (num34 == num && tile5.halfBrick() != tile.halfBrick())
														{
															num34 = -1;
														}
														if (num35 != -1 && num35 != num && tile.halfBrick())
														{
															num35 = -1;
														}
														if (num34 != -1 && num34 != num && tile.halfBrick())
														{
															num34 = -1;
														}
														if (num35 == -1 && tile8.active() && (int)tile8.type == num && tile8.slope() == 1)
														{
															num35 = num;
														}
														if (num34 == -1 && tile9.active() && (int)tile9.type == num && tile9.slope() == 2)
														{
															num34 = num;
														}
														if (num35 == num && tile4.slope() == 2 && num34 != num)
														{
															num34 = -1;
														}
														if (num34 == num && tile5.slope() == 1 && num35 != num)
														{
															num35 = -1;
														}
														if (tile.slope() == 1)
														{
															if (tile5.type == 19 && tile5.slope() == 0)
															{
																rectangle.X = 468;
															}
															else if (!tile7.active() && (tile7.type != 19 || tile7.slope() == 2))
															{
																if (!tile4.active() && (tile8.type != 19 || tile8.slope() != 1))
																{
																	rectangle.X = 432;
																}
																else
																{
																	rectangle.X = 360;
																}
															}
															else if (!tile4.active() && (tile8.type != 19 || tile8.slope() != 1))
															{
																rectangle.X = 396;
															}
															else
															{
																rectangle.X = 180;
															}
														}
														else if (tile.slope() == 2)
														{
															if (tile4.type == 19 && tile4.slope() == 0)
															{
																rectangle.X = 450;
															}
															else if (!tile6.active() && (tile6.type != 19 || tile6.slope() == 1))
															{
																if (!tile5.active() && (tile9.type != 19 || tile9.slope() != 2))
																{
																	rectangle.X = 414;
																}
																else
																{
																	rectangle.X = 342;
																}
															}
															else if (!tile5.active() && (tile9.type != 19 || tile9.slope() != 2))
															{
																rectangle.X = 378;
															}
															else
															{
																rectangle.X = 144;
															}
														}
														else if (num35 == num && num34 == num)
														{
															if (tile4.slope() == 2 && tile5.slope() == 1)
															{
																rectangle.X = 252;
															}
															else if (tile4.slope() == 2)
															{
																rectangle.X = 216;
															}
															else if (tile5.slope() == 1)
															{
																rectangle.X = 234;
															}
															else
															{
																rectangle.X = 0;
															}
														}
														else if (num35 == num && num34 == -1)
														{
															if (tile4.slope() == 2)
															{
																rectangle.X = 270;
															}
															else
															{
																rectangle.X = 18;
															}
														}
														else if (num35 == -1 && num34 == num)
														{
															if (tile5.slope() == 1)
															{
																rectangle.X = 288;
															}
															else
															{
																rectangle.X = 36;
															}
														}
														else if (num35 != num && num34 == num)
														{
															rectangle.X = 54;
														}
														else if (num35 == num && num34 != num)
														{
															rectangle.X = 72;
														}
														else if (num35 != num && num35 != -1 && num34 == -1)
														{
															rectangle.X = 108;
														}
														else if (num35 == -1 && num34 != num && num34 != -1)
														{
															rectangle.X = 126;
														}
														else
														{
															rectangle.X = 90;
														}
														tile.frameX = (short)rectangle.X;
													}
												}
											}
										}
									}
								}
							}
							else if (num == 233 || num == 236 || num == 238)
							{
								WorldGen.CheckJunglePlant(i, j, num);
							}
							else if (num == 240)
							{
								WorldGen.Check3x3Wall(i, j);
							}
							else if (num == 245)
							{
								WorldGen.Check2x3Wall(i, j);
							}
							else if (num == 246)
							{
								WorldGen.Check3x2Wall(i, j);
							}
							else if (num == 241)
							{
								WorldGen.Check4x3Wall(i, j);
							}
							else if (num == 242)
							{
								WorldGen.Check6x4Wall(i, j);
							}
							else if (num == 334)
							{
								WorldGen.CheckWeaponsRack(i, j);
							}
							else if (num == 34)
							{
								WorldGen.CheckChand(i, j, num);
							}
							else if (num == 106 || num == 212 || num == 219 || num == 220 || num == 228 || num == 231 || num == 243 || num == 247 || num == 283 || (num >= 300 && num <= 308))
							{
								WorldGen.Check3x3(i, j, (int)((ushort)num));
							}
							else if (num == 15 || num == 20 || num == 216 || num == 338)
							{
								WorldGen.Check1x2(i, j, (ushort)num);
							}
							else if (num == 14 || num == 17 || num == 26 || num == 77 || num == 86 || num == 87 || num == 88 || num == 89 || num == 114 || num == 133 || num == 186 || num == 187 || num == 215 || num == 217 || num == 218 || num == 237 || num == 244 || num == 285 || num == 286 || num == 298 || num == 299 || num == 310 || num == 339)
							{
								WorldGen.Check3x2(i, j, (int)((ushort)num));
							}
							else if (num == 135 || num == 144 || num == 141 || num == 210 || num == 239 || num == 36)
							{
								WorldGen.Check1x1(i, j, num);
							}
							else if (num == 16 || num == 18 || num == 29 || num == 103 || num == 134)
							{
								WorldGen.Check2x1(i, j, (ushort)((byte)num));
							}
							else if (num == 13 || num == 33 || num == 50 || num == 78 || num == 174)
							{
								WorldGen.CheckOnTable1x1(i, j, (int)((byte)num));
							}
							else if (num == 21)
							{
								WorldGen.CheckChest(i, j, (int)((byte)num));
							}
							else if (num == 128)
							{
								WorldGen.CheckMan(i, j);
							}
							else if (num == 269)
							{
								WorldGen.CheckWoman(i, j);
							}
							else if (num == 27)
							{
								WorldGen.CheckSunflower(i, j, 27);
							}
							else if (num == 28)
							{
								WorldGen.CheckPot(i, j, 28);
							}
							else if (num == 171)
							{
								WorldGen.CheckXmasTree(i, j);
							}
							else if (num == 254)
							{
								WorldGen.Check2x2Style(i, j, num);
							}
							else if (num == 335)
							{
								WorldGen.Check2x2(i, j, num);
							}
							else if (num == 132 || num == 138 || num == 142 || num == 143 || (num >= 288 && num <= 295) || (num >= 316 && num <= 318))
							{
								WorldGen.Check2x2(i, j, num);
							}
							else if (num == 91)
							{
								WorldGen.CheckBanner(i, j, (byte)num);
							}
							else if (num == 139 || num == 35)
							{
								WorldGen.CheckMB(i, j, (int)((byte)num));
							}
							else if (num == 92 || num == 93)
							{
								WorldGen.Check1xX(i, j, (byte)num);
							}
							else if (num == 104 || num == 105 || num == 207 || num == 320 || num == 337)
							{
								WorldGen.Check2xX(i, j, (ushort)num);
							}
							else if (num == 101 || num == 102)
							{
								WorldGen.Check3x4(i, j, (int)((byte)num));
							}
							else if (num == 42 || num == 270 || num == 271)
							{
								WorldGen.Check1x2Top(i, j, (ushort)num);
							}
							else if (num == 55 || num == 85)
							{
								WorldGen.CheckSign(i, j, (ushort)num);
							}
							else if (num == 209)
							{
								WorldGen.CheckCannon(i, j, num);
							}
							else if (num == 79 || num == 90)
							{
								WorldGen.Check4x2(i, j, num);
							}
							else if (num == 94 || num == 95 || num == 97 || num == 319 || num == 98 || num == 99 || num == 100 || num == 125 || num == 126 || num == 173 || num == 282 || num == 287)
							{
								WorldGen.Check2x2(i, j, num);
							}
							else if (num == 96)
							{
								WorldGen.Check2x2Style(i, j, num);
							}
							else if (num == 81)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								Tile tile4 = Main.tile[i - 1, j];
								Tile tile5 = Main.tile[i + 1, j];
								int num36 = -1;
								int num37 = -1;
								int num38 = -1;
								int num39 = -1;
								if (tile2 != null && tile2.active())
								{
									num37 = (int)tile2.type;
								}
								if (tile3 != null && tile3.active())
								{
									num36 = (int)tile3.type;
								}
								if (tile4 != null && tile4.active())
								{
									num38 = (int)tile4.type;
								}
								if (tile5 != null && tile5.active())
								{
									num39 = (int)tile5.type;
								}
								if (num38 != -1 || num37 != -1 || num39 != -1)
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
								else if (num36 < 0 || !Main.tileSolid[num36] || tile3.halfBrick() || tile3.topSlope())
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
							}
							else if (Main.tileAlch[num])
							{
								WorldGen.CheckAlch(i, j);
							}
							else if (num == 72)
							{
								Tile tile2 = Main.tile[i, j - 1];
								Tile tile3 = Main.tile[i, j + 1];
								int num40 = -1;
								int num41 = -1;
								if (tile2 != null && tile2.active())
								{
									num41 = (int)tile2.type;
								}
								if (tile3 != null && tile3.active())
								{
									num40 = (int)tile3.type;
								}
								if (num40 != num && num40 != 70)
								{
									WorldGen.KillTile(i, j, false, false, false);
								}
								else if (num41 != num && tile.frameX == 0)
								{
									tile.frameNumber((byte)WorldGen.genRand.Next(3));
									if (tile.frameNumber() == 0)
									{
										tile.frameX = 18;
										tile.frameY = 0;
									}
									if (tile.frameNumber() == 1)
									{
										tile.frameX = 18;
										tile.frameY = 18;
									}
									if (tile.frameNumber() == 2)
									{
										tile.frameX = 18;
										tile.frameY = 36;
									}
								}
							}
							else if (num == 5)
							{
								WorldGen.CheckTree(i, j);
							}
							else if (num == 323)
							{
								WorldGen.CheckPalmTree(i, j);
							}
							return;
						}
						else
						{
							if (num >= 255 && num <= 268)
							{
								Framing.SelfFrame8Way(i, j, tile, resetFrame);
								return;
							}
							Tile tile2 = Main.tile[i, j - 1];
							Tile tile3 = Main.tile[i, j + 1];
							Tile tile4 = Main.tile[i - 1, j];
							Tile tile5 = Main.tile[i + 1, j];
							Tile tile6 = Main.tile[i - 1, j + 1];
							Tile tile7 = Main.tile[i + 1, j + 1];
							Tile tile8 = Main.tile[i - 1, j - 1];
							Tile tile9 = Main.tile[i + 1, j - 1];
							int num42 = -1;
							int num43 = -1;
							int num44 = -1;
							int num45 = -1;
							int num46 = -1;
							int num47 = -1;
							int num48 = -1;
							int num49 = -1;
							if (tile4 != null && tile4.active())
							{
								if (Main.tileStone[(int)tile4.type])
								{
									num45 = 1;
								}
								else
								{
									num45 = (int)tile4.type;
								}
								if (tile4.slope() == 1 || tile4.slope() == 3)
								{
									num45 = -1;
								}
							}
							if (tile5 != null && tile5.active())
							{
								if (Main.tileStone[(int)tile5.type])
								{
									num46 = 1;
								}
								else
								{
									num46 = (int)tile5.type;
								}
								if (tile5.slope() == 2 || tile5.slope() == 4)
								{
									num46 = -1;
								}
							}
							if (tile2 != null && tile2.active())
							{
								if (Main.tileStone[(int)tile2.type])
								{
									num43 = 1;
								}
								else
								{
									num43 = (int)tile2.type;
								}
								if (tile2.slope() == 3 || tile2.slope() == 4)
								{
									num43 = -1;
								}
							}
							if (tile3 != null && tile3.active())
							{
								if (Main.tileStone[(int)tile3.type])
								{
									num48 = 1;
								}
								else
								{
									num48 = (int)tile3.type;
								}
								if (tile3.slope() == 1 || tile3.slope() == 2)
								{
									num48 = -1;
								}
							}
							if (tile8 != null && tile8.active())
							{
								if (Main.tileStone[(int)tile8.type])
								{
									num42 = 1;
								}
								else
								{
									num42 = (int)tile8.type;
								}
							}
							if (tile9 != null && tile9.active())
							{
								if (Main.tileStone[(int)tile9.type])
								{
									num44 = 1;
								}
								else
								{
									num44 = (int)tile9.type;
								}
							}
							if (tile6 != null && tile6.active())
							{
								if (Main.tileStone[(int)tile6.type])
								{
									num47 = 1;
								}
								else
								{
									num47 = (int)tile6.type;
								}
							}
							if (tile7 != null && tile7.active())
							{
								if (Main.tileStone[(int)tile7.type])
								{
									num49 = 1;
								}
								else
								{
									num49 = (int)tile7.type;
								}
							}
							if (tile.slope() == 2)
							{
								num43 = -1;
								num45 = -1;
							}
							if (tile.slope() == 1)
							{
								num43 = -1;
								num46 = -1;
							}
							if (tile.slope() == 4)
							{
								num48 = -1;
								num45 = -1;
							}
							if (tile.slope() == 3)
							{
								num48 = -1;
								num46 = -1;
							}
							if (num == 147)
							{
								if (num43 > -1 && Main.tileBrick[num43] && num43 != 161 && num43 != 163 && num43 != 164 && num43 != 200)
								{
									num43 = num;
								}
								if (num48 > -1 && Main.tileBrick[num48] && num48 != 161 && num48 != 163 && num48 != 164 && num48 != 200)
								{
									num48 = num;
								}
								if (num45 > -1 && Main.tileBrick[num45] && num45 != 161 && num45 != 163 && num45 != 164 && num45 != 200)
								{
									num45 = num;
								}
								if (num46 > -1 && Main.tileBrick[num46] && num46 != 161 && num46 != 163 && num46 != 164 && num46 != 200)
								{
									num46 = num;
								}
								if (num42 > -1 && Main.tileBrick[num42] && num42 != 161 && num42 != 163 && num42 != 164 && num42 != 200)
								{
									num42 = num;
								}
								if (num44 > -1 && Main.tileBrick[num44] && num44 != 161 && num44 != 163 && num44 != 164 && num44 != 200)
								{
									num44 = num;
								}
								if (num47 > -1 && Main.tileBrick[num47] && num47 != 161 && num47 != 163 && num47 != 164 && num47 != 200)
								{
									num47 = num;
								}
								if (num49 > -1 && Main.tileBrick[num49] && num49 != 161 && num49 != 163 && num49 != 164 && num49 != 200)
								{
									num49 = num;
								}
							}
							else if (num == 161 || num == 163 || num == 164 || num == 200)
							{
								if (num43 > -1 && Main.tileBrick[num43] && num43 != 147)
								{
									num43 = num;
								}
								if (num48 > -1 && Main.tileBrick[num48] && num48 != 147)
								{
									num48 = num;
								}
								if (num45 > -1 && Main.tileBrick[num45] && num45 != 147)
								{
									num45 = num;
								}
								if (num46 > -1 && Main.tileBrick[num46] && num46 != 147)
								{
									num46 = num;
								}
								if (num42 > -1 && Main.tileBrick[num42] && num42 != 147)
								{
									num42 = num;
								}
								if (num44 > -1 && Main.tileBrick[num44] && num44 != 147)
								{
									num44 = num;
								}
								if (num47 > -1 && Main.tileBrick[num47] && num47 != 147)
								{
									num47 = num;
								}
								if (num49 > -1 && Main.tileBrick[num49] && num49 != 147)
								{
									num49 = num;
								}
							}
							else if (Main.tileBrick[num])
							{
								if (num == 60 || num == 70)
								{
									if (num43 > -1 && num43 != 59 && Main.tileBrick[num43])
									{
										num43 = num;
									}
									if (num48 > -1 && num48 != 59 && Main.tileBrick[num48])
									{
										num48 = num;
									}
									if (num45 > -1 && num45 != 59 && Main.tileBrick[num45])
									{
										num45 = num;
									}
									if (num46 > -1 && num46 != 59 && Main.tileBrick[num46])
									{
										num46 = num;
									}
									if (num42 > -1 && num42 != 59 && Main.tileBrick[num42])
									{
										num42 = num;
									}
									if (num44 > -1 && num44 != 59 && Main.tileBrick[num44])
									{
										num44 = num;
									}
									if (num47 > -1 && num47 != 59 && Main.tileBrick[num47])
									{
										num47 = num;
									}
									if (num49 > -1 && num49 != 59 && Main.tileBrick[num49])
									{
										num49 = num;
									}
								}
								else
								{
									if (num43 > -1 && Main.tileBrick[num43])
									{
										num43 = num;
									}
									if (num48 > -1 && Main.tileBrick[num48])
									{
										num48 = num;
									}
									if (num45 > -1 && Main.tileBrick[num45])
									{
										num45 = num;
									}
									if (num46 > -1 && Main.tileBrick[num46])
									{
										num46 = num;
									}
									if (num42 > -1 && Main.tileBrick[num42])
									{
										num42 = num;
									}
									if (num44 > -1 && Main.tileBrick[num44])
									{
										num44 = num;
									}
									if (num47 > -1 && Main.tileBrick[num47])
									{
										num47 = num;
									}
									if (num49 > -1 && Main.tileBrick[num49])
									{
										num49 = num;
									}
								}
							}
							else if (Main.tilePile[num])
							{
								if (num43 > -1 && Main.tilePile[num43])
								{
									num43 = num;
								}
								if (num48 > -1 && Main.tilePile[num48])
								{
									num48 = num;
								}
								if (num45 > -1 && Main.tilePile[num45])
								{
									num45 = num;
								}
								if (num46 > -1 && Main.tilePile[num46])
								{
									num46 = num;
								}
								if (num42 > -1 && Main.tilePile[num42])
								{
									num42 = num;
								}
								if (num44 > -1 && Main.tilePile[num44])
								{
									num44 = num;
								}
								if (num47 > -1 && Main.tilePile[num47])
								{
									num47 = num;
								}
								if (num49 > -1 && Main.tilePile[num49])
								{
									num49 = num;
								}
							}
							if ((num == 1 || Main.tileMoss[num] || num == 117 || num == 25 || num == 203) && num48 == 165)
							{
								if (tile3.frameY == 72)
								{
									num48 = num;
								}
								else if (tile3.frameY == 0)
								{
									num48 = num;
								}
							}
							if ((num == 1 || Main.tileMoss[num] || num == 117 || num == 25 || num == 203) && num43 == 165)
							{
								if (tile2.frameY == 90)
								{
									num43 = num;
								}
								else if (tile2.frameY == 54)
								{
									num43 = num;
								}
							}
							if (num == 225)
							{
								if (num48 == 165)
								{
									num48 = num;
								}
								if (num43 == 165)
								{
									num43 = num;
								}
							}
							if (num == 200 && num48 == 165)
							{
								num48 = 200;
							}
							if (num == 161 && num48 == 165)
							{
								num48 = 161;
							}
							if (num == 163 && num48 == 165)
							{
								num48 = 163;
							}
							if (num == 164 && num48 == 165)
							{
								num48 = 164;
							}
							if ((tile.slope() == 1 || tile.slope() == 2) && num48 > -1)
							{
								num48 = num;
							}
							if (num43 > -1 && (tile2.slope() == 1 || tile2.slope() == 2))
							{
								num43 = num;
							}
							if ((tile.slope() == 3 || tile.slope() == 4) && num43 > -1)
							{
								num43 = num;
							}
							if (num48 > -1 && (tile3.slope() == 3 || tile3.slope() == 4))
							{
								num48 = num;
							}
							if (num == 124)
							{
								if (num43 > -1 && Main.tileSolid[num43])
								{
									num43 = num;
								}
								if (num48 > -1 && Main.tileSolid[num48])
								{
									num48 = num;
								}
							}
							if (num43 > -1 && tile2.halfBrick())
							{
								num43 = num;
							}
							if (num45 > -1 && tile4.halfBrick())
							{
								if (tile.halfBrick())
								{
									num45 = num;
								}
								else if ((int)tile4.type != num)
								{
									num45 = -1;
								}
							}
							if (num46 > -1 && tile5.halfBrick())
							{
								if (tile.halfBrick())
								{
									num46 = num;
								}
								else if ((int)tile5.type != num)
								{
									num46 = -1;
								}
							}
							if (tile.halfBrick())
							{
								if (num45 != num)
								{
									num45 = -1;
								}
								if (num46 != num)
								{
									num46 = -1;
								}
								num43 = -1;
							}
							if (tile3 != null && tile3.halfBrick())
							{
								num48 = -1;
							}
							if (!Main.tileSolid[num])
							{
								if (num == 49)
								{
									WorldGen.CheckOnTable1x1(i, j, (int)((byte)num));
									return;
								}
								if (num == 80)
								{
									WorldGen.CactusFrame(i, j);
									return;
								}
							}
							WorldGen.mergeUp = false;
							WorldGen.mergeDown = false;
							WorldGen.mergeLeft = false;
							WorldGen.mergeRight = false;
							int num50;
							if (resetFrame)
							{
								num50 = WorldGen.genRand.Next(0, 3);
								tile.frameNumber((byte)num50);
							}
							else
							{
								num50 = (int)tile.frameNumber();
							}
							if (Main.tileLargeFrames[num] == 1)
							{
								int num51 = j % 4;
								int num52 = i % 3;
								int[,] array = new int[,]
								{

									{
										2,
										4,
										2
									},

									{
										1,
										3,
										1
									},

									{
										2,
										2,
										4
									},

									{
										1,
										1,
										3
									}
								};
								num50 = array[num51, num52] - 1;
							}
							if (num == 0)
							{
								if (num43 > -1 && Main.tileMergeDirt[num43])
								{
									WorldGen.TileFrame(i, j - 1, false, false);
									if (WorldGen.mergeDown)
									{
										num43 = num;
									}
								}
								else if (num43 == 147)
								{
									WorldGen.TileFrame(i, j - 1, false, false);
									if (WorldGen.mergeDown)
									{
										num43 = num;
									}
								}
								if (num48 > -1 && Main.tileMergeDirt[num48])
								{
									WorldGen.TileFrame(i, j + 1, false, false);
									if (WorldGen.mergeUp)
									{
										num48 = num;
									}
								}
								else if (num48 == 147)
								{
									WorldGen.TileFrame(i, j + 1, false, false);
									if (WorldGen.mergeUp)
									{
										num48 = num;
									}
								}
								if (num45 > -1 && Main.tileMergeDirt[num45])
								{
									WorldGen.TileFrame(i - 1, j, false, false);
									if (WorldGen.mergeRight)
									{
										num45 = num;
									}
								}
								else if (num45 == 147)
								{
									WorldGen.TileFrame(i - 1, j, false, false);
									if (WorldGen.mergeRight)
									{
										num45 = num;
									}
								}
								if (num46 > -1 && Main.tileMergeDirt[num46])
								{
									WorldGen.TileFrame(i + 1, j, false, false);
									if (WorldGen.mergeLeft)
									{
										num46 = num;
									}
								}
								else if (num46 == 147)
								{
									WorldGen.TileFrame(i + 1, j, false, false);
									if (WorldGen.mergeLeft)
									{
										num46 = num;
									}
								}
								if (num43 == 2 || num43 == 23 || num43 == 109 || num43 == 199)
								{
									num43 = num;
								}
								if (num48 == 2 || num48 == 23 || num48 == 109 || num48 == 199)
								{
									num48 = num;
								}
								if (num45 == 2 || num45 == 23 || num45 == 109 || num45 == 199)
								{
									num45 = num;
								}
								if (num46 == 2 || num46 == 23 || num46 == 109 || num46 == 199)
								{
									num46 = num;
								}
								if (num42 > -1 && Main.tileMergeDirt[num42])
								{
									num42 = num;
								}
								else if (num42 == 2 || num42 == 23 || num42 == 109 || num42 == 199)
								{
									num42 = num;
								}
								if (num44 > -1 && Main.tileMergeDirt[num44])
								{
									num44 = num;
								}
								else if (num44 == 2 || num44 == 23 || num44 == 109 || num44 == 199)
								{
									num44 = num;
								}
								if (num47 > -1 && Main.tileMergeDirt[num47])
								{
									num47 = num;
								}
								else if (num47 == 2 || num47 == 23 || num47 == 109 || num47 == 199)
								{
									num47 = num;
								}
								if (num49 > -1 && Main.tileMergeDirt[num49])
								{
									num49 = num;
								}
								else if (num49 == 2 || num49 == 23 || num49 == 109 || num49 == 199)
								{
									num49 = num;
								}
								double arg_3218_0 = Main.rockLayer;
								if (num43 == 59)
								{
									num43 = -2;
								}
								if (num48 == 59)
								{
									num48 = -2;
								}
								if (num45 == 59)
								{
									num45 = -2;
								}
								if (num46 == 59)
								{
									num46 = -2;
								}
								if (num42 == 59)
								{
									num42 = -2;
								}
								if (num44 == 59)
								{
									num44 = -2;
								}
								if (num47 == 59)
								{
									num47 = -2;
								}
								if (num49 == 59)
								{
									num49 = -2;
								}
								if (num43 == 191)
								{
									num43 = num;
								}
								if (num48 == 191)
								{
									num48 = num;
								}
								if (num45 == 191)
								{
									num45 = num;
								}
								if (num46 == 191)
								{
									num46 = num;
								}
								if (num42 == 191)
								{
									num42 = num;
								}
								if (num44 == 191)
								{
									num44 = num;
								}
								if (num47 == 191)
								{
									num47 = num;
								}
								if (num49 == 191)
								{
									num49 = num;
								}
							}
							else
							{
								if (num == 213)
								{
									if (num43 > -1 && Main.tileSolid[num43] && !Main.tileSolidTop[num43])
									{
										num43 = num;
									}
									if (num48 > -1 && Main.tileSolid[num48])
									{
										num48 = num;
									}
									if (num43 != num)
									{
										if (num45 > -1 && Main.tileSolid[num45])
										{
											num45 = num;
										}
										if (num46 > -1 && Main.tileSolid[num46])
										{
											num46 = num;
										}
									}
								}
								if (Main.tileMergeDirt[num])
								{
									if (num43 == 0)
									{
										num43 = -2;
									}
									if (num48 == 0)
									{
										num48 = -2;
									}
									if (num45 == 0)
									{
										num45 = -2;
									}
									if (num46 == 0)
									{
										num46 = -2;
									}
									if (num42 == 0)
									{
										num42 = -2;
									}
									if (num44 == 0)
									{
										num44 = -2;
									}
									if (num47 == 0)
									{
										num47 = -2;
									}
									if (num49 == 0)
									{
										num49 = -2;
									}
									if (num == 1)
									{
										if ((double)j > Main.rockLayer)
										{
											if (num43 == 59)
											{
												WorldGen.TileFrame(i, j - 1, false, false);
												if (WorldGen.mergeDown)
												{
													num43 = num;
												}
											}
											if (num48 == 59)
											{
												WorldGen.TileFrame(i, j + 1, false, false);
												if (WorldGen.mergeUp)
												{
													num48 = num;
												}
											}
											if (num45 == 59)
											{
												WorldGen.TileFrame(i - 1, j, false, false);
												if (WorldGen.mergeRight)
												{
													num45 = num;
												}
											}
											if (num46 == 59)
											{
												WorldGen.TileFrame(i + 1, j, false, false);
												if (WorldGen.mergeLeft)
												{
													num46 = num;
												}
											}
											if (num42 == 59)
											{
												num42 = num;
											}
											if (num44 == 59)
											{
												num44 = num;
											}
											if (num47 == 59)
											{
												num47 = num;
											}
											if (num49 == 59)
											{
												num49 = num;
											}
										}
										if (num43 == 57)
										{
											WorldGen.TileFrame(i, j - 1, false, false);
											if (WorldGen.mergeDown)
											{
												num43 = num;
											}
										}
										if (num48 == 57)
										{
											WorldGen.TileFrame(i, j + 1, false, false);
											if (WorldGen.mergeUp)
											{
												num48 = num;
											}
										}
										if (num45 == 57)
										{
											WorldGen.TileFrame(i - 1, j, false, false);
											if (WorldGen.mergeRight)
											{
												num45 = num;
											}
										}
										if (num46 == 57)
										{
											WorldGen.TileFrame(i + 1, j, false, false);
											if (WorldGen.mergeLeft)
											{
												num46 = num;
											}
										}
										if (num42 == 57)
										{
											num42 = num;
										}
										if (num44 == 57)
										{
											num44 = num;
										}
										if (num47 == 57)
										{
											num47 = num;
										}
										if (num49 == 57)
										{
											num49 = num;
										}
									}
								}
								else if (num == 58 || num == 76 || num == 75)
								{
									if (num43 == 57)
									{
										num43 = -2;
									}
									if (num48 == 57)
									{
										num48 = -2;
									}
									if (num45 == 57)
									{
										num45 = -2;
									}
									if (num46 == 57)
									{
										num46 = -2;
									}
									if (num42 == 57)
									{
										num42 = -2;
									}
									if (num44 == 57)
									{
										num44 = -2;
									}
									if (num47 == 57)
									{
										num47 = -2;
									}
									if (num49 == 57)
									{
										num49 = -2;
									}
								}
								else if (num == 211)
								{
									if (num43 == 60)
									{
										num43 = 59;
									}
									if (num48 == 60)
									{
										num48 = 59;
									}
									if (num45 == 60)
									{
										num45 = 59;
									}
									if (num46 == 60)
									{
										num46 = 59;
									}
									if (num43 == 59)
									{
										num43 = -2;
									}
									if (num48 == 59)
									{
										num48 = -2;
									}
									if (num45 == 59)
									{
										num45 = -2;
									}
									if (num46 == 59)
									{
										num46 = -2;
									}
									if (num42 == 59)
									{
										num42 = -2;
									}
									if (num44 == 59)
									{
										num44 = -2;
									}
									if (num47 == 59)
									{
										num47 = -2;
									}
									if (num49 == 59)
									{
										num49 = -2;
									}
								}
								else if (num == 225 || num == 226)
								{
									if (num43 == 59)
									{
										num43 = -2;
									}
									if (num48 == 59)
									{
										num48 = -2;
									}
									if (num45 == 59)
									{
										num45 = -2;
									}
									if (num46 == 59)
									{
										num46 = -2;
									}
									if (num42 == 59)
									{
										num42 = -2;
									}
									if (num44 == 59)
									{
										num44 = -2;
									}
									if (num47 == 59)
									{
										num47 = -2;
									}
									if (num49 == 59)
									{
										num49 = -2;
									}
								}
								else if (num == 59)
								{
									if ((double)j > Main.rockLayer)
									{
										if (num43 == 1)
										{
											num43 = -2;
										}
										if (num48 == 1)
										{
											num48 = -2;
										}
										if (num45 == 1)
										{
											num45 = -2;
										}
										if (num46 == 1)
										{
											num46 = -2;
										}
										if (num42 == 1)
										{
											num42 = -2;
										}
										if (num44 == 1)
										{
											num44 = -2;
										}
										if (num47 == 1)
										{
											num47 = -2;
										}
										if (num49 == 1)
										{
											num49 = -2;
										}
									}
									if (num43 == 60)
									{
										num43 = num;
									}
									if (num48 == 60)
									{
										num48 = num;
									}
									if (num45 == 60)
									{
										num45 = num;
									}
									if (num46 == 60)
									{
										num46 = num;
									}
									if (num42 == 60)
									{
										num42 = num;
									}
									if (num44 == 60)
									{
										num44 = num;
									}
									if (num47 == 60)
									{
										num47 = num;
									}
									if (num49 == 60)
									{
										num49 = num;
									}
									if (num43 == 70)
									{
										num43 = num;
									}
									if (num48 == 70)
									{
										num48 = num;
									}
									if (num45 == 70)
									{
										num45 = num;
									}
									if (num46 == 70)
									{
										num46 = num;
									}
									if (num42 == 70)
									{
										num42 = num;
									}
									if (num44 == 70)
									{
										num44 = num;
									}
									if (num47 == 70)
									{
										num47 = num;
									}
									if (num49 == 70)
									{
										num49 = num;
									}
									if (num43 == 211 || num43 == 226 || num43 == 225)
									{
										WorldGen.TileFrame(i, j - 1, false, false);
										if (WorldGen.mergeDown)
										{
											num43 = num;
										}
									}
									if (num48 == 211 || num48 == 226 || num48 == 225)
									{
										WorldGen.TileFrame(i, j + 1, false, false);
										if (WorldGen.mergeUp)
										{
											num48 = num;
										}
									}
									if (num45 == 211 || num45 == 226 || num45 == 225)
									{
										WorldGen.TileFrame(i - 1, j, false, false);
										if (WorldGen.mergeRight)
										{
											num45 = num;
										}
									}
									if (num46 == 211 || num46 == 226 || num46 == 225)
									{
										WorldGen.TileFrame(i + 1, j, false, false);
										if (WorldGen.mergeLeft)
										{
											num46 = num;
										}
									}
									if (num42 == 211 || num42 == 225 || num42 == 226)
									{
										num42 = num;
									}
									if (num44 == 211 || num44 == 225 || num44 == 226)
									{
										num44 = num;
									}
									if (num47 == 211 || num47 == 225 || num47 == 226)
									{
										num47 = num;
									}
									if (num49 == 211 || num49 == 225 || num49 == 226)
									{
										num49 = num;
									}
									if ((double)j < Main.rockLayer)
									{
										if (num43 == 0)
										{
											WorldGen.TileFrame(i, j - 1, false, false);
											if (WorldGen.mergeDown)
											{
												num43 = num;
											}
										}
										if (num48 == 0)
										{
											WorldGen.TileFrame(i, j + 1, false, false);
											if (WorldGen.mergeUp)
											{
												num48 = num;
											}
										}
										if (num45 == 0)
										{
											WorldGen.TileFrame(i - 1, j, false, false);
											if (WorldGen.mergeRight)
											{
												num45 = num;
											}
										}
										if (num46 == 0)
										{
											WorldGen.TileFrame(i + 1, j, false, false);
											if (WorldGen.mergeLeft)
											{
												num46 = num;
											}
										}
										if (num42 == 0)
										{
											num42 = num;
										}
										if (num44 == 0)
										{
											num44 = num;
										}
										if (num47 == 0)
										{
											num47 = num;
										}
										if (num49 == 0)
										{
											num49 = num;
										}
									}
									else
									{
										if (num43 == 0)
										{
											num43 = num;
										}
										if (num45 == 0)
										{
											num45 = num;
										}
										if (num46 == 0)
										{
											num46 = num;
										}
										if (num48 == 0)
										{
											num48 = num;
										}
									}
								}
								else if (num == 57)
								{
									if (num43 == 1)
									{
										num43 = -2;
									}
									if (num48 == 1)
									{
										num48 = -2;
									}
									if (num45 == 1)
									{
										num45 = -2;
									}
									if (num46 == 1)
									{
										num46 = -2;
									}
									if (num42 == 1)
									{
										num42 = -2;
									}
									if (num44 == 1)
									{
										num44 = -2;
									}
									if (num47 == 1)
									{
										num47 = -2;
									}
									if (num49 == 1)
									{
										num49 = -2;
									}
									if (num43 == 58 || num43 == 76 || num43 == 75)
									{
										WorldGen.TileFrame(i, j - 1, false, false);
										if (WorldGen.mergeDown)
										{
											num43 = num;
										}
									}
									if (num48 == 58 || num48 == 76 || num48 == 75)
									{
										WorldGen.TileFrame(i, j + 1, false, false);
										if (WorldGen.mergeUp)
										{
											num48 = num;
										}
									}
									if (num45 == 58 || num45 == 76 || num45 == 75)
									{
										WorldGen.TileFrame(i - 1, j, false, false);
										if (WorldGen.mergeRight)
										{
											num45 = num;
										}
									}
									if (num46 == 58 || num46 == 76 || num46 == 75)
									{
										WorldGen.TileFrame(i + 1, j, false, false);
										if (WorldGen.mergeLeft)
										{
											num46 = num;
										}
									}
									if (num42 == 58 || num42 == 76 || num42 == 75)
									{
										num42 = num;
									}
									if (num44 == 58 || num44 == 76 || num44 == 75)
									{
										num44 = num;
									}
									if (num47 == 58 || num47 == 76 || num47 == 75)
									{
										num47 = num;
									}
									if (num49 == 58 || num49 == 76 || num49 == 75)
									{
										num49 = num;
									}
								}
								else if (num == 189)
								{
									if (num43 == 196)
									{
										WorldGen.TileFrame(i, j - 1, false, false);
										if (WorldGen.mergeDown)
										{
											num43 = num;
										}
									}
									if (num48 == 196)
									{
										WorldGen.TileFrame(i, j + 1, false, false);
										if (WorldGen.mergeUp)
										{
											num48 = num;
										}
									}
									if (num45 == 196)
									{
										WorldGen.TileFrame(i - 1, j, false, false);
										if (WorldGen.mergeRight)
										{
											num45 = num;
										}
									}
									if (num46 == 196)
									{
										WorldGen.TileFrame(i + 1, j, false, false);
										if (WorldGen.mergeLeft)
										{
											num46 = num;
										}
									}
									if (num42 == 196)
									{
										num42 = num;
									}
									if (num44 == 196)
									{
										num44 = num;
									}
									if (num47 == 196)
									{
										num47 = num;
									}
									if (num49 == 196)
									{
										num49 = num;
									}
								}
								else if (num == 196)
								{
									if (num43 == 189)
									{
										num43 = -2;
									}
									if (num48 == 189)
									{
										num48 = -2;
									}
									if (num45 == 189)
									{
										num45 = -2;
									}
									if (num46 == 189)
									{
										num46 = -2;
									}
									if (num42 == 189)
									{
										num42 = -2;
									}
									if (num44 == 189)
									{
										num44 = -2;
									}
									if (num47 == 189)
									{
										num47 = -2;
									}
									if (num49 == 189)
									{
										num49 = -2;
									}
								}
								else if (num == 147)
								{
									if (num43 == 0)
									{
										num43 = -2;
									}
									if (num48 == 0)
									{
										num48 = -2;
									}
									if (num45 == 0)
									{
										num45 = -2;
									}
									if (num46 == 0)
									{
										num46 = -2;
									}
									if (num42 == 0)
									{
										num42 = -2;
									}
									if (num44 == 0)
									{
										num44 = -2;
									}
									if (num47 == 0)
									{
										num47 = -2;
									}
									if (num49 == 0)
									{
										num49 = -2;
									}
									if (num43 == 161 || num43 == 163 || num43 == 164 || num43 == 200 || num43 == 224)
									{
										WorldGen.TileFrame(i, j - 1, false, false);
										if (WorldGen.mergeDown)
										{
											num43 = num;
										}
									}
									if (num48 == 161 || num48 == 163 || num48 == 164 || num48 == 200 || num48 == 224)
									{
										WorldGen.TileFrame(i, j + 1, false, false);
										if (WorldGen.mergeUp)
										{
											num48 = num;
										}
									}
									if (num45 == 161 || num45 == 163 || num45 == 164 || num45 == 200 || num45 == 224)
									{
										WorldGen.TileFrame(i - 1, j, false, false);
										if (WorldGen.mergeRight)
										{
											num45 = num;
										}
									}
									if (num46 == 161 || num46 == 163 || num46 == 164 || num46 == 200 || num46 == 224)
									{
										WorldGen.TileFrame(i + 1, j, false, false);
										if (WorldGen.mergeLeft)
										{
											num46 = num;
										}
									}
									if (num42 == 161 || num42 == 163 || num42 == 164 || num42 == 200 || num42 == 224)
									{
										num42 = num;
									}
									if (num44 == 161 || num44 == 163 || num44 == 164 || num44 == 200 || num44 == 224)
									{
										num44 = num;
									}
									if (num47 == 161 || num47 == 163 || num47 == 164 || num47 == 200 || num47 == 224)
									{
										num47 = num;
									}
									if (num49 == 161 || num49 == 163 || num49 == 164 || num49 == 200 || num49 == 224)
									{
										num49 = num;
									}
								}
								else if (num == 161 || num == 163 || num == 164 || num == 200 || num == 224)
								{
									if (num43 == 147)
									{
										num43 = -2;
									}
									if (num48 == 147)
									{
										num48 = -2;
									}
									if (num45 == 147)
									{
										num45 = -2;
									}
									if (num46 == 147)
									{
										num46 = -2;
									}
									if (num42 == 147)
									{
										num42 = -2;
									}
									if (num44 == 147)
									{
										num44 = -2;
									}
									if (num47 == 147)
									{
										num47 = -2;
									}
									if (num49 == 147)
									{
										num49 = -2;
									}
								}
								else if (num == 32)
								{
									if (num48 == 23)
									{
										num48 = num;
									}
								}
								else if (num == 69)
								{
									if (num48 == 60)
									{
										num48 = num;
									}
								}
								else if (num == 51)
								{
									if (num43 > -1 && !Main.tileNoAttach[num43])
									{
										num43 = num;
									}
									if (num48 > -1 && !Main.tileNoAttach[num48])
									{
										num48 = num;
									}
									if (num45 > -1 && !Main.tileNoAttach[num45])
									{
										num45 = num;
									}
									if (num46 > -1 && !Main.tileNoAttach[num46])
									{
										num46 = num;
									}
									if (num42 > -1 && !Main.tileNoAttach[num42])
									{
										num42 = num;
									}
									if (num44 > -1 && !Main.tileNoAttach[num44])
									{
										num44 = num;
									}
									if (num47 > -1 && !Main.tileNoAttach[num47])
									{
										num47 = num;
									}
									if (num49 > -1 && !Main.tileNoAttach[num49])
									{
										num49 = num;
									}
								}
								else if (num == 192)
								{
									if (num43 == 191)
									{
										WorldGen.TileFrame(i, j - 1, false, false);
										if (WorldGen.mergeDown)
										{
											num43 = num;
										}
									}
									if (num48 == 191)
									{
										WorldGen.TileFrame(i, j + 1, false, false);
										if (WorldGen.mergeUp)
										{
											num48 = num;
										}
									}
									if (num45 == 191)
									{
										WorldGen.TileFrame(i - 1, j, false, false);
										if (WorldGen.mergeRight)
										{
											num45 = num;
										}
									}
									if (num46 == 191)
									{
										WorldGen.TileFrame(i + 1, j, false, false);
										if (WorldGen.mergeLeft)
										{
											num46 = num;
										}
									}
									if (num42 == 191)
									{
										num42 = num;
									}
									if (num44 == 191)
									{
										num44 = num;
									}
									if (num47 == 191)
									{
										num47 = num;
									}
									if (num49 == 191)
									{
										num49 = num;
									}
								}
								else if (num == 191)
								{
									if (num43 == 192)
									{
										num43 = -2;
									}
									if (num48 == 192)
									{
										num48 = -2;
									}
									if (num45 == 192)
									{
										num45 = -2;
									}
									if (num46 == 192)
									{
										num46 = -2;
									}
									if (num42 == 192)
									{
										num42 = -2;
									}
									if (num44 == 192)
									{
										num44 = -2;
									}
									if (num47 == 192)
									{
										num47 = -2;
									}
									if (num49 == 192)
									{
										num49 = -2;
									}
									if (num43 == 0)
									{
										num43 = num;
									}
									if (num48 == 0)
									{
										num48 = num;
									}
									if (num45 == 0)
									{
										num45 = num;
									}
									if (num46 == 0)
									{
										num46 = num;
									}
									if (num42 == 0)
									{
										num42 = num;
									}
									if (num44 == 0)
									{
										num44 = num;
									}
									if (num47 == 0)
									{
										num47 = num;
									}
									if (num49 == 0)
									{
										num49 = num;
									}
								}
								else if (num == 60)
								{
									if (num43 == 211)
									{
										num43 = 59;
									}
									if (num48 == 211)
									{
										num48 = 59;
									}
									if (num45 == 211)
									{
										num45 = 59;
									}
									if (num46 == 211)
									{
										num46 = 59;
									}
								}
							}
							if (Main.tileStone[num] || num == 1)
							{
								if (num43 > -1 && Main.tileMoss[num43])
								{
									num43 = num;
								}
								if (num48 > -1 && Main.tileMoss[num48])
								{
									num48 = num;
								}
								if (num45 > -1 && Main.tileMoss[num45])
								{
									num45 = num;
								}
								if (num46 > -1 && Main.tileMoss[num46])
								{
									num46 = num;
								}
								if (num42 > -1 && Main.tileMoss[num42])
								{
									num42 = num;
								}
								if (num44 > -1 && Main.tileMoss[num44])
								{
									num44 = num;
								}
								if (num47 > -1 && Main.tileMoss[num47])
								{
									num47 = num;
								}
								if (num49 > -1 && Main.tileMoss[num49])
								{
									num49 = num;
								}
							}
							bool flag3 = false;
							if (num43 == -2 && tile.color() != tile2.color())
							{
								num43 = num;
								WorldGen.mergeUp = true;
							}
							if (num48 == -2 && tile.color() != tile3.color())
							{
								num48 = num;
								WorldGen.mergeDown = true;
							}
							if (num45 == -2 && tile.color() != tile4.color())
							{
								num45 = num;
								WorldGen.mergeLeft = true;
							}
							if (num46 == -2 && tile.color() != tile5.color())
							{
								num46 = num;
								WorldGen.mergeRight = true;
							}
							if (num == 2 || num == 23 || num == 60 || num == 70 || num == 109 || num == 199 || Main.tileMoss[num])
							{
								flag3 = true;
								if (num43 > -1 && !Main.tileSolid[num43] && num43 != num)
								{
									num43 = -1;
								}
								if (num48 > -1 && !Main.tileSolid[num48] && num48 != num)
								{
									num48 = -1;
								}
								if (num45 > -1 && !Main.tileSolid[num45] && num45 != num)
								{
									num45 = -1;
								}
								if (num46 > -1 && !Main.tileSolid[num46] && num46 != num)
								{
									num46 = -1;
								}
								if (num42 > -1 && !Main.tileSolid[num42] && num42 != num)
								{
									num42 = -1;
								}
								if (num44 > -1 && !Main.tileSolid[num44] && num44 != num)
								{
									num44 = -1;
								}
								if (num47 > -1 && !Main.tileSolid[num47] && num47 != num)
								{
									num47 = -1;
								}
								if (num49 > -1 && !Main.tileSolid[num49] && num49 != num)
								{
									num49 = -1;
								}
								int num53 = 0;
								if (num == 60 || num == 70)
								{
									num53 = 59;
								}
								else if (Main.tileMoss[num])
								{
									num53 = 1;
								}
								else if (num == 2)
								{
									if (num43 == 23)
									{
										num43 = num53;
									}
									if (num48 == 23)
									{
										num48 = num53;
									}
									if (num45 == 23)
									{
										num45 = num53;
									}
									if (num46 == 23)
									{
										num46 = num53;
									}
									if (num42 == 23)
									{
										num42 = num53;
									}
									if (num44 == 23)
									{
										num44 = num53;
									}
									if (num47 == 23)
									{
										num47 = num53;
									}
									if (num49 == 23)
									{
										num49 = num53;
									}
								}
								else if (num == 23)
								{
									if (num43 == 2)
									{
										num43 = num53;
									}
									if (num48 == 2)
									{
										num48 = num53;
									}
									if (num45 == 2)
									{
										num45 = num53;
									}
									if (num46 == 2)
									{
										num46 = num53;
									}
									if (num42 == 2)
									{
										num42 = num53;
									}
									if (num44 == 2)
									{
										num44 = num53;
									}
									if (num47 == 2)
									{
										num47 = num53;
									}
									if (num49 == 2)
									{
										num49 = num53;
									}
								}
								if (num43 != num && num43 != num53 && (num48 == num || num48 == num53))
								{
									if (num45 == num53 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 198;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 198;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 198;
										}
									}
									else if (num45 == num && num46 == num53)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 198;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 198;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 198;
										}
									}
								}
								else if (num48 != num && num48 != num53 && (num43 == num || num43 == num53))
								{
									if (num45 == num53 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 216;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 216;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 216;
										}
									}
									else if (num45 == num && num46 == num53)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 216;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 216;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 216;
										}
									}
								}
								else if (num45 != num && num45 != num53 && (num46 == num || num46 == num53))
								{
									if (num43 == num53 && num48 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 72;
											rectangle.Y = 144;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 162;
										}
										else
										{
											rectangle.X = 72;
											rectangle.Y = 180;
										}
									}
									else if (num48 == num && num43 == num53)
									{
										if (num50 == 0)
										{
											rectangle.X = 72;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 72;
											rectangle.Y = 126;
										}
									}
								}
								else if (num46 != num && num46 != num53 && (num45 == num || num45 == num53))
								{
									if (num43 == num53 && num48 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 90;
											rectangle.Y = 144;
										}
										else if (num50 == 1)
										{
											rectangle.X = 90;
											rectangle.Y = 162;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 180;
										}
									}
									else if (num48 == num && num46 == num43)
									{
										if (num50 == 0)
										{
											rectangle.X = 90;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 90;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 126;
										}
									}
								}
								else if (num43 == num && num48 == num && num45 == num && num46 == num)
								{
									if (num42 != num && num44 != num && num47 != num && num49 != num)
									{
										if (num49 == num53)
										{
											if (num50 == 0)
											{
												rectangle.X = 108;
												rectangle.Y = 324;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 324;
											}
											else
											{
												rectangle.X = 144;
												rectangle.Y = 324;
											}
										}
										else if (num44 == num53)
										{
											if (num50 == 0)
											{
												rectangle.X = 108;
												rectangle.Y = 342;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 342;
											}
											else
											{
												rectangle.X = 144;
												rectangle.Y = 342;
											}
										}
										else if (num47 == num53)
										{
											if (num50 == 0)
											{
												rectangle.X = 108;
												rectangle.Y = 360;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 360;
											}
											else
											{
												rectangle.X = 144;
												rectangle.Y = 360;
											}
										}
										else if (num42 == num53)
										{
											if (num50 == 0)
											{
												rectangle.X = 108;
												rectangle.Y = 378;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 378;
											}
											else
											{
												rectangle.X = 144;
												rectangle.Y = 378;
											}
										}
										else if (num50 == 0)
										{
											rectangle.X = 144;
											rectangle.Y = 234;
										}
										else if (num50 == 1)
										{
											rectangle.X = 198;
											rectangle.Y = 234;
										}
										else
										{
											rectangle.X = 252;
											rectangle.Y = 234;
										}
									}
									else if (num42 != num && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 306;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 306;
										}
										else
										{
											rectangle.X = 72;
											rectangle.Y = 306;
										}
									}
									else if (num44 != num && num47 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 90;
											rectangle.Y = 306;
										}
										else if (num50 == 1)
										{
											rectangle.X = 108;
											rectangle.Y = 306;
										}
										else
										{
											rectangle.X = 126;
											rectangle.Y = 306;
										}
									}
									else if (num42 != num && num44 == num && num47 == num && num49 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 180;
										}
									}
									else if (num42 == num && num44 != num && num47 == num && num49 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 180;
										}
									}
									else if (num42 == num && num44 == num && num47 != num && num49 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 162;
										}
									}
									else if (num42 == num && num44 == num && num47 == num && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 162;
										}
									}
								}
								else if (num43 == num && num48 == num53 && num45 == num && num46 == num && num42 == -1 && num44 == -1)
								{
									if (num50 == 0)
									{
										rectangle.X = 108;
										rectangle.Y = 18;
									}
									else if (num50 == 1)
									{
										rectangle.X = 126;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 144;
										rectangle.Y = 18;
									}
								}
								else if (num43 == num53 && num48 == num && num45 == num && num46 == num && num47 == -1 && num49 == -1)
								{
									if (num50 == 0)
									{
										rectangle.X = 108;
										rectangle.Y = 36;
									}
									else if (num50 == 1)
									{
										rectangle.X = 126;
										rectangle.Y = 36;
									}
									else
									{
										rectangle.X = 144;
										rectangle.Y = 36;
									}
								}
								else if (num43 == num && num48 == num && num45 == num53 && num46 == num && num44 == -1 && num49 == -1)
								{
									if (num50 == 0)
									{
										rectangle.X = 198;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 198;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 198;
										rectangle.Y = 36;
									}
								}
								else if (num43 == num && num48 == num && num45 == num && num46 == num53 && num42 == -1 && num47 == -1)
								{
									if (num50 == 0)
									{
										rectangle.X = 180;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 180;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 180;
										rectangle.Y = 36;
									}
								}
								else if (num43 == num && num48 == num53 && num45 == num && num46 == num)
								{
									if (num44 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 180;
										}
									}
									else if (num42 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 180;
										}
									}
								}
								else if (num43 == num53 && num48 == num && num45 == num && num46 == num)
								{
									if (num49 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 162;
										}
									}
									else if (num47 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 162;
										}
									}
								}
								else if (num43 == num && num48 == num && num45 == num && num46 == num53)
								{
									if (num42 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 162;
										}
									}
									else if (num47 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 180;
										}
									}
								}
								else if (num43 == num && num48 == num && num45 == num53 && num46 == num)
								{
									if (num44 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 162;
										}
									}
									else if (num49 != -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 180;
										}
									}
								}
								else if ((num43 == num53 && num48 == num && num45 == num && num46 == num) || (num43 == num && num48 == num53 && num45 == num && num46 == num) || (num43 == num && num48 == num && num45 == num53 && num46 == num) || (num43 == num && num48 == num && num45 == num && num46 == num53))
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 18;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 54;
										rectangle.Y = 18;
									}
								}
								if ((num43 == num || num43 == num53) && (num48 == num || num48 == num53) && (num45 == num || num45 == num53) && (num46 == num || num46 == num53))
								{
									if (num42 != num && num42 != num53 && (num44 == num || num44 == num53) && (num47 == num || num47 == num53) && (num49 == num || num49 == num53))
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 180;
										}
									}
									else if (num44 != num && num44 != num53 && (num42 == num || num42 == num53) && (num47 == num || num47 == num53) && (num49 == num || num49 == num53))
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 180;
										}
									}
									else if (num47 != num && num47 != num53 && (num42 == num || num42 == num53) && (num44 == num || num44 == num53) && (num49 == num || num49 == num53))
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 162;
										}
									}
									else if (num49 != num && num49 != num53 && (num42 == num || num42 == num53) && (num47 == num || num47 == num53) && (num44 == num || num44 == num53))
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 162;
										}
									}
								}
								if (num43 != num53 && num43 != num && num48 == num && num45 != num53 && num45 != num && num46 == num && num49 != num53 && num49 != num)
								{
									if (num50 == 0)
									{
										rectangle.X = 90;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 108;
										rectangle.Y = 270;
									}
									else
									{
										rectangle.X = 126;
										rectangle.Y = 270;
									}
								}
								else if (num43 != num53 && num43 != num && num48 == num && num45 == num && num46 != num53 && num46 != num && num47 != num53 && num47 != num)
								{
									if (num50 == 0)
									{
										rectangle.X = 144;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 162;
										rectangle.Y = 270;
									}
									else
									{
										rectangle.X = 180;
										rectangle.Y = 270;
									}
								}
								else if (num48 != num53 && num48 != num && num43 == num && num45 != num53 && num45 != num && num46 == num && num44 != num53 && num44 != num)
								{
									if (num50 == 0)
									{
										rectangle.X = 90;
										rectangle.Y = 288;
									}
									else if (num50 == 1)
									{
										rectangle.X = 108;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 126;
										rectangle.Y = 288;
									}
								}
								else if (num48 != num53 && num48 != num && num43 == num && num45 == num && num46 != num53 && num46 != num && num42 != num53 && num42 != num)
								{
									if (num50 == 0)
									{
										rectangle.X = 144;
										rectangle.Y = 288;
									}
									else if (num50 == 1)
									{
										rectangle.X = 162;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 180;
										rectangle.Y = 288;
									}
								}
								else if (num43 != num && num43 != num53 && num48 == num && num45 == num && num46 == num && num47 != num && num47 != num53 && num49 != num && num49 != num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 144;
										rectangle.Y = 216;
									}
									else if (num50 == 1)
									{
										rectangle.X = 198;
										rectangle.Y = 216;
									}
									else
									{
										rectangle.X = 252;
										rectangle.Y = 216;
									}
								}
								else if (num48 != num && num48 != num53 && num43 == num && num45 == num && num46 == num && num42 != num && num42 != num53 && num44 != num && num44 != num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 144;
										rectangle.Y = 252;
									}
									else if (num50 == 1)
									{
										rectangle.X = 198;
										rectangle.Y = 252;
									}
									else
									{
										rectangle.X = 252;
										rectangle.Y = 252;
									}
								}
								else if (num45 != num && num45 != num53 && num48 == num && num43 == num && num46 == num && num44 != num && num44 != num53 && num49 != num && num49 != num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 126;
										rectangle.Y = 234;
									}
									else if (num50 == 1)
									{
										rectangle.X = 180;
										rectangle.Y = 234;
									}
									else
									{
										rectangle.X = 234;
										rectangle.Y = 234;
									}
								}
								else if (num46 != num && num46 != num53 && num48 == num && num43 == num && num45 == num && num42 != num && num42 != num53 && num47 != num && num47 != num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 162;
										rectangle.Y = 234;
									}
									else if (num50 == 1)
									{
										rectangle.X = 216;
										rectangle.Y = 234;
									}
									else
									{
										rectangle.X = 270;
										rectangle.Y = 234;
									}
								}
								else if (num43 != num53 && num43 != num && (num48 == num53 || num48 == num) && num45 == num53 && num46 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 36;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 54;
										rectangle.Y = 270;
									}
									else
									{
										rectangle.X = 72;
										rectangle.Y = 270;
									}
								}
								else if (num48 != num53 && num48 != num && (num43 == num53 || num43 == num) && num45 == num53 && num46 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 36;
										rectangle.Y = 288;
									}
									else if (num50 == 1)
									{
										rectangle.X = 54;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 72;
										rectangle.Y = 288;
									}
								}
								else if (num45 != num53 && num45 != num && (num46 == num53 || num46 == num) && num43 == num53 && num48 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 0;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 0;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 0;
										rectangle.Y = 306;
									}
								}
								else if (num46 != num53 && num46 != num && (num45 == num53 || num45 == num) && num43 == num53 && num48 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 18;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 18;
										rectangle.Y = 306;
									}
								}
								else if (num43 == num && num48 == num53 && num45 == num53 && num46 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 198;
										rectangle.Y = 288;
									}
									else if (num50 == 1)
									{
										rectangle.X = 216;
										rectangle.Y = 288;
									}
									else
									{
										rectangle.X = 234;
										rectangle.Y = 288;
									}
								}
								else if (num43 == num53 && num48 == num && num45 == num53 && num46 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 198;
										rectangle.Y = 270;
									}
									else if (num50 == 1)
									{
										rectangle.X = 216;
										rectangle.Y = 270;
									}
									else
									{
										rectangle.X = 234;
										rectangle.Y = 270;
									}
								}
								else if (num43 == num53 && num48 == num53 && num45 == num && num46 == num53)
								{
									if (num50 == 0)
									{
										rectangle.X = 198;
										rectangle.Y = 306;
									}
									else if (num50 == 1)
									{
										rectangle.X = 216;
										rectangle.Y = 306;
									}
									else
									{
										rectangle.X = 234;
										rectangle.Y = 306;
									}
								}
								else if (num43 == num53 && num48 == num53 && num45 == num53 && num46 == num)
								{
									if (num50 == 0)
									{
										rectangle.X = 144;
										rectangle.Y = 306;
									}
									else if (num50 == 1)
									{
										rectangle.X = 162;
										rectangle.Y = 306;
									}
									else
									{
										rectangle.X = 180;
										rectangle.Y = 306;
									}
								}
								if (num43 != num && num43 != num53 && num48 == num && num45 == num && num46 == num)
								{
									if ((num47 == num53 || num47 == num) && num49 != num53 && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 324;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 324;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 324;
										}
									}
									else if ((num49 == num53 || num49 == num) && num47 != num53 && num47 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 324;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 324;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 324;
										}
									}
								}
								else if (num48 != num && num48 != num53 && num43 == num && num45 == num && num46 == num)
								{
									if ((num42 == num53 || num42 == num) && num44 != num53 && num44 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 342;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 342;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 342;
										}
									}
									else if ((num44 == num53 || num44 == num) && num42 != num53 && num42 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 342;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 342;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 342;
										}
									}
								}
								else if (num45 != num && num45 != num53 && num43 == num && num48 == num && num46 == num)
								{
									if ((num44 == num53 || num44 == num) && num49 != num53 && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 360;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 360;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 360;
										}
									}
									else if ((num49 == num53 || num49 == num) && num44 != num53 && num44 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 360;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 360;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 360;
										}
									}
								}
								else if (num46 != num && num46 != num53 && num43 == num && num48 == num && num45 == num)
								{
									if ((num42 == num53 || num42 == num) && num47 != num53 && num47 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 378;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 378;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 378;
										}
									}
									else if ((num47 == num53 || num47 == num) && num42 != num53 && num42 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 378;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 378;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 378;
										}
									}
								}
								if ((num43 == num || num43 == num53) && (num48 == num || num48 == num53) && (num45 == num || num45 == num53) && (num46 == num || num46 == num53) && num42 != -1 && num44 != -1 && num47 != -1 && num49 != -1)
								{
									if ((i + j) % 2 == 1)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 198;
										}
										else if (num50 == 1)
										{
											rectangle.X = 126;
											rectangle.Y = 198;
										}
										else
										{
											rectangle.X = 144;
											rectangle.Y = 198;
										}
									}
									else if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 18;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 54;
										rectangle.Y = 18;
									}
								}
								if (num43 == num53)
								{
									num43 = -2;
								}
								if (num48 == num53)
								{
									num48 = -2;
								}
								if (num45 == num53)
								{
									num45 = -2;
								}
								if (num46 == num53)
								{
									num46 = -2;
								}
								if (num42 == num53)
								{
									num42 = -2;
								}
								if (num44 == num53)
								{
									num44 = -2;
								}
								if (num47 == num53)
								{
									num47 = -2;
								}
								if (num49 == num53)
								{
									num49 = -2;
								}
							}
							if (rectangle.X == -1 && rectangle.Y == -1 && (Main.tileMergeDirt[num] || num == 0 || num == 2 || num == 57 || num == 58 || num == 59 || num == 60 || num == 70 || num == 109 || num == 76 || num == 75 || num == 147 || num == 161 || num == 163 || num == 164 || num == 189 || num == 196 || num == 191 || num == 199 || num == 200 || num == 211 || num == 224 || num == 226 || num == 225))
							{
								if (!flag3)
								{
									flag3 = true;
									if (num43 > -1 && !Main.tileSolid[num43] && num43 != num)
									{
										num43 = -1;
									}
									if (num48 > -1 && !Main.tileSolid[num48] && num48 != num)
									{
										num48 = -1;
									}
									if (num45 > -1 && !Main.tileSolid[num45] && num45 != num)
									{
										num45 = -1;
									}
									if (num46 > -1 && !Main.tileSolid[num46] && num46 != num)
									{
										num46 = -1;
									}
									if (num42 > -1 && !Main.tileSolid[num42] && num42 != num)
									{
										num42 = -1;
									}
									if (num44 > -1 && !Main.tileSolid[num44] && num44 != num)
									{
										num44 = -1;
									}
									if (num47 > -1 && !Main.tileSolid[num47] && num47 != num)
									{
										num47 = -1;
									}
									if (num49 > -1 && !Main.tileSolid[num49] && num49 != num)
									{
										num49 = -1;
									}
								}
								if (num43 > -1 && num43 != num)
								{
									num43 = -1;
								}
								if (num48 > -1 && num48 != num)
								{
									num48 = -1;
								}
								if (num45 > -1 && num45 != num)
								{
									num45 = -1;
								}
								if (num46 > -1 && num46 != num)
								{
									num46 = -1;
								}
								if (num43 != -1 && num48 != -1 && num45 != -1 && num46 != -1)
								{
									if (num43 == -2 && num48 == num && num45 == num && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 144;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 162;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 180;
											rectangle.Y = 108;
										}
										WorldGen.mergeUp = true;
									}
									else if (num43 == num && num48 == -2 && num45 == num && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 144;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 162;
											rectangle.Y = 90;
										}
										else
										{
											rectangle.X = 180;
											rectangle.Y = 90;
										}
										WorldGen.mergeDown = true;
									}
									else if (num43 == num && num48 == num && num45 == -2 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 162;
											rectangle.Y = 126;
										}
										else if (num50 == 1)
										{
											rectangle.X = 162;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 162;
											rectangle.Y = 162;
										}
										WorldGen.mergeLeft = true;
									}
									else if (num43 == num && num48 == num && num45 == num && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 144;
											rectangle.Y = 126;
										}
										else if (num50 == 1)
										{
											rectangle.X = 144;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 144;
											rectangle.Y = 162;
										}
										WorldGen.mergeRight = true;
									}
									else if (num43 == -2 && num48 == num && num45 == -2 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 162;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeLeft = true;
									}
									else if (num43 == -2 && num48 == num && num45 == num && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 126;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 162;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == num && num48 == -2 && num45 == -2 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 36;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 36;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 180;
										}
										WorldGen.mergeDown = true;
										WorldGen.mergeLeft = true;
									}
									else if (num43 == num && num48 == -2 && num45 == num && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 108;
										}
										else if (num50 == 1)
										{
											rectangle.X = 54;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 54;
											rectangle.Y = 180;
										}
										WorldGen.mergeDown = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == num && num48 == num && num45 == -2 && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 180;
											rectangle.Y = 126;
										}
										else if (num50 == 1)
										{
											rectangle.X = 180;
											rectangle.Y = 144;
										}
										else
										{
											rectangle.X = 180;
											rectangle.Y = 162;
										}
										WorldGen.mergeLeft = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == -2 && num48 == -2 && num45 == num && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 144;
											rectangle.Y = 180;
										}
										else if (num50 == 1)
										{
											rectangle.X = 162;
											rectangle.Y = 180;
										}
										else
										{
											rectangle.X = 180;
											rectangle.Y = 180;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeDown = true;
									}
									else if (num43 == -2 && num48 == num && num45 == -2 && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 198;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 198;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 198;
											rectangle.Y = 126;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeLeft = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == num && num48 == -2 && num45 == -2 && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 198;
											rectangle.Y = 144;
										}
										else if (num50 == 1)
										{
											rectangle.X = 198;
											rectangle.Y = 162;
										}
										else
										{
											rectangle.X = 198;
											rectangle.Y = 180;
										}
										WorldGen.mergeDown = true;
										WorldGen.mergeLeft = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == -2 && num48 == -2 && num45 == num && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 216;
											rectangle.Y = 144;
										}
										else if (num50 == 1)
										{
											rectangle.X = 216;
											rectangle.Y = 162;
										}
										else
										{
											rectangle.X = 216;
											rectangle.Y = 180;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeDown = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == -2 && num48 == -2 && num45 == -2 && num46 == num)
									{
										if (num50 == 0)
										{
											rectangle.X = 216;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 216;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 216;
											rectangle.Y = 126;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeDown = true;
										WorldGen.mergeLeft = true;
									}
									else if (num43 == -2 && num48 == -2 && num45 == -2 && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 198;
										}
										else if (num50 == 1)
										{
											rectangle.X = 126;
											rectangle.Y = 198;
										}
										else
										{
											rectangle.X = 144;
											rectangle.Y = 198;
										}
										WorldGen.mergeUp = true;
										WorldGen.mergeDown = true;
										WorldGen.mergeLeft = true;
										WorldGen.mergeRight = true;
									}
									else if (num43 == num && num48 == num && num45 == num && num46 == num)
									{
										if (num42 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 18;
												rectangle.Y = 108;
											}
											else if (num50 == 1)
											{
												rectangle.X = 18;
												rectangle.Y = 144;
											}
											else
											{
												rectangle.X = 18;
												rectangle.Y = 180;
											}
										}
										if (num44 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 0;
												rectangle.Y = 108;
											}
											else if (num50 == 1)
											{
												rectangle.X = 0;
												rectangle.Y = 144;
											}
											else
											{
												rectangle.X = 0;
												rectangle.Y = 180;
											}
										}
										if (num47 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 18;
												rectangle.Y = 90;
											}
											else if (num50 == 1)
											{
												rectangle.X = 18;
												rectangle.Y = 126;
											}
											else
											{
												rectangle.X = 18;
												rectangle.Y = 162;
											}
										}
										if (num49 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 0;
												rectangle.Y = 90;
											}
											else if (num50 == 1)
											{
												rectangle.X = 0;
												rectangle.Y = 126;
											}
											else
											{
												rectangle.X = 0;
												rectangle.Y = 162;
											}
										}
									}
								}
								else
								{
									if (num != 2 && num != 23 && num != 60 && num != 70 && num != 109 && num != 199)
									{
										if (num43 == -1 && num48 == -2 && num45 == num && num46 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 234;
												rectangle.Y = 0;
											}
											else if (num50 == 1)
											{
												rectangle.X = 252;
												rectangle.Y = 0;
											}
											else
											{
												rectangle.X = 270;
												rectangle.Y = 0;
											}
											WorldGen.mergeDown = true;
										}
										else if (num43 == -2 && num48 == -1 && num45 == num && num46 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 234;
												rectangle.Y = 18;
											}
											else if (num50 == 1)
											{
												rectangle.X = 252;
												rectangle.Y = 18;
											}
											else
											{
												rectangle.X = 270;
												rectangle.Y = 18;
											}
											WorldGen.mergeUp = true;
										}
										else if (num43 == num && num48 == num && num45 == -1 && num46 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 234;
												rectangle.Y = 36;
											}
											else if (num50 == 1)
											{
												rectangle.X = 252;
												rectangle.Y = 36;
											}
											else
											{
												rectangle.X = 270;
												rectangle.Y = 36;
											}
											WorldGen.mergeRight = true;
										}
										else if (num43 == num && num48 == num && num45 == -2 && num46 == -1)
										{
											if (num50 == 0)
											{
												rectangle.X = 234;
												rectangle.Y = 54;
											}
											else if (num50 == 1)
											{
												rectangle.X = 252;
												rectangle.Y = 54;
											}
											else
											{
												rectangle.X = 270;
												rectangle.Y = 54;
											}
											WorldGen.mergeLeft = true;
										}
									}
									if (num43 != -1 && num48 != -1 && num45 == -1 && num46 == num)
									{
										if (num43 == -2 && num48 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 72;
												rectangle.Y = 144;
											}
											else if (num50 == 1)
											{
												rectangle.X = 72;
												rectangle.Y = 162;
											}
											else
											{
												rectangle.X = 72;
												rectangle.Y = 180;
											}
											WorldGen.mergeUp = true;
										}
										else if (num48 == -2 && num43 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 72;
												rectangle.Y = 90;
											}
											else if (num50 == 1)
											{
												rectangle.X = 72;
												rectangle.Y = 108;
											}
											else
											{
												rectangle.X = 72;
												rectangle.Y = 126;
											}
											WorldGen.mergeDown = true;
										}
									}
									else if (num43 != -1 && num48 != -1 && num45 == num && num46 == -1)
									{
										if (num43 == -2 && num48 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 90;
												rectangle.Y = 144;
											}
											else if (num50 == 1)
											{
												rectangle.X = 90;
												rectangle.Y = 162;
											}
											else
											{
												rectangle.X = 90;
												rectangle.Y = 180;
											}
											WorldGen.mergeUp = true;
										}
										else if (num48 == -2 && num43 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 90;
												rectangle.Y = 90;
											}
											else if (num50 == 1)
											{
												rectangle.X = 90;
												rectangle.Y = 108;
											}
											else
											{
												rectangle.X = 90;
												rectangle.Y = 126;
											}
											WorldGen.mergeDown = true;
										}
									}
									else if (num43 == -1 && num48 == num && num45 != -1 && num46 != -1)
									{
										if (num45 == -2 && num46 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 0;
												rectangle.Y = 198;
											}
											else if (num50 == 1)
											{
												rectangle.X = 18;
												rectangle.Y = 198;
											}
											else
											{
												rectangle.X = 36;
												rectangle.Y = 198;
											}
											WorldGen.mergeLeft = true;
										}
										else if (num46 == -2 && num45 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 54;
												rectangle.Y = 198;
											}
											else if (num50 == 1)
											{
												rectangle.X = 72;
												rectangle.Y = 198;
											}
											else
											{
												rectangle.X = 90;
												rectangle.Y = 198;
											}
											WorldGen.mergeRight = true;
										}
									}
									else if (num43 == num && num48 == -1 && num45 != -1 && num46 != -1)
									{
										if (num45 == -2 && num46 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 0;
												rectangle.Y = 216;
											}
											else if (num50 == 1)
											{
												rectangle.X = 18;
												rectangle.Y = 216;
											}
											else
											{
												rectangle.X = 36;
												rectangle.Y = 216;
											}
											WorldGen.mergeLeft = true;
										}
										else if (num46 == -2 && num45 == num)
										{
											if (num50 == 0)
											{
												rectangle.X = 54;
												rectangle.Y = 216;
											}
											else if (num50 == 1)
											{
												rectangle.X = 72;
												rectangle.Y = 216;
											}
											else
											{
												rectangle.X = 90;
												rectangle.Y = 216;
											}
											WorldGen.mergeRight = true;
										}
									}
									else if (num43 != -1 && num48 != -1 && num45 == -1 && num46 == -1)
									{
										if (num43 == -2 && num48 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 108;
												rectangle.Y = 216;
											}
											else if (num50 == 1)
											{
												rectangle.X = 108;
												rectangle.Y = 234;
											}
											else
											{
												rectangle.X = 108;
												rectangle.Y = 252;
											}
											WorldGen.mergeUp = true;
											WorldGen.mergeDown = true;
										}
										else if (num43 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 126;
												rectangle.Y = 144;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 162;
											}
											else
											{
												rectangle.X = 126;
												rectangle.Y = 180;
											}
											WorldGen.mergeUp = true;
										}
										else if (num48 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 126;
												rectangle.Y = 90;
											}
											else if (num50 == 1)
											{
												rectangle.X = 126;
												rectangle.Y = 108;
											}
											else
											{
												rectangle.X = 126;
												rectangle.Y = 126;
											}
											WorldGen.mergeDown = true;
										}
									}
									else if (num43 == -1 && num48 == -1 && num45 != -1 && num46 != -1)
									{
										if (num45 == -2 && num46 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 162;
												rectangle.Y = 198;
											}
											else if (num50 == 1)
											{
												rectangle.X = 180;
												rectangle.Y = 198;
											}
											else
											{
												rectangle.X = 198;
												rectangle.Y = 198;
											}
											WorldGen.mergeLeft = true;
											WorldGen.mergeRight = true;
										}
										else if (num45 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 0;
												rectangle.Y = 252;
											}
											else if (num50 == 1)
											{
												rectangle.X = 18;
												rectangle.Y = 252;
											}
											else
											{
												rectangle.X = 36;
												rectangle.Y = 252;
											}
											WorldGen.mergeLeft = true;
										}
										else if (num46 == -2)
										{
											if (num50 == 0)
											{
												rectangle.X = 54;
												rectangle.Y = 252;
											}
											else if (num50 == 1)
											{
												rectangle.X = 72;
												rectangle.Y = 252;
											}
											else
											{
												rectangle.X = 90;
												rectangle.Y = 252;
											}
											WorldGen.mergeRight = true;
										}
									}
									else if (num43 == -2 && num48 == -1 && num45 == -1 && num46 == -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 144;
										}
										else if (num50 == 1)
										{
											rectangle.X = 108;
											rectangle.Y = 162;
										}
										else
										{
											rectangle.X = 108;
											rectangle.Y = 180;
										}
										WorldGen.mergeUp = true;
									}
									else if (num43 == -1 && num48 == -2 && num45 == -1 && num46 == -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 90;
										}
										else if (num50 == 1)
										{
											rectangle.X = 108;
											rectangle.Y = 108;
										}
										else
										{
											rectangle.X = 108;
											rectangle.Y = 126;
										}
										WorldGen.mergeDown = true;
									}
									else if (num43 == -1 && num48 == -1 && num45 == -2 && num46 == -1)
									{
										if (num50 == 0)
										{
											rectangle.X = 0;
											rectangle.Y = 234;
										}
										else if (num50 == 1)
										{
											rectangle.X = 18;
											rectangle.Y = 234;
										}
										else
										{
											rectangle.X = 36;
											rectangle.Y = 234;
										}
										WorldGen.mergeLeft = true;
									}
									else if (num43 == -1 && num48 == -1 && num45 == -1 && num46 == -2)
									{
										if (num50 == 0)
										{
											rectangle.X = 54;
											rectangle.Y = 234;
										}
										else if (num50 == 1)
										{
											rectangle.X = 72;
											rectangle.Y = 234;
										}
										else
										{
											rectangle.X = 90;
											rectangle.Y = 234;
										}
										WorldGen.mergeRight = true;
									}
								}
							}
							if (rectangle.X < 0 || rectangle.Y < 0)
							{
								if (!flag3)
								{
									if (num43 > -1 && !Main.tileSolid[num43] && num43 != num)
									{
										num43 = -1;
									}
									if (num48 > -1 && !Main.tileSolid[num48] && num48 != num)
									{
										num48 = -1;
									}
									if (num45 > -1 && !Main.tileSolid[num45] && num45 != num)
									{
										num45 = -1;
									}
									if (num46 > -1 && !Main.tileSolid[num46] && num46 != num)
									{
										num46 = -1;
									}
									if (num42 > -1 && !Main.tileSolid[num42] && num42 != num)
									{
										num42 = -1;
									}
									if (num44 > -1 && !Main.tileSolid[num44] && num44 != num)
									{
										num44 = -1;
									}
									if (num47 > -1 && !Main.tileSolid[num47] && num47 != num)
									{
										num47 = -1;
									}
									if (num49 > -1 && !Main.tileSolid[num49] && num49 != num)
									{
										num49 = -1;
									}
								}
								if (num == 2 || num == 23 || num == 60 || num == 70 || num == 109 || num == 199 || Main.tileMoss[num])
								{
									if (num43 == -2)
									{
										num43 = num;
									}
									if (num48 == -2)
									{
										num48 = num;
									}
									if (num45 == -2)
									{
										num45 = num;
									}
									if (num46 == -2)
									{
										num46 = num;
									}
									if (num42 == -2)
									{
										num42 = num;
									}
									if (num44 == -2)
									{
										num44 = num;
									}
									if (num47 == -2)
									{
										num47 = num;
									}
									if (num49 == -2)
									{
										num49 = num;
									}
								}
								if (num43 == num && num48 == num && (num45 == num & num46 == num))
								{
									if (num42 != num && num44 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 18;
										}
										else if (num50 == 1)
										{
											rectangle.X = 126;
											rectangle.Y = 18;
										}
										else
										{
											rectangle.X = 144;
											rectangle.Y = 18;
										}
									}
									else if (num47 != num && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 108;
											rectangle.Y = 36;
										}
										else if (num50 == 1)
										{
											rectangle.X = 126;
											rectangle.Y = 36;
										}
										else
										{
											rectangle.X = 144;
											rectangle.Y = 36;
										}
									}
									else if (num42 != num && num47 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 180;
											rectangle.Y = 0;
										}
										else if (num50 == 1)
										{
											rectangle.X = 180;
											rectangle.Y = 18;
										}
										else
										{
											rectangle.X = 180;
											rectangle.Y = 36;
										}
									}
									else if (num44 != num && num49 != num)
									{
										if (num50 == 0)
										{
											rectangle.X = 198;
											rectangle.Y = 0;
										}
										else if (num50 == 1)
										{
											rectangle.X = 198;
											rectangle.Y = 18;
										}
										else
										{
											rectangle.X = 198;
											rectangle.Y = 36;
										}
									}
									else if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 18;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 54;
										rectangle.Y = 18;
									}
								}
								else if (num43 != num && num48 == num && (num45 == num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 0;
									}
									else
									{
										rectangle.X = 54;
										rectangle.Y = 0;
									}
								}
								else if (num43 == num && num48 != num && (num45 == num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 36;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 36;
									}
									else
									{
										rectangle.X = 54;
										rectangle.Y = 36;
									}
								}
								else if (num43 == num && num48 == num && (num45 != num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 0;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 0;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 0;
										rectangle.Y = 36;
									}
								}
								else if (num43 == num && num48 == num && (num45 == num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 72;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 72;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 72;
										rectangle.Y = 36;
									}
								}
								else if (num43 != num && num48 == num && (num45 != num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 0;
										rectangle.Y = 54;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 54;
									}
									else
									{
										rectangle.X = 72;
										rectangle.Y = 54;
									}
								}
								else if (num43 != num && num48 == num && (num45 == num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 54;
									}
									else if (num50 == 1)
									{
										rectangle.X = 54;
										rectangle.Y = 54;
									}
									else
									{
										rectangle.X = 90;
										rectangle.Y = 54;
									}
								}
								else if (num43 == num && num48 != num && (num45 != num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 0;
										rectangle.Y = 72;
									}
									else if (num50 == 1)
									{
										rectangle.X = 36;
										rectangle.Y = 72;
									}
									else
									{
										rectangle.X = 72;
										rectangle.Y = 72;
									}
								}
								else if (num43 == num && num48 != num && (num45 == num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 18;
										rectangle.Y = 72;
									}
									else if (num50 == 1)
									{
										rectangle.X = 54;
										rectangle.Y = 72;
									}
									else
									{
										rectangle.X = 90;
										rectangle.Y = 72;
									}
								}
								else if (num43 == num && num48 == num && (num45 != num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 90;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 90;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 90;
										rectangle.Y = 36;
									}
								}
								else if (num43 != num && num48 != num && (num45 == num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 108;
										rectangle.Y = 72;
									}
									else if (num50 == 1)
									{
										rectangle.X = 126;
										rectangle.Y = 72;
									}
									else
									{
										rectangle.X = 144;
										rectangle.Y = 72;
									}
								}
								else if (num43 != num && num48 == num && (num45 != num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 108;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 126;
										rectangle.Y = 0;
									}
									else
									{
										rectangle.X = 144;
										rectangle.Y = 0;
									}
								}
								else if (num43 == num && num48 != num && (num45 != num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 108;
										rectangle.Y = 54;
									}
									else if (num50 == 1)
									{
										rectangle.X = 126;
										rectangle.Y = 54;
									}
									else
									{
										rectangle.X = 144;
										rectangle.Y = 54;
									}
								}
								else if (num43 != num && num48 != num && (num45 != num & num46 == num))
								{
									if (num50 == 0)
									{
										rectangle.X = 162;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 162;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 162;
										rectangle.Y = 36;
									}
								}
								else if (num43 != num && num48 != num && (num45 == num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 216;
										rectangle.Y = 0;
									}
									else if (num50 == 1)
									{
										rectangle.X = 216;
										rectangle.Y = 18;
									}
									else
									{
										rectangle.X = 216;
										rectangle.Y = 36;
									}
								}
								else if (num43 != num && num48 != num && (num45 != num & num46 != num))
								{
									if (num50 == 0)
									{
										rectangle.X = 162;
										rectangle.Y = 54;
									}
									else if (num50 == 1)
									{
										rectangle.X = 180;
										rectangle.Y = 54;
									}
									else
									{
										rectangle.X = 198;
										rectangle.Y = 54;
									}
								}
							}
							if (rectangle.X <= -1 || rectangle.Y <= -1)
							{
								if (num50 <= 0)
								{
									rectangle.X = 18;
									rectangle.Y = 18;
								}
								else if (num50 == 1)
								{
									rectangle.X = 36;
									rectangle.Y = 18;
								}
								if (num50 >= 2)
								{
									rectangle.X = 54;
									rectangle.Y = 18;
								}
							}
							if (Main.tileLargeFrames[num] == 1 && num50 == 3)
							{
								rectangle.Y += 90;
							}
							tile.frameX = (short)rectangle.X;
							tile.frameY = (short)rectangle.Y;
							if (num == 52 || num == 62 || num == 115 || num == 205)
							{
								if (tile2 != null)
								{
									if (!tile2.active())
									{
										num43 = -1;
									}
									else if (tile2.bottomSlope())
									{
										num43 = -1;
									}
									else
									{
										num43 = (int)tile2.type;
									}
								}
								else
								{
									num43 = num;
								}
								if ((num == 52 || num == 205) && (num43 == 109 || num43 == 115))
								{
									tile.type = 115;
									WorldGen.SquareTileFrame(i, j, true);
									return;
								}
								if ((num == 115 || num == 205) && (num43 == 2 || num43 == 52))
								{
									tile.type = 52;
									WorldGen.SquareTileFrame(i, j, true);
									return;
								}
								if ((num == 52 || num == 115) && (num43 == 199 || num43 == 205))
								{
									tile.type = 205;
									WorldGen.SquareTileFrame(i, j, true);
									return;
								}
								if (num43 != num)
								{
									bool flag4 = false;
									if (num43 == -1)
									{
										flag4 = true;
									}
									if (num == 52 && num43 != 2 && num43 != 192)
									{
										flag4 = true;
									}
									if (num == 62 && num43 != 60)
									{
										flag4 = true;
									}
									if (num == 115 && num43 != 109)
									{
										flag4 = true;
									}
									if (num == 205 && num43 != 199)
									{
										flag4 = true;
									}
									if (flag4)
									{
										WorldGen.KillTile(i, j, false, false, false);
									}
								}
							}
							if (!WorldGen.noTileActions && (num == 53 || num == 112 || num == 116 || num == 123 || num == 234 || num == 224 || num == 330 || num == 331 || num == 332 || num == 333))
							{
								if (Main.netMode == 0)
								{
									if (tile3 != null && !tile3.active())
									{
										bool flag5 = true;
										if (tile2.active() && (tile2.type == 21 || tile2.type == 323))
										{
											flag5 = false;
										}
										if (flag5)
										{
											int damage = 10;
											int type;
											if (num == 112)
											{
												type = 56;
											}
											else if (num == 116)
											{
												type = 67;
											}
											else if (num == 123)
											{
												type = 71;
											}
											else if (num == 224)
											{
												type = 179;
											}
											else if (num == 234)
											{
												type = 241;
											}
											else if (num == 330)
											{
												type = 411;
												damage = 0;
											}
											else if (num == 331)
											{
												type = 412;
												damage = 0;
											}
											else if (num == 332)
											{
												type = 413;
												damage = 0;
											}
											else if (num == 333)
											{
												type = 414;
												damage = 0;
											}
											else
											{
												type = 31;
											}
											tile.active(false);
											int num54 = Projectile.NewProjectile((float)(i * 16 + 8), (float)(j * 16 + 8), 0f, 0.41f, type, damage, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num54].ai[0] = 1f;
											WorldGen.SquareTileFrame(i, j, true);
										}
									}
								}
								else if (Main.netMode == 2 && tile3 != null && !tile3.active())
								{
									bool flag6 = true;
									if (tile2.active() && (tile2.type == 21 || tile2.type == 323))
									{
										flag6 = false;
									}
									if (flag6)
									{
										int damage2 = 10;
										int type2;
										if (num == 112)
										{
											type2 = 56;
										}
										else if (num == 116)
										{
											type2 = 67;
										}
										else if (num == 123)
										{
											type2 = 71;
										}
										else if (num == 224)
										{
											type2 = 179;
										}
										else if (num == 234)
										{
											type2 = 241;
										}
										else if (num == 330)
										{
											type2 = 411;
											damage2 = 0;
										}
										else if (num == 331)
										{
											type2 = 412;
											damage2 = 0;
										}
										else if (num == 332)
										{
											type2 = 413;
											damage2 = 0;
										}
										else if (num == 333)
										{
											type2 = 414;
											damage2 = 0;
										}
										else
										{
											type2 = 31;
										}
										tile.active(false);
										int num55 = Projectile.NewProjectile((float)(i * 16 + 8), (float)(j * 16 + 8), 0f, 2.5f, type2, damage2, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num55].velocity.Y = 0.5f;
										Projectile expr_84ED_cp_0 = Main.projectile[num55];
										expr_84ED_cp_0.position.Y = expr_84ED_cp_0.position.Y + 2f;
										Main.projectile[num55].netUpdate = true;
										NetMessage.SendTileSquare(-1, i, j, 1);
										WorldGen.SquareTileFrame(i, j, true);
									}
								}
							}
							if (rectangle.X != frameX && rectangle.Y != frameY && frameX >= 0 && frameY >= 0)
							{
								WorldGen.tileReframeCount++;
								if (WorldGen.tileReframeCount < 100)
								{
									bool flag7 = WorldGen.mergeUp;
									bool flag8 = WorldGen.mergeDown;
									bool flag9 = WorldGen.mergeLeft;
									bool flag10 = WorldGen.mergeRight;
									WorldGen.TileFrame(i - 1, j, false, false);
									WorldGen.TileFrame(i + 1, j, false, false);
									WorldGen.TileFrame(i, j - 1, false, false);
									WorldGen.TileFrame(i, j + 1, false, false);
									WorldGen.mergeUp = flag7;
									WorldGen.mergeDown = flag8;
									WorldGen.mergeLeft = flag9;
									WorldGen.mergeRight = flag10;
								}
								WorldGen.tileReframeCount--;
							}
						}
					}
				}
			}
			catch
			{
			}
			if (i > 0 && j > 0)
			{
				WorldGen.UpdateMapTile(i, j, addToList);
			}
		}
	}
}
