using Microsoft.Xna.Framework;
using System;
namespace Terraria
{
	public class NPC
	{
		public const int maxBuffs = 5;
		public float teleportTime;
		public static int immuneTime = 20;
		public static int maxAI = 4;
		public int netSpam;
		public static bool noStream = false;
		public static float waveKills = 0f;
		public static int waveCount = 0;
		public bool dripping;
		public bool drippingSlime;
		public short catchItem;
		public short releaseOwner = 255;
		private static int spawnSpaceX = 3;
		private static int spawnSpaceY = 3;
		public float gfxOffY;
		public float stepSpeed;
		private static float gravity = 0.3f;
		public bool teleporting;
		private static int maxAttack = 20;
		private static int[] attackNPC = new int[NPC.maxAttack];
		public bool stairFall;
		public static int fireFlyFriendly = 0;
		public static int fireFlyChance = 0;
		public static int fireFlyMultiple = 0;
		public static int butterflyChance = 0;
		private byte netStream;
		private byte[] streamPlayer = new byte[255];
		private byte npcNameLookup;
		public Vector2[] oldPos = new Vector2[10];
		public bool setFrameSize;
		public static int golemBoss = -1;
		public static int plantBoss = -1;
		public static int crimsonBoss = -1;
		public int netSkip;
		public bool netAlways;
		public int realLife = -1;
		public static int sWidth = 1920;
		public static int sHeight = 1080;
		private static int spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
		private static int spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
		public static int safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
		public static int safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
		private static int activeRangeX = (int)((double)NPC.sWidth * 2.1);
		private static int activeRangeY = (int)((double)NPC.sHeight * 2.1);
		private static int townRangeX = NPC.sWidth;
		private static int townRangeY = NPC.sHeight;
		public float npcSlots = 1f;
		private static bool noSpawnCycle = false;
		private static int activeTime = 750;
		private static int defaultSpawnRate = 600;
		private static int defaultMaxSpawns = 5;
		public bool wet;
		public bool honeyWet;
		public byte wetCount;
		public bool lavaWet;
		public int[] buffType = new int[5];
		public int[] buffTime = new int[5];
		public bool[] buffImmune = new bool[140];
		public bool midas;
		public bool ichor;
		public bool onFire;
		public bool onFire2;
		public bool onFrostBurn;
		public bool poisoned;
		public bool venom;
		public int lifeRegen;
		public int lifeRegenCount;
		public bool confused;
		public bool loveStruck;
		public bool stinky;
		public static bool downedBoss1 = false;
		public static bool downedBoss2 = false;
		public static bool downedBoss3 = false;
		public static bool downedQueenBee = false;
		public static bool savedGoblin = false;
		public static bool savedWizard = false;
		public static bool savedMech = false;
		public static bool savedAngler = false;
		public static bool savedStylist = false;
		public static bool downedGoblins = false;
		public static bool downedFrost = false;
		public static bool downedPirates = false;
		public static bool downedClown = false;
		public static bool downedPlantBoss = false;
		public static bool downedGolemBoss = false;
		public static bool downedMechBossAny = false;
		public static bool downedMechBoss1 = false;
		public static bool downedMechBoss2 = false;
		public static bool downedMechBoss3 = false;
		private static int spawnRate = NPC.defaultSpawnRate;
		private static int maxSpawns = NPC.defaultMaxSpawns;
		public int soundDelay;
		public Vector2 position;
		public Vector2 velocity;
		public Vector2 oldPosition;
		public Vector2 oldVelocity;
		public int width;
		public int height;
		public bool active;
		public int[] immune = new int[256];
		public int direction = 1;
		public int directionY = 1;
		public int type;
		public float[] ai = new float[NPC.maxAI];
		public float[] localAI = new float[NPC.maxAI];
		public int aiAction;
		public int aiStyle;
		public bool justHit;
		public int timeLeft;
		public int target = -1;
		public int damage;
		public int defense;
		public int defDamage;
		public int defDefense;
		public bool coldDamage;
		public int soundHit;
		public int soundKilled;
		public int life;
		public int lifeMax;
		public Rectangle targetRect;
		public double frameCounter;
		public Rectangle frame;
		public string name;
		public string displayName;
		public Color color;
		public int alpha;
		public float scale = 1f;
		public float knockBackResist = 1f;
		public int oldDirection;
		public int oldDirectionY;
		public int oldTarget;
		public int whoAmI;
		public float rotation;
		public bool noGravity;
		public bool noTileCollide;
		public bool netUpdate;
		public bool netUpdate2;
		public bool collideX;
		public bool collideY;
		public bool boss;
		public int spriteDirection = -1;
		public bool behindTiles;
		public bool lavaImmune;
		public float value;
		public bool dontTakeDamage;
		public int netID;
		public bool townNPC;
		public static bool travelNPC = false;
		public bool homeless;
		public int homeTileX = -1;
		public int homeTileY = -1;
		public bool oldHomeless;
		public int oldHomeTileX = -1;
		public int oldHomeTileY = -1;
		public bool friendly;
		public bool closeDoor;
		public int doorX;
		public int doorY;
		public int friendlyRegen;
		public static string getNewNPCName(int npcType)
		{
			if (WorldGen.genRand == null)
			{
				WorldGen.genRand = new Random();
			}
			if (npcType <= 124)
			{
				if (npcType <= 38)
				{
					switch (npcType)
					{
					case 17:
						switch (WorldGen.genRand.Next(23))
						{
						case 0:
							return "Alfred";
						case 1:
							return "Barney";
						case 2:
							return "Calvin";
						case 3:
							return "Edmund";
						case 4:
							return "Edwin";
						case 5:
							return "Eugene";
						case 6:
							return "Frank";
						case 7:
							return "Frederick";
						case 8:
							return "Gilbert";
						case 9:
							return "Gus";
						case 10:
							return "Wilbur";
						case 11:
							return "Seymour";
						case 12:
							return "Louis";
						case 13:
							return "Humphrey";
						case 14:
							return "Harold";
						case 15:
							return "Milton";
						case 16:
							return "Mortimer";
						case 17:
							return "Howard";
						case 18:
							return "Walter";
						case 19:
							return "Finn";
						case 20:
							return "Isaac";
						case 21:
							return "Joseph";
						default:
							return "Ralph";
						}
						break;
					case 18:
						switch (WorldGen.genRand.Next(24))
						{
						case 0:
							return "Molly";
						case 1:
							return "Amy";
						case 2:
							return "Claire";
						case 3:
							return "Emily";
						case 4:
							return "Katie";
						case 5:
							return "Madeline";
						case 6:
							return "Katelyn";
						case 7:
							return "Emma";
						case 8:
							return "Abigail";
						case 9:
							return "Carly";
						case 10:
							return "Jenna";
						case 11:
							return "Heather";
						case 12:
							return "Katherine";
						case 13:
							return "Caitlin";
						case 14:
							return "Kaitlin";
						case 15:
							return "Holly";
						case 16:
							return "Kaitlyn";
						case 17:
							return "Hannah";
						case 18:
							return "Kathryn";
						case 19:
							return "Lorraine";
						case 20:
							return "Helen";
						case 21:
							return "Kayla";
						case 22:
							return "Lisa";
						default:
							return "Allison";
						}
						break;
					case 19:
						switch (WorldGen.genRand.Next(24))
						{
						case 0:
							return "DeShawn";
						case 1:
							return "DeAndre";
						case 2:
							return "Marquis";
						case 3:
							return "Darnell";
						case 4:
							return "Terrell";
						case 5:
							return "Malik";
						case 6:
							return "Trevon";
						case 7:
							return "Tyrone";
						case 8:
							return "Willie";
						case 9:
							return "Dominique";
						case 10:
							return "Demetrius";
						case 11:
							return "Reginald";
						case 12:
							return "Jamal";
						case 13:
							return "Maurice";
						case 14:
							return "Jalen";
						case 15:
							return "Darius";
						case 16:
							return "Xavier";
						case 17:
							return "Terrance";
						case 18:
							return "Andre";
						case 19:
							return "Dante";
						case 20:
							return "Brimst";
						case 21:
							return "Bronson";
						case 22:
							return "Tony";
						default:
							return "Darryl";
						}
						break;
					case 20:
						switch (WorldGen.genRand.Next(22))
						{
						case 0:
							return "Alalia";
						case 1:
							return "Alalia";
						case 2:
							return "Alura";
						case 3:
							return "Ariella";
						case 4:
							return "Caelia";
						case 5:
							return "Calista";
						case 6:
							return "Chryseis";
						case 7:
							return "Emerenta";
						case 8:
							return "Elysia";
						case 9:
							return "Evvie";
						case 10:
							return "Faye";
						case 11:
							return "Felicitae";
						case 12:
							return "Lunette";
						case 13:
							return "Nata";
						case 14:
							return "Nissa";
						case 15:
							return "Tatiana";
						case 16:
							return "Rosalva";
						case 17:
							return "Shea";
						case 18:
							return "Tania";
						case 19:
							return "Isis";
						case 20:
							return "Celestia";
						default:
							return "Xylia";
						}
						break;
					case 21:
						break;
					case 22:
						switch (WorldGen.genRand.Next(35))
						{
						case 0:
							return "Joe";
						case 1:
							return "Connor";
						case 2:
							return "Tanner";
						case 3:
							return "Wyatt";
						case 4:
							return "Cody";
						case 5:
							return "Levi";
						case 6:
							return "Luke";
						case 7:
							return "Jack";
						case 8:
							return "Scott";
						case 9:
							return "Logan";
						case 10:
							return "Cole";
						case 11:
							return "Asher";
						case 12:
							return "Bradley";
						case 13:
							return "Jacob";
						case 14:
							return "Garrett";
						case 15:
							return "Dylan";
						case 16:
							return "Maxwell";
						case 17:
							return "Steve";
						case 18:
							return "Brett";
						case 19:
							return "Andrew";
						case 20:
							return "Harley";
						case 21:
							return "Kyle";
						case 22:
							return "Jake";
						case 23:
							return "Ryan";
						case 24:
							return "Jeffrey";
						case 25:
							return "Seth";
						case 26:
							return "Marty";
						case 27:
							return "Brandon";
						case 28:
							return "Zach";
						case 29:
							return "Jeff";
						case 30:
							return "Daniel";
						case 31:
							return "Trent";
						case 32:
							return "Kevin";
						case 33:
							return "Brian";
						default:
							return "Colin";
						}
						break;
					default:
						if (npcType == 38)
						{
							switch (WorldGen.genRand.Next(22))
							{
							case 0:
								return "Dolbere";
							case 1:
								return "Bazdin";
							case 2:
								return "Durim";
							case 3:
								return "Tordak";
							case 4:
								return "Garval";
							case 5:
								return "Morthal";
							case 6:
								return "Oten";
							case 7:
								return "Dolgen";
							case 8:
								return "Gimli";
							case 9:
								return "Gimut";
							case 10:
								return "Duerthen";
							case 11:
								return "Beldin";
							case 12:
								return "Jarut";
							case 13:
								return "Ovbere";
							case 14:
								return "Norkas";
							case 15:
								return "Dolgrim";
							case 16:
								return "Boften";
							case 17:
								return "Norsun";
							case 18:
								return "Dias";
							case 19:
								return "Fikod";
							case 20:
								return "Urist";
							default:
								return "Darur";
							}
						}
						break;
					}
				}
				else if (npcType != 54)
				{
					switch (npcType)
					{
					case 107:
						switch (WorldGen.genRand.Next(25))
						{
						case 0:
							return "Grodax";
						case 1:
							return "Sarx";
						case 2:
							return "Xon";
						case 3:
							return "Mrunok";
						case 4:
							return "Nuxatk";
						case 5:
							return "Tgerd";
						case 6:
							return "Darz";
						case 7:
							return "Smador";
						case 8:
							return "Stazen";
						case 9:
							return "Mobart";
						case 10:
							return "Knogs";
						case 11:
							return "Tkanus";
						case 12:
							return "Negurk";
						case 13:
							return "Nort";
						case 14:
							return "Durnok";
						case 15:
							return "Trogem";
						case 16:
							return "Stezom";
						case 17:
							return "Gnudar";
						case 18:
							return "Ragz";
						case 19:
							return "Fahd";
						case 20:
							return "Xanos";
						case 21:
							return "Arback";
						case 22:
							return "Fjell";
						case 23:
							return "Dalek";
						default:
							return "Knub";
						}
						break;
					case 108:
						switch (WorldGen.genRand.Next(21))
						{
						case 0:
							return "Dalamar";
						case 1:
							return "Dulais";
						case 2:
							return "Elric";
						case 3:
							return "Arddun";
						case 4:
							return "Maelor";
						case 5:
							return "Leomund";
						case 6:
							return "Hirael";
						case 7:
							return "Gwentor";
						case 8:
							return "Greum";
						case 9:
							return "Gearroid";
						case 10:
							return "Fizban";
						case 11:
							return "Ningauble";
						case 12:
							return "Seonag";
						case 13:
							return "Sargon";
						case 14:
							return "Merlyn";
						case 15:
							return "Magius";
						case 16:
							return "Berwyn";
						case 17:
							return "Arwyn";
						case 18:
							return "Alasdair";
						case 19:
							return "Tagar";
						default:
							return "Xanadu";
						}
						break;
					default:
						if (npcType == 124)
						{
							switch (WorldGen.genRand.Next(24))
							{
							case 0:
								return "Shayna";
							case 1:
								return "Korrie";
							case 2:
								return "Ginger";
							case 3:
								return "Brooke";
							case 4:
								return "Jenny";
							case 5:
								return "Autumn";
							case 6:
								return "Nancy";
							case 7:
								return "Ella";
							case 8:
								return "Kayla";
							case 9:
								return "Selah";
							case 10:
								return "Sophia";
							case 11:
								return "Marshanna";
							case 12:
								return "Lauren";
							case 13:
								return "Trisha";
							case 14:
								return "Shirlena";
							case 15:
								return "Sheena";
							case 16:
								return "Ellen";
							case 17:
								return "Amy";
							case 18:
								return "Dawn";
							case 19:
								return "Susana";
							case 20:
								return "Meredith";
							case 21:
								return "Selene";
							case 22:
								return "Terra";
							default:
								return "Sally";
							}
						}
						break;
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(25))
					{
					case 0:
						return "Sebastian";
					case 1:
						return "Rupert";
					case 2:
						return "Clive";
					case 3:
						return "Nigel";
					case 4:
						return "Mervyn";
					case 5:
						return "Cedric";
					case 6:
						return "Pip";
					case 7:
						return "Cyril";
					case 8:
						return "Fitz";
					case 9:
						return "Lloyd";
					case 10:
						return "Arthur";
					case 11:
						return "Rodney";
					case 12:
						return "Graham";
					case 13:
						return "Edward";
					case 14:
						return "Alfred";
					case 15:
						return "Edmund";
					case 16:
						return "Henry";
					case 17:
						return "Herald";
					case 18:
						return "Roland";
					case 19:
						return "Lincoln";
					case 20:
						return "Lloyd";
					case 21:
						return "Edgar";
					case 22:
						return "Eustace";
					case 23:
						return "Benjamin";
					default:
						return "Rodrick";
					}
				}
			}
			else if (npcType <= 209)
			{
				if (npcType != 160)
				{
					if (npcType != 178)
					{
						switch (npcType)
						{
						case 207:
							switch (WorldGen.genRand.Next(16))
							{
							case 0:
								return "Abdosir";
							case 1:
								return "Akbar";
							case 2:
								return "Bodashtart";
							case 3:
								return "Danel";
							case 4:
								return "Hanno";
							case 5:
								return "Hiram";
							case 6:
								return "Kanmi";
							case 7:
								return "Philosir";
							case 8:
								return "Tabnit";
							case 9:
								return "Yutpan";
							case 10:
								return "Ahirom";
							case 11:
								return "Batnoam";
							case 12:
								return "Sikarbaal";
							case 13:
								return "Hannibal";
							case 14:
								return "Yehomilk";
							default:
								return "Ahinadab";
							}
							break;
						case 208:
							switch (WorldGen.genRand.Next(17))
							{
							case 0:
								return "Candy";
							case 1:
								return "Isis";
							case 2:
								return "Trixy";
							case 3:
								return "Destiny";
							case 4:
								return "Lexus";
							case 5:
								return "Bambi";
							case 6:
								return "Bailey";
							case 7:
								return "Glitter";
							case 8:
								return "Sparkle";
							case 9:
								return "Paris";
							case 10:
								return "Dazzle";
							case 11:
								return "Fantasy";
							case 12:
								return "Bunny";
							case 13:
								return "Sugar";
							case 14:
								return "Fantasia";
							case 15:
								return "Star";
							default:
								return "Cherry";
							}
							break;
						case 209:
							switch (WorldGen.genRand.Next(23))
							{
							case 0:
								return "Alpha";
							case 1:
								return "Beta";
							case 2:
								return "Delta";
							case 3:
								return "Omega";
							case 4:
								return "Gamma";
							case 5:
								return "Theta";
							case 6:
								return "Kappa";
							case 7:
								return "Omicron";
							case 8:
								return "Sigma";
							case 9:
								return "Upsilon";
							case 10:
								return "Phi";
							case 11:
								return "Zeta";
							case 12:
								return "Lambda";
							case 13:
								return "Nu";
							case 14:
								return "Ci";
							case 15:
								return "Rho";
							case 16:
								return "Phi";
							case 17:
								return "Fender";
							case 18:
								return "T-3E0";
							case 19:
								return "Niner-7";
							case 20:
								return "A.N.D.Y";
							case 21:
								return "Syn-X";
							default:
								return "Mu";
							}
							break;
						}
					}
					else
					{
						switch (WorldGen.genRand.Next(20))
						{
						case 0:
							return "Whitney";
						case 1:
							return "Verity";
						case 2:
							return "Ada";
						case 3:
							return "Cornelia";
						case 4:
							return "Lydia";
						case 5:
							return "Leila";
						case 6:
							return "Minerva";
						case 7:
							return "Emeline";
						case 8:
							return "Cynthia";
						case 9:
							return "Fidelia";
						case 10:
							return "Lilly";
						case 11:
							return "Phoebe";
						case 12:
							return "Zylphia";
						case 13:
							return "Zelda";
						case 14:
							return "Selina";
						case 15:
							return "Hope";
						case 16:
							return "Isabella";
						case 17:
							return "Judith";
						case 18:
							return "Savannah";
						default:
							return "Vivian";
						}
					}
				}
				else
				{
					switch (WorldGen.genRand.Next(12))
					{
					case 0:
						return "Reishi";
					case 1:
						return "Maitake";
					case 2:
						return "Chanterelle";
					case 3:
						return "Porcini";
					case 4:
						return "Shimeji";
					case 5:
						return "Amanita";
					case 6:
						return "Muscaria";
					case 7:
						return "Agaric";
					case 8:
						return "Cremini";
					case 9:
						return "Morel";
					case 10:
						return "Enoki";
					default:
						return "Shiitake";
					}
				}
			}
			else
			{
				switch (npcType)
				{
				case 227:
					switch (WorldGen.genRand.Next(17))
					{
					case 0:
						return "Marco";
					case 1:
						return "Guido";
					case 2:
						return "Enzo";
					case 3:
						return "Martino";
					case 4:
						return "Mauro";
					case 5:
						return "Lorenzo";
					case 6:
						return "Ludo";
					case 7:
						return "Luciano";
					case 8:
						return "Carlo";
					case 9:
						return "Bruno";
					case 10:
						return "Mario";
					case 11:
						return "Leonardo";
					case 12:
						return "Raphael";
					case 13:
						return "Luigi";
					case 14:
						return "Luca";
					case 15:
						return "Darren";
					default:
						return "Stefano";
					}
					break;
				case 228:
					switch (WorldGen.genRand.Next(10))
					{
					case 0:
						return "Abibe";
					case 1:
						return "Jamundi";
					case 2:
						return "U'wa";
					case 3:
						return "Tairona";
					case 4:
						return "Xirigua";
					case 5:
						return "Zop'a";
					case 6:
						return "Opuni";
					case 7:
						return "Kogi-ghi";
					case 8:
						return "Konah";
					default:
						return "Gboto";
					}
					break;
				case 229:
					switch (WorldGen.genRand.Next(11))
					{
					case 0:
						return "David";
					case 1:
						return "Red Beard";
					case 2:
						return "Jack";
					case 3:
						return "Black Beard";
					case 4:
						return "Captain Morgan";
					case 5:
						return "Wet Beard";
					case 6:
						return "James T. Beard";
					case 7:
						return "Gunpowder Garry";
					case 8:
						return "Captain Stoney Dirt";
					case 9:
						return "Jake";
					default:
						return "Captain Bullywort";
					}
					break;
				default:
					if (npcType != 353)
					{
						switch (npcType)
						{
						case 368:
							switch (WorldGen.genRand.Next(13))
							{
							case 0:
								return "Abraham";
							case 1:
								return "Bohemas";
							case 2:
								return "Eladon";
							case 3:
								return "Aphraim";
							case 4:
								return "Gallius";
							case 5:
								return "Llewellyn";
							case 6:
								return "Riley";
							case 7:
								return "Rawleigh";
							case 8:
								return "Shipton";
							case 9:
								return "Romeo";
							case 10:
								return "Aedan";
							case 11:
								return "Mercer";
							default:
								return "Willy";
							}
							break;
						case 369:
							switch (WorldGen.genRand.Next(22))
							{
							case 0:
								return "Bobby";
							case 1:
								return "Sammy";
							case 2:
								return "Jimmy";
							case 3:
								return "Danny";
							case 4:
								return "Timmy";
							case 5:
								return "Simon";
							case 6:
								return "Johnny";
							case 7:
								return "Billy";
							case 8:
								return "Matty";
							case 9:
								return "Bart";
							case 10:
								return "Phillip";
							case 11:
								return "Spencer";
							case 12:
								return "Nathan";
							case 13:
								return "Grayson";
							case 14:
								return "Bryce";
							case 15:
								return "Miles";
							case 16:
								return "Charles";
							case 17:
								return "Adam";
							case 18:
								return "Tyler";
							case 19:
								return "Jey";
							case 20:
								return "Ivan";
							default:
								return "Izzy";
							}
							break;
						}
					}
					else
					{
						switch (WorldGen.genRand.Next(20))
						{
						case 0:
							return "Bri";
						case 1:
							return "Brianne";
						case 2:
							return "Flora";
						case 3:
							return "Iris";
						case 4:
							return "Scarlett";
						case 5:
							return "Lola";
						case 6:
							return "Hazel";
						case 7:
							return "Stella";
						case 8:
							return "Pearl";
						case 9:
							return "Tallulah";
						case 10:
							return "Ruby";
						case 11:
							return "Esmeralda";
						case 12:
							return "Kylie";
						case 13:
							return "Kati";
						case 14:
							return "Biah";
						case 15:
							return "Meliyah";
						case 16:
							return "Petra";
						case 17:
							return "Rox";
						case 18:
							return "Roxanne";
						default:
							return "Annabel";
						}
					}
					break;
				}
			}
			return "";
		}
		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
		{
			bool flag = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					if (flag)
					{
						Main.npc[i].displayName = NPC.getNewNPCName(npcType);
					}
					else
					{
						Main.npc[i].displayName = newName;
						if (!resetExtras)
						{
							return;
						}
						flag = true;
					}
				}
			}
		}
		public static string firstNPCName(int npcType)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == npcType)
				{
					return Main.npc[i].displayName;
				}
			}
			return NPC.getNewNPCName(npcType);
		}
		public void netDefaults(int type)
		{
			if (type < 0)
			{
				if (type == -1)
				{
					this.SetDefaults("Slimeling");
					return;
				}
				if (type == -2)
				{
					this.SetDefaults("Slimer2");
					return;
				}
				if (type == -3)
				{
					this.SetDefaults("Green Slime");
					return;
				}
				if (type == -4)
				{
					this.SetDefaults("Pinky");
					return;
				}
				if (type == -5)
				{
					this.SetDefaults("Baby Slime");
					return;
				}
				if (type == -6)
				{
					this.SetDefaults("Black Slime");
					return;
				}
				if (type == -7)
				{
					this.SetDefaults("Purple Slime");
					return;
				}
				if (type == -8)
				{
					this.SetDefaults("Red Slime");
					return;
				}
				if (type == -9)
				{
					this.SetDefaults("Yellow Slime");
					return;
				}
				if (type == -10)
				{
					this.SetDefaults("Jungle Slime");
					return;
				}
				if (type == -11)
				{
					this.SetDefaults("Little Eater");
					return;
				}
				if (type == -12)
				{
					this.SetDefaults("Big Eater");
					return;
				}
				if (type == -13)
				{
					this.SetDefaults("Short Bones");
					return;
				}
				if (type == -14)
				{
					this.SetDefaults("Big Boned");
					return;
				}
				if (type == -15)
				{
					this.SetDefaults("Heavy Skeleton");
					return;
				}
				if (type == -16)
				{
					this.SetDefaults("Little Stinger");
					return;
				}
				if (type == -17)
				{
					this.SetDefaults("Big Stinger");
					return;
				}
				if (type == -18)
				{
					this.SetDefaults("Tiny Moss Hornet");
					return;
				}
				if (type == -19)
				{
					this.SetDefaults("Little Moss Hornet");
					return;
				}
				if (type == -20)
				{
					this.SetDefaults("Big Moss Hornet");
					return;
				}
				if (type == -21)
				{
					this.SetDefaults("Giant Moss Hornet");
					return;
				}
				if (type == -22)
				{
					this.SetDefaults("Little Crimera");
					return;
				}
				if (type == -23)
				{
					this.SetDefaults("Big Crimera");
					return;
				}
				if (type == -24)
				{
					this.SetDefaults("Little Crimslime");
					return;
				}
				if (type == -25)
				{
					this.SetDefaults("Big Crimslime");
					return;
				}
				if (type == -26)
				{
					this.SetDefaults("Small Zombie");
					return;
				}
				if (type == -27)
				{
					this.SetDefaults("Big Zombie");
					return;
				}
				if (type == -28)
				{
					this.SetDefaults("Small Bald Zombie");
					return;
				}
				if (type == -29)
				{
					this.SetDefaults("Big Bald Zombie");
					return;
				}
				if (type == -30)
				{
					this.SetDefaults("Small Pincushion Zombie");
					return;
				}
				if (type == -31)
				{
					this.SetDefaults("Big Pincushion Zombie");
					return;
				}
				if (type == -32)
				{
					this.SetDefaults("Small Slimed Zombie");
					return;
				}
				if (type == -33)
				{
					this.SetDefaults("Big Slimed Zombie");
					return;
				}
				if (type == -34)
				{
					this.SetDefaults("Small Swamp Zombie");
					return;
				}
				if (type == -35)
				{
					this.SetDefaults("Big Swamp Zombie");
					return;
				}
				if (type == -36)
				{
					this.SetDefaults("Small Twiggy Zombie");
					return;
				}
				if (type == -37)
				{
					this.SetDefaults("Big Twiggy Zombie");
					return;
				}
				if (type == -38)
				{
					this.SetDefaults("Cataract Eye 2");
					return;
				}
				if (type == -39)
				{
					this.SetDefaults("Sleepy Eye 2");
					return;
				}
				if (type == -40)
				{
					this.SetDefaults("Dialated Eye 2");
					return;
				}
				if (type == -41)
				{
					this.SetDefaults("Green Eye 2");
					return;
				}
				if (type == -42)
				{
					this.SetDefaults("Purple Eye 2");
					return;
				}
				if (type == -43)
				{
					this.SetDefaults("Demon Eye 2");
					return;
				}
				if (type == -44)
				{
					this.SetDefaults("Small Female Zombie");
					return;
				}
				if (type == -45)
				{
					this.SetDefaults("Big Female Zombie");
					return;
				}
				if (type == -46)
				{
					this.SetDefaults("Small Skeleton");
					return;
				}
				if (type == -47)
				{
					this.SetDefaults("Big Skeleton");
					return;
				}
				if (type == -48)
				{
					this.SetDefaults("Small Headache Skeleton");
					return;
				}
				if (type == -49)
				{
					this.SetDefaults("Big Headache Skeleton");
					return;
				}
				if (type == -50)
				{
					this.SetDefaults("Small Misassembled Skeleton");
					return;
				}
				if (type == -51)
				{
					this.SetDefaults("Big Misassembled Skeleton");
					return;
				}
				if (type == -52)
				{
					this.SetDefaults("Small Pantless Skeleton");
					return;
				}
				if (type == -53)
				{
					this.SetDefaults("Big Pantless Skeleton");
					return;
				}
				if (type == -54)
				{
					this.SetDefaults("Small Rain Zombie");
					return;
				}
				if (type == -55)
				{
					this.SetDefaults("Big Rain Zombie");
					return;
				}
				if (type == -56)
				{
					this.SetDefaults("Little Hornet Fatty");
					return;
				}
				if (type == -57)
				{
					this.SetDefaults("Big Hornet Fatty");
					return;
				}
				if (type == -58)
				{
					this.SetDefaults("Little Hornet Honey");
					return;
				}
				if (type == -59)
				{
					this.SetDefaults("Big Hornet Honey");
					return;
				}
				if (type == -60)
				{
					this.SetDefaults("Little Hornet Leafy");
					return;
				}
				if (type == -61)
				{
					this.SetDefaults("Big Hornet Leafy");
					return;
				}
				if (type == -62)
				{
					this.SetDefaults("Little Hornet Spikey");
					return;
				}
				if (type == -63)
				{
					this.SetDefaults("Big Hornet Spikey");
					return;
				}
				if (type == -64)
				{
					this.SetDefaults("Little Hornet Stingy");
					return;
				}
				if (type == -65)
				{
					this.SetDefaults("Big Hornet Stingy");
					return;
				}
			}
			else
			{
				this.SetDefaults(type, -1f);
			}
		}
		public void SetDefaults(string Name)
		{
			this.SetDefaults(0, -1f);
			if (Name == "Slimeling")
			{
				this.SetDefaults(81, 0.6f);
				this.name = Name;
				this.damage = 45;
				this.defense = 10;
				this.life = 90;
				this.knockBackResist = 1.2f;
				this.value = 100f;
				this.netID = -1;
			}
			else if (Name == "Slimer2")
			{
				this.SetDefaults(81, 0.9f);
				this.displayName = "Slimer";
				this.name = Name;
				this.damage = 45;
				this.defense = 20;
				this.life = 90;
				this.knockBackResist = 1.2f;
				this.value = 100f;
				this.netID = -2;
			}
			else if (Name == "Green Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 6;
				this.defense = 0;
				this.life = 14;
				this.knockBackResist = 1.2f;
				this.color = new Color(0, 220, 40, 100);
				this.value = 3f;
				this.netID = -3;
			}
			else if (Name == "Pinky")
			{
				this.SetDefaults(1, 0.6f);
				this.name = Name;
				this.damage = 5;
				this.defense = 5;
				this.life = 150;
				this.knockBackResist = 1.4f;
				this.color = new Color(250, 30, 90, 90);
				this.value = 10000f;
				this.netID = -4;
			}
			else if (Name == "Baby Slime")
			{
				this.SetDefaults(1, 0.9f);
				this.name = Name;
				this.damage = 13;
				this.defense = 4;
				this.life = 30;
				this.knockBackResist = 0.95f;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 10f;
				this.netID = -5;
			}
			else if (Name == "Black Slime")
			{
				this.SetDefaults(1, -1f);
				this.name = Name;
				this.damage = 15;
				this.defense = 4;
				this.life = 45;
				this.color = new Color(0, 0, 0, 50);
				this.value = 20f;
				this.netID = -6;
			}
			else if (Name == "Purple Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 12;
				this.defense = 6;
				this.life = 40;
				this.knockBackResist = 0.9f;
				this.color = new Color(200, 0, 255, 150);
				this.value = 10f;
				this.netID = -7;
			}
			else if (Name == "Red Slime")
			{
				this.SetDefaults(1, -1f);
				this.name = Name;
				this.damage = 12;
				this.defense = 4;
				this.life = 35;
				this.color = new Color(255, 30, 0, 100);
				this.value = 8f;
				this.netID = -8;
			}
			else if (Name == "Yellow Slime")
			{
				this.SetDefaults(1, 1.2f);
				this.name = Name;
				this.damage = 15;
				this.defense = 7;
				this.life = 45;
				this.color = new Color(255, 255, 0, 100);
				this.value = 10f;
				this.netID = -9;
			}
			else if (Name == "Jungle Slime")
			{
				this.SetDefaults(1, 1.1f);
				this.name = Name;
				this.damage = 18;
				this.defense = 6;
				this.life = 60;
				this.color = new Color(143, 215, 93, 100);
				this.value = 500f;
				this.netID = -10;
			}
			else if (Name == "Little Eater")
			{
				this.SetDefaults(6, 0.85f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -11;
			}
			else if (Name == "Big Eater")
			{
				this.SetDefaults(6, 1.15f);
				this.name = Name;
				this.displayName = "Eater of Souls";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -12;
			}
			else if (Name == "Short Bones")
			{
				this.SetDefaults(31, 0.9f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.netID = -13;
			}
			else if (Name == "Big Boned")
			{
				this.SetDefaults(31, 1.15f);
				this.name = Name;
				this.displayName = "Angry Bones";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = (int)((double)((float)this.life * this.scale) * 1.1);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -14;
			}
			else if (Name == "Heavy Skeleton")
			{
				this.SetDefaults(77, 1.15f);
				this.name = Name;
				this.displayName = "Armored Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((double)((float)this.damage * this.scale) * 1.1);
				this.life = 400;
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots = 2f;
				this.knockBackResist *= 2f - this.scale;
				this.height = 44;
				this.netID = -15;
			}
			else if (Name == "Little Stinger")
			{
				this.SetDefaults(42, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -16;
			}
			else if (Name == "Big Stinger")
			{
				this.SetDefaults(42, 1.2f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -17;
			}
			else if (Name == "Tiny Moss Hornet")
			{
				this.SetDefaults(176, 0.8f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -18;
			}
			else if (Name == "Little Moss Hornet")
			{
				this.SetDefaults(176, 0.9f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -19;
			}
			else if (Name == "Big Moss Hornet")
			{
				this.SetDefaults(176, 1.1f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -20;
			}
			else if (Name == "Giant Moss Hornet")
			{
				this.SetDefaults(176, 1.2f);
				this.displayName = "Moss Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -21;
			}
			else if (Name == "Little Crimera")
			{
				this.SetDefaults(173, 0.85f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -22;
			}
			else if (Name == "Big Crimera")
			{
				this.SetDefaults(173, 1.15f);
				this.displayName = "Crimera";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -23;
			}
			else if (Name == "Little Crimslime")
			{
				this.SetDefaults(183, 0.85f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -24;
			}
			else if (Name == "Big Crimslime")
			{
				this.SetDefaults(183, 1.15f);
				this.displayName = "Crimslime";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -25;
			}
			else if (Name == "Small Zombie")
			{
				this.SetDefaults(3, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -26;
			}
			else if (Name == "Big Zombie")
			{
				this.SetDefaults(3, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -27;
			}
			else if (Name == "Small Bald Zombie")
			{
				this.SetDefaults(132, 0.85f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -28;
			}
			else if (Name == "Big Bald Zombie")
			{
				this.SetDefaults(132, 1.15f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -29;
			}
			else if (Name == "Small Pincushion Zombie")
			{
				this.SetDefaults(186, 0.93f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -30;
			}
			else if (Name == "Big Pincushion Zombie")
			{
				this.SetDefaults(186, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -31;
			}
			else if (Name == "Small Slimed Zombie")
			{
				this.SetDefaults(187, 0.89f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -32;
			}
			else if (Name == "Big Slimed Zombie")
			{
				this.SetDefaults(187, 1.11f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -33;
			}
			else if (Name == "Small Swamp Zombie")
			{
				this.SetDefaults(188, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -34;
			}
			else if (Name == "Big Swamp Zombie")
			{
				this.SetDefaults(188, 1.13f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -35;
			}
			else if (Name == "Small Twiggy Zombie")
			{
				this.SetDefaults(189, 0.92f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -36;
			}
			else if (Name == "Big Twiggy Zombie")
			{
				this.SetDefaults(189, 1.08f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -37;
			}
			else if (Name == "Cataract Eye 2")
			{
				this.SetDefaults(190, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -38;
			}
			else if (Name == "Sleepy Eye 2")
			{
				this.SetDefaults(191, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -39;
			}
			else if (Name == "Dialated Eye 2")
			{
				this.SetDefaults(192, 0.9f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -40;
			}
			else if (Name == "Green Eye 2")
			{
				this.SetDefaults(193, 0.85f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -41;
			}
			else if (Name == "Purple Eye 2")
			{
				this.SetDefaults(194, 1.1f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -42;
			}
			else if (Name == "Demon Eye 2")
			{
				this.SetDefaults(2, 1.15f);
				this.name = Name;
				this.displayName = "Demon Eye";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -43;
			}
			else if (Name == "Small Female Zombie")
			{
				this.SetDefaults(200, 0.87f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -44;
			}
			else if (Name == "Big Female Zombie")
			{
				this.SetDefaults(200, 1.05f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -45;
			}
			else if (Name == "Small Skeleton")
			{
				this.SetDefaults(21, 0.9f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -46;
			}
			else if (Name == "Big Skeleton")
			{
				this.SetDefaults(21, 1.1f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -47;
			}
			else if (Name == "Small Headache Skeleton")
			{
				this.SetDefaults(201, 0.93f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -48;
			}
			else if (Name == "Big Headache Skeleton")
			{
				this.SetDefaults(201, 1.07f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -49;
			}
			else if (Name == "Small Misassembled Skeleton")
			{
				this.SetDefaults(202, 0.87f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -50;
			}
			else if (Name == "Big Misassembled Skeleton")
			{
				this.SetDefaults(202, 1.13f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -51;
			}
			else if (Name == "Small Pantless Skeleton")
			{
				this.SetDefaults(203, 0.85f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -52;
			}
			else if (Name == "Big Pantless Skeleton")
			{
				this.SetDefaults(203, 1.15f);
				this.name = Name;
				this.displayName = "Skeleton";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -53;
			}
			else if (Name == "Small Rain Zombie")
			{
				this.SetDefaults(223, 0.9f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -54;
			}
			else if (Name == "Big Rain Zombie")
			{
				this.SetDefaults(223, 1.1f);
				this.name = Name;
				this.displayName = "Zombie";
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -55;
			}
			else if (Name == "Little Hornet Fatty")
			{
				this.SetDefaults(231, 0.85f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -56;
			}
			else if (Name == "Big Hornet Fatty")
			{
				this.SetDefaults(231, 1.25f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -57;
			}
			else if (Name == "Little Hornet Honey")
			{
				this.SetDefaults(232, 0.8f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -58;
			}
			else if (Name == "Big Hornet Honey")
			{
				this.SetDefaults(232, 1.15f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -59;
			}
			else if (Name == "Little Hornet Leafy")
			{
				this.SetDefaults(233, 0.92f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -60;
			}
			else if (Name == "Big Hornet Leafy")
			{
				this.SetDefaults(233, 1.1f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -61;
			}
			else if (Name == "Little Hornet Spikey")
			{
				this.SetDefaults(234, 0.78f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -62;
			}
			else if (Name == "Big Hornet Spikey")
			{
				this.SetDefaults(234, 1.16f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -63;
			}
			else if (Name == "Little Hornet Stingy")
			{
				this.SetDefaults(235, 0.87f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -64;
			}
			else if (Name == "Big Hornet Stingy")
			{
				this.SetDefaults(235, 1.21f);
				this.displayName = "Hornet";
				this.name = Name;
				this.defense = (int)((float)this.defense * this.scale);
				this.damage = (int)((float)this.damage * this.scale);
				this.life = (int)((float)this.life * this.scale);
				this.value = (float)((int)(this.value * this.scale));
				this.npcSlots *= this.scale;
				this.knockBackResist *= 2f - this.scale;
				this.netID = -65;
			}
			else if (Name != "")
			{
				for (int i = 1; i < 378; i++)
				{
					if (Main.npcName[i] == Name)
					{
						this.SetDefaults(i, -1f);
						return;
					}
				}
				this.SetDefaults(0, -1f);
				this.active = false;
			}
			else
			{
				this.active = false;
			}
			this.displayName = Lang.npcName(this.netID, false);
			this.lifeMax = this.life;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
		}
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float num4 = Main.npc[i].position.X - vector.X;
					float num5 = Main.npc[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
					if (num6 < 200f)
					{
						num2++;
					}
					if (num6 < 600f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}
		public static int TypeToNum(int type)
		{
			if (type == 17)
			{
				return 2;
			}
			if (type == 18)
			{
				return 3;
			}
			if (type == 19)
			{
				return 6;
			}
			if (type == 20)
			{
				return 5;
			}
			if (type == 22)
			{
				return 1;
			}
			if (type == 38)
			{
				return 4;
			}
			if (type == 54)
			{
				return 7;
			}
			if (type == 107)
			{
				return 9;
			}
			if (type == 108)
			{
				return 10;
			}
			if (type == 124)
			{
				return 8;
			}
			if (type == 142)
			{
				return 11;
			}
			if (type == 160)
			{
				return 12;
			}
			if (type == 178)
			{
				return 13;
			}
			if (type == 207)
			{
				return 14;
			}
			if (type == 208)
			{
				return 15;
			}
			if (type == 209)
			{
				return 16;
			}
			if (type == 227)
			{
				return 17;
			}
			if (type == 228)
			{
				return 18;
			}
			if (type == 229)
			{
				return 19;
			}
			if (type == 353)
			{
				return 20;
			}
			if (type == 368)
			{
				return 21;
			}
			if (type == 369)
			{
				return 22;
			}
			return -1;
		}
		public static int NumToType(int type)
		{
			if (type == 2)
			{
				return 17;
			}
			if (type == 3)
			{
				return 18;
			}
			if (type == 6)
			{
				return 19;
			}
			if (type == 5)
			{
				return 20;
			}
			if (type == 1)
			{
				return 22;
			}
			if (type == 4)
			{
				return 38;
			}
			if (type == 7)
			{
				return 54;
			}
			if (type == 9)
			{
				return 107;
			}
			if (type == 10)
			{
				return 108;
			}
			if (type == 8)
			{
				return 124;
			}
			if (type == 11)
			{
				return 142;
			}
			if (type == 12)
			{
				return 160;
			}
			if (type == 13)
			{
				return 178;
			}
			if (type == 14)
			{
				return 207;
			}
			if (type == 15)
			{
				return 208;
			}
			if (type == 16)
			{
				return 209;
			}
			if (type == 17)
			{
				return 227;
			}
			if (type == 18)
			{
				return 228;
			}
			if (type == 19)
			{
				return 229;
			}
			if (type == 20)
			{
				return 353;
			}
			if (type == 21)
			{
				return 368;
			}
			if (type == 22)
			{
				return 369;
			}
			return -1;
		}
		public void SetDefaults(int Type, float scaleOverride = -1f)
		{
			this.releaseOwner = 255;
			this.catchItem = 0;
			NPC.noStream = false;
			this.npcNameLookup = 0;
			this.netStream = 32;
			bool flag = false;
			this.netID = 0;
			this.netAlways = false;
			this.netSpam = 0;
			for (int i = 0; i < this.oldPos.Length; i++)
			{
				this.oldPos[i].X = 0f;
				this.oldPos[i].Y = 0f;
			}
			for (int j = 0; j < 5; j++)
			{
				this.buffTime[j] = 0;
				this.buffType[j] = 0;
			}
			for (int k = 0; k < 140; k++)
			{
				this.buffImmune[k] = false;
			}
			this.setFrameSize = false;
			this.buffImmune[31] = true;
			this.netSkip = -2;
			this.realLife = -1;
			this.lifeRegen = 0;
			this.lifeRegenCount = 0;
			this.poisoned = false;
			this.venom = false;
			this.onFire = false;
			this.midas = false;
			this.ichor = false;
			this.onFrostBurn = false;
			this.confused = false;
			this.loveStruck = false;
			this.stinky = false;
			this.onFire2 = false;
			this.justHit = false;
			this.dontTakeDamage = false;
			this.npcSlots = 1f;
			this.lavaImmune = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.townNPC = false;
			this.homeless = false;
			this.homeTileX = -1;
			this.homeTileY = -1;
			this.friendly = false;
			this.behindTiles = false;
			this.boss = false;
			this.noTileCollide = false;
			this.rotation = 0f;
			this.active = true;
			this.alpha = 0;
			this.color = default(Color);
			this.collideX = false;
			this.collideY = false;
			this.direction = 0;
			this.oldDirection = this.direction;
			this.frameCounter = 0.0;
			this.netUpdate = true;
			this.netUpdate2 = false;
			this.knockBackResist = 1f;
			this.name = "";
			this.displayName = "";
			this.noGravity = false;
			this.scale = 1f;
			this.soundHit = 0;
			this.soundKilled = 0;
			this.spriteDirection = -1;
			this.target = 255;
			this.oldTarget = this.target;
			this.targetRect = default(Rectangle);
			this.timeLeft = NPC.activeTime;
			this.type = Type;
			this.value = 0f;
			this.coldDamage = false;
			for (int l = 0; l < NPC.maxAI; l++)
			{
				this.ai[l] = 0f;
			}
			for (int m = 0; m < NPC.maxAI; m++)
			{
				this.localAI[m] = 0f;
			}
			if (this.type == 1)
			{
				this.name = "Blue Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.color = new Color(0, 80, 255, 100);
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 2)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 3)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 4)
			{
				this.name = "Eye of Cthulhu";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 4;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 2800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 30000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 5)
			{
				this.name = "Servant of Cthulhu";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 5;
				this.damage = 12;
				this.defense = 0;
				this.lifeMax = 8;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
			}
			else if (this.type == 6)
			{
				this.npcSlots = 1f;
				this.name = "Eater of Souls";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 7)
			{
				this.displayName = "Devourer";
				this.npcSlots = 3.5f;
				this.name = "Devourer Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.damage = 31;
				this.defense = 2;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				this.netAlways = true;
			}
			else if (this.type == 8)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				NPC.noStream = true;
			}
			else if (this.type == 9)
			{
				this.displayName = "Devourer";
				this.name = "Devourer Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 140f;
				NPC.noStream = true;
			}
			else if (this.type == 10)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 8;
				this.defense = 0;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
			}
			else if (this.type == 11)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				NPC.noStream = true;
			}
			else if (this.type == 12)
			{
				this.displayName = "Giant Worm";
				this.name = "Giant Worm Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 4;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 40f;
				NPC.noStream = true;
			}
			else if (this.type == 13)
			{
				this.displayName = "Eater of Worlds";
				this.npcSlots = 5f;
				this.name = "Eater of Worlds Head";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 2;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 14)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 13;
				this.defense = 4;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 15)
			{
				this.displayName = "Eater of Worlds";
				this.name = "Eater of Worlds Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 11;
				this.defense = 8;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 300f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 16)
			{
				this.npcSlots = 2f;
				this.name = "Mother Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 20;
				this.defense = 7;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 120;
				this.color = new Color(0, 0, 0, 50);
				this.value = 75f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 17)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 18)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Nurse";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 19)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Arms Dealer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 20)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dryad";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 21)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 100f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 22)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Guide";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 23)
			{
				this.name = "Meteor Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 5;
				this.damage = 40;
				this.defense = 6;
				this.lifeMax = 26;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 80f;
				this.knockBackResist = 0.4f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 24)
			{
				this.npcSlots = 3f;
				this.name = "Fire Imp";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 30;
				this.defense = 16;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.lavaImmune = true;
				this.value = 350f;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 25)
			{
				this.name = "Burning Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 30;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 100;
			}
			else if (this.type == 26)
			{
				this.name = "Goblin Peon";
				this.scale = 0.9f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.8f;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 27)
			{
				this.name = "Goblin Thief";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 28)
			{
				this.name = "Goblin Warrior";
				this.scale = 1.1f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 150f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 29)
			{
				this.name = "Goblin Sorcerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.6f;
				this.value = 200f;
			}
			else if (this.type == 30)
			{
				this.name = "Chaos Ball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 100;
				this.knockBackResist = 0f;
			}
			else if (this.type == 31)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 8;
				this.lifeMax = 80;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.8f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 32)
			{
				this.name = "Dark Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 140f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 33)
			{
				this.name = "Water Sphere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.alpha = 255;
				this.knockBackResist = 0f;
			}
			else if (this.type == 34)
			{
				this.name = "Cursed Skull";
				this.width = 26;
				this.height = 28;
				this.aiStyle = 10;
				this.damage = 35;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 35)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Head";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 32;
				this.defense = 10;
				this.lifeMax = 4400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 36)
			{
				this.displayName = "Skeletron";
				this.name = "Skeletron Hand";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 12;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 37)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Old Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 38)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Demolitionist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 39)
			{
				this.npcSlots = 6f;
				this.name = "Bone Serpent Head";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 40)
			{
				this.name = "Bone Serpent Body";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 15;
				this.defense = 12;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 41)
			{
				this.name = "Bone Serpent Tail";
				this.displayName = "Bone Serpent";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 10;
				this.defense = 18;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 5;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 1200f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 42)
			{
				this.name = "Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 48;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 43)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Man Eater";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 34;
				this.defense = 10;
				this.lifeMax = 110;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 44)
			{
				this.name = "Undead Miner";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 9;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 250f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 45)
			{
				this.name = "Tim";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 5000f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 46 || this.type == 303 || this.type == 337)
			{
				this.name = "Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2019;
			}
			else if (this.type == 47)
			{
				this.name = "Corrupt Bunny";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 48)
			{
				this.name = "Harpy";
				this.width = 24;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 25;
				this.defense = 8;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 300f;
			}
			else if (this.type == 49)
			{
				this.npcSlots = 0.5f;
				this.name = "Cave Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 13;
				this.defense = 2;
				this.lifeMax = 16;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 50)
			{
				this.boss = true;
				this.name = "King Slime";
				this.width = 98;
				this.height = 92;
				this.aiStyle = 15;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 2000;
				this.knockBackResist = 0f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 30;
				this.value = 10000f;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 51)
			{
				this.npcSlots = 0.5f;
				this.name = "Jungle Bat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 52)
			{
				this.name = "Doctor Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 53)
			{
				this.name = "The Groom";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 8;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 54)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Clothier";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 55)
			{
				this.noGravity = true;
				this.name = "Goldfish";
				this.width = 20;
				this.height = 18;
				this.aiStyle = 16;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.catchItem = 261;
			}
			else if (this.type == 56)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Snatcher";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 57)
			{
				this.noGravity = true;
				this.name = "Corrupt Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 58)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Piranha";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 25;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 50f;
			}
			else if (this.type == 59)
			{
				this.name = "Lava Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 15;
				this.defense = 10;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 1.1f;
				this.alpha = 50;
				this.lavaImmune = true;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 60)
			{
				this.npcSlots = 0.5f;
				this.name = "Hellbat";
				this.width = 22;
				this.height = 18;
				this.aiStyle = 14;
				this.damage = 35;
				this.defense = 8;
				this.lifeMax = 46;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 120f;
				this.scale = 1.1f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 61)
			{
				this.name = "Vulture";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 17;
				this.damage = 15;
				this.defense = 4;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 62)
			{
				this.npcSlots = 2f;
				this.name = "Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 300f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 63)
			{
				this.noGravity = true;
				this.name = "Blue Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 64)
			{
				this.noGravity = true;
				this.name = "Pink Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 65)
			{
				this.noGravity = true;
				this.name = "Shark";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 16;
				this.damage = 40;
				this.defense = 2;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 400f;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 66)
			{
				this.npcSlots = 2f;
				this.name = "Voodoo Demon";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 32;
				this.defense = 8;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 1000f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 67)
			{
				this.name = "Crab";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 68)
			{
				this.name = "Dungeon Guardian";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 11;
				this.damage = 1000;
				this.defense = 9999;
				this.lifeMax = 9999;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 69)
			{
				this.name = "Antlion";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 19;
				this.damage = 10;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 60f;
				this.behindTiles = true;
			}
			else if (this.type == 70)
			{
				this.npcSlots = 0.3f;
				this.name = "Spike Ball";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 20;
				this.damage = 32;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.dontTakeDamage = true;
				this.scale = 1.5f;
			}
			else if (this.type == 71)
			{
				this.npcSlots = 2f;
				this.name = "Dungeon Slime";
				this.width = 36;
				this.height = 24;
				this.aiStyle = 1;
				this.damage = 30;
				this.defense = 7;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 60;
				this.value = 150f;
				this.scale = 1.25f;
				this.knockBackResist = 0.6f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 72)
			{
				this.npcSlots = 0.3f;
				this.name = "Blazing Wheel";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 21;
				this.damage = 24;
				this.defense = 100;
				this.lifeMax = 100;
				this.alpha = 100;
				this.behindTiles = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.dontTakeDamage = true;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 73)
			{
				this.name = "Goblin Scout";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.name = "Bird";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 24;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				if (this.type == 74)
				{
					this.catchItem = 2015;
				}
				if (this.type == 297)
				{
					this.catchItem = 2016;
				}
				if (this.type == 298)
				{
					this.catchItem = 2017;
				}
				this.npcSlots = 0.4f;
			}
			else if (this.type == 75)
			{
				this.noGravity = true;
				this.name = "Pixie";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 77)
			{
				this.name = "Armored Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 78)
			{
				this.name = "Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 130;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.6f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 79)
			{
				this.name = "Dark Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 80)
			{
				this.name = "Light Mummy";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.55f;
				this.value = 700f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 81)
			{
				this.name = "Corrupt Slime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 170;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 82)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Wraith";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 83)
			{
				this.name = "Cursed Hammer";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 84)
			{
				this.name = "Enchanted Sword";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 85)
			{
				this.name = "Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 100000f;
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 86)
			{
				this.name = "Unicorn";
				this.width = 46;
				this.height = 42;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 87)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.npcSlots = 5f;
				this.name = "Wyvern Head";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 80;
				this.defense = 10;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 88)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Legs";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 89)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 2000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 90)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 2";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 91)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Body 3";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 92)
			{
				this.displayName = "Wyvern";
				this.noTileCollide = true;
				this.name = "Wyvern Tail";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 4000;
				this.soundHit = 7;
				this.soundKilled = 8;
				this.noGravity = true;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.scale = 1f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
			}
			else if (this.type == 93)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 16;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 94)
			{
				this.npcSlots = 1f;
				this.name = "Corruptor";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 5;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.55f;
				this.value = 500f;
			}
			else if (this.type == 95)
			{
				this.displayName = "Digger";
				this.name = "Digger Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 45;
				this.defense = 10;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
			}
			else if (this.type == 96)
			{
				this.displayName = "Digger";
				this.name = "Digger Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 28;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				NPC.noStream = true;
			}
			else if (this.type == 97)
			{
				this.displayName = "Digger";
				this.name = "Digger Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 0.9f;
				this.value = 300f;
				NPC.noStream = true;
			}
			else if (this.type == 98)
			{
				this.displayName = "World Feeder";
				this.npcSlots = 3.5f;
				this.name = "Seeker Head";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 70;
				this.defense = 36;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
			}
			else if (this.type == 99)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Body";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 55;
				this.defense = 40;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				NPC.noStream = true;
			}
			else if (this.type == 100)
			{
				this.displayName = "World Feeder";
				this.name = "Seeker Tail";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 40;
				this.defense = 44;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 700f;
				NPC.noStream = true;
			}
			else if (this.type == 101)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.name = "Clinger";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 320;
				this.soundHit = 1;
				this.knockBackResist = 0.2f;
				this.soundKilled = 1;
				this.value = 600f;
			}
			else if (this.type == 102)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Angler Fish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 80;
				this.defense = 22;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 103)
			{
				this.noGravity = true;
				this.name = "Green Jellyfish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 104)
			{
				this.name = "Werewolf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 400;
				this.soundHit = 6;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 105)
			{
				this.friendly = true;
				this.name = "Bound Goblin";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 106)
			{
				this.friendly = true;
				this.name = "Bound Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 107)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Goblin Tinkerer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 108)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 109)
			{
				this.name = "Clown";
				this.width = 34;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 8000f;
			}
			else if (this.type == 110)
			{
				this.name = "Skeleton Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 14;
				this.lifeMax = 210;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 111)
			{
				this.name = "Goblin Archer";
				this.scale = 0.95f;
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.7f;
				this.value = 200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 112)
			{
				this.name = "Vile Spit";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 9;
				this.damage = 65;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 0;
				this.soundKilled = 9;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.scale = 0.9f;
				this.alpha = 80;
			}
			else if (this.type == 113)
			{
				this.npcSlots = 10f;
				this.name = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 27;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 114)
			{
				this.name = "Wall of Flesh Eye";
				this.displayName = "Wall of Flesh";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 28;
				this.damage = 50;
				this.defense = 0;
				this.lifeMax = 8000;
				this.soundHit = 8;
				this.soundKilled = 10;
				this.noGravity = true;
				this.noTileCollide = true;
				this.behindTiles = true;
				this.knockBackResist = 0f;
				this.scale = 1.2f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.value = 80000f;
			}
			else if (this.type == 115)
			{
				this.name = "The Hungry";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 29;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 240;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.behindTiles = true;
				this.noTileCollide = true;
				this.knockBackResist = 1.1f;
			}
			else if (this.type == 116)
			{
				this.name = "The Hungry II";
				this.displayName = "The Hungry";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 30;
				this.defense = 6;
				this.lifeMax = 80;
				this.soundHit = 9;
				this.knockBackResist = 0.8f;
				this.soundKilled = 12;
			}
			else if (this.type == 117)
			{
				this.displayName = "Leech";
				this.name = "Leech Head";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 26;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 118)
			{
				this.displayName = "Leech";
				this.name = "Leech Body";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 22;
				this.defense = 6;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 119)
			{
				this.displayName = "Leech";
				this.name = "Leech Tail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 6;
				this.netAlways = true;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 60;
				this.soundHit = 9;
				this.soundKilled = 12;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
			}
			else if (this.type == 120)
			{
				this.name = "Chaos Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 30;
				this.lifeMax = 370;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 600f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 121)
			{
				this.name = "Slimer";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 14;
				this.damage = 45;
				this.defense = 20;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.alpha = 55;
				this.knockBackResist = 0.8f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 122)
			{
				this.noGravity = true;
				this.name = "Gastropod";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 22;
				this.damage = 60;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 600f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 123)
			{
				this.friendly = true;
				this.name = "Bound Mechanic";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 124)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Mechanic";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 125)
			{
				this.name = "Retinazer";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 30;
				this.defense = 10;
				this.damage = 45;
				this.lifeMax = 20000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 126)
			{
				this.name = "Spazmatism";
				this.width = 100;
				this.height = 110;
				this.aiStyle = 31;
				this.defense = 10;
				this.damage = 50;
				this.lifeMax = 23000;
				this.soundHit = 1;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 120000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 127)
			{
				this.name = "Skeletron Prime";
				this.width = 80;
				this.height = 102;
				this.aiStyle = 32;
				this.damage = 47;
				this.defense = 24;
				this.lifeMax = 28000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 120000f;
				this.knockBackResist = 0f;
				this.boss = true;
				this.npcSlots = 6f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.boss = true;
			}
			else if (this.type == 128)
			{
				this.name = "Prime Cannon";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 35;
				this.damage = 30;
				this.defense = 23;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 129)
			{
				this.name = "Prime Saw";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 33;
				this.damage = 56;
				this.defense = 38;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 130)
			{
				this.name = "Prime Vice";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 34;
				this.damage = 52;
				this.defense = 34;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 131)
			{
				this.name = "Prime Laser";
				this.width = 52;
				this.height = 52;
				this.aiStyle = 36;
				this.damage = 29;
				this.defense = 20;
				this.lifeMax = 6000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.netAlways = true;
			}
			else if (this.type == 132)
			{
				this.displayName = "Zombie";
				this.name = "Bald Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 5;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 133)
			{
				this.name = "Wandering Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 134)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.defense = 0;
				this.damage = 70;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.value = 120000f;
				this.scale = 1.25f;
				this.boss = true;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				flag = true;
			}
			else if (this.type == 135)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Body";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 55;
				this.defense = 30;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.netAlways = true;
				this.scale = 1.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
				flag = true;
			}
			else if (this.type == 136)
			{
				this.displayName = "The Destroyer";
				this.npcSlots = 5f;
				this.name = "The Destroyer Tail";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 37;
				this.damage = 40;
				this.defense = 35;
				this.lifeMax = 80000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.scale = 1.25f;
				this.netAlways = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				NPC.noStream = true;
				flag = true;
			}
			else if (this.type == 139)
			{
				this.npcSlots = 1f;
				this.name = "Probe";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.noGravity = true;
				this.knockBackResist = 0.8f;
				this.noTileCollide = true;
				flag = true;
			}
			else if (this.type == 137)
			{
				this.name = "Illuminant Bat";
				this.width = 26;
				this.height = 20;
				this.aiStyle = 14;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 138)
			{
				this.name = "Illuminant Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.85f;
				this.scale = 1.05f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 140)
			{
				this.name = "Possessed Armor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
			}
			else if (this.type == 141)
			{
				this.name = "Toxic Sludge";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 142)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Santa Claus";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 143)
			{
				this.name = "Snowman Gangsta";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 144)
			{
				this.name = "Mister Stabby";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 240;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 145)
			{
				this.name = "Snow Balla";
				this.width = 26;
				this.height = 40;
				this.aiStyle = 38;
				this.damage = 55;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 11;
				this.soundKilled = 15;
				this.knockBackResist = 0.6f;
				this.value = 400f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.coldDamage = true;
			}
			else if (this.type == 147)
			{
				this.name = "Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 4;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 50f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 148)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 149)
			{
				this.name = "Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2205;
			}
			else if (this.type == 150)
			{
				this.npcSlots = 0.5f;
				this.name = "Ice Bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 18;
				this.defense = 6;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 4;
				this.value = 130f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 151)
			{
				this.npcSlots = 0.5f;
				this.name = "Lava bat";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 16;
				this.lifeMax = 160;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 4;
				this.value = 400f;
				this.scale = 1.15f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 152)
			{
				this.npcSlots = 0.5f;
				this.name = "Giant Flying Fox";
				this.width = 38;
				this.height = 34;
				this.aiStyle = 14;
				this.damage = 80;
				this.defense = 24;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 4;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 153)
			{
				this.npcSlots = 2f;
				this.name = "Giant Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 470;
				this.soundHit = 7;
				this.knockBackResist = 0.3f;
				this.soundKilled = 5;
				this.value = 500f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 154)
			{
				this.npcSlots = 1.5f;
				this.name = "Ice Tortoise";
				this.width = 46;
				this.height = 32;
				this.aiStyle = 39;
				this.damage = 55;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 7;
				this.knockBackResist = 0.3f;
				this.soundKilled = 5;
				this.value = 450f;
				this.noGravity = false;
				this.buffImmune[31] = false;
			}
			else if (this.type == 155)
			{
				this.name = "Wolf";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 65;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 156)
			{
				this.npcSlots = 2f;
				this.name = "Red Devil";
				this.width = 28;
				this.height = 48;
				this.aiStyle = 14;
				this.damage = 50;
				this.defense = 40;
				this.lifeMax = 600;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 1200f;
				this.lavaImmune = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 157)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Arapaima";
				this.width = 74;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 75;
				this.defense = 30;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
			}
			else if (this.type == 158)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 14;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.knockBackResist = 0.75f;
				this.soundKilled = 6;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 159)
			{
				this.npcSlots = 2f;
				this.name = "Vampire";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 500;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 5000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 160)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Truffle";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 161)
			{
				this.name = "Zombie Eskimo";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 162)
			{
				this.name = "Frankenstein";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 18;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 600f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 163)
			{
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				this.timeLeft = NPC.activeTime * 2;
			}
			else if (this.type == 238)
			{
				this.noGravity = true;
				this.name = "Black Recluse";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 100;
				this.defense = 40;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 500f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 164)
			{
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 165)
			{
				this.noGravity = true;
				this.name = "Wall Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 10;
				this.lifeMax = 80;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 100f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.5f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 166)
			{
				this.name = "Swamp Thing";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 350;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 167)
			{
				this.name = "Undead Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 200f;
				this.buffImmune[31] = false;
				this.buffImmune[20] = true;
			}
			else if (this.type == 168)
			{
				this.name = "Corrupt Penguin";
				this.width = 16;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 169)
			{
				this.noGravity = true;
				this.name = "Ice Elemental";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 200;
				this.soundHit = 5;
				this.knockBackResist = 0.6f;
				this.soundKilled = 7;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.buffImmune[31] = false;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 170)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 171)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 2000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 172)
			{
				this.name = "Rune Wizard";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 200;
				this.defense = 30;
				this.lifeMax = 600;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 5000f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 173)
			{
				this.npcSlots = 1f;
				this.name = "Crimera";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.knockBackResist = 0.5f;
				this.value = 90f;
			}
			else if (this.type == 174)
			{
				this.npcSlots = 1f;
				this.name = "Herpling";
				this.width = 52;
				this.height = 26;
				this.aiStyle = 41;
				this.damage = 65;
				this.defense = 26;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 450f;
			}
			else if (this.type == 175)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Angry Trapper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.damage = 100;
				this.defense = 30;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0.25f;
				this.soundKilled = 1;
				this.value = 650f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 176)
			{
				this.name = "Moss Hornet";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 22;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 177)
			{
				this.npcSlots = 1f;
				this.name = "Derpling";
				this.width = 58;
				this.height = 44;
				this.aiStyle = 41;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
			}
			else if (this.type == 178)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Steampunker";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 179)
			{
				this.name = "Crimson Axe";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 23;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 200;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 180)
			{
				this.name = "Pigron";
				this.width = 44;
				this.height = 36;
				this.aiStyle = 2;
				this.damage = 70;
				this.defense = 16;
				this.lifeMax = 210;
				this.soundHit = 7;
				this.soundKilled = 17;
				this.knockBackResist = 0.5f;
				this.value = 4000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 181)
			{
				this.name = "Face Monster";
				this.width = 18;
				this.height = 44;
				this.aiStyle = 3;
				this.damage = 25;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 182)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Floaty Gross";
				this.width = 24;
				this.height = 62;
				this.aiStyle = 22;
				this.damage = 65;
				this.defense = 18;
				this.lifeMax = 240;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.alpha = 100;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 183)
			{
				this.name = "Crimslime";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 1;
				this.damage = 60;
				this.defense = 26;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 55;
				this.value = 400f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 184)
			{
				this.name = "Spiked Ice Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 12;
				this.defense = 8;
				this.lifeMax = 60;
				this.scale = 1.1f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 185)
			{
				this.name = "Snow Flinx";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 3;
				this.damage = 26;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 1.1f;
				this.value = 200f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 186)
			{
				this.name = "Pincushion Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 187)
			{
				this.name = "Slimed Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 55f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 188)
			{
				this.name = "Swamp Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 13;
				this.defense = 8;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 80f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 189)
			{
				this.name = "Twiggy Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 4;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 190)
			{
				this.name = "Cataract Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 4;
				this.lifeMax = 65;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 191)
			{
				this.name = "Sleepy Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 2;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 192)
			{
				this.name = "Dialated Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 18;
				this.defense = 2;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 193)
			{
				this.name = "Green Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 0;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 194)
			{
				this.name = "Purple Eye";
				this.displayName = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 14;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 75f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 195)
			{
				this.name = "Lost Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 42;
				this.damage = 10;
				this.defense = 30;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 196)
			{
				this.name = "Nymph";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 10000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 197)
			{
				this.name = "Armored Viking";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 28;
				this.lifeMax = 280;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 198)
			{
				this.name = "Lihzahrd";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 199)
			{
				this.name = "Lihzahrd";
				this.width = 42;
				this.height = 30;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 650f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 200)
			{
				this.name = "Female Zombie";
				this.displayName = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 12;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 65f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 201)
			{
				this.name = "Headache Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 12;
				this.lifeMax = 55;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 202)
			{
				this.name = "Misassembled Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 8;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 203)
			{
				this.name = "Pantless Skeleton";
				this.displayName = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 110f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 204)
			{
				this.name = "Spiked Jungle Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 28;
				this.defense = 8;
				this.lifeMax = 65;
				this.scale = 1.15f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 50;
				this.value = 300f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 205)
			{
				this.name = "Moth";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 5;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.knockBackResist = 0.4f;
				this.soundKilled = 1;
				this.value = 600f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 206)
			{
				this.name = "Icy Merman";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 30;
				this.lifeMax = 280;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.value = 500f;
				this.buffImmune[31] = false;
				this.coldDamage = true;
			}
			else if (this.type == 207)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Dye Trader";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 208)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Party Girl";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 209)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Cyborg";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 210)
			{
				this.name = "Bee";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 5;
				this.damage = 20;
				this.defense = 5;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 211)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 5;
				this.damage = 15;
				this.defense = 2;
				this.lifeMax = 10;
				this.soundHit = 1;
				this.knockBackResist = 0.5f;
				this.soundKilled = 1;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 212)
			{
				this.name = "Pirate Deckhand";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 16;
				this.lifeMax = 200;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 700f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 213)
			{
				this.name = "Pirate Corsair";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 214)
			{
				this.name = "Pirate Deadeye";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 12;
				this.lifeMax = 150;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 215)
			{
				this.name = "Pirate Crossbower";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 35;
				this.defense = 18;
				this.lifeMax = 260;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.35f;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 216)
			{
				this.name = "Pirate Captain";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 28;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 217)
			{
				this.name = "Cochineal Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 218)
			{
				this.name = "Cyan Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 219)
			{
				this.name = "Lac Beetle";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 16;
				this.value = 60f;
			}
			else if (this.type == 220)
			{
				this.name = "Sea Snail";
				this.width = 28;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 60f;
			}
			else if (this.type == 221)
			{
				this.noGravity = true;
				this.name = "Squid";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 20;
				this.defense = 2;
				this.lifeMax = 30;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 100f;
				this.alpha = 20;
			}
			else if (this.type == 222)
			{
				this.name = "Queen Bee";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 43;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 3400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 100000f;
				this.npcSlots = 5f;
			}
			else if (this.type == 223)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 16;
				this.defense = 8;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.45f;
				this.value = 70f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 224)
			{
				this.name = "Flying Fish";
				this.width = 32;
				this.height = 18;
				this.aiStyle = 44;
				this.damage = 9;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 1;
				this.knockBackResist = 0.8f;
				this.soundKilled = 1;
				this.value = 90f;
				this.buffImmune[31] = false;
			}
			if (this.type == 225)
			{
				this.name = "Umbrella Slime";
				this.width = 38;
				this.height = 26;
				this.aiStyle = 1;
				this.damage = 10;
				this.defense = 5;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.75f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 226)
			{
				this.npcSlots = 0.5f;
				this.name = "Flying Snake";
				this.width = 34;
				this.height = 50;
				this.aiStyle = 14;
				this.damage = 85;
				this.defense = 28;
				this.lifeMax = 260;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 400f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 227)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Painter";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 228)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Witch Doctor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 229)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Pirate";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 230)
			{
				this.name = "Goldfish";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 261;
			}
			else if (this.type == 231)
			{
				this.name = "Hornet Fatty";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 22;
				this.defense = 16;
				this.lifeMax = 50;
				this.soundHit = 1;
				this.knockBackResist = 0.3f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 232)
			{
				this.name = "Hornet Honey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 233)
			{
				this.name = "Hornet Leafy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.45f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 234)
			{
				this.name = "Hornet Spikey";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 32;
				this.defense = 6;
				this.lifeMax = 42;
				this.soundHit = 1;
				this.knockBackResist = 0.55f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 235)
			{
				this.name = "Hornet Stingy";
				this.width = 34;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 34;
				this.defense = 4;
				this.lifeMax = 38;
				this.soundHit = 1;
				this.knockBackResist = 0.6f;
				this.soundKilled = 1;
				this.value = 200f;
				this.noGravity = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 236)
			{
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 237)
			{
				this.noGravity = true;
				this.name = "Jungle Creeper";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.timeLeft = NPC.activeTime * 2;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 239)
			{
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 3;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 240)
			{
				this.noGravity = true;
				this.name = "Blood Crawler";
				this.width = 50;
				this.height = 20;
				this.aiStyle = 40;
				this.damage = 30;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.5f;
				this.value = 130f;
				this.timeLeft = NPC.activeTime * 2;
				this.buffImmune[20] = true;
			}
			else if (this.type == 241)
			{
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.name = "Blood Feeder";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 16;
				this.damage = 30;
				this.defense = 4;
				this.lifeMax = 20;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 350f;
			}
			else if (this.type == 242)
			{
				this.noGravity = true;
				this.name = "Blood Jelly";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 75;
				this.defense = 20;
				this.lifeMax = 150;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.value = 800f;
				this.alpha = 20;
			}
			else if (this.type == 243)
			{
				this.name = "Ice Golem";
				this.width = 30;
				this.height = 114;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 32;
				this.lifeMax = 4000;
				this.soundHit = 5;
				this.soundKilled = 7;
				this.knockBackResist = 0.05f;
				this.value = (float)Item.buyPrice(0, 1, 50, 0);
				this.buffImmune[20] = true;
				this.buffImmune[44] = true;
				this.coldDamage = true;
			}
			else if (this.type == 244)
			{
				this.name = "Rainbow Slime";
				this.width = 60;
				this.height = 42;
				this.aiStyle = 1;
				this.damage = 85;
				this.defense = 26;
				this.lifeMax = 400;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.alpha = 175;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.3f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 245)
			{
				this.name = "Golem";
				this.width = 140;
				this.height = 140;
				this.aiStyle = 45;
				this.damage = 72;
				this.defense = 26;
				this.lifeMax = 9000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.alpha = 255;
				this.boss = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 246)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 46;
				this.damage = 64;
				this.defense = 20;
				this.lifeMax = 16000;
				this.soundHit = 4;
				this.soundKilled = 0;
				this.knockBackResist = 0f;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 247 || this.type == 248)
			{
				this.noGravity = true;
				this.name = "Golem Fist";
				this.width = 40;
				this.height = 30;
				this.aiStyle = 47;
				this.damage = 59;
				this.defense = 28;
				this.lifeMax = 7000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.alpha = 255;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 249)
			{
				this.noGravity = true;
				this.name = "Golem Head";
				this.width = 70;
				this.height = 70;
				this.aiStyle = 48;
				this.damage = 80;
				this.defense = 32;
				this.lifeMax = 11000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.dontTakeDamage = true;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
			}
			else if (this.type == 250)
			{
				this.name = "Angry Nimbus";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 49;
				this.damage = 50;
				this.defense = 24;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 300f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 251)
			{
				this.name = "Eyezor";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 50;
				this.defense = 30;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = (float)Item.buyPrice(0, 0, 50, 0);
				this.buffImmune[31] = false;
			}
			else if (this.type == 252)
			{
				this.noGravity = true;
				this.npcSlots = 0.5f;
				this.name = "Parrot";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 5;
				this.damage = 80;
				this.defense = 12;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 4;
				this.value = 500f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 253)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Reaper";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 80;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 1500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.6f;
			}
			else if (this.type == 254)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 10;
				this.lifeMax = 180;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 255)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1200f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 256)
			{
				this.noGravity = true;
				this.name = "Fungo Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 18;
				this.damage = 90;
				this.defense = 20;
				this.lifeMax = 140;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.alpha = 20;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 257)
			{
				this.name = "Anomura Fungus";
				this.width = 44;
				this.height = 34;
				this.aiStyle = 3;
				this.damage = 38;
				this.defense = 24;
				this.lifeMax = 230;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1300f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 258)
			{
				this.name = "Mushi Ladybug";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 16;
				this.lifeMax = 220;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.3f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 259)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Fungi Bulb";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.damage = 24;
				this.defense = 4;
				this.lifeMax = 90;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 350f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 260)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Giant Fungi Bulb";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 13;
				this.damage = 70;
				this.defense = 20;
				this.lifeMax = 300;
				this.soundHit = 1;
				this.knockBackResist = 0f;
				this.soundKilled = 1;
				this.value = 1250f;
				this.buffImmune[20] = true;
				this.npcSlots = 0.3f;
			}
			else if (this.type == 261)
			{
				this.name = "Fungi Spore";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.damage = 80;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 262)
			{
				this.noTileCollide = true;
				this.name = "Plantera";
				this.width = 86;
				this.height = 86;
				this.aiStyle = 51;
				this.damage = 50;
				this.defense = 14;
				this.lifeMax = 30000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = (float)Item.buyPrice(0, 15, 0, 0);
				this.noGravity = true;
				this.boss = true;
				this.npcSlots = 16f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 263)
			{
				this.noTileCollide = true;
				this.noGravity = true;
				this.name = "Plantera's Hook";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 52;
				this.damage = 60;
				this.defense = 24;
				this.lifeMax = 4000;
				this.dontTakeDamage = true;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.buffImmune[20] = true;
			}
			else if (this.type == 264)
			{
				this.name = "Plantera's Tentacle";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 53;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 1000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.buffImmune[20] = true;
			}
			else if (this.type == 265)
			{
				this.name = "Spore";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 50;
				this.damage = 70;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.npcSlots = 0f;
			}
			else if (this.type == 266)
			{
				this.name = "Brain of Cthulhu";
				this.dontTakeDamage = true;
				this.width = 160;
				this.height = 110;
				this.aiStyle = 54;
				this.damage = 30;
				this.defense = 14;
				this.lifeMax = 1000;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.knockBackResist = 0f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.timeLeft = NPC.activeTime * 30;
				this.boss = true;
				this.value = 50000f;
				this.npcSlots = 6f;
			}
			else if (this.type == 267)
			{
				this.name = "Creeper";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.damage = 20;
				this.defense = 10;
				this.lifeMax = 100;
				this.soundHit = 9;
				this.soundKilled = 11;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0.8f;
			}
			else if (this.type == 268)
			{
				this.noGravity = true;
				this.name = "Ichor Sticker";
				this.width = 28;
				this.height = 56;
				this.aiStyle = 22;
				this.damage = 55;
				this.defense = 20;
				this.lifeMax = 340;
				this.soundHit = 13;
				this.soundKilled = 19;
				this.knockBackResist = 0.6f;
				this.value = 450f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 269)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 34;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 270)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 55;
				this.defense = 50;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 271)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 40;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.25f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 272)
			{
				this.name = "Rusty Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.35f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 273)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 274)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 34;
				this.lifeMax = 350;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 275)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 45;
				this.defense = 50;
				this.lifeMax = 550;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.15f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 276)
			{
				this.name = "Blue Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 85;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 277)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 70;
				this.defense = 32;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 278)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 65;
				this.defense = 48;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 279)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 40;
				this.defense = 54;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.2f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 280)
			{
				this.name = "Hell Armored Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 75;
				this.defense = 34;
				this.lifeMax = 500;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 281)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 40;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 282)
			{
				this.name = "Ragged Caster";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 28;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 283)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 18;
				this.lifeMax = 300;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.55f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 284)
			{
				this.name = "Necromancer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 35;
				this.defense = 24;
				this.lifeMax = 450;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 285)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 50;
				this.defense = 12;
				this.lifeMax = 200;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 286)
			{
				this.name = "Diabolist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 8;
				this.damage = 60;
				this.defense = 10;
				this.lifeMax = 250;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 1500f;
				this.npcSlots = 2f;
				this.buffImmune[20] = true;
			}
			else if (this.type == 287)
			{
				this.name = "Bone Lee";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 42;
				this.lifeMax = 1000;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 288)
			{
				this.name = "Dungeon Spirit";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 56;
				this.damage = 70;
				this.defense = 30;
				this.lifeMax = 200;
				this.knockBackResist = 0.2f;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 500f;
				this.noTileCollide = true;
				this.noGravity = true;
				flag = true;
			}
			else if (this.type == 289)
			{
				this.name = "Giant Cursed Skull";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 10;
				this.damage = 60;
				this.defense = 20;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 150f;
				this.knockBackResist = 0.2f;
				this.npcSlots = 0.75f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 290)
			{
				this.name = "Paladin";
				this.width = 34;
				this.height = 62;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 5000;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.knockBackResist = 0f;
				this.value = 50000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = true;
			}
			else if (this.type == 291)
			{
				this.name = "Skeleton Sniper";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 292)
			{
				this.name = "Tactical Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 293)
			{
				this.name = "Skeleton Commando";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 400;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 1000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 294)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 34;
				this.defense = 6;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.9f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 295)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 28;
				this.defense = 12;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.7f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 296)
			{
				this.name = "Angry Bones";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 24;
				this.defense = 14;
				this.lifeMax = 120;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 299)
			{
				this.name = "Squirrel";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2018;
			}
			else if (this.type == 300)
			{
				this.name = "Mouse";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 4;
				this.npcSlots = 0.25f;
				this.catchItem = 2003;
			}
			else if (this.type == 301)
			{
				this.name = "Raven";
				this.width = 36;
				this.height = 26;
				this.aiStyle = 17;
				this.damage = 12;
				this.defense = 2;
				this.lifeMax = 35;
				this.soundHit = 1;
				this.knockBackResist = 0.85f;
				this.soundKilled = 1;
				this.value = 50f;
			}
			if (this.type == 302)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 304)
			{
				this.name = "Hoppin' Jack";
				this.width = 34;
				this.height = 28;
				this.aiStyle = 1;
				this.damage = 80;
				this.defense = 20;
				this.lifeMax = 175;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 500f;
				this.scale = 1.1f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.knockBackResist = 0.5f;
				this.npcSlots = 0.3f;
			}
			else if (this.type >= 305 && this.type <= 314)
			{
				this.name = "Scarecrow";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 305 || this.type == 310)
				{
					this.damage = 60;
					this.defense = 18;
					this.lifeMax = 500;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 306 || this.type == 311)
				{
					this.damage = 52;
					this.defense = 14;
					this.lifeMax = 400;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 307 || this.type == 312)
				{
					this.damage = 78;
					this.defense = 16;
					this.lifeMax = 600;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
				else if (this.type == 308 || this.type == 313)
				{
					this.damage = 66;
					this.defense = 14;
					this.lifeMax = 650;
					this.knockBackResist = 0.35f;
					this.scale = 0.95f;
				}
				else if (this.type == 309 || this.type == 314)
				{
					this.damage = 52;
					this.defense = 26;
					this.lifeMax = 450;
					this.knockBackResist = 0.5f;
					this.scale = 1.1f;
				}
			}
			else if (this.type == 315)
			{
				this.name = "Headless Horseman";
				this.width = 74;
				this.height = 70;
				this.aiStyle = 26;
				this.damage = 130;
				this.defense = 40;
				this.lifeMax = 10000;
				this.soundHit = 12;
				this.soundKilled = 18;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 316)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Ghost";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 40;
				this.defense = 14;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 700f;
				flag = true;
				this.knockBackResist = 0.7f;
			}
			else if (this.type == 317)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 16;
				this.defense = 6;
				this.lifeMax = 75;
				this.soundHit = 1;
				this.knockBackResist = 0.7f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 318)
			{
				this.name = "Demon Eye";
				this.width = 30;
				this.height = 32;
				this.aiStyle = 2;
				this.damage = 20;
				this.defense = 4;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.knockBackResist = 0.65f;
				this.soundKilled = 1;
				this.value = 100f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 319)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 6;
				this.lifeMax = 40;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.6f;
				this.value = 85f;
				this.buffImmune[31] = false;
				this.scale = 0.9f;
			}
			else if (this.type == 320)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 15;
				this.defense = 8;
				this.lifeMax = 60;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 105f;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 321)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 20;
				this.defense = 14;
				this.lifeMax = 34;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.3f;
				this.value = 120f;
				this.buffImmune[31] = false;
				this.scale = 1.1f;
			}
			else if (this.type == 322)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 23;
				this.defense = 0;
				this.lifeMax = 115;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.65f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 323)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 18;
				this.defense = 10;
				this.lifeMax = 65;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 120f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 324)
			{
				this.name = "Skeleton";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 22;
				this.defense = 10;
				this.lifeMax = 70;
				this.soundHit = 2;
				this.soundKilled = 2;
				this.knockBackResist = 0.4f;
				this.value = 130f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.scale = 1.05f;
			}
			else if (this.type == 325)
			{
				this.name = "Mourning Wood";
				this.width = 164;
				this.height = 154;
				this.aiStyle = 57;
				this.damage = 120;
				this.defense = 28;
				this.lifeMax = 12000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				flag = true;
			}
			else if (this.type == 326)
			{
				this.name = "Splinterling";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 2000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 327)
			{
				this.name = "Pumpking";
				this.width = 100;
				this.height = 100;
				this.aiStyle = 58;
				this.damage = 50;
				this.defense = 36;
				this.lifeMax = 22000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.value = 50000f;
				this.knockBackResist = 0f;
				flag = true;
			}
			else if (this.type == 328)
			{
				this.name = "Pumpking";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 59;
				this.damage = 65;
				this.defense = 14;
				this.lifeMax = 5000;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				flag = true;
				this.dontTakeDamage = true;
				this.npcSlots = 0f;
			}
			else if (this.type == 329)
			{
				this.name = "Hellhound";
				this.width = 46;
				this.height = 30;
				this.aiStyle = 26;
				this.damage = 80;
				this.defense = 38;
				this.lifeMax = 1200;
				this.soundHit = 1;
				this.soundKilled = 5;
				this.knockBackResist = 0.3f;
				this.value = 3000f;
				flag = true;
			}
			else if (this.type == 330)
			{
				this.noGravity = true;
				this.noTileCollide = true;
				this.name = "Poltergeist";
				this.width = 24;
				this.height = 44;
				this.aiStyle = 22;
				this.damage = 90;
				this.defense = 44;
				this.lifeMax = 2000;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.alpha = 100;
				this.value = 4500f;
				flag = true;
				this.knockBackResist = 0.4f;
			}
			else if (this.type == 331)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			else if (this.type == 332)
			{
				this.name = "Zombie";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 14;
				this.defense = 6;
				this.lifeMax = 45;
				this.soundHit = 1;
				this.soundKilled = 2;
				this.knockBackResist = 0.5f;
				this.value = 60f;
				this.buffImmune[31] = false;
			}
			if (this.type == 333)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 7;
				this.defense = 2;
				this.lifeMax = 25;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 334)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 6;
				this.defense = 2;
				this.lifeMax = 23;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.scale = 0.9f;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 335)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 8;
				this.defense = 3;
				this.lifeMax = 29;
				this.scale = 1.05f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			if (this.type == 336)
			{
				this.name = "Slime";
				this.width = 24;
				this.height = 18;
				this.aiStyle = 1;
				this.damage = 5;
				this.defense = 1;
				this.lifeMax = 22;
				this.scale = 0.85f;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 25f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type >= 338 && this.type <= 340)
			{
				this.name = "Zombie Elf";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.value = 1200f;
				this.buffImmune[31] = false;
				this.npcSlots = 0.5f;
				if (this.type == 338)
				{
					this.damage = 65;
					this.defense = 18;
					this.lifeMax = 600;
					this.knockBackResist = 0.4f;
				}
				else if (this.type == 339)
				{
					this.damage = 52;
					this.defense = 24;
					this.lifeMax = 700;
					this.knockBackResist = 0.2f;
					this.scale = 1.05f;
				}
				else if (this.type == 340)
				{
					this.damage = 78;
					this.defense = 14;
					this.lifeMax = 500;
					this.knockBackResist = 0.25f;
					this.scale = 0.9f;
				}
			}
			else if (this.type == 341)
			{
				this.name = "Present Mimic";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 25;
				this.damage = 100;
				this.defense = 32;
				this.lifeMax = 900;
				this.soundHit = 4;
				this.soundKilled = 6;
				this.value = (float)Item.buyPrice(0, 0, 20, 0);
				this.knockBackResist = 0.25f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
			}
			else if (this.type == 342)
			{
				this.name = "Gingerbread Man";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 90;
				this.defense = 26;
				this.lifeMax = 750;
				this.soundHit = 7;
				this.soundKilled = 6;
				this.knockBackResist = 0.2f;
				this.value = 1800f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 343)
			{
				this.name = "Yeti";
				this.width = 38;
				this.height = 78;
				this.aiStyle = 3;
				this.damage = 140;
				this.defense = 50;
				this.lifeMax = 3500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.value = 3000f;
				this.buffImmune[31] = false;
				this.npcSlots = 2f;
			}
			else if (this.type == 344)
			{
				this.name = "Everscream";
				this.width = 172;
				this.height = 130;
				this.aiStyle = 57;
				this.damage = 110;
				this.defense = 38;
				this.lifeMax = 13000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 3f;
			}
			else if (this.type == 345)
			{
				this.name = "Ice Queen";
				this.width = 130;
				this.height = 140;
				this.aiStyle = 60;
				this.damage = 130;
				this.defense = 38;
				this.lifeMax = 34000;
				this.soundHit = 7;
				this.soundKilled = 5;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 5f;
				this.coldDamage = true;
			}
			else if (this.type == 346)
			{
				this.name = "Santa-NK1";
				this.width = 112;
				this.height = 140;
				this.aiStyle = 61;
				this.damage = 120;
				this.defense = 56;
				this.lifeMax = 18000;
				this.soundHit = 4;
				this.soundKilled = 14;
				this.knockBackResist = 0f;
				this.value = 10000f;
				this.buffImmune[20] = true;
				this.npcSlots = 4f;
			}
			else if (this.type == 347)
			{
				this.name = "Elf Copter";
				this.width = 50;
				this.height = 50;
				this.aiStyle = 62;
				this.damage = 60;
				this.defense = 28;
				this.lifeMax = 1200;
				this.soundHit = 4;
				this.knockBackResist = 0.4f;
				this.soundKilled = 14;
				this.value = 1000f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 348)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 26;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.4f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 349)
			{
				this.name = "Nutcracker";
				this.width = 28;
				this.height = 76;
				this.aiStyle = 3;
				this.damage = 120;
				this.defense = 42;
				this.lifeMax = 1800;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 1500f;
				this.buffImmune[31] = false;
				this.npcSlots = 1.5f;
			}
			else if (this.type == 350)
			{
				this.name = "Elf Archer";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 3;
				this.damage = 80;
				this.defense = 30;
				this.lifeMax = 900;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.45f;
				this.value = 900f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
			}
			else if (this.type == 351)
			{
				this.name = "Krampus";
				this.width = 18;
				this.height = 90;
				this.aiStyle = 3;
				this.damage = 110;
				this.defense = 40;
				this.lifeMax = 2500;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.1f;
				this.value = 3000f;
				this.buffImmune[20] = true;
				this.buffImmune[31] = false;
				this.npcSlots = 1.75f;
			}
			else if (this.type == 352)
			{
				this.name = "Flocko";
				this.width = 54;
				this.height = 54;
				this.aiStyle = 63;
				this.damage = 90;
				this.defense = 12;
				this.lifeMax = 800;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.value = 500f;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[39] = true;
				this.knockBackResist = 0.4f;
				this.noGravity = true;
				this.noTileCollide = true;
				this.npcSlots = 2f;
				this.coldDamage = true;
			}
			else if (this.type == 353)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Stylist";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 354)
			{
				this.friendly = true;
				this.name = "Webbed Stylist";
				this.width = 18;
				this.height = 34;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 355)
			{
				this.name = "Firefly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 1992;
			}
			else if (this.type == 356)
			{
				this.name = "Butterfly";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 65;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.25f;
				this.noGravity = true;
				this.catchItem = 1994;
			}
			else if (this.type == 357)
			{
				this.name = "Worm";
				this.width = 10;
				this.height = 4;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.1f;
				this.catchItem = 2002;
				this.friendly = true;
			}
			else if (this.type == 358)
			{
				this.name = "Lightning Bug";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 64;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.2f;
				this.noGravity = true;
				this.catchItem = 2004;
			}
			else if (this.type == 359)
			{
				this.name = "Snail";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2006;
			}
			else if (this.type == 360)
			{
				this.name = "Glowing Snail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 67;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.5f;
				this.noGravity = true;
				this.catchItem = 2007;
			}
			else if (this.type == 361)
			{
				this.name = "Frog";
				this.width = 18;
				this.height = 20;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2121;
			}
			else if (this.type == 362)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 363)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2122;
			}
			else if (this.type == 364)
			{
				this.name = "Duck";
				this.width = 22;
				this.height = 26;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 365)
			{
				this.name = "Duck";
				this.width = 28;
				this.height = 22;
				this.aiStyle = 68;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = 2123;
			}
			else if (this.type == 366 || this.type == 367)
			{
				this.name = "Scorpion";
				this.width = 26;
				this.height = 18;
				this.aiStyle = 7;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.catchItem = (short)(2156 + this.type - 366);
			}
			else if (this.type == 368)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Travelling Merchant";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 369)
			{
				this.townNPC = true;
				this.friendly = true;
				this.name = "Angler";
				this.width = 18;
				this.height = 40;
				this.aiStyle = 7;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
			}
			else if (this.type == 370)
			{
				this.name = "Duke Fishron";
				this.width = 150;
				this.height = 100;
				this.aiStyle = 69;
				this.damage = 100;
				this.defense = 50;
				this.lifeMax = 50000;
				this.knockBackResist = 0f;
				this.noTileCollide = true;
				this.noGravity = true;
				this.npcSlots = 10f;
				this.soundHit = 14;
				this.soundKilled = 20;
				this.value = 10000f;
				this.boss = true;
				this.netAlways = true;
				this.timeLeft = NPC.activeTime * 30;
				this.buffImmune[20] = true;
				this.buffImmune[24] = true;
				this.buffImmune[31] = true;
				this.buffImmune[44] = true;
			}
			else if (this.type == 371)
			{
				this.name = "Detonating Bubble";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 70;
				this.damage = 100;
				this.defense = 0;
				this.lifeMax = 1;
				this.soundHit = 3;
				this.soundKilled = 3;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 372)
			{
				this.noGravity = true;
				this.name = "Sharkron";
				this.width = 120;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 100;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 373)
			{
				this.noGravity = true;
				this.name = "Sharkron2";
				this.displayName = "Sharkron";
				this.width = 100;
				this.height = 24;
				this.aiStyle = 71;
				this.damage = 120;
				this.defense = 100;
				this.lifeMax = 100;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.knockBackResist = 0f;
				this.alpha = 255;
			}
			else if (this.type == 374)
			{
				this.name = "Truffle Worm";
				this.width = 20;
				this.height = 10;
				this.aiStyle = 66;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 375)
			{
				this.displayName = "Truffle Worm";
				this.name = "Truffle Worm Digger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 6;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.noGravity = true;
				this.noTileCollide = true;
				this.knockBackResist = 0f;
				this.behindTiles = true;
				this.npcSlots = 0.15f;
				this.catchItem = 2673;
			}
			else if (this.type == 376)
			{
				this.friendly = true;
				this.name = "Sleeping Angler";
				this.width = 34;
				this.height = 8;
				this.aiStyle = 0;
				this.damage = 10;
				this.defense = 15;
				this.lifeMax = 250;
				this.soundHit = 1;
				this.soundKilled = 6;
				this.knockBackResist = 0.5f;
				this.scale = 0.9f;
			}
			else if (this.type == 377)
			{
				this.name = "Grasshopper";
				this.width = 14;
				this.height = 12;
				this.aiStyle = 1;
				this.damage = 0;
				this.defense = 0;
				this.lifeMax = 5;
				this.soundHit = 1;
				this.soundKilled = 1;
				this.friendly = true;
				this.catchItem = 2740;
				this.npcSlots = 0.1f;
			}
			if (flag)
			{
				for (int n = 0; n < 140; n++)
				{
					this.buffImmune[n] = true;
				}
			}
			if (Main.dedServ)
			{
				this.frame = default(Rectangle);
			}
			else if (Main.NPCLoaded[this.type])
			{
				this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
			}
			else
			{
				this.setFrameSize = true;
			}
			if (scaleOverride > 0f)
			{
				int num = (int)((float)this.width * this.scale);
				int num2 = (int)((float)this.height * this.scale);
				this.position.X = this.position.X + (float)(num / 2);
				this.position.Y = this.position.Y + (float)num2;
				this.scale = scaleOverride;
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
				if (this.height == 16 || this.height == 32)
				{
					this.height++;
				}
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)this.height;
			}
			else
			{
				this.width = (int)((float)this.width * this.scale);
				this.height = (int)((float)this.height * this.scale);
			}
			if (this.buffImmune[20])
			{
				this.buffImmune[70] = true;
			}
			this.life = this.lifeMax;
			this.defDamage = this.damage;
			this.defDefense = this.defense;
			this.netID = this.type;
			this.displayName = Lang.npcName(this.netID, false);
		}
		public void AI()
		{
			if (this.aiStyle == 0)
			{
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].talkNPC == this.whoAmI)
					{
						if (this.type == 105)
						{
							this.Transform(107);
							return;
						}
						if (this.type == 106)
						{
							this.Transform(108);
							return;
						}
						if (this.type == 123)
						{
							this.Transform(124);
							return;
						}
						if (this.type == 354)
						{
							this.Transform(353);
							return;
						}
						if (this.type == 376)
						{
							this.Transform(369);
							return;
						}
					}
				}
				if (this.type != 376)
				{
					this.TargetClosest(true);
					this.spriteDirection = this.direction;
				}
				if (this.type == 376)
				{
					if (this.wet || Main.tile[(int)(this.center().X / 16f), (int)(this.position.Y - 4f) / 16].liquid > 0)
					{
						this.velocity.Y = -0.4f;
						int num = 1;
						if (this.center().X / 16f > (float)(Main.maxTilesX / 2))
						{
							num = -1;
						}
						int num2 = 12;
						int num3 = (int)this.center().X / 16;
						int j = (int)this.center().Y / 16;
						bool flag = false;
						if (num > 0)
						{
							for (int k = num3; k < num3 + num2; k++)
							{
								if (WorldGen.SolidTile(k, j))
								{
									flag = true;
								}
							}
						}
						else
						{
							for (int l = num3; l > num3 - num2; l--)
							{
								if (WorldGen.SolidTile(l, j))
								{
									flag = true;
								}
							}
						}
						if (flag)
						{
							this.velocity.X = this.velocity.X * 0.99f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
							}
						}
						else
						{
							this.velocity.X = this.velocity.X + (float)num * 0.01f;
							if (this.velocity.X > 0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
							if (this.velocity.X < -0.2f)
							{
								this.velocity.X = this.velocity.X * 0.95f;
							}
						}
					}
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
				else
				{
					this.velocity.X = this.velocity.X * 0.93f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
						return;
					}
				}
			}
			else if (this.aiStyle == 1)
			{
				if (this.type == 244)
				{
					float num4 = (float)Main.DiscoR / 255f;
					float num5 = (float)Main.DiscoG / 255f;
					float num6 = (float)Main.DiscoB / 255f;
					num4 *= 1f;
					num5 *= 1f;
					num6 *= 1f;
					Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num4, num5, num6);
					this.color.R = (byte)Main.DiscoR;
					this.color.G = (byte)Main.DiscoG;
					this.color.B = (byte)Main.DiscoB;
					this.color.A = 100;
					this.alpha = 175;
				}
				bool flag2 = false;
				if (!Main.dayTime || this.life != this.lifeMax || (double)this.position.Y > Main.worldSurface * 16.0)
				{
					flag2 = true;
				}
				if (this.type == 81)
				{
					flag2 = true;
					if (Main.rand.Next(30) == 0)
					{
						int num7 = Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						Main.dust[num7].velocity *= 0.3f;
					}
				}
				if (this.type == 377 && this.target != 255 && !Main.player[this.target].dead && Vector2.Distance(this.center(), Main.player[this.target].center()) <= 200f)
				{
					flag2 = true;
				}
				if (this.type == 183)
				{
					flag2 = true;
				}
				if (this.type == 304)
				{
					flag2 = true;
				}
				if (this.type == 147 && Main.rand.Next(10) == 0)
				{
					int num8 = Dust.NewDust(this.position, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num8].noGravity = true;
					Main.dust[num8].velocity *= 0.1f;
				}
				if (this.type == 244)
				{
					flag2 = true;
					this.ai[0] += 2f;
				}
				if (this.type == 184)
				{
					if (Main.rand.Next(8) == 0)
					{
						int num9 = Dust.NewDust(this.position - this.velocity, this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num9].noGravity = true;
						Main.dust[num9].velocity *= 0.15f;
					}
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet)
					{
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num10 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector.X;
						float num11 = Main.player[this.target].position.Y - vector.Y;
						float num12 = (float)Math.Sqrt((double)(num10 * num10 + num11 * num11));
						if (num12 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -40f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num11 = Main.player[this.target].position.Y - vector.Y - (float)Main.rand.Next(0, 200);
								num12 = (float)Math.Sqrt((double)(num10 * num10 + num11 * num11));
								num12 = 4.5f / num12;
								num10 *= num12;
								num11 *= num12;
								this.localAI[0] = 50f;
								Projectile.NewProjectile(vector.X, vector.Y, num10, num11, 174, 9, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 204)
				{
					flag2 = true;
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					if (!this.wet)
					{
						Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num13 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector2.X;
						float num14 = Main.player[this.target].position.Y - vector2.Y;
						float num15 = (float)Math.Sqrt((double)(num13 * num13 + num14 * num14));
						if (num15 < 400f && Collision.CanHit(new Vector2(this.position.X, this.position.Y - 20f), this.width, this.height + 20, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && this.velocity.Y == 0f)
						{
							this.ai[0] = -80f;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
							}
							if (Main.netMode != 1 && this.localAI[0] == 0f)
							{
								num14 = Main.player[this.target].position.Y - vector2.Y - (float)Main.rand.Next(-30, 20);
								num14 -= num15 * 0.05f;
								num13 = Main.player[this.target].position.X - vector2.X - (float)Main.rand.Next(-20, 20);
								num15 = (float)Math.Sqrt((double)(num13 * num13 + num14 * num14));
								num15 = 7f / num15;
								num13 *= num15;
								num14 *= num15;
								this.localAI[0] = 65f;
								Projectile.NewProjectile(vector2.X, vector2.Y, num13, num14, 176, 13, 0f, Main.myPlayer, 0f, 0f);
							}
						}
					}
				}
				if (this.type == 377)
				{
					if (this.localAI[2] < 90f)
					{
						this.localAI[2] += 1f;
					}
					else
					{
						this.friendly = false;
					}
				}
				if (this.type == 59)
				{
					Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
					int num16 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.7f);
					Main.dust[num16].noGravity = true;
				}
				if (this.ai[2] > 1f)
				{
					this.ai[2] -= 1f;
				}
				if (this.wet)
				{
					if (this.collideY)
					{
						this.velocity.Y = -2f;
					}
					if (this.velocity.Y < 0f && this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					if (this.velocity.Y > 0f)
					{
						this.ai[3] = this.position.X;
					}
					if (this.type == 59)
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						else if (this.directionY < 0)
						{
							this.velocity.Y = this.velocity.Y - 0.8f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -10f)
						{
							this.velocity.Y = -10f;
						}
					}
					else
					{
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					if (this.ai[2] == 1f && flag2)
					{
						this.TargetClosest(true);
					}
				}
				this.aiAction = 0;
				if (this.ai[2] == 0f)
				{
					this.ai[0] = -100f;
					this.ai[2] = 1f;
					this.TargetClosest(true);
				}
				if (this.velocity.Y == 0f)
				{
					if (this.ai[3] == this.position.X)
					{
						this.direction *= -1;
						this.ai[2] = 200f;
					}
					this.ai[3] = 0f;
					this.velocity.X = this.velocity.X * 0.8f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if (flag2)
					{
						this.ai[0] += 1f;
					}
					this.ai[0] += 1f;
					if (this.type == 59)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 71)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 138)
					{
						this.ai[0] += 2f;
					}
					if (this.type == 183)
					{
						this.ai[0] += 1f;
					}
					if (this.type == 304)
					{
						float num17 = (float)((1 - this.life / this.lifeMax) * 10);
						this.ai[0] += num17;
					}
					if (this.type == 377)
					{
						this.ai[0] += 3f;
					}
					if (this.type == 81)
					{
						if (this.scale >= 0f)
						{
							this.ai[0] += 4f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
					if (this.ai[0] >= 0f)
					{
						this.netUpdate = true;
						if (flag2 && this.ai[2] == 1f)
						{
							this.TargetClosest(true);
						}
						if (this.ai[1] == 2f)
						{
							this.velocity.Y = -8f;
							if (this.type == 59)
							{
								this.velocity.Y = this.velocity.Y - 2f;
							}
							this.velocity.X = this.velocity.X + (float)(3 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + 0.5f * (float)this.direction;
							}
							this.ai[0] = -200f;
							this.ai[1] = 0f;
							this.ai[3] = this.position.X;
						}
						else
						{
							this.velocity.Y = -6f;
							this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							if (this.type == 59)
							{
								this.velocity.X = this.velocity.X + (float)(2 * this.direction);
							}
							this.ai[0] = -120f;
							this.ai[1] += 1f;
						}
						if (this.type == 141)
						{
							this.velocity.Y = this.velocity.Y * 1.3f;
							this.velocity.X = this.velocity.X * 1.2f;
						}
						if (this.type == 377)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
							this.velocity.X = this.velocity.X * 0.6f;
							if (flag2)
							{
								this.direction = -this.direction;
								this.velocity.X = this.velocity.X * -1f;
								return;
							}
						}
					}
					else if (this.ai[0] >= -30f)
					{
						this.aiAction = 1;
						return;
					}
				}
				else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
				{
					if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
					{
						this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						return;
					}
					this.velocity.X = this.velocity.X * 0.93f;
					return;
				}
			}
			else if (this.aiStyle == 2)
			{
				if ((this.type == 170 || this.type == 171 || this.type == 180) && Main.rand.Next(1000) == 0)
				{
					Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 9);
				}
				this.noGravity = true;
				if (!this.noTileCollide)
				{
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
				}
				if (Main.dayTime && (double)this.position.Y <= Main.worldSurface * 16.0 && (this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318))
				{
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					this.directionY = -1;
					if (this.velocity.Y > 0f)
					{
						this.direction = 1;
					}
					this.direction = -1;
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
				}
				else
				{
					this.TargetClosest(true);
				}
				if (this.type == 170 || this.type == 171 || this.type == 180)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						if (this.ai[1] > 0f && !Collision.SolidCollision(this.position, this.width, this.height))
						{
							this.ai[1] = 0f;
							this.ai[0] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[0] += 1f;
					}
					if (this.ai[0] >= 300f)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					if (this.ai[1] == 0f)
					{
						this.alpha = 0;
						this.noTileCollide = false;
					}
					else
					{
						this.wet = false;
						this.alpha = 200;
						this.noTileCollide = true;
					}
					this.rotation = this.velocity.Y * 0.1f * (float)this.direction;
					this.TargetClosest(true);
					if (this.direction == -1 && this.velocity.X > -4f && this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
					{
						this.velocity.X = this.velocity.X - 0.08f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = this.velocity.X - 0.04f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 4f && this.position.X + (float)this.width < Main.player[this.target].position.X)
					{
						this.velocity.X = this.velocity.X + 0.08f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = this.velocity.X + 0.04f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5 && this.position.Y > Main.player[this.target].position.Y + (float)Main.player[this.target].height)
					{
						this.velocity.Y = this.velocity.Y - 0.1f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 2.5 && this.position.Y + (float)this.height < Main.player[this.target].position.Y)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
				}
				else if (this.type == 116)
				{
					this.TargetClosest(true);
					Lighting.addLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
					if (this.direction == -1 && this.velocity.X > -6f)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
					else if (this.direction == 1 && this.velocity.X < 6f)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
						}
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.15f;
						}
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = -2.5f;
						}
					}
					else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if ((double)this.velocity.Y < -2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.15f;
						}
						if ((double)this.velocity.Y > 2.5)
						{
							this.velocity.Y = 2.5f;
						}
					}
					if (Main.rand.Next(40) == 0)
					{
						int num18 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
						Dust expr_1F3A_cp_0 = Main.dust[num18];
						expr_1F3A_cp_0.velocity.X = expr_1F3A_cp_0.velocity.X * 0.5f;
						Dust expr_1F58_cp_0 = Main.dust[num18];
						expr_1F58_cp_0.velocity.Y = expr_1F58_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type == 133)
				{
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						if (this.direction == -1 && this.velocity.X > -6f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 6f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -6f)
							{
								this.velocity.X = -6f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 6f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -6f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 6f)
							{
								this.velocity.X = 6f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 4f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = 4f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
				}
				else
				{
					float num19 = 4f;
					float num20 = 1.5f;
					num19 *= 1f + (1f - this.scale);
					num20 *= 1f + (1f - this.scale);
					if (this.direction == -1 && this.velocity.X > -num19)
					{
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X > num19)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < -num19)
						{
							this.velocity.X = -num19;
						}
					}
					else if (this.direction == 1 && this.velocity.X < num19)
					{
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X < -num19)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else if (this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
						if (this.velocity.X > num19)
						{
							this.velocity.X = num19;
						}
					}
					if (this.directionY == -1 && this.velocity.Y > -num20)
					{
						this.velocity.Y = this.velocity.Y - 0.04f;
						if (this.velocity.Y > num20)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
						else if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.03f;
						}
						if (this.velocity.Y < -num20)
						{
							this.velocity.Y = -num20;
						}
					}
					else if (this.directionY == 1 && this.velocity.Y < num20)
					{
						this.velocity.Y = this.velocity.Y + 0.04f;
						if (this.velocity.Y < -num20)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y - 0.03f;
						}
						if (this.velocity.Y > num20)
						{
							this.velocity.Y = num20;
						}
					}
				}
				if ((this.type == 2 || this.type == 133 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194) && Main.rand.Next(40) == 0)
				{
					int num21 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_2916_cp_0 = Main.dust[num21];
					expr_2916_cp_0.velocity.X = expr_2916_cp_0.velocity.X * 0.5f;
					Dust expr_2934_cp_0 = Main.dust[num21];
					expr_2934_cp_0.velocity.Y = expr_2934_cp_0.velocity.Y * 0.1f;
				}
				if (this.wet && this.type != 170 && this.type != 171 && this.type != 172)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				bool flag3 = false;
				if (this.velocity.X == 0f)
				{
					flag3 = true;
				}
				if (this.justHit)
				{
					flag3 = false;
				}
				if (Main.netMode != 1 && this.type == 198 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(199);
				}
				if (Main.netMode != 1 && this.type == 348 && (double)this.life <= (double)this.lifeMax * 0.55)
				{
					this.Transform(349);
				}
				int num22 = 60;
				if (this.type == 120)
				{
					num22 = 180;
					if (this.ai[3] == -120f)
					{
						this.velocity *= 0f;
						this.ai[3] = 0f;
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
						Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num23 = this.oldPos[2].X + (float)this.width * 0.5f - vector3.X;
						float num24 = this.oldPos[2].Y + (float)this.height * 0.5f - vector3.Y;
						float num25 = (float)Math.Sqrt((double)(num23 * num23 + num24 * num24));
						num25 = 2f / num25;
						num23 *= num25;
						num24 *= num25;
						for (int m = 0; m < 20; m++)
						{
							int num26 = Dust.NewDust(this.position, this.width, this.height, 71, num23, num24, 200, default(Color), 2f);
							Main.dust[num26].noGravity = true;
							Dust expr_2C07_cp_0 = Main.dust[num26];
							expr_2C07_cp_0.velocity.X = expr_2C07_cp_0.velocity.X * 2f;
						}
						for (int n = 0; n < 20; n++)
						{
							int num27 = Dust.NewDust(this.oldPos[2], this.width, this.height, 71, -num23, -num24, 200, default(Color), 2f);
							Main.dust[num27].noGravity = true;
							Dust expr_2C88_cp_0 = Main.dust[num27];
							expr_2C88_cp_0.velocity.X = expr_2C88_cp_0.velocity.X * 2f;
						}
					}
				}
				bool flag4 = false;
				bool flag5 = true;
				if (this.type == 343 || this.type == 47 || this.type == 67 || this.type == 109 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 163 || this.type == 164 || this.type == 239 || this.type == 168 || this.type == 199 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 226 || this.type == 243 || this.type == 251 || this.type == 257 || this.type == 258 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 305 || this.type == 306 || this.type == 307 || this.type == 308 || this.type == 309 || this.type == 348 || this.type == 349 || this.type == 350 || this.type == 351)
				{
					flag5 = false;
				}
				if ((this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350) || this.ai[2] <= 0f)
				{
					if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						flag4 = true;
					}
					if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num22 || flag4)
					{
						this.ai[3] += 1f;
					}
					else if ((double)Math.Abs(this.velocity.X) > 0.9 && this.ai[3] > 0f)
					{
						this.ai[3] -= 1f;
					}
					if (this.ai[3] > (float)(num22 * 10))
					{
						this.ai[3] = 0f;
					}
					if (this.justHit)
					{
						this.ai[3] = 0f;
					}
					if (this.ai[3] == (float)num22)
					{
						this.netUpdate = true;
					}
				}
				if ((Main.eclipse || !Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0 || this.type == 343 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 67 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 110 || this.type == 111 || this.type == 120 || this.type == 168 || this.type == 181 || this.type == 185 || this.type == 198 || this.type == 199 || this.type == 198 || this.type == 206 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 220 || this.type == 239 || this.type == 243 || this.type == 254 || (this.type == 255 | this.type == 257) || this.type == 258 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 212 && this.type <= 216) || this.type == 350) && this.ai[3] < (float)num22)
				{
					if ((this.type == 3 || this.type == 331 || this.type == 332 || this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 77 || this.type == 110 || this.type == 132 || this.type == 167 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 197 || this.type == 200 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 223 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 320 || this.type == 321 || this.type == 319) && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					if ((this.type == 78 || this.type == 79 || this.type == 80) && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(26, (int)this.position.X, (int)this.position.Y, 1);
					}
					if (this.type == 159 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 7);
					}
					if (this.type == 162 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 6);
					}
					if (this.type == 181 && Main.rand.Next(500) == 0)
					{
						Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 8);
					}
					if (this.type >= 269 && this.type <= 280 && Main.rand.Next(1000) == 0)
					{
						Main.PlaySound(14, (int)this.position.X, (int)this.position.Y, 1);
					}
					this.TargetClosest(true);
				}
				else if ((this.type != 110 && this.type != 111 && this.type != 206 && this.type != 216 && this.type != 214 && this.type != 215 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350) || this.ai[2] <= 0f)
				{
					if (Main.dayTime && (double)(this.position.Y / 16f) < Main.worldSurface && this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
					if (this.velocity.X == 0f)
					{
						if (this.velocity.Y == 0f)
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 2f)
							{
								this.direction *= -1;
								this.spriteDirection = this.direction;
								this.ai[0] = 0f;
							}
						}
					}
					else
					{
						this.ai[0] = 0f;
					}
					if (this.direction == 0)
					{
						this.direction = 1;
					}
				}
				if (this.type == 159 || this.type == 349)
				{
					if (this.type == 159 && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
					{
						this.velocity.X = this.velocity.X * 0.95f;
					}
					if (this.velocity.X < -6f || this.velocity.X > 6f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 6f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
					}
					else if (this.velocity.X > -6f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
					}
				}
				else if (this.type == 199)
				{
					if (this.velocity.X < -4f || this.velocity.X > 4f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 4f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X + 0.1f;
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
					}
					else if (this.velocity.X > -4f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.8f;
						}
						this.velocity.X = this.velocity.X - 0.1f;
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
					}
				}
				else if (this.type == 120 || this.type == 166 || this.type == 213 || this.type == 258)
				{
					if (this.velocity.X < -3f || this.velocity.X > 3f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 3f && this.direction == 1)
					{
						if (this.velocity.Y == 0f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
					}
					else if (this.velocity.X > -3f && this.direction == -1)
					{
						if (this.velocity.Y == 0f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
					}
				}
				else if (this.type == 27 || this.type == 77 || this.type == 104 || this.type == 163 || this.type == 162 || this.type == 196 || this.type == 197 || this.type == 212 || this.type == 257 || this.type == 326 || this.type == 343 || this.type == 348 || this.type == 351)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 109)
				{
					if (this.velocity.X < -2f || this.velocity.X > 2f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < 2f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.04f;
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
					}
					else if (this.velocity.X > -2f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.04f;
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
					}
				}
				else if (this.type == 21 || this.type == 26 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 73 || this.type == 140 || this.type == 164 || this.type == 239 || this.type == 167 || this.type == 168 || this.type == 185 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 217 || this.type == 218 || this.type == 219 || this.type == 226 || this.type == 181 || this.type == 254 || this.type == 338 || this.type == 339 || this.type == 340 || this.type == 342)
				{
					float num28 = 1.5f;
					if (this.type == 294)
					{
						num28 = 2f;
					}
					if (this.type == 295)
					{
						num28 = 1.75f;
					}
					if (this.type == 296)
					{
						num28 = 1.25f;
					}
					if (this.type == 201)
					{
						num28 = 1.1f;
					}
					if (this.type == 202)
					{
						num28 = 0.9f;
					}
					if (this.type == 203)
					{
						num28 = 1.2f;
					}
					if (this.type == 338)
					{
						num28 = 1.75f;
					}
					if (this.type == 339)
					{
						num28 = 1.25f;
					}
					if (this.type == 340)
					{
						num28 = 2f;
					}
					if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 342)
					{
						num28 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num28 || this.velocity.X > num28)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num28 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num28)
						{
							this.velocity.X = num28;
						}
					}
					else if (this.velocity.X > -num28 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num28)
						{
							this.velocity.X = -num28;
						}
					}
				}
				else if (this.type >= 269 && this.type <= 280)
				{
					float num29 = 1.5f;
					if (this.type == 269)
					{
						num29 = 2f;
					}
					if (this.type == 270)
					{
						num29 = 1f;
					}
					if (this.type == 271)
					{
						num29 = 1.5f;
					}
					if (this.type == 272)
					{
						num29 = 3f;
					}
					if (this.type == 273)
					{
						num29 = 1.25f;
					}
					if (this.type == 274)
					{
						num29 = 3f;
					}
					if (this.type == 275)
					{
						num29 = 3.25f;
					}
					if (this.type == 276)
					{
						num29 = 2f;
					}
					if (this.type == 277)
					{
						num29 = 2.75f;
					}
					if (this.type == 278)
					{
						num29 = 1.8f;
					}
					if (this.type == 279)
					{
						num29 = 1.3f;
					}
					if (this.type == 280)
					{
						num29 = 2.5f;
					}
					num29 *= 1f + (1f - this.scale);
					if (this.velocity.X < -num29 || this.velocity.X > num29)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num29 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num29)
						{
							this.velocity.X = num29;
						}
					}
					else if (this.velocity.X > -num29 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num29)
						{
							this.velocity.X = -num29;
						}
					}
				}
				else if (this.type >= 305 && this.type <= 314)
				{
					float num30 = 1.5f;
					if (this.type == 305 || this.type == 310)
					{
						num30 = 2f;
					}
					if (this.type == 306 || this.type == 311)
					{
						num30 = 1.25f;
					}
					if (this.type == 307 || this.type == 312)
					{
						num30 = 2.25f;
					}
					if (this.type == 308 || this.type == 313)
					{
						num30 = 1.5f;
					}
					if (this.type == 309 || this.type == 314)
					{
						num30 = 1f;
					}
					if (this.type < 310)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.85f;
							if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
							{
								this.velocity.Y = -7f;
								this.velocity.X = num30 * (float)this.direction;
							}
						}
						else if (this.spriteDirection == this.direction)
						{
							this.velocity.X = (this.velocity.X * 10f + num30 * (float)this.direction) / 11f;
						}
					}
					else if (this.velocity.X < -num30 || this.velocity.X > num30)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num30 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num30)
						{
							this.velocity.X = num30;
						}
					}
					else if (this.velocity.X > -num30 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num30)
						{
							this.velocity.X = -num30;
						}
					}
				}
				else if (this.type == 67 || this.type == 220)
				{
					if (this.velocity.X < -0.5f || this.velocity.X > 0.5f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < 0.5f && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.03f;
						if (this.velocity.X > 0.5f)
						{
							this.velocity.X = 0.5f;
						}
					}
					else if (this.velocity.X > -0.5f && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.03f;
						if (this.velocity.X < -0.5f)
						{
							this.velocity.X = -0.5f;
						}
					}
				}
				else if (this.type == 78 || this.type == 79 || this.type == 80)
				{
					float num31 = 1f;
					float num32 = 0.05f;
					if (this.life < this.lifeMax / 2)
					{
						num31 = 2f;
						num32 = 0.1f;
					}
					if (this.type == 79)
					{
						num31 *= 1.5f;
					}
					if (this.velocity.X < -num31 || this.velocity.X > num31)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num31 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num32;
						if (this.velocity.X > num31)
						{
							this.velocity.X = num31;
						}
					}
					else if (this.velocity.X > -num31 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num32;
						if (this.velocity.X < -num31)
						{
							this.velocity.X = -num31;
						}
					}
				}
				else if (this.type == 287)
				{
					float num33 = 5f;
					float num34 = 0.2f;
					if (this.velocity.X < -num33 || this.velocity.X > num33)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num33 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num34;
						if (this.velocity.X > num33)
						{
							this.velocity.X = num33;
						}
					}
					else if (this.velocity.X > -num33 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num34;
						if (this.velocity.X < -num33)
						{
							this.velocity.X = -num33;
						}
					}
				}
				else if (this.type == 243)
				{
					float num35 = 1f;
					float num36 = 0.07f;
					num35 += (1f - (float)this.life / (float)this.lifeMax) * 1.5f;
					num36 += (1f - (float)this.life / (float)this.lifeMax) * 0.15f;
					if (this.velocity.X < -num35 || this.velocity.X > num35)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num35 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num36;
						if (this.velocity.X > num35)
						{
							this.velocity.X = num35;
						}
					}
					else if (this.velocity.X > -num35 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num36;
						if (this.velocity.X < -num35)
						{
							this.velocity.X = -num35;
						}
					}
				}
				else if (this.type == 251)
				{
					float num37 = 1f;
					float num38 = 0.08f;
					num37 += (1f - (float)this.life / (float)this.lifeMax) * 2f;
					num38 += (1f - (float)this.life / (float)this.lifeMax) * 0.2f;
					if (this.velocity.X < -num37 || this.velocity.X > num37)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.7f;
						}
					}
					else if (this.velocity.X < num37 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num38;
						if (this.velocity.X > num37)
						{
							this.velocity.X = num37;
						}
					}
					else if (this.velocity.X > -num37 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num38;
						if (this.velocity.X < -num37)
						{
							this.velocity.X = -num37;
						}
					}
				}
				else if (this.type != 110 && this.type != 111 && this.type != 206 && this.type != 214 && this.type != 215 && this.type != 216 && this.type != 290 && this.type != 291 && this.type != 292 && this.type != 293 && this.type != 350)
				{
					float num39 = 1f;
					if (this.type == 186)
					{
						num39 = 1.1f;
					}
					if (this.type == 187)
					{
						num39 = 0.9f;
					}
					if (this.type == 188)
					{
						num39 = 1.2f;
					}
					if (this.type == 189)
					{
						num39 = 0.8f;
					}
					if (this.type == 132)
					{
						num39 = 0.95f;
					}
					if (this.type == 200)
					{
						num39 = 0.87f;
					}
					if (this.type == 223)
					{
						num39 = 1.05f;
					}
					if (this.type == 3 || this.type == 132 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 331 || this.type == 332)
					{
						num39 *= 1f + (1f - this.scale);
					}
					if (this.velocity.X < -num39 || this.velocity.X > num39)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num39 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + 0.07f;
						if (this.velocity.X > num39)
						{
							this.velocity.X = num39;
						}
					}
					else if (this.velocity.X > -num39 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - 0.07f;
						if (this.velocity.X < -num39)
						{
							this.velocity.X = -num39;
						}
					}
				}
				if (this.type >= 277 && this.type <= 280)
				{
					Lighting.addLight((int)this.center().X / 16, (int)this.center().Y / 16, 0.2f, 0.1f, 0f);
				}
				if (this.type == 258)
				{
					if (this.velocity.Y != 0f)
					{
						this.TargetClosest(true);
						this.spriteDirection = this.direction;
						if (Main.player[this.target].center().X < this.position.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						else if (Main.player[this.target].center().X > this.position.X + (float)this.width && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (Main.player[this.target].center().X < this.position.X && this.velocity.X > -5f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if (Main.player[this.target].center().X > this.position.X + (float)this.width && this.velocity.X < 5f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
					}
					else if (Main.player[this.target].center().Y + 50f < this.position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						this.velocity.Y = -7f;
					}
				}
				if (this.type == 185)
				{
					if (this.velocity.Y == 0f)
					{
						this.rotation = 0f;
						this.localAI[0] = 0f;
					}
					else if (this.localAI[0] == 1f)
					{
						this.rotation += this.velocity.X * 0.05f;
					}
				}
				if (this.type == 159 && Main.netMode != 1)
				{
					Vector2 vector4 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num40 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector4.X;
					float num41 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector4.Y;
					float num42 = (float)Math.Sqrt((double)(num40 * num40 + num41 * num41));
					if (num42 > 300f)
					{
						this.Transform(158);
					}
				}
				if (this.type == 164 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num43 = (int)this.center().X / 16;
					int num44 = (int)this.center().Y / 16;
					bool flag6 = false;
					for (int num45 = num43 - 1; num45 <= num43 + 1; num45++)
					{
						for (int num46 = num44 - 1; num46 <= num44 + 1; num46++)
						{
							if (Main.tile[num45, num46].wall > 0)
							{
								flag6 = true;
							}
						}
					}
					if (flag6)
					{
						this.Transform(165);
					}
				}
				if (this.type == 239 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num47 = (int)this.center().X / 16;
					int num48 = (int)this.center().Y / 16;
					bool flag7 = false;
					for (int num49 = num47 - 1; num49 <= num47 + 1; num49++)
					{
						for (int num50 = num48 - 1; num50 <= num48 + 1; num50++)
						{
							if (Main.tile[num49, num50].wall > 0)
							{
								flag7 = true;
							}
						}
					}
					if (flag7)
					{
						this.Transform(240);
					}
				}
				if (this.type == 163 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num51 = (int)this.center().X / 16;
					int num52 = (int)this.center().Y / 16;
					bool flag8 = false;
					for (int num53 = num51 - 1; num53 <= num51 + 1; num53++)
					{
						for (int num54 = num52 - 1; num54 <= num52 + 1; num54++)
						{
							if (Main.tile[num53, num54].wall > 0)
							{
								flag8 = true;
							}
						}
					}
					if (flag8)
					{
						this.Transform(238);
					}
				}
				if (this.type == 236 && Main.netMode != 1 && this.velocity.Y == 0f)
				{
					int num55 = (int)this.center().X / 16;
					int num56 = (int)this.center().Y / 16;
					bool flag9 = false;
					for (int num57 = num55 - 1; num57 <= num55 + 1; num57++)
					{
						for (int num58 = num56 - 1; num58 <= num56 + 1; num58++)
						{
							if (Main.tile[num57, num58].wall > 0)
							{
								flag9 = true;
							}
						}
					}
					if (flag9)
					{
						this.Transform(237);
					}
				}
				if (this.type == 243)
				{
					if (this.justHit && Main.rand.Next(3) == 0)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num59 = (float)Main.rand.Next(30, 900);
					num59 *= (float)this.life / (float)this.lifeMax;
					num59 += 30f;
					if (Main.netMode != 1 && this.ai[2] >= num59 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && this.center().X < Main.player[this.target].center().X) || (this.direction < 0 && this.center().X > Main.player[this.target].center().X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num60 = 15f;
						Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 20f);
						vector5.X += (float)(10 * this.direction);
						float num61 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector5.X;
						float num62 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector5.Y;
						num61 += (float)Main.rand.Next(-40, 41);
						num62 += (float)Main.rand.Next(-40, 41);
						float num63 = (float)Math.Sqrt((double)(num61 * num61 + num62 * num62));
						this.netUpdate = true;
						num63 = num60 / num63;
						num61 *= num63;
						num62 *= num63;
						int num64 = 32;
						int num65 = 257;
						vector5.X += num61 * 3f;
						vector5.Y += num62 * 3f;
						Projectile.NewProjectile(vector5.X, vector5.Y, num61, num62, num65, num64, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 251)
				{
					if (this.justHit)
					{
						this.ai[2] -= (float)Main.rand.Next(30);
					}
					if (this.ai[2] < 0f)
					{
						this.ai[2] = 0f;
					}
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					float num66 = (float)Main.rand.Next(60, 1800);
					num66 *= (float)this.life / (float)this.lifeMax;
					num66 += 15f;
					if (Main.netMode != 1 && this.ai[2] >= num66 && this.velocity.Y == 0f && !Main.player[this.target].dead && !Main.player[this.target].frozen && ((this.direction > 0 && this.center().X < Main.player[this.target].center().X) || (this.direction < 0 && this.center().X > Main.player[this.target].center().X)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						float num67 = 15f;
						Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + 12f);
						vector6.X += (float)(6 * this.direction);
						float num68 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector6.X;
						float num69 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector6.Y;
						num68 += (float)Main.rand.Next(-40, 41);
						num69 += (float)Main.rand.Next(-30, 0);
						float num70 = (float)Math.Sqrt((double)(num68 * num68 + num69 * num69));
						this.netUpdate = true;
						num70 = num67 / num70;
						num68 *= num70;
						num69 *= num70;
						int num71 = 30;
						int num72 = 83;
						vector6.X += num68 * 3f;
						vector6.Y += num69 * 3f;
						Projectile.NewProjectile(vector6.X, vector6.Y, num68, num69, num72, num71, 0f, Main.myPlayer, 0f, 0f);
						this.ai[2] = 0f;
					}
				}
				if (this.type == 110 || this.type == 111 || this.type == 206 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 290 || this.type == 291 || this.type == 292 || this.type == 293 || this.type == 350)
				{
					if (this.confused)
					{
						this.ai[2] = 0f;
					}
					else
					{
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						if (this.justHit)
						{
							this.ai[1] = 30f;
							this.ai[2] = 0f;
						}
						int num73 = 70;
						if (this.type == 350)
						{
							num73 = 110;
						}
						if (this.type == 291)
						{
							num73 = 200;
						}
						if (this.type == 292)
						{
							num73 = 120;
						}
						if (this.type == 293)
						{
							num73 = 90;
						}
						if (this.type == 111)
						{
							num73 = 180;
						}
						if (this.type == 206)
						{
							num73 = 50;
						}
						if (this.type == 214)
						{
							num73 = 40;
						}
						if (this.type == 215)
						{
							num73 = 80;
						}
						if (this.type == 290)
						{
							num73 = 30;
						}
						bool flag10 = false;
						if (this.type == 216)
						{
							if (this.localAI[2] >= 20f)
							{
								flag10 = true;
							}
							if (flag10)
							{
								num73 = 60;
							}
							else
							{
								num73 = 8;
							}
						}
						if (this.ai[2] > 0f)
						{
							this.TargetClosest(true);
							if (this.ai[1] == (float)(num73 / 2))
							{
								if (this.type == 216)
								{
									this.localAI[2] += 1f;
								}
								float num74 = 11f;
								if (this.type == 111)
								{
									num74 = 9f;
								}
								if (this.type == 206)
								{
									num74 = 7f;
								}
								if (this.type == 290)
								{
									num74 = 9f;
								}
								if (this.type == 293)
								{
									num74 = 4f;
								}
								if (this.type == 214)
								{
									num74 = 14f;
								}
								if (this.type == 215)
								{
									num74 = 16f;
								}
								Vector2 vector7 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								if (this.type == 206)
								{
									vector7.Y -= 10f;
								}
								if (this.type == 290)
								{
									vector7.Y -= 10f;
								}
								float num75 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector7.X;
								float num76 = Math.Abs(num75) * 0.1f;
								if (this.type == 291 || this.type == 292)
								{
									num76 = 0f;
								}
								if (this.type == 215)
								{
									num76 = Math.Abs(num75) * 0.08f;
								}
								if (this.type == 214 || (this.type == 216 && !flag10))
								{
									num76 = 0f;
								}
								float num77 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector7.Y - num76;
								if (this.type == 291)
								{
									num75 += (float)Main.rand.Next(-40, 41) * 0.2f;
									num77 += (float)Main.rand.Next(-40, 41) * 0.2f;
								}
								else if (this.type != 292)
								{
									num75 += (float)Main.rand.Next(-40, 41);
									num77 += (float)Main.rand.Next(-40, 41);
								}
								float num78 = (float)Math.Sqrt((double)(num75 * num75 + num77 * num77));
								this.netUpdate = true;
								num78 = num74 / num78;
								num75 *= num78;
								num77 *= num78;
								int num79 = 35;
								if (this.type == 111)
								{
									num79 = 11;
								}
								if (this.type == 206)
								{
									num79 = 37;
								}
								if (this.type == 350)
								{
									num79 = 45;
								}
								int num80 = 82;
								if (this.type == 111)
								{
									num80 = 81;
								}
								if (this.type == 206)
								{
									num80 = 177;
								}
								if (this.type == 291)
								{
									num80 = 302;
									num79 = 100;
								}
								if (this.type == 290)
								{
									num80 = 300;
									num79 = 60;
								}
								if (this.type == 293)
								{
									num80 = 303;
									num79 = 60;
								}
								if (this.type == 214)
								{
									num80 = 180;
									num79 = 25;
								}
								if (this.type == 215)
								{
									num80 = 82;
									num79 = 40;
								}
								if (this.type == 292)
								{
									num79 = 50;
									num80 = 180;
								}
								if (this.type == 216)
								{
									num80 = 180;
									num79 = 30;
									if (flag10)
									{
										num79 = 100;
										num80 = 240;
										this.localAI[2] = 0f;
									}
								}
								vector7.X += num75;
								vector7.Y += num77;
								if (Main.netMode != 1)
								{
									if (this.type == 292)
									{
										for (int num81 = 0; num81 < 4; num81++)
										{
											num75 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector7.X;
											num77 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector7.Y;
											num78 = (float)Math.Sqrt((double)(num75 * num75 + num77 * num77));
											num78 = 12f / num78;
											num75 += (float)Main.rand.Next(-40, 41);
											num77 += (float)Main.rand.Next(-40, 41);
											num75 *= num78;
											num77 *= num78;
											Projectile.NewProjectile(vector7.X, vector7.Y, num75, num77, num80, num79, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									else
									{
										Projectile.NewProjectile(vector7.X, vector7.Y, num75, num77, num80, num79, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								if (Math.Abs(num77) > Math.Abs(num75) * 2f)
								{
									if (num77 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num75) > Math.Abs(num77) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num77 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
							if (this.velocity.Y != 0f || this.ai[1] <= 0f)
							{
								this.ai[2] = 0f;
								this.ai[1] = 0f;
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.spriteDirection = this.direction;
							}
						}
						if (this.ai[2] <= 0f && this.velocity.Y == 0f && this.ai[1] <= 0f && !Main.player[this.target].dead && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							float num82 = 10f;
							Vector2 vector8 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num83 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector8.X;
							float num84 = Math.Abs(num83) * 0.1f;
							float num85 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector8.Y - num84;
							num83 += (float)Main.rand.Next(-40, 41);
							num85 += (float)Main.rand.Next(-40, 41);
							float num86 = (float)Math.Sqrt((double)(num83 * num83 + num85 * num85));
							float num87 = 700f;
							if (this.type == 214)
							{
								num87 = 550f;
							}
							if (this.type == 215)
							{
								num87 = 800f;
							}
							if (num86 < num87)
							{
								this.netUpdate = true;
								this.velocity.X = this.velocity.X * 0.5f;
								num86 = num82 / num86;
								num83 *= num86;
								num85 *= num86;
								this.ai[2] = 3f;
								this.ai[1] = (float)num73;
								if (Math.Abs(num85) > Math.Abs(num83) * 2f)
								{
									if (num85 > 0f)
									{
										this.ai[2] = 1f;
									}
									else
									{
										this.ai[2] = 5f;
									}
								}
								else if (Math.Abs(num83) > Math.Abs(num85) * 2f)
								{
									this.ai[2] = 3f;
								}
								else if (num85 > 0f)
								{
									this.ai[2] = 2f;
								}
								else
								{
									this.ai[2] = 4f;
								}
							}
						}
						if (this.ai[2] <= 0f)
						{
							float num88 = 1f;
							float num89 = 0.07f;
							if (this.type == 214)
							{
								num88 = 2f;
								num89 = 0.09f;
							}
							else if (this.type == 215)
							{
								num88 = 1.5f;
								num89 = 0.08f;
							}
							if (this.velocity.X < -num88 || this.velocity.X > num88)
							{
								if (this.velocity.Y == 0f)
								{
									this.velocity *= 0.8f;
								}
							}
							else if (this.velocity.X < num88 && this.direction == 1)
							{
								this.velocity.X = this.velocity.X + num89;
								if (this.velocity.X > num88)
								{
									this.velocity.X = num88;
								}
							}
							else if (this.velocity.X > -1f && this.direction == -1)
							{
								this.velocity.X = this.velocity.X - num89;
								if (this.velocity.X < -num88)
								{
									this.velocity.X = -num88;
								}
							}
						}
					}
				}
				if (this.type == 109 && Main.netMode != 1 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.ai[2] = 0f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 450f)
					{
						Vector2 vector9 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 24), this.position.Y + 4f);
						int num90 = 3 * this.direction;
						int num91 = -5;
						int num92 = Projectile.NewProjectile(vector9.X, vector9.Y, (float)num90, (float)num91, 75, 0, 0f, Main.myPlayer, 0f, 0f);
						Main.projectile[num92].timeLeft = 300;
						this.ai[2] = 0f;
					}
				}
				bool flag11 = false;
				if (this.velocity.Y == 0f)
				{
					int num93 = (int)(this.position.Y + (float)this.height + 7f) / 16;
					int num94 = (int)this.position.X / 16;
					int num95 = (int)(this.position.X + (float)this.width) / 16;
					for (int num96 = num94; num96 <= num95; num96++)
					{
						if (Main.tile[num96, num93] == null)
						{
							return;
						}
						if (Main.tile[num96, num93].nactive() && Main.tileSolid[(int)Main.tile[num96, num93].type])
						{
							flag11 = true;
							break;
						}
					}
				}
				if (this.velocity.Y >= 0f)
				{
					int num97 = 0;
					if (this.velocity.X < 0f)
					{
						num97 = -1;
					}
					if (this.velocity.X > 0f)
					{
						num97 = 1;
					}
					Vector2 vector10 = this.position;
					vector10.X += this.velocity.X;
					int num98 = (int)((vector10.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num97)) / 16f);
					int num99 = (int)((vector10.Y + (float)this.height - 1f) / 16f);
					if (Main.tile[num98, num99] == null)
					{
						Main.tile[num98, num99] = new Tile();
					}
					if (Main.tile[num98, num99 - 1] == null)
					{
						Main.tile[num98, num99 - 1] = new Tile();
					}
					if (Main.tile[num98, num99 - 2] == null)
					{
						Main.tile[num98, num99 - 2] = new Tile();
					}
					if (Main.tile[num98, num99 - 3] == null)
					{
						Main.tile[num98, num99 - 3] = new Tile();
					}
					if (Main.tile[num98, num99 + 1] == null)
					{
						Main.tile[num98, num99 + 1] = new Tile();
					}
					if (Main.tile[num98 - num97, num99 - 3] == null)
					{
						Main.tile[num98 - num97, num99 - 3] = new Tile();
					}
					if ((float)(num98 * 16) < vector10.X + (float)this.width && (float)(num98 * 16 + 16) > vector10.X && ((Main.tile[num98, num99].nactive() && !Main.tile[num98, num99].topSlope() && !Main.tile[num98, num99 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num98, num99].type] && !Main.tileSolidTop[(int)Main.tile[num98, num99].type]) || (Main.tile[num98, num99 - 1].halfBrick() && Main.tile[num98, num99 - 1].nactive())) && (!Main.tile[num98, num99 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num98, num99 - 1].type] || Main.tileSolidTop[(int)Main.tile[num98, num99 - 1].type] || (Main.tile[num98, num99 - 1].halfBrick() && (!Main.tile[num98, num99 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num98, num99 - 4].type] || Main.tileSolidTop[(int)Main.tile[num98, num99 - 4].type]))) && (!Main.tile[num98, num99 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num98, num99 - 2].type] || Main.tileSolidTop[(int)Main.tile[num98, num99 - 2].type]) && (!Main.tile[num98, num99 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num98, num99 - 3].type] || Main.tileSolidTop[(int)Main.tile[num98, num99 - 3].type]) && (!Main.tile[num98 - num97, num99 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num98 - num97, num99 - 3].type]))
					{
						float num100 = (float)(num99 * 16);
						if (Main.tile[num98, num99].halfBrick())
						{
							num100 += 8f;
						}
						if (Main.tile[num98, num99 - 1].halfBrick())
						{
							num100 -= 8f;
						}
						if (num100 < vector10.Y + (float)this.height)
						{
							float num101 = vector10.Y + (float)this.height - num100;
							float num102 = 16.1f;
							if (this.type == 163 || this.type == 164 || this.type == 236 || this.type == 239)
							{
								num102 += 8f;
							}
							if (num101 <= num102)
							{
								this.gfxOffY += this.position.Y + (float)this.height - num100;
								this.position.Y = num100 - (float)this.height;
								if (num101 < 9f)
								{
									this.stepSpeed = 1f;
								}
								else
								{
									this.stepSpeed = 2f;
								}
							}
						}
					}
				}
				if (flag11)
				{
					int num103 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
					int num104 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
					if (this.type == 109 || this.type == 163 || this.type == 164 || this.type == 199 || this.type == 236 || this.type == 239 || this.type == 257 || this.type == 258 || this.type == 290)
					{
						num103 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 16) * this.direction)) / 16f);
					}
					if (Main.tile[num103, num104] == null)
					{
						Main.tile[num103, num104] = new Tile();
					}
					if (Main.tile[num103, num104 - 1] == null)
					{
						Main.tile[num103, num104 - 1] = new Tile();
					}
					if (Main.tile[num103, num104 - 2] == null)
					{
						Main.tile[num103, num104 - 2] = new Tile();
					}
					if (Main.tile[num103, num104 - 3] == null)
					{
						Main.tile[num103, num104 - 3] = new Tile();
					}
					if (Main.tile[num103, num104 + 1] == null)
					{
						Main.tile[num103, num104 + 1] = new Tile();
					}
					if (Main.tile[num103 + this.direction, num104 - 1] == null)
					{
						Main.tile[num103 + this.direction, num104 - 1] = new Tile();
					}
					if (Main.tile[num103 + this.direction, num104 + 1] == null)
					{
						Main.tile[num103 + this.direction, num104 + 1] = new Tile();
					}
					if (Main.tile[num103 - this.direction, num104 + 1] == null)
					{
						Main.tile[num103 - this.direction, num104 + 1] = new Tile();
					}
					Main.tile[num103, num104 + 1].halfBrick();
					if (Main.tile[num103, num104 - 1].nactive() && Main.tile[num103, num104 - 1].type == 10 && flag5)
					{
						this.ai[2] += 1f;
						this.ai[3] = 0f;
						if (this.ai[2] >= 60f)
						{
							if (!Main.bloodMoon && (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 320 || this.type == 321 || this.type == 319))
							{
								this.ai[1] = 0f;
							}
							this.velocity.X = 0.5f * (float)(-(float)this.direction);
							this.ai[1] += 5f;
							if (this.type == 27)
							{
								this.ai[1] += 1f;
							}
							if (this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296)
							{
								this.ai[1] += 6f;
							}
							this.ai[2] = 0f;
							bool flag12 = false;
							if (this.ai[1] >= 10f)
							{
								flag12 = true;
								this.ai[1] = 10f;
							}
							WorldGen.KillTile(num103, num104 - 1, true, false, false);
							if ((Main.netMode != 1 || !flag12) && flag12 && Main.netMode != 1)
							{
								if (this.type == 26)
								{
									WorldGen.KillTile(num103, num104 - 1, false, false, false);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 0, (float)num103, (float)(num104 - 1), 0f, 0);
									}
								}
								else
								{
									bool flag13 = WorldGen.OpenDoor(num103, num104 - 1, this.direction);
									if (!flag13)
									{
										this.ai[3] = (float)num22;
										this.netUpdate = true;
									}
									if (Main.netMode == 2 && flag13)
									{
										NetMessage.SendData(19, -1, -1, "", 0, (float)num103, (float)(num104 - 1), (float)this.direction, 0);
									}
								}
							}
						}
					}
					else
					{
						if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
						{
							if (Main.tile[num103, num104 - 2].nactive() && Main.tileSolid[(int)Main.tile[num103, num104 - 2].type])
							{
								if (Main.tile[num103, num104 - 3].nactive() && Main.tileSolid[(int)Main.tile[num103, num104 - 3].type])
								{
									this.velocity.Y = -8f;
									this.netUpdate = true;
								}
								else
								{
									this.velocity.Y = -7f;
									this.netUpdate = true;
								}
							}
							else if (Main.tile[num103, num104 - 1].nactive() && Main.tileSolid[(int)Main.tile[num103, num104 - 1].type])
							{
								this.velocity.Y = -6f;
								this.netUpdate = true;
							}
							else if (this.position.Y + (float)this.height - (float)(num104 * 16) > 20f && Main.tile[num103, num104].nactive() && !Main.tile[num103, num104].topSlope() && Main.tileSolid[(int)Main.tile[num103, num104].type])
							{
								this.velocity.Y = -5f;
								this.netUpdate = true;
							}
							else if (this.directionY < 0 && this.type != 67 && (!Main.tile[num103, num104 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num103, num104 + 1].type]) && (!Main.tile[num103 + this.direction, num104 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num103 + this.direction, num104 + 1].type]))
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X * 1.5f;
								this.netUpdate = true;
							}
							else if (flag5)
							{
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.velocity.Y == 0f && flag3 && this.ai[3] == 1f)
							{
								this.velocity.Y = -5f;
							}
						}
						if ((this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 47 || this.type == 77 || this.type == 104 || this.type == 168 || this.type == 196) && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 100f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = this.velocity.X * 2f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 120 && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
						if (this.type == 287 && this.velocity.Y == 0f && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 150f && Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 50f && ((this.direction > 0 && this.velocity.X >= 1f) || (this.direction < 0 && this.velocity.X <= -1f)))
						{
							this.velocity.X = (float)(8 * this.direction);
							this.velocity.Y = -4f;
							this.netUpdate = true;
						}
						if (this.type == 287 && this.velocity.Y < 0f)
						{
							this.velocity.X = this.velocity.X * 1.2f;
							this.velocity.Y = this.velocity.Y * 1.1f;
						}
					}
				}
				else if (flag5)
				{
					this.ai[1] = 0f;
					this.ai[2] = 0f;
				}
				if (Main.netMode != 1 && this.type == 120 && this.ai[3] >= (float)num22)
				{
					int num105 = (int)Main.player[this.target].position.X / 16;
					int num106 = (int)Main.player[this.target].position.Y / 16;
					int num107 = (int)this.position.X / 16;
					int num108 = (int)this.position.Y / 16;
					int num109 = 20;
					int num110 = 0;
					bool flag14 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num110 = 100;
						flag14 = true;
					}
					while (!flag14)
					{
						if (num110 >= 100)
						{
							return;
						}
						num110++;
						int num111 = Main.rand.Next(num105 - num109, num105 + num109);
						int num112 = Main.rand.Next(num106 - num109, num106 + num109);
						for (int num113 = num112; num113 < num106 + num109; num113++)
						{
							if ((num113 < num106 - 4 || num113 > num106 + 4 || num111 < num105 - 4 || num111 > num105 + 4) && (num113 < num108 - 1 || num113 > num108 + 1 || num111 < num107 - 1 || num111 > num107 + 1) && Main.tile[num111, num113].nactive())
							{
								bool flag15 = true;
								if (this.type == 32 && Main.tile[num111, num113 - 1].wall == 0)
								{
									flag15 = false;
								}
								else if (Main.tile[num111, num113 - 1].lava())
								{
									flag15 = false;
								}
								if (flag15 && Main.tileSolid[(int)Main.tile[num111, num113].type] && !Collision.SolidTiles(num111 - 1, num111 + 1, num113 - 4, num113 - 1))
								{
									this.position.X = (float)(num111 * 16 - this.width / 2);
									this.position.Y = (float)(num113 * 16 - this.height);
									this.netUpdate = true;
									this.ai[3] = -120f;
								}
							}
						}
					}
				}
			}
			else if (this.aiStyle == 4)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
				{
					this.TargetClosest(true);
				}
				bool dead = Main.player[this.target].dead;
				float num114 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
				float num115 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
				float num116 = (float)Math.Atan2((double)num115, (double)num114) + 1.57f;
				if (num116 < 0f)
				{
					num116 += 6.283f;
				}
				else if ((double)num116 > 6.283)
				{
					num116 -= 6.283f;
				}
				float num117 = 0f;
				if (this.ai[0] == 0f && this.ai[1] == 0f)
				{
					num117 = 0.02f;
				}
				if (this.ai[0] == 0f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num117 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 0f)
				{
					num117 = 0.05f;
				}
				if (this.ai[0] == 3f && this.ai[1] == 2f && this.ai[2] > 40f)
				{
					num117 = 0.08f;
				}
				if (this.rotation < num116)
				{
					if ((double)(num116 - this.rotation) > 3.1415)
					{
						this.rotation -= num117;
					}
					else
					{
						this.rotation += num117;
					}
				}
				else if (this.rotation > num116)
				{
					if ((double)(this.rotation - num116) > 3.1415)
					{
						this.rotation += num117;
					}
					else
					{
						this.rotation -= num117;
					}
				}
				if (this.rotation > num116 - num117 && this.rotation < num116 + num117)
				{
					this.rotation = num116;
				}
				if (this.rotation < 0f)
				{
					this.rotation += 6.283f;
				}
				else if ((double)this.rotation > 6.283)
				{
					this.rotation -= 6.283f;
				}
				if (this.rotation > num116 - num117 && this.rotation < num116 + num117)
				{
					this.rotation = num116;
				}
				if (Main.rand.Next(5) == 0)
				{
					int num118 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_82EF_cp_0 = Main.dust[num118];
					expr_82EF_cp_0.velocity.X = expr_82EF_cp_0.velocity.X * 0.5f;
					Dust expr_830D_cp_0 = Main.dust[num118];
					expr_830D_cp_0.velocity.Y = expr_830D_cp_0.velocity.Y * 0.1f;
				}
				if (Main.dayTime || dead)
				{
					this.velocity.Y = this.velocity.Y - 0.04f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
						return;
					}
				}
				else if (this.ai[0] == 0f)
				{
					if (this.ai[1] == 0f)
					{
						float num119 = 5f;
						float num120 = 0.04f;
						Vector2 vector11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num121 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector11.X;
						float num122 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector11.Y;
						float num123 = (float)Math.Sqrt((double)(num121 * num121 + num122 * num122));
						float num124 = num123;
						num123 = num119 / num123;
						num121 *= num123;
						num122 *= num123;
						if (this.velocity.X < num121)
						{
							this.velocity.X = this.velocity.X + num120;
							if (this.velocity.X < 0f && num121 > 0f)
							{
								this.velocity.X = this.velocity.X + num120;
							}
						}
						else if (this.velocity.X > num121)
						{
							this.velocity.X = this.velocity.X - num120;
							if (this.velocity.X > 0f && num121 < 0f)
							{
								this.velocity.X = this.velocity.X - num120;
							}
						}
						if (this.velocity.Y < num122)
						{
							this.velocity.Y = this.velocity.Y + num120;
							if (this.velocity.Y < 0f && num122 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num120;
							}
						}
						else if (this.velocity.Y > num122)
						{
							this.velocity.Y = this.velocity.Y - num120;
							if (this.velocity.Y > 0f && num122 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num120;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 600f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
						}
						else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num124 < 500f)
						{
							if (!Main.player[this.target].dead)
							{
								this.ai[3] += 1f;
							}
							if (this.ai[3] >= 110f)
							{
								this.ai[3] = 0f;
								this.rotation = num116;
								float num125 = 5f;
								float num126 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector11.X;
								float num127 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector11.Y;
								float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
								num128 = num125 / num128;
								Vector2 vector12 = vector11;
								Vector2 vector13;
								vector13.X = num126 * num128;
								vector13.Y = num127 * num128;
								vector12.X += vector13.X * 10f;
								vector12.Y += vector13.Y * 10f;
								if (Main.netMode != 1)
								{
									int num129 = NPC.NewNPC((int)vector12.X, (int)vector12.Y, 5, 0);
									Main.npc[num129].velocity.X = vector13.X;
									Main.npc[num129].velocity.Y = vector13.Y;
									if (Main.netMode == 2 && num129 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num129, 0f, 0f, 0f, 0);
									}
								}
								Main.PlaySound(3, (int)vector12.X, (int)vector12.Y, 1);
								for (int num130 = 0; num130 < 10; num130++)
								{
									Dust.NewDust(vector12, 20, 20, 5, vector13.X * 0.4f, vector13.Y * 0.4f, 0, default(Color), 1f);
								}
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.rotation = num116;
						float num131 = 6f;
						Vector2 vector14 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num132 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector14.X;
						float num133 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector14.Y;
						float num134 = (float)Math.Sqrt((double)(num132 * num132 + num133 * num133));
						num134 = num131 / num134;
						this.velocity.X = num132 * num134;
						this.velocity.Y = num133 * num134;
						this.ai[1] = 2f;
					}
					else if (this.ai[1] == 2f)
					{
						this.ai[2] += 1f;
						if (this.ai[2] >= 40f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
							this.velocity.Y = this.velocity.Y * 0.98f;
							if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
							{
								this.velocity.X = 0f;
							}
							if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
							{
								this.velocity.Y = 0f;
							}
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
						}
						if (this.ai[2] >= 150f)
						{
							this.ai[3] += 1f;
							this.ai[2] = 0f;
							this.target = 255;
							this.rotation = num116;
							if (this.ai[3] >= 3f)
							{
								this.ai[1] = 0f;
								this.ai[3] = 0f;
							}
							else
							{
								this.ai[1] = 1f;
							}
						}
					}
					if ((double)this.life < (double)this.lifeMax * 0.5)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.ai[2] = 0f;
						this.ai[3] = 0f;
						this.netUpdate = true;
						return;
					}
				}
				else if (this.ai[0] == 1f || this.ai[0] == 2f)
				{
					if (this.ai[0] == 1f)
					{
						this.ai[2] += 0.005f;
						if ((double)this.ai[2] > 0.5)
						{
							this.ai[2] = 0.5f;
						}
					}
					else
					{
						this.ai[2] -= 0.005f;
						if (this.ai[2] < 0f)
						{
							this.ai[2] = 0f;
						}
					}
					this.rotation += this.ai[2];
					this.ai[1] += 1f;
					if (this.ai[1] == 100f)
					{
						this.ai[0] += 1f;
						this.ai[1] = 0f;
						if (this.ai[0] == 3f)
						{
							this.ai[2] = 0f;
						}
						else
						{
							Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
							for (int num135 = 0; num135 < 2; num135++)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 8, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
							}
							for (int num136 = 0; num136 < 20; num136++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
							}
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
					}
					Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
					this.velocity.X = this.velocity.X * 0.98f;
					this.velocity.Y = this.velocity.Y * 0.98f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
						return;
					}
				}
				else
				{
					this.damage = 23;
					this.defense = 0;
					if (this.ai[1] == 0f)
					{
						float num137 = 6f;
						float num138 = 0.07f;
						Vector2 vector15 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num139 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector15.X;
						float num140 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 120f - vector15.Y;
						float num141 = (float)Math.Sqrt((double)(num139 * num139 + num140 * num140));
						num141 = num137 / num141;
						num139 *= num141;
						num140 *= num141;
						if (this.velocity.X < num139)
						{
							this.velocity.X = this.velocity.X + num138;
							if (this.velocity.X < 0f && num139 > 0f)
							{
								this.velocity.X = this.velocity.X + num138;
							}
						}
						else if (this.velocity.X > num139)
						{
							this.velocity.X = this.velocity.X - num138;
							if (this.velocity.X > 0f && num139 < 0f)
							{
								this.velocity.X = this.velocity.X - num138;
							}
						}
						if (this.velocity.Y < num140)
						{
							this.velocity.Y = this.velocity.Y + num138;
							if (this.velocity.Y < 0f && num140 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num138;
							}
						}
						else if (this.velocity.Y > num140)
						{
							this.velocity.Y = this.velocity.Y - num138;
							if (this.velocity.Y > 0f && num140 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num138;
							}
						}
						this.ai[2] += 1f;
						if (this.ai[2] >= 200f)
						{
							this.ai[1] = 1f;
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							this.target = 255;
							this.netUpdate = true;
							return;
						}
					}
					else
					{
						if (this.ai[1] == 1f)
						{
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							this.rotation = num116;
							float num142 = 6.8f;
							Vector2 vector16 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num143 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector16.X;
							float num144 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector16.Y;
							float num145 = (float)Math.Sqrt((double)(num143 * num143 + num144 * num144));
							num145 = num142 / num145;
							this.velocity.X = num143 * num145;
							this.velocity.Y = num144 * num145;
							this.ai[1] = 2f;
							return;
						}
						if (this.ai[1] == 2f)
						{
							this.ai[2] += 1f;
							if (this.ai[2] >= 40f)
							{
								this.velocity.X = this.velocity.X * 0.97f;
								this.velocity.Y = this.velocity.Y * 0.97f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
								}
							}
							else
							{
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
							}
							if (this.ai[2] >= 130f)
							{
								this.ai[3] += 1f;
								this.ai[2] = 0f;
								this.target = 255;
								this.rotation = num116;
								if (this.ai[3] >= 3f)
								{
									this.ai[1] = 0f;
									this.ai[3] = 0f;
									return;
								}
								this.ai[1] = 1f;
								return;
							}
						}
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				float num146 = 6f;
				float num147 = 0.05f;
				if (this.type == 6 || this.type == 173)
				{
					num146 = 4f;
					num147 = 0.02f;
				}
				else if (this.type == 94)
				{
					num146 = 4.2f;
					num147 = 0.022f;
				}
				else if (this.type == 252)
				{
					if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
					{
						num146 = 6f;
						num147 = 0.1f;
					}
					else
					{
						num147 = 0.01f;
						num146 = 2f;
					}
				}
				else if (this.type == 42 || (this.type >= 231 && this.type <= 235))
				{
					num146 = 3.5f;
					num147 = 0.021f;
					if (this.type == 231)
					{
						num146 = 3f;
						num147 = 0.017f;
					}
					num146 *= 1f - this.scale;
					num147 *= 1f - this.scale;
				}
				else if (this.type == 205)
				{
					num146 = 3.25f;
					num147 = 0.018f;
				}
				else if (this.type == 176)
				{
					num146 = 4f;
					num147 = 0.017f;
				}
				else if (this.type == 23)
				{
					num146 = 1f;
					num147 = 0.03f;
				}
				else if (this.type == 5)
				{
					num146 = 5f;
					num147 = 0.03f;
				}
				else if (this.type == 210 || this.type == 211)
				{
					this.localAI[0] += 1f;
					float num148 = (this.localAI[0] - 60f) / 60f;
					if (num148 > 1f)
					{
						num148 = 1f;
					}
					else
					{
						if (this.velocity.X > 6f)
						{
							this.velocity.X = 6f;
						}
						if (this.velocity.X < -6f)
						{
							this.velocity.X = -6f;
						}
						if (this.velocity.Y > 6f)
						{
							this.velocity.Y = 6f;
						}
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					num146 = 5f;
					num147 = 0.1f;
					num147 *= num148;
				}
				Vector2 vector17 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num149 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num150 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num149 = (float)((int)(num149 / 8f) * 8);
				num150 = (float)((int)(num150 / 8f) * 8);
				vector17.X = (float)((int)(vector17.X / 8f) * 8);
				vector17.Y = (float)((int)(vector17.Y / 8f) * 8);
				num149 -= vector17.X;
				num150 -= vector17.Y;
				float num151 = (float)Math.Sqrt((double)(num149 * num149 + num150 * num150));
				float num152 = num151;
				bool flag16 = false;
				if (num151 > 600f)
				{
					flag16 = true;
				}
				if (num151 == 0f)
				{
					num149 = this.velocity.X;
					num150 = this.velocity.Y;
				}
				else
				{
					num151 = num146 / num151;
					num149 *= num151;
					num150 *= num151;
				}
				if (this.type == 6 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					if (num152 > 100f || this.type == 42 || this.type == 94 || this.type == 176 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.023f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.023f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.023f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.023f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num152 < 150f && (this.type == 6 || this.type == 94 || this.type == 173))
					{
						this.velocity.X = this.velocity.X + num149 * 0.007f;
						this.velocity.Y = this.velocity.Y + num150 * 0.007f;
					}
				}
				if (Main.player[this.target].dead)
				{
					num149 = (float)this.direction * num146 / 2f;
					num150 = -num146 / 2f;
				}
				if (this.velocity.X < num149)
				{
					this.velocity.X = this.velocity.X + num147;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X < 0f && num149 > 0f)
					{
						this.velocity.X = this.velocity.X + num147;
					}
				}
				else if (this.velocity.X > num149)
				{
					this.velocity.X = this.velocity.X - num147;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.X > 0f && num149 < 0f)
					{
						this.velocity.X = this.velocity.X - num147;
					}
				}
				if (this.velocity.Y < num150)
				{
					this.velocity.Y = this.velocity.Y + num147;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y < 0f && num150 > 0f)
					{
						this.velocity.Y = this.velocity.Y + num147;
					}
				}
				else if (this.velocity.Y > num150)
				{
					this.velocity.Y = this.velocity.Y - num147;
					if (this.type != 173 && this.type != 6 && this.type != 42 && (this.type < 231 || this.type > 235) && this.type != 94 && this.type != 139 && this.velocity.Y > 0f && num150 < 0f)
					{
						this.velocity.Y = this.velocity.Y - num147;
					}
				}
				if (this.type == 23)
				{
					if (num149 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num150, (double)num149);
					}
					else if (num149 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num150, (double)num149) + 3.14f;
					}
				}
				else if (this.type == 139)
				{
					this.localAI[0] += 1f;
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					if (Main.netMode != 1 && this.localAI[0] >= 120f)
					{
						this.localAI[0] = 0f;
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							int num153 = 25;
							int num154 = 84;
							Projectile.NewProjectile(vector17.X, vector17.Y, num149, num150, num154, num153, 0f, Main.myPlayer, 0f, 0f);
						}
					}
					int num155 = (int)this.position.X + this.width / 2;
					int num156 = (int)this.position.Y + this.height / 2;
					num155 /= 16;
					num156 /= 16;
					if (!WorldGen.SolidTile(num155, num156))
					{
						Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
					}
					if (num149 > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num150, (double)num149);
					}
					if (num149 < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num150, (double)num149) + 3.14f;
					}
				}
				else if (this.type == 6 || this.type == 94 || this.type == 173)
				{
					this.rotation = (float)Math.Atan2((double)num150, (double)num149) - 1.57f;
				}
				else if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				}
				if (this.type == 6 || this.type == 23 || this.type == 42 || this.type == 94 || this.type == 139 || this.type == 173 || this.type == 176 || this.type == 205 || this.type == 210 || this.type == 211 || (this.type >= 231 && this.type <= 235))
				{
					float num157 = 0.7f;
					if (this.type == 6 || this.type == 173)
					{
						num157 = 0.4f;
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -num157;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -num157;
						if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 23)
					{
						int num158 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num158].noGravity = true;
						Dust expr_A3F1_cp_0 = Main.dust[num158];
						expr_A3F1_cp_0.velocity.X = expr_A3F1_cp_0.velocity.X * 0.3f;
						Dust expr_A40F_cp_0 = Main.dust[num158];
						expr_A40F_cp_0.velocity.Y = expr_A40F_cp_0.velocity.Y * 0.3f;
					}
					else if (this.type != 42 && this.type != 139 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235) && Main.rand.Next(20) == 0)
					{
						int num159 = 18;
						if (this.type == 173)
						{
							num159 = 5;
						}
						int num160 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), num159, this.velocity.X, 2f, 75, this.color, this.scale);
						Dust expr_A545_cp_0 = Main.dust[num160];
						expr_A545_cp_0.velocity.X = expr_A545_cp_0.velocity.X * 0.5f;
						Dust expr_A563_cp_0 = Main.dust[num160];
						expr_A563_cp_0.velocity.Y = expr_A563_cp_0.velocity.Y * 0.1f;
					}
				}
				else if (this.type != 252 && Main.rand.Next(40) == 0)
				{
					int num161 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
					Dust expr_A610_cp_0 = Main.dust[num161];
					expr_A610_cp_0.velocity.X = expr_A610_cp_0.velocity.X * 0.5f;
					Dust expr_A62E_cp_0 = Main.dust[num161];
					expr_A62E_cp_0.velocity.Y = expr_A62E_cp_0.velocity.Y * 0.1f;
				}
				if ((this.type == 6 || this.type == 94 || this.type == 173) && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.3f;
					if (this.velocity.Y < -2f)
					{
						this.velocity.Y = -2f;
					}
				}
				if (this.type == 205 && this.wet)
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.95f;
					}
					this.velocity.Y = this.velocity.Y - 0.5f;
					if (this.velocity.Y < -4f)
					{
						this.velocity.Y = -4f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 42 || this.type == 176 || (this.type >= 231 && this.type <= 235))
				{
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
					}
					if (this.ai[1] == 101f)
					{
						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
						this.ai[1] = 0f;
					}
					if (Main.netMode != 1)
					{
						this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						if (this.type == 176)
						{
							this.ai[1] += (float)Main.rand.Next(5, 20) * 0.1f * this.scale;
						}
						if (this.ai[1] >= 130f)
						{
							if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								float num162 = 8f;
								Vector2 vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
								float num163 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector18.X + (float)Main.rand.Next(-20, 21);
								float num164 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector18.Y + (float)Main.rand.Next(-20, 21);
								if ((num163 < 0f && this.velocity.X < 0f) || (num163 > 0f && this.velocity.X > 0f))
								{
									float num165 = (float)Math.Sqrt((double)(num163 * num163 + num164 * num164));
									num165 = num162 / num165;
									num163 *= num165;
									num164 *= num165;
									int num166 = (int)(10f * this.scale);
									if (this.type == 176)
									{
										num166 = (int)(30f * this.scale);
									}
									int num167 = 55;
									int num168 = Projectile.NewProjectile(vector18.X, vector18.Y, num163, num164, num167, num166, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num168].timeLeft = 300;
									this.ai[1] = 101f;
									this.netUpdate = true;
								}
								else
								{
									this.ai[1] = 0f;
								}
							}
							else
							{
								this.ai[1] = 0f;
							}
						}
					}
				}
				if (this.type == 139 && flag16)
				{
					if ((this.velocity.X > 0f && num149 > 0f) || (this.velocity.X < 0f && num149 < 0f))
					{
						if (Math.Abs(this.velocity.X) < 12f)
						{
							this.velocity.X = this.velocity.X * 1.05f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				if (Main.netMode != 1 && this.type == 94 && !Main.player[this.target].dead)
				{
					if (this.justHit)
					{
						this.localAI[0] = 0f;
					}
					this.localAI[0] += 1f;
					if (this.localAI[0] == 180f)
					{
						if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2) + this.velocity.X), (int)(this.position.Y + (float)(this.height / 2) + this.velocity.Y), 112, 0);
						}
						this.localAI[0] = 0f;
					}
				}
				if ((Main.dayTime && this.type != 173 && this.type != 6 && this.type != 23 && this.type != 42 && this.type != 94 && this.type != 176 && this.type != 205 && this.type != 210 && this.type != 211 && this.type != 252 && (this.type < 231 || this.type > 235)) || Main.player[this.target].dead)
				{
					this.velocity.Y = this.velocity.Y - num147 * 2f;
					if (this.timeLeft > 10)
					{
						this.timeLeft = 10;
					}
				}
				if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
				{
					this.netUpdate = true;
					return;
				}
			}
			else if (this.aiStyle == 6)
			{
				if (this.type == 117 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 13);
					int num169 = 1;
					if (this.velocity.X < 0f)
					{
						num169 = -1;
					}
					for (int num170 = 0; num170 < 20; num170++)
					{
						Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y - 20f), this.width + 40, this.height + 40, 5, (float)(num169 * 8), -1f, 0, default(Color), 1f);
					}
				}
				if (this.type >= 13 && this.type <= 15)
				{
					this.realLife = -1;
				}
				else if (this.ai[3] > 0f)
				{
					this.realLife = (int)this.ai[3];
				}
				if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
				{
					this.TargetClosest(true);
				}
				if (Main.player[this.target].dead && this.timeLeft > 300)
				{
					this.timeLeft = 300;
				}
				if (Main.netMode != 1)
				{
					if (this.type == 87 && this.ai[0] == 0f)
					{
						this.ai[3] = (float)this.whoAmI;
						this.realLife = this.whoAmI;
						int num171 = this.whoAmI;
						for (int num172 = 0; num172 < 14; num172++)
						{
							int num173 = 89;
							if (num172 == 1 || num172 == 8)
							{
								num173 = 88;
							}
							else if (num172 == 11)
							{
								num173 = 90;
							}
							else if (num172 == 12)
							{
								num173 = 91;
							}
							else if (num172 == 13)
							{
								num173 = 92;
							}
							int num174 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num173, this.whoAmI);
							Main.npc[num174].ai[3] = (float)this.whoAmI;
							Main.npc[num174].realLife = this.whoAmI;
							Main.npc[num174].ai[1] = (float)num171;
							Main.npc[num171].ai[0] = (float)num174;
							NetMessage.SendData(23, -1, -1, "", num174, 0f, 0f, 0f, 0);
							num171 = num174;
						}
					}
					if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 13 || this.type == 14 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || this.type == 117 || this.type == 118) && this.ai[0] == 0f)
					{
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
						{
							if (this.type < 13 || this.type > 15)
							{
								this.ai[3] = (float)this.whoAmI;
								this.realLife = this.whoAmI;
							}
							this.ai[2] = (float)Main.rand.Next(8, 13);
							if (this.type == 10)
							{
								this.ai[2] = (float)Main.rand.Next(4, 7);
							}
							if (this.type == 13)
							{
								this.ai[2] = (float)Main.rand.Next(45, 56);
							}
							if (this.type == 39)
							{
								this.ai[2] = (float)Main.rand.Next(12, 19);
							}
							if (this.type == 95)
							{
								this.ai[2] = (float)Main.rand.Next(6, 12);
							}
							if (this.type == 98)
							{
								this.ai[2] = (float)Main.rand.Next(20, 26);
							}
							if (this.type == 117)
							{
								this.ai[2] = (float)Main.rand.Next(3, 6);
							}
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI);
						}
						else if ((this.type == 8 || this.type == 11 || this.type == 14 || this.type == 40 || this.type == 96 || this.type == 99 || this.type == 118) && this.ai[2] > 0f)
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type, this.whoAmI);
						}
						else
						{
							this.ai[0] = (float)NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), this.type + 1, this.whoAmI);
						}
						if (this.type < 13 || this.type > 15)
						{
							Main.npc[(int)this.ai[0]].ai[3] = this.ai[3];
							Main.npc[(int)this.ai[0]].realLife = this.realLife;
						}
						Main.npc[(int)this.ai[0]].ai[1] = (float)this.whoAmI;
						Main.npc[(int)this.ai[0]].ai[2] = this.ai[2] - 1f;
						this.netUpdate = true;
					}
					if ((this.type == 8 || this.type == 9 || this.type == 11 || this.type == 12 || this.type == 40 || this.type == 41 || this.type == 96 || this.type == 97 || this.type == 99 || this.type == 100 || (this.type > 87 && this.type <= 92) || this.type == 118 || this.type == 119) && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
					if ((this.type == 7 || this.type == 8 || this.type == 10 || this.type == 11 || this.type == 39 || this.type == 40 || this.type == 95 || this.type == 96 || this.type == 98 || this.type == 99 || (this.type >= 87 && this.type < 92) || this.type == 117 || this.type == 118) && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
					{
						this.life = 0;
						this.HitEffect(0, 10.0);
						this.active = false;
					}
					if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (!Main.npc[(int)this.ai[1]].active && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 13 && !Main.npc[(int)this.ai[0]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 15 && !Main.npc[(int)this.ai[1]].active)
						{
							this.life = 0;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != this.aiStyle))
						{
							this.type = 13;
							int num175 = this.whoAmI;
							float num176 = (float)this.life / (float)this.lifeMax;
							float num177 = this.ai[0];
							this.SetDefaults(this.type, -1f);
							this.life = (int)((float)this.lifeMax * num176);
							this.ai[0] = num177;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num175;
						}
						if (this.type == 14 && (!Main.npc[(int)this.ai[0]].active || Main.npc[(int)this.ai[0]].aiStyle != this.aiStyle))
						{
							int num178 = this.whoAmI;
							float num179 = (float)this.life / (float)this.lifeMax;
							float num180 = this.ai[1];
							this.SetDefaults(this.type, -1f);
							this.life = (int)((float)this.lifeMax * num179);
							this.ai[1] = num180;
							this.TargetClosest(true);
							this.netUpdate = true;
							this.whoAmI = num178;
						}
						if (this.life == 0)
						{
							bool flag17 = true;
							for (int num181 = 0; num181 < 200; num181++)
							{
								if (Main.npc[num181].active && (Main.npc[num181].type == 13 || Main.npc[num181].type == 14 || Main.npc[num181].type == 15))
								{
									flag17 = false;
									break;
								}
							}
							if (flag17)
							{
								this.boss = true;
								this.NPCLoot();
							}
						}
					}
					if (!this.active && Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0);
					}
				}
				int num182 = (int)(this.position.X / 16f) - 1;
				int num183 = (int)((this.position.X + (float)this.width) / 16f) + 2;
				int num184 = (int)(this.position.Y / 16f) - 1;
				int num185 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
				if (num182 < 0)
				{
					num182 = 0;
				}
				if (num183 > Main.maxTilesX)
				{
					num183 = Main.maxTilesX;
				}
				if (num184 < 0)
				{
					num184 = 0;
				}
				if (num185 > Main.maxTilesY)
				{
					num185 = Main.maxTilesY;
				}
				bool flag18 = false;
				if (this.type >= 87 && this.type <= 92)
				{
					flag18 = true;
				}
				if (!flag18)
				{
					for (int num186 = num182; num186 < num183; num186++)
					{
						for (int num187 = num184; num187 < num185; num187++)
						{
							if (Main.tile[num186, num187] != null && ((Main.tile[num186, num187].nactive() && (Main.tileSolid[(int)Main.tile[num186, num187].type] || (Main.tileSolidTop[(int)Main.tile[num186, num187].type] && Main.tile[num186, num187].frameY == 0))) || Main.tile[num186, num187].liquid > 64))
							{
								Vector2 vector19;
								vector19.X = (float)(num186 * 16);
								vector19.Y = (float)(num187 * 16);
								if (this.position.X + (float)this.width > vector19.X && this.position.X < vector19.X + 16f && this.position.Y + (float)this.height > vector19.Y && this.position.Y < vector19.Y + 16f)
								{
									flag18 = true;
									if (Main.rand.Next(100) == 0 && this.type != 117 && Main.tile[num186, num187].nactive())
									{
										WorldGen.KillTile(num186, num187, true, true, false);
									}
									if (Main.netMode != 1 && Main.tile[num186, num187].type == 2)
									{
										ushort arg_BB6F_0 = Main.tile[num186, num187 - 1].type;
									}
								}
							}
						}
					}
				}
				if (!flag18 && (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117 || this.type == 375))
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					int num188 = 1000;
					bool flag19 = true;
					for (int num189 = 0; num189 < 255; num189++)
					{
						if (Main.player[num189].active)
						{
							Rectangle rectangle2 = new Rectangle((int)Main.player[num189].position.X - num188, (int)Main.player[num189].position.Y - num188, num188 * 2, num188 * 2);
							if (rectangle.Intersects(rectangle2))
							{
								flag19 = false;
								break;
							}
						}
					}
					if (flag19)
					{
						flag18 = true;
					}
				}
				if (this.type >= 87 && this.type <= 92)
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
				}
				float num190 = 8f;
				float num191 = 0.07f;
				if (this.type == 95)
				{
					num190 = 5.5f;
					num191 = 0.045f;
				}
				if (this.type == 10)
				{
					num190 = 6f;
					num191 = 0.05f;
				}
				if (this.type == 13)
				{
					num190 = 10f;
					num191 = 0.07f;
				}
				if (this.type == 87)
				{
					num190 = 11f;
					num191 = 0.25f;
				}
				if (this.type == 375)
				{
					num190 = 6f;
					num191 = 0.15f;
				}
				if (this.type == 117 && Main.wof >= 0)
				{
					float num192 = (float)Main.npc[Main.wof].life / (float)Main.npc[Main.wof].lifeMax;
					if ((double)num192 < 0.5)
					{
						num190 += 1f;
						num191 += 0.1f;
					}
					if ((double)num192 < 0.25)
					{
						num190 += 1f;
						num191 += 0.1f;
					}
					if ((double)num192 < 0.1)
					{
						num190 += 2f;
						num191 += 0.1f;
					}
				}
				Vector2 vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num193 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
				float num194 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
				num193 = (float)((int)(num193 / 16f) * 16);
				num194 = (float)((int)(num194 / 16f) * 16);
				vector20.X = (float)((int)(vector20.X / 16f) * 16);
				vector20.Y = (float)((int)(vector20.Y / 16f) * 16);
				num193 -= vector20.X;
				num194 -= vector20.Y;
				if (this.type == 375)
				{
					num193 *= -1f;
					num194 *= -1f;
				}
				float num195 = (float)Math.Sqrt((double)(num193 * num193 + num194 * num194));
				if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
				{
					try
					{
						vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num193 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector20.X;
						num194 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector20.Y;
					}
					catch
					{
					}
					this.rotation = (float)Math.Atan2((double)num194, (double)num193) + 1.57f;
					num195 = (float)Math.Sqrt((double)(num193 * num193 + num194 * num194));
					int num196 = this.width;
					if (this.type >= 87 && this.type <= 92)
					{
						num196 = 42;
					}
					num195 = (num195 - (float)num196) / num195;
					num193 *= num195;
					num194 *= num195;
					this.velocity = Vector2.Zero;
					this.position.X = this.position.X + num193;
					this.position.Y = this.position.Y + num194;
					if (this.type >= 87 && this.type <= 92)
					{
						if (num193 < 0f)
						{
							this.spriteDirection = 1;
							return;
						}
						if (num193 > 0f)
						{
							this.spriteDirection = -1;
							return;
						}
					}
				}
				else
				{
					if (!flag18)
					{
						this.TargetClosest(true);
						this.velocity.Y = this.velocity.Y + 0.11f;
						if (this.velocity.Y > num190)
						{
							this.velocity.Y = num190;
						}
						if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num190 * 0.4)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - num191 * 1.1f;
							}
							else
							{
								this.velocity.X = this.velocity.X + num191 * 1.1f;
							}
						}
						else if (this.velocity.Y == num190)
						{
							if (this.velocity.X < num193)
							{
								this.velocity.X = this.velocity.X + num191;
							}
							else if (this.velocity.X > num193)
							{
								this.velocity.X = this.velocity.X - num191;
							}
						}
						else if (this.velocity.Y > 4f)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num191 * 0.9f;
							}
							else
							{
								this.velocity.X = this.velocity.X - num191 * 0.9f;
							}
						}
					}
					else
					{
						if (this.type != 87 && this.type != 117 && this.soundDelay == 0)
						{
							float num197 = num195 / 40f;
							if (num197 < 10f)
							{
								num197 = 10f;
							}
							if (num197 > 20f)
							{
								num197 = 20f;
							}
							this.soundDelay = (int)num197;
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
						}
						num195 = (float)Math.Sqrt((double)(num193 * num193 + num194 * num194));
						float num198 = Math.Abs(num193);
						float num199 = Math.Abs(num194);
						float num200 = num190 / num195;
						num193 *= num200;
						num194 *= num200;
						if ((this.type == 13 || this.type == 7) && !Main.player[this.target].zoneEvil && !Main.player[this.target].zoneBlood)
						{
							bool flag20 = true;
							for (int num201 = 0; num201 < 255; num201++)
							{
								if (Main.player[num201].active && !Main.player[num201].dead && Main.player[num201].zoneEvil)
								{
									flag20 = false;
								}
							}
							if (flag20)
							{
								if (Main.netMode != 1 && (double)(this.position.Y / 16f) > (Main.rockLayer + (double)Main.maxTilesY) / 2.0)
								{
									this.active = false;
									int num202 = (int)this.ai[0];
									while (num202 > 0 && num202 < 200 && Main.npc[num202].active && Main.npc[num202].aiStyle == this.aiStyle)
									{
										int num203 = (int)Main.npc[num202].ai[0];
										Main.npc[num202].active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", num202, 0f, 0f, 0f, 0);
										}
										num202 = num203;
									}
									if (Main.netMode == 2)
									{
										NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
									}
								}
								num193 = 0f;
								num194 = num190;
							}
						}
						bool flag21 = false;
						if (this.type == 87)
						{
							if (((this.velocity.X > 0f && num193 < 0f) || (this.velocity.X < 0f && num193 > 0f) || (this.velocity.Y > 0f && num194 < 0f) || (this.velocity.Y < 0f && num194 > 0f)) && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num191 / 2f && num195 < 300f)
							{
								flag21 = true;
								if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num190)
								{
									this.velocity *= 1.1f;
								}
							}
							if (this.position.Y > Main.player[this.target].position.Y || (double)(Main.player[this.target].position.Y / 16f) > Main.worldSurface || Main.player[this.target].dead)
							{
								flag21 = true;
								if (Math.Abs(this.velocity.X) < num190 / 2f)
								{
									if (this.velocity.X == 0f)
									{
										this.velocity.X = this.velocity.X - (float)this.direction;
									}
									this.velocity.X = this.velocity.X * 1.1f;
								}
								else if (this.velocity.Y > -num190)
								{
									this.velocity.Y = this.velocity.Y - num191;
								}
							}
						}
						if (!flag21)
						{
							if ((this.velocity.X > 0f && num193 > 0f) || (this.velocity.X < 0f && num193 < 0f) || (this.velocity.Y > 0f && num194 > 0f) || (this.velocity.Y < 0f && num194 < 0f))
							{
								if (this.velocity.X < num193)
								{
									this.velocity.X = this.velocity.X + num191;
								}
								else if (this.velocity.X > num193)
								{
									this.velocity.X = this.velocity.X - num191;
								}
								if (this.velocity.Y < num194)
								{
									this.velocity.Y = this.velocity.Y + num191;
								}
								else if (this.velocity.Y > num194)
								{
									this.velocity.Y = this.velocity.Y - num191;
								}
								if ((double)Math.Abs(num194) < (double)num190 * 0.2 && ((this.velocity.X > 0f && num193 < 0f) || (this.velocity.X < 0f && num193 > 0f)))
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num191 * 2f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num191 * 2f;
									}
								}
								if ((double)Math.Abs(num193) < (double)num190 * 0.2 && ((this.velocity.Y > 0f && num194 < 0f) || (this.velocity.Y < 0f && num194 > 0f)))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num191 * 2f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num191 * 2f;
									}
								}
							}
							else if (num198 > num199)
							{
								if (this.velocity.X < num193)
								{
									this.velocity.X = this.velocity.X + num191 * 1.1f;
								}
								else if (this.velocity.X > num193)
								{
									this.velocity.X = this.velocity.X - num191 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num190 * 0.5)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y + num191;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - num191;
									}
								}
							}
							else
							{
								if (this.velocity.Y < num194)
								{
									this.velocity.Y = this.velocity.Y + num191 * 1.1f;
								}
								else if (this.velocity.Y > num194)
								{
									this.velocity.Y = this.velocity.Y - num191 * 1.1f;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num190 * 0.5)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X + num191;
									}
									else
									{
										this.velocity.X = this.velocity.X - num191;
									}
								}
							}
						}
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 95 || this.type == 98 || this.type == 117)
					{
						if (flag18)
						{
							if (this.localAI[0] != 1f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 1f;
						}
						else
						{
							if (this.localAI[0] != 0f)
							{
								this.netUpdate = true;
							}
							this.localAI[0] = 0f;
						}
						if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
						{
							this.netUpdate = true;
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 7)
			{
				bool flag22 = Main.raining;
				if (!Main.dayTime)
				{
					flag22 = true;
				}
				if (Main.eclipse)
				{
					flag22 = true;
				}
				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
				{
					this.StrikeNPC(9999, 0f, 0, false, false);
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, "", this.whoAmI, 9999f, 0f, 0f, 0);
					}
				}
				if ((this.type == 148 || this.type == 149) && this.localAI[0] == 0f)
				{
					this.localAI[0] = (float)Main.rand.Next(1, 5);
				}
				if ((this.type == 362 || this.type == 364) && Main.netMode != 1 && (this.velocity.Y > 4f || this.velocity.Y < -4f || this.wet))
				{
					int num204 = this.direction;
					this.Transform(this.type + 1);
					this.TargetClosest(true);
					this.direction = num204;
					this.netUpdate = true;
					return;
				}
				int num205 = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num206 = (int)(this.position.Y + (float)this.height + 1f) / 16;
				if (this.type == 107)
				{
					NPC.savedGoblin = true;
				}
				if (this.type == 108)
				{
					NPC.savedWizard = true;
				}
				if (this.type == 124)
				{
					NPC.savedMech = true;
				}
				if (this.type == 353)
				{
					NPC.savedStylist = true;
				}
				if (this.type == 369)
				{
					NPC.savedAngler = true;
				}
				if ((this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367) && this.target == 255)
				{
					this.TargetClosest(true);
					if (this.position.X < Main.player[this.target].position.X)
					{
						this.direction = 1;
						this.spriteDirection = this.direction;
					}
					if (this.position.X > Main.player[this.target].position.X)
					{
						this.direction = -1;
						this.spriteDirection = this.direction;
					}
					if (this.homeTileX == -1)
					{
						this.homeTileX = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					}
				}
				else if (this.homeTileX == -1 && this.homeTileY == -1 && this.velocity.Y == 0f)
				{
					this.homeTileX = (int)this.center().X / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height + 4f) / 16;
				}
				bool flag23 = false;
				this.directionY = -1;
				if (this.direction == 0)
				{
					this.direction = 1;
				}
				for (int num207 = 0; num207 < 255; num207++)
				{
					if (Main.player[num207].active && Main.player[num207].talkNPC == this.whoAmI)
					{
						flag23 = true;
						if (this.ai[0] != 0f)
						{
							this.netUpdate = true;
						}
						this.ai[0] = 0f;
						this.ai[1] = 300f;
						this.ai[2] = 100f;
						if (Main.player[num207].position.X + (float)(Main.player[num207].width / 2) < this.position.X + (float)(this.width / 2))
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
				}
				if (this.ai[3] > 0f)
				{
					this.life = -1;
					this.HitEffect(0, 10.0);
					this.active = false;
					if (this.type == 37)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
				}
				if (this.type == 37 && Main.netMode != 1)
				{
					this.homeless = false;
					this.homeTileX = Main.dungeonX;
					this.homeTileY = Main.dungeonY;
					if (NPC.downedBoss3)
					{
						this.ai[3] = 1f;
						this.netUpdate = true;
					}
				}
				int num208 = this.homeTileY;
				if (Main.netMode != 1 && this.homeTileY > 0)
				{
					while (!WorldGen.SolidTile(this.homeTileX, num208) && num208 < Main.maxTilesY - 20)
					{
						num208++;
					}
				}
				if (this.type == 368)
				{
					this.homeless = true;
					if (!Main.dayTime)
					{
						this.homeTileX = (int)(this.center().X / 16f);
						this.homeTileY = (int)(this.position.Y + (float)this.height + 2f) / 16;
						if (!flag23)
						{
							this.ai[0] = 1f;
							this.ai[1] = 200f;
						}
						flag22 = false;
					}
				}
				if (this.type == 369 && this.homeless && this.wet && (this.center().X / 16f < 380f || this.center().X / 16f > (float)(Main.maxTilesX - 380)))
				{
					this.homeTileX = Main.spawnTileX;
					this.homeTileY = Main.spawnTileY;
					this.ai[0] = 1f;
					this.ai[1] = 200f;
				}
				if (Main.tile[num205, num206] == null)
				{
					return;
				}
				if (Main.netMode != 1 && this.townNPC && (flag22 || Main.tileDungeon[(int)Main.tile[num205, num206].type]) && (num205 != this.homeTileX || num206 != num208) && !this.homeless)
				{
					bool flag24 = true;
					for (int num209 = 0; num209 < 2; num209++)
					{
						Rectangle rectangle3 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						if (num209 == 1)
						{
							rectangle3 = new Rectangle(this.homeTileX * 16 + 8 - NPC.sWidth / 2 - NPC.safeRangeX, num208 * 16 + 8 - NPC.sHeight / 2 - NPC.safeRangeY, NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
						}
						for (int num210 = 0; num210 < 255; num210++)
						{
							if (Main.player[num210].active)
							{
								Rectangle rectangle4 = new Rectangle((int)Main.player[num210].position.X, (int)Main.player[num210].position.Y, Main.player[num210].width, Main.player[num210].height);
								if (rectangle4.Intersects(rectangle3))
								{
									flag24 = false;
									break;
								}
							}
							if (!flag24)
							{
								break;
							}
						}
					}
					if (flag24)
					{
						if (this.type == 37 || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, num208 - 3, num208 - 1))
						{
							this.velocity.X = 0f;
							this.velocity.Y = 0f;
							this.position.X = (float)(this.homeTileX * 16 + 8 - this.width / 2);
							this.position.Y = (float)(num208 * 16 - this.height) - 0.1f;
							this.netUpdate = true;
						}
						else
						{
							this.homeless = true;
							WorldGen.QuickFindHome(this.whoAmI);
						}
					}
				}
				if (this.ai[0] == 0f)
				{
					if (this.ai[2] > 0f)
					{
						this.ai[2] -= 1f;
					}
					if (flag22 && !flag23 && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303 && this.type != 337 && this.type != 361 && this.type != 362 && this.type != 364)
					{
						if (Main.netMode != 1)
						{
							if (num205 == this.homeTileX && num206 == num208)
							{
								if (this.velocity.X != 0f)
								{
									this.netUpdate = true;
								}
								if ((double)this.velocity.X > 0.1)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if ((double)this.velocity.X < -0.1)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else
								{
									this.velocity.X = 0f;
								}
							}
							else if (!flag23)
							{
								if (num205 > this.homeTileX)
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								this.ai[2] = 0f;
								this.netUpdate = true;
							}
						}
					}
					else
					{
						if (this.type == 300)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if ((double)this.velocity.X > 0.1)
						{
							this.velocity.X = this.velocity.X - 0.1f;
						}
						else if ((double)this.velocity.X < -0.1)
						{
							this.velocity.X = this.velocity.X + 0.1f;
						}
						else
						{
							this.velocity.X = 0f;
						}
						if (Main.netMode != 1)
						{
							if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							if (this.ai[1] <= 0f)
							{
								this.ai[0] = 1f;
								this.ai[1] = (float)(200 + Main.rand.Next(200));
								if (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367)
								{
									this.ai[1] += (float)Main.rand.Next(200, 400);
								}
								this.ai[2] = 0f;
								this.netUpdate = true;
							}
						}
					}
					if (Main.netMode != 1 && (!flag22 || (num205 == this.homeTileX && num206 == num208)))
					{
						if (num205 < this.homeTileX - 25 || num205 > this.homeTileX + 25)
						{
							if (this.ai[2] == 0f)
							{
								if (num205 < this.homeTileX - 50 && this.direction == -1)
								{
									this.direction = 1;
									this.netUpdate = true;
									return;
								}
								if (num205 > this.homeTileX + 50 && this.direction == 1)
								{
									this.direction = -1;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (Main.rand.Next(80) == 0 && this.ai[2] == 0f)
						{
							this.ai[2] = 200f;
							this.direction *= -1;
							this.netUpdate = true;
							return;
						}
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (Main.netMode != 1 && flag22 && num205 == this.homeTileX && num206 == this.homeTileY && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303 && this.type != 337)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(200 + Main.rand.Next(200));
						this.ai[2] = 60f;
						this.netUpdate = true;
						return;
					}
					if (Main.netMode != 1 && !this.homeless && !Main.tileDungeon[(int)Main.tile[num205, num206].type] && (num205 < this.homeTileX - 35 || num205 > this.homeTileX + 35))
					{
						if (this.position.X < (float)(this.homeTileX * 16) && this.direction == -1)
						{
							this.ai[1] -= 5f;
						}
						else if (this.position.X > (float)(this.homeTileX * 16) && this.direction == 1)
						{
							this.ai[1] -= 5f;
						}
					}
					this.ai[1] -= 1f;
					if (this.ai[1] <= 0f)
					{
						this.ai[0] = 0f;
						this.ai[1] = (float)(300 + Main.rand.Next(300));
						if (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367)
						{
							this.ai[1] -= (float)Main.rand.Next(100);
						}
						this.ai[2] = 60f;
						this.netUpdate = true;
					}
					if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
					{
						bool flag25 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
						if (flag25)
						{
							this.closeDoor = false;
							NetMessage.SendData(19, -1, -1, "", 1, (float)this.doorX, (float)this.doorY, (float)this.direction, 0);
						}
						if ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 4) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 4) || (this.position.Y + (float)(this.height / 2)) / 16f > (float)(this.doorY + 4) || (this.position.Y + (float)(this.height / 2)) / 16f < (float)(this.doorY - 4))
						{
							this.closeDoor = false;
						}
					}
					float num211 = 1f;
					float num212 = 0.07f;
					if (this.type == 299)
					{
						num211 = 1.5f;
					}
					if (this.type == 300)
					{
						num211 = 2f;
						num212 = 1f;
					}
					if (this.velocity.X < -num211 || this.velocity.X > num211)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity *= 0.8f;
						}
					}
					else if (this.velocity.X < num211 && this.direction == 1)
					{
						this.velocity.X = this.velocity.X + num212;
						if (this.velocity.X > num211)
						{
							this.velocity.X = num211;
						}
					}
					else if (this.velocity.X > -num211 && this.direction == -1)
					{
						this.velocity.X = this.velocity.X - num212;
						if (this.velocity.X > num211)
						{
							this.velocity.X = num211;
						}
					}
					bool flag26 = (float)((this.homeTileY - 2) * 16) <= this.position.Y;
					if ((this.direction == 1 && this.position.Y + (float)(this.width / 2) > (float)(this.homeTileX * 16)) || (this.direction == -1 && this.position.Y + (float)(this.width / 2) < (float)(this.homeTileX * 16)))
					{
						flag26 = true;
					}
					if (this.velocity.Y >= 0f)
					{
						int num213 = 0;
						if (this.velocity.X < 0f)
						{
							num213 = -1;
						}
						if (this.velocity.X > 0f)
						{
							num213 = 1;
						}
						Vector2 vector21 = this.position;
						vector21.X += this.velocity.X;
						int num214 = (int)((vector21.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num213)) / 16f);
						int num215 = (int)((vector21.Y + (float)this.height - 1f) / 16f);
						if ((float)(num214 * 16) < vector21.X + (float)this.width && (float)(num214 * 16 + 16) > vector21.X)
						{
							if (Main.tile[num214, num215] == null)
							{
								Main.tile[num214, num215] = new Tile();
							}
							if (Main.tile[num214, num215 - 1] == null)
							{
								Main.tile[num214, num215 - 1] = new Tile();
							}
							if (Main.tile[num214, num215 - 2] == null)
							{
								Main.tile[num214, num215 - 2] = new Tile();
							}
							if (Main.tile[num214, num215 - 3] == null)
							{
								Main.tile[num214, num215 - 3] = new Tile();
							}
							if (Main.tile[num214, num215 + 1] == null)
							{
								Main.tile[num214, num215 + 1] = new Tile();
							}
							if (((Main.tile[num214, num215].nactive() && !Main.tile[num214, num215].topSlope() && !Main.tile[num214, num215 - 1].topSlope() && ((Main.tileSolid[(int)Main.tile[num214, num215].type] && !Main.tileSolidTop[(int)Main.tile[num214, num215].type]) || (flag26 && Main.tileSolidTop[(int)Main.tile[num214, num215].type] && Main.tile[num214, num215].frameY == 0 && (!Main.tileSolid[(int)Main.tile[num214, num215 - 1].type] || !Main.tile[num214, num215 - 1].nactive()) && Main.tile[num214, num215].type != 16 && Main.tile[num214, num215].type != 18 && Main.tile[num214, num215].type != 134))) || (Main.tile[num214, num215 - 1].halfBrick() && Main.tile[num214, num215 - 1].nactive())) && (!Main.tile[num214, num215 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num214, num215 - 1].type] || Main.tileSolidTop[(int)Main.tile[num214, num215 - 1].type] || (Main.tile[num214, num215 - 1].halfBrick() && (!Main.tile[num214, num215 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num214, num215 - 4].type] || Main.tileSolidTop[(int)Main.tile[num214, num215 - 4].type]))) && (!Main.tile[num214, num215 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num214, num215 - 2].type] || Main.tileSolidTop[(int)Main.tile[num214, num215 - 2].type]) && (!Main.tile[num214, num215 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num214, num215 - 3].type] || Main.tileSolidTop[(int)Main.tile[num214, num215 - 3].type]) && (!Main.tile[num214 - num213, num215 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num214 - num213, num215 - 3].type] || Main.tileSolidTop[(int)Main.tile[num214 - num213, num215 - 3].type]))
							{
								float num216 = (float)(num215 * 16);
								if (Main.tile[num214, num215].halfBrick())
								{
									num216 += 8f;
								}
								if (Main.tile[num214, num215 - 1].halfBrick())
								{
									num216 -= 8f;
								}
								if (num216 < vector21.Y + (float)this.height)
								{
									float num217 = vector21.Y + (float)this.height - num216;
									if ((double)num217 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num216;
										this.position.Y = num216 - (float)this.height;
										if (num217 < 9f)
										{
											this.stepSpeed = 1f;
										}
										else
										{
											this.stepSpeed = 2f;
										}
									}
								}
							}
						}
					}
					if (this.velocity.Y == 0f)
					{
						if (this.position.X == this.ai[2])
						{
							this.direction *= -1;
						}
						this.ai[2] = -1f;
						int num218 = (int)((this.position.X + (float)(this.width / 2) + (float)(15 * this.direction)) / 16f);
						int num219 = (int)((this.position.Y + (float)this.height - 16f) / 16f);
						if (Main.tile[num218, num219] == null)
						{
							Main.tile[num218, num219] = new Tile();
						}
						if (Main.tile[num218, num219 - 1] == null)
						{
							Main.tile[num218, num219 - 1] = new Tile();
						}
						if (Main.tile[num218, num219 - 2] == null)
						{
							Main.tile[num218, num219 - 2] = new Tile();
						}
						if (Main.tile[num218, num219 - 3] == null)
						{
							Main.tile[num218, num219 - 3] = new Tile();
						}
						if (Main.tile[num218, num219 + 1] == null)
						{
							Main.tile[num218, num219 + 1] = new Tile();
						}
						if (Main.tile[num218 - this.direction, num219 + 1] == null)
						{
							Main.tile[num218 - this.direction, num219 + 1] = new Tile();
						}
						if (Main.tile[num218 + this.direction, num219 - 1] == null)
						{
							Main.tile[num218 + this.direction, num219 - 1] = new Tile();
						}
						if (Main.tile[num218 + this.direction, num219 + 1] == null)
						{
							Main.tile[num218 + this.direction, num219 + 1] = new Tile();
						}
						Main.tile[num218 - this.direction, num219 + 1].halfBrick();
						if (this.townNPC && Main.tile[num218, num219 - 2].nactive() && Main.tile[num218, num219 - 2].type == 10 && (Main.rand.Next(10) == 0 || flag22))
						{
							if (Main.netMode != 1)
							{
								bool flag27 = WorldGen.OpenDoor(num218, num219 - 2, this.direction);
								if (flag27)
								{
									this.closeDoor = true;
									this.doorX = num218;
									this.doorY = num219 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)num218, (float)(num219 - 2), (float)this.direction, 0);
									this.netUpdate = true;
									this.ai[1] += 80f;
									return;
								}
								if (WorldGen.OpenDoor(num218, num219 - 2, -this.direction))
								{
									this.closeDoor = true;
									this.doorX = num218;
									this.doorY = num219 - 2;
									NetMessage.SendData(19, -1, -1, "", 0, (float)num218, (float)(num219 - 2), (float)(-(float)this.direction), 0);
									this.netUpdate = true;
									this.ai[1] += 80f;
									return;
								}
								this.direction *= -1;
								this.netUpdate = true;
								return;
							}
						}
						else
						{
							if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
							{
								if (Main.tile[num218, num219 - 2].nactive() && Main.tileSolid[(int)Main.tile[num218, num219 - 2].type] && !Main.tileSolidTop[(int)Main.tile[num218, num219 - 2].type])
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num218 - 2, num218 - 1, num219 - 5, num219 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num218 + 1, num218 + 2, num219 - 5, num219 - 1)))
									{
										if (!Collision.SolidTiles(num218, num218, num219 - 5, num219 - 3))
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
										}
										else if (this.type == 300)
										{
											if (WorldGen.SolidTile((int)(this.center().X / 16f) + this.direction, (int)(this.center().Y / 16f)))
											{
												this.direction *= -1;
												this.velocity.X = this.velocity.X * 0f;
												this.netUpdate = true;
											}
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else if (this.type == 300)
									{
										if (WorldGen.SolidTile((int)(this.center().X / 16f) + this.direction, (int)(this.center().Y / 16f)))
										{
											this.direction *= -1;
											this.velocity.X = this.velocity.X * 0f;
											this.netUpdate = true;
										}
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								else if (Main.tile[num218, num219 - 1].nactive() && Main.tileSolid[(int)Main.tile[num218, num219 - 1].type] && !Main.tileSolidTop[(int)Main.tile[num218, num219 - 1].type])
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num218 - 2, num218 - 1, num219 - 4, num219 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num218 + 1, num218 + 2, num219 - 4, num219 - 1)))
									{
										if (!Collision.SolidTiles(num218, num218, num219 - 4, num219 - 2))
										{
											this.velocity.Y = -5f;
											this.netUpdate = true;
										}
										else
										{
											this.direction *= -1;
											this.netUpdate = true;
										}
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								else if (this.position.Y + (float)this.height - (float)(num219 * 16) > 20f && Main.tile[num218, num219].nactive() && Main.tileSolid[(int)Main.tile[num218, num219].type] && !Main.tile[num218, num219].topSlope())
								{
									if ((this.direction == 1 && !Collision.SolidTiles(num218 - 2, num218, num219 - 3, num219 - 1)) || (this.direction == -1 && !Collision.SolidTiles(num218, num218 + 2, num219 - 3, num219 - 1)))
									{
										this.velocity.Y = -4.4f;
										this.netUpdate = true;
									}
									else
									{
										this.direction *= -1;
										this.netUpdate = true;
									}
								}
								try
								{
									if (Main.tile[num218, num219 + 1] == null)
									{
										Main.tile[num218, num219 + 1] = new Tile();
									}
									if (Main.tile[num218 - this.direction, num219 + 1] == null)
									{
										Main.tile[num218 - this.direction, num219 + 1] = new Tile();
									}
									if (Main.tile[num218, num219 + 2] == null)
									{
										Main.tile[num218, num219 + 2] = new Tile();
									}
									if (Main.tile[num218 - this.direction, num219 + 2] == null)
									{
										Main.tile[num218 - this.direction, num219 + 2] = new Tile();
									}
									if (Main.tile[num218, num219 + 3] == null)
									{
										Main.tile[num218, num219 + 3] = new Tile();
									}
									if (Main.tile[num218 - this.direction, num219 + 3] == null)
									{
										Main.tile[num218 - this.direction, num219 + 3] = new Tile();
									}
									if (Main.tile[num218, num219 + 4] == null)
									{
										Main.tile[num218, num219 + 4] = new Tile();
									}
									if (Main.tile[num218 - this.direction, num219 + 4] == null)
									{
										Main.tile[num218 - this.direction, num219 + 4] = new Tile();
									}
									else if (num205 >= this.homeTileX - 35 && num205 <= this.homeTileX + 35 && (!Main.tile[num218, num219 + 1].nactive() || !Main.tileSolid[(int)Main.tile[num218, num219 + 1].type]) && (!Main.tile[num218 - this.direction, num219 + 1].active() || !Main.tileSolid[(int)Main.tile[num218 - this.direction, num219 + 1].type]) && (!Main.tile[num218, num219 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num218, num219 + 2].type]) && (!Main.tile[num218 - this.direction, num219 + 2].active() || !Main.tileSolid[(int)Main.tile[num218 - this.direction, num219 + 2].type]) && (!Main.tile[num218, num219 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num218, num219 + 3].type]) && (!Main.tile[num218 - this.direction, num219 + 3].active() || !Main.tileSolid[(int)Main.tile[num218 - this.direction, num219 + 3].type]) && (!Main.tile[num218, num219 + 4].nactive() || !Main.tileSolid[(int)Main.tile[num218, num219 + 4].type]) && (!Main.tile[num218 - this.direction, num219 + 4].nactive() || !Main.tileSolid[(int)Main.tile[num218 - this.direction, num219 + 4].type]) && this.type != 46 && this.type != 148 && this.type != 149 && this.type != 230 && this.type != 299 && this.type != 300 && this.type != 303 && this.type != 337)
									{
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.netUpdate = true;
									}
								}
								catch
								{
								}
								if (this.velocity.Y < 0f)
								{
									this.ai[2] = this.position.X;
								}
							}
							if (this.velocity.Y < 0f && this.wet)
							{
								this.velocity.Y = this.velocity.Y * 1.2f;
							}
							if (this.velocity.Y < 0f && (this.type == 46 || this.type == 299 || this.type == 303 || this.type == 337 || this.type == 361 || this.type == 362 || this.type == 364))
							{
								this.velocity.Y = this.velocity.Y * 1.2f;
								return;
							}
						}
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				this.TargetClosest(true);
				this.velocity.X = this.velocity.X * 0.93f;
				if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
				{
					this.velocity.X = 0f;
				}
				if (this.ai[0] == 0f)
				{
					this.ai[0] = 500f;
				}
				if (this.type == 172)
				{
					if (this.alpha < 255)
					{
						this.alpha++;
					}
					if (this.justHit)
					{
						this.alpha = 0;
					}
				}
				if (this.ai[2] != 0f && this.ai[3] != 0f)
				{
					if (this.type == 172)
					{
						this.alpha = 255;
					}
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num220 = 0; num220 < 50; num220++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num221 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num221].velocity *= 3f;
							if (Main.dust[num221].scale > 1f)
							{
								Main.dust[num221].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num222 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num222].velocity *= 3f;
							Main.dust[num222].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num223 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num223].velocity *= 2f;
							Main.dust[num223].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num224 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num224].velocity *= 3f;
							Main.dust[num224].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num225 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num225].velocity *= 3f;
							Main.dust[num225].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num226 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num226].velocity *= 3f;
							Main.dust[num226].noGravity = true;
						}
						else
						{
							int num227 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num227].velocity *= 3f;
							Main.dust[num227].noGravity = true;
						}
					}
					this.position.X = this.ai[2] * 16f - (float)(this.width / 2) + 8f;
					this.position.Y = this.ai[3] * 16f - (float)this.height;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.ai[2] = 0f;
					this.ai[3] = 0f;
					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
					for (int num228 = 0; num228 < 50; num228++)
					{
						if (this.type == 29 || this.type == 45)
						{
							int num229 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), (float)Main.rand.Next(1, 3));
							Main.dust[num229].velocity *= 3f;
							if (Main.dust[num229].scale > 1f)
							{
								Main.dust[num229].noGravity = true;
							}
						}
						else if (this.type == 32)
						{
							int num230 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num230].velocity *= 3f;
							Main.dust[num230].noGravity = true;
						}
						else if (this.type == 172)
						{
							int num231 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num231].velocity *= 3f;
							Main.dust[num231].noGravity = true;
						}
						else if (this.type == 283 || this.type == 284)
						{
							int num232 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num232].velocity *= 2f;
							Main.dust[num232].scale = 1.4f;
						}
						else if (this.type == 285 || this.type == 286)
						{
							int num233 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num233].velocity *= 3f;
							Main.dust[num233].noGravity = true;
						}
						else if (this.type == 281 || this.type == 282)
						{
							int num234 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num234].velocity *= 3f;
							Main.dust[num234].noGravity = true;
						}
						else
						{
							int num235 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
							Main.dust[num235].velocity *= 3f;
							Main.dust[num235].noGravity = true;
						}
					}
				}
				this.ai[0] += 1f;
				if (this.type == 283 || this.type == 284)
				{
					if (this.ai[0] == 50f || this.ai[0] == 100f || this.ai[0] == 150f || this.ai[0] == 200f || this.ai[0] == 250f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 400f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.type == 172 && (this.ai[0] == 75f || this.ai[0] == 150f || this.ai[0] == 225f || this.ai[0] == 300f || this.ai[0] == 375f || this.ai[0] == 450f))
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if (this.type == 281 || this.type == 282)
				{
					if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 120f || this.ai[0] == 140f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 240f || this.ai[0] == 260f)
					{
						this.ai[1] = 30f;
						this.netUpdate = true;
					}
					if (this.ai[0] >= 460f)
					{
						this.ai[0] = 700f;
					}
				}
				else if (this.ai[0] == 100f || this.ai[0] == 200f || this.ai[0] == 300f)
				{
					this.ai[1] = 30f;
					this.netUpdate = true;
				}
				if ((this.type == 285 || this.type == 286) && this.ai[0] > 400f)
				{
					this.ai[0] = 650f;
				}
				if (this.ai[0] >= 650f && Main.netMode != 1)
				{
					this.ai[0] = 1f;
					int num236 = (int)Main.player[this.target].position.X / 16;
					int num237 = (int)Main.player[this.target].position.Y / 16;
					int num238 = (int)this.position.X / 16;
					int num239 = (int)this.position.Y / 16;
					int num240 = 20;
					int num241 = 0;
					bool flag28 = false;
					if (Math.Abs(this.position.X - Main.player[this.target].position.X) + Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						num241 = 100;
						flag28 = true;
					}
					while (!flag28 && num241 < 100)
					{
						num241++;
						int num242 = Main.rand.Next(num236 - num240, num236 + num240);
						int num243 = Main.rand.Next(num237 - num240, num237 + num240);
						for (int num244 = num243; num244 < num237 + num240; num244++)
						{
							if ((num244 < num237 - 4 || num244 > num237 + 4 || num242 < num236 - 4 || num242 > num236 + 4) && (num244 < num239 - 1 || num244 > num239 + 1 || num242 < num238 - 1 || num242 > num238 + 1) && Main.tile[num242, num244].nactive())
							{
								bool flag29 = true;
								if ((this.type == 32 || (this.type >= 281 && this.type <= 286)) && !Main.wallDungeon[(int)Main.tile[num242, num244 - 1].wall])
								{
									flag29 = false;
								}
								else if (Main.tile[num242, num244 - 1].lava())
								{
									flag29 = false;
								}
								if (flag29 && Main.tileSolid[(int)Main.tile[num242, num244].type] && !Collision.SolidTiles(num242 - 1, num242 + 1, num244 - 4, num244 - 1))
								{
									this.ai[1] = 20f;
									this.ai[2] = (float)num242;
									this.ai[3] = (float)num244;
									flag28 = true;
									break;
								}
							}
						}
					}
					this.netUpdate = true;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
					if (this.ai[1] == 25f)
					{
						if (this.type >= 281 && this.type <= 286)
						{
							if (Main.netMode != 1)
							{
								float num245 = 6f;
								if (this.type == 285 || this.type == 286)
								{
									num245 = 8f;
								}
								if (this.type == 281 || this.type == 282)
								{
									num245 = 4f;
								}
								Vector2 vector22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y);
								float num246 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector22.X;
								float num247 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector22.Y;
								if (this.type == 283 || this.type == 284)
								{
									num246 += (float)Main.rand.Next(-30, 31);
									num247 += (float)Main.rand.Next(-30, 31);
									num246 -= Main.player[this.target].velocity.X * 10f;
									num247 -= Main.player[this.target].velocity.Y * 10f;
								}
								float num248 = (float)Math.Sqrt((double)(num246 * num246 + num247 * num247));
								num248 = num245 / num248;
								num246 *= num248;
								num247 *= num248;
								int num249 = 30;
								int num250 = 290;
								if (this.type == 285 || this.type == 286)
								{
									num250 = 291;
									num249 = 40;
								}
								if (this.type == 281 || this.type == 282)
								{
									num250 = 293;
									num249 = 40;
								}
								int num251 = Projectile.NewProjectile(vector22.X, vector22.Y, num246, num247, num250, num249, 0f, Main.myPlayer, 0f, 0f);
								Main.projectile[num251].timeLeft = 300;
								if (num250 == 291)
								{
									Main.projectile[num251].ai[0] = Main.player[this.target].center().X;
									Main.projectile[num251].ai[1] = Main.player[this.target].center().Y;
									Main.projectile[num251].netUpdate = true;
								}
								this.localAI[0] = 0f;
							}
						}
						else
						{
							if (this.type != 172)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
							}
							if (Main.netMode != 1)
							{
								if (this.type == 29 || this.type == 45)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 30, 0);
								}
								else if (this.type == 32)
								{
									NPC.NewNPC((int)this.position.X + this.width / 2, (int)this.position.Y - 8, 33, 0);
								}
								else if (this.type == 172)
								{
									float num252 = 10f;
									Vector2 vector23 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num253 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector23.X + (float)Main.rand.Next(-10, 11);
									float num254 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector23.Y + (float)Main.rand.Next(-10, 11);
									float num255 = (float)Math.Sqrt((double)(num253 * num253 + num254 * num254));
									num255 = num252 / num255;
									num253 *= num255;
									num254 *= num255;
									int num256 = 40;
									int num257 = 129;
									int num258 = Projectile.NewProjectile(vector23.X, vector23.Y, num253, num254, num257, num256, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num258].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									NPC.NewNPC((int)this.position.X + this.width / 2 + this.direction * 8, (int)this.position.Y + 20, 25, 0);
								}
							}
						}
					}
				}
				if (this.type == 29 || this.type == 45)
				{
					if (Main.rand.Next(5) == 0)
					{
						int num259 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
						Main.dust[num259].noGravity = true;
						Dust expr_10AED_cp_0 = Main.dust[num259];
						expr_10AED_cp_0.velocity.X = expr_10AED_cp_0.velocity.X * 0.5f;
						Main.dust[num259].velocity.Y = -2f;
						return;
					}
				}
				else if (this.type == 32)
				{
					if (Main.rand.Next(3) != 0)
					{
						int num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 172, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.9f);
						Main.dust[num260].noGravity = true;
						Dust expr_10BC6_cp_0 = Main.dust[num260];
						expr_10BC6_cp_0.velocity.X = expr_10BC6_cp_0.velocity.X * 0.3f;
						Dust expr_10BE6_cp_0 = Main.dust[num260];
						expr_10BE6_cp_0.velocity.Y = expr_10BE6_cp_0.velocity.Y * 0.2f;
						Dust expr_10C06_cp_0 = Main.dust[num260];
						expr_10C06_cp_0.velocity.Y = expr_10C06_cp_0.velocity.Y - 1f;
						return;
					}
				}
				else
				{
					if (this.type == 172)
					{
						int num261 = 1;
						if (this.alpha == 255)
						{
							num261 = 2;
						}
						for (int num262 = 0; num262 < num261; num262++)
						{
							if (Main.rand.Next(255) > 255 - this.alpha)
							{
								int num263 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 106, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
								Main.dust[num263].noGravity = true;
								Dust expr_10CF7_cp_0 = Main.dust[num263];
								expr_10CF7_cp_0.velocity.X = expr_10CF7_cp_0.velocity.X * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Dust expr_10D2B_cp_0 = Main.dust[num263];
								expr_10D2B_cp_0.velocity.Y = expr_10D2B_cp_0.velocity.Y * (0.1f + (float)Main.rand.Next(30) * 0.01f);
								Main.dust[num263].scale *= 1f + (float)Main.rand.Next(6) * 0.1f;
							}
						}
						return;
					}
					if (this.type == 283 || this.type == 284)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num264 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 173, 0f, 0f, 0, default(Color), 1f);
							Dust expr_10E2B_cp_0 = Main.dust[num264];
							expr_10E2B_cp_0.velocity.X = expr_10E2B_cp_0.velocity.X * 0.5f;
							Dust expr_10E4B_cp_0 = Main.dust[num264];
							expr_10E4B_cp_0.velocity.Y = expr_10E4B_cp_0.velocity.Y * 0.5f;
							return;
						}
					}
					else if (this.type == 285 || this.type == 286)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num265 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 174, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
							Main.dust[num265].noGravity = true;
							Main.dust[num265].velocity *= 0.4f;
							Dust expr_10F3A_cp_0 = Main.dust[num265];
							expr_10F3A_cp_0.velocity.Y = expr_10F3A_cp_0.velocity.Y - 0.7f;
							return;
						}
					}
					else if (this.type == 281 || this.type == 282)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num266 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 175, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 0.1f);
							Main.dust[num266].noGravity = true;
							Main.dust[num266].velocity *= 0.5f;
							Main.dust[num266].fadeIn = 1.2f;
							return;
						}
					}
					else if (Main.rand.Next(2) == 0)
					{
						int num267 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num267].noGravity = true;
						Dust expr_110CC_cp_0 = Main.dust[num267];
						expr_110CC_cp_0.velocity.X = expr_110CC_cp_0.velocity.X * 1f;
						Dust expr_110EC_cp_0 = Main.dust[num267];
						expr_110EC_cp_0.velocity.Y = expr_110EC_cp_0.velocity.Y * 1f;
						return;
					}
				}
			}
			else
			{
				if (this.aiStyle == 9)
				{
					if (this.target == 255)
					{
						this.TargetClosest(true);
						float num268 = 6f;
						if (this.type == 25)
						{
							num268 = 5f;
						}
						if (this.type == 112)
						{
							num268 = 7f;
						}
						Vector2 vector24 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num269 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector24.X;
						float num270 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector24.Y;
						float num271 = (float)Math.Sqrt((double)(num269 * num269 + num270 * num270));
						num271 = num268 / num271;
						this.velocity.X = num269 * num271;
						this.velocity.Y = num270 * num271;
					}
					if (this.type == 112)
					{
						this.ai[0] += 1f;
						if (this.ai[0] > 3f)
						{
							this.ai[0] = 3f;
						}
						if (this.ai[0] == 2f)
						{
							this.position += this.velocity;
							Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 9);
							for (int num272 = 0; num272 < 20; num272++)
							{
								int num273 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 1.8f);
								Main.dust[num273].velocity *= 1.3f;
								Main.dust[num273].velocity += this.velocity;
								Main.dust[num273].noGravity = true;
							}
						}
					}
					if (this.type == 112 && Collision.SolidCollision(this.position, this.width, this.height))
					{
						int arg_113CD_0 = Main.netMode;
						this.StrikeNPC(999, 0f, 0, false, false);
					}
					if (this.timeLeft > 100)
					{
						this.timeLeft = 100;
					}
					for (int num274 = 0; num274 < 2; num274++)
					{
						if (this.type == 30)
						{
							int num275 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num275].noGravity = true;
							Main.dust[num275].velocity *= 0.3f;
							Dust expr_114B8_cp_0 = Main.dust[num275];
							expr_114B8_cp_0.velocity.X = expr_114B8_cp_0.velocity.X - this.velocity.X * 0.2f;
							Dust expr_114E4_cp_0 = Main.dust[num275];
							expr_114E4_cp_0.velocity.Y = expr_114E4_cp_0.velocity.Y - this.velocity.Y * 0.2f;
						}
						else if (this.type == 33)
						{
							for (int num276 = 0; num276 < 3; num276++)
							{
								float num277 = this.velocity.X / 3f * (float)num274;
								float num278 = this.velocity.Y / 3f * (float)num274;
								int num279 = 2;
								int num280 = Dust.NewDust(new Vector2(this.position.X + (float)num279, this.position.Y + (float)num279), this.width - num279 * 2, this.height - num279 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
								Main.dust[num280].noGravity = true;
								Main.dust[num280].velocity *= 0.1f;
								Main.dust[num280].velocity += this.velocity * 0.5f;
								Dust expr_1162E_cp_0 = Main.dust[num280];
								expr_1162E_cp_0.position.X = expr_1162E_cp_0.position.X - num277;
								Dust expr_1164D_cp_0 = Main.dust[num280];
								expr_1164D_cp_0.position.Y = expr_1164D_cp_0.position.Y - num278;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num281 = 2;
								int num282 = Dust.NewDust(new Vector2(this.position.X + (float)num281, this.position.Y + (float)num281), this.width - num281 * 2, this.height - num281 * 2, 172, 0f, 0f, 100, default(Color), 0.6f);
								Main.dust[num282].velocity *= 0.25f;
								Main.dust[num282].velocity += this.velocity * 0.5f;
							}
						}
						else if (this.type == 112)
						{
							int num283 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 80, default(Color), 1.3f);
							Main.dust[num283].velocity *= 0.3f;
							Main.dust[num283].noGravity = true;
						}
						else
						{
							Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
							int num284 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num284].noGravity = true;
							Dust expr_118CB_cp_0 = Main.dust[num284];
							expr_118CB_cp_0.velocity.X = expr_118CB_cp_0.velocity.X * 0.3f;
							Dust expr_118EB_cp_0 = Main.dust[num284];
							expr_118EB_cp_0.velocity.Y = expr_118EB_cp_0.velocity.Y * 0.3f;
						}
					}
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				if (this.aiStyle == 10)
				{
					float num285 = 1f;
					float num286 = 0.011f;
					this.TargetClosest(true);
					Vector2 vector25 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num287 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector25.X;
					float num288 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector25.Y;
					float num289 = (float)Math.Sqrt((double)(num287 * num287 + num288 * num288));
					float num290 = num289;
					this.ai[1] += 1f;
					if (this.ai[1] > 600f)
					{
						num286 *= 8f;
						num285 = 4f;
						if (this.ai[1] > 650f)
						{
							this.ai[1] = 0f;
						}
					}
					else if (num290 < 250f)
					{
						this.ai[0] += 0.9f;
						if (this.ai[0] > 0f)
						{
							this.velocity.Y = this.velocity.Y + 0.019f;
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.019f;
						}
						if (this.ai[0] < -100f || this.ai[0] > 100f)
						{
							this.velocity.X = this.velocity.X + 0.019f;
						}
						else
						{
							this.velocity.X = this.velocity.X - 0.019f;
						}
						if (this.ai[0] > 200f)
						{
							this.ai[0] = -200f;
						}
					}
					if (num290 > 350f)
					{
						num285 = 5f;
						num286 = 0.3f;
					}
					else if (num290 > 300f)
					{
						num285 = 3f;
						num286 = 0.2f;
					}
					else if (num290 > 250f)
					{
						num285 = 1.5f;
						num286 = 0.1f;
					}
					num289 = num285 / num289;
					num287 *= num289;
					num288 *= num289;
					if (Main.player[this.target].dead)
					{
						num287 = (float)this.direction * num285 / 2f;
						num288 = -num285 / 2f;
					}
					if (this.velocity.X < num287)
					{
						this.velocity.X = this.velocity.X + num286;
					}
					else if (this.velocity.X > num287)
					{
						this.velocity.X = this.velocity.X - num286;
					}
					if (this.velocity.Y < num288)
					{
						this.velocity.Y = this.velocity.Y + num286;
					}
					else if (this.velocity.Y > num288)
					{
						this.velocity.Y = this.velocity.Y - num286;
					}
					if (num287 > 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)num288, (double)num287);
					}
					if (num287 < 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)num288, (double)num287) + 3.14f;
					}
					if (this.type == 289)
					{
						if (this.justHit)
						{
							this.ai[2] = 0f;
							this.ai[3] = 0f;
						}
						vector25 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						num287 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector25.X;
						num288 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector25.Y;
						num289 = (float)Math.Sqrt((double)(num287 * num287 + num288 * num288));
						if (num289 > 500f)
						{
							this.ai[2] = 0f;
							this.ai[3] = 0f;
							return;
						}
						this.ai[2] += 1f;
						if (this.ai[3] == 0f)
						{
							if (this.ai[2] > 120f)
							{
								this.ai[2] = 0f;
								this.ai[3] = 1f;
								this.netUpdate = true;
								return;
							}
						}
						else
						{
							if (this.ai[2] > 40f)
							{
								this.ai[3] = 0f;
							}
							if (Main.netMode != 1 && this.ai[2] == 20f)
							{
								float num291 = 6f;
								int num292 = 25;
								int num293 = 299;
								num289 = num291 / num289;
								num287 *= num289;
								num288 *= num289;
								Projectile.NewProjectile(vector25.X, vector25.Y, num287, num288, num293, num292, 0f, Main.myPlayer, 0f, 0f);
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 11)
				{
					if (this.ai[0] == 0f && Main.netMode != 1)
					{
						this.TargetClosest(true);
						this.ai[0] = 1f;
						if (this.type != 68)
						{
							int num294 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI);
							Main.npc[num294].ai[0] = -1f;
							Main.npc[num294].ai[1] = (float)this.whoAmI;
							Main.npc[num294].target = this.target;
							Main.npc[num294].netUpdate = true;
							num294 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 36, this.whoAmI);
							Main.npc[num294].ai[0] = 1f;
							Main.npc[num294].ai[1] = (float)this.whoAmI;
							Main.npc[num294].ai[3] = 150f;
							Main.npc[num294].target = this.target;
							Main.npc[num294].netUpdate = true;
						}
					}
					if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
					{
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						this.ai[1] = 2f;
					}
					if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
					{
						this.TargetClosest(true);
						if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
						{
							this.ai[1] = 3f;
						}
					}
					if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
					{
						this.ai[1] = 2f;
						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
					}
					if (this.ai[1] == 0f)
					{
						this.defense = 10;
						this.ai[2] += 1f;
						if (this.ai[2] >= 800f)
						{
							this.ai[2] = 0f;
							this.ai[1] = 1f;
							this.TargetClosest(true);
							this.netUpdate = true;
						}
						this.rotation = this.velocity.X / 15f;
						if (this.position.Y > Main.player[this.target].position.Y - 250f)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							this.velocity.Y = this.velocity.Y - 0.02f;
							if (this.velocity.Y > 2f)
							{
								this.velocity.Y = 2f;
							}
						}
						else if (this.position.Y < Main.player[this.target].position.Y - 250f)
						{
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.98f;
							}
							this.velocity.Y = this.velocity.Y + 0.02f;
							if (this.velocity.Y < -2f)
							{
								this.velocity.Y = -2f;
							}
						}
						if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							this.velocity.X = this.velocity.X - 0.05f;
							if (this.velocity.X > 8f)
							{
								this.velocity.X = 8f;
							}
						}
						if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							this.velocity.X = this.velocity.X + 0.05f;
							if (this.velocity.X < -8f)
							{
								this.velocity.X = -8f;
							}
						}
					}
					else if (this.ai[1] == 1f)
					{
						this.defense = 0;
						this.ai[2] += 1f;
						if (this.ai[2] == 2f)
						{
							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
						}
						if (this.ai[2] >= 400f)
						{
							this.ai[2] = 0f;
							this.ai[1] = 0f;
						}
						this.rotation += (float)this.direction * 0.3f;
						Vector2 vector26 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num295 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector26.X;
						float num296 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector26.Y;
						float num297 = (float)Math.Sqrt((double)(num295 * num295 + num296 * num296));
						num297 = 1.5f / num297;
						this.velocity.X = num295 * num297;
						this.velocity.Y = num296 * num297;
					}
					else if (this.ai[1] == 2f)
					{
						this.damage = 1000;
						this.defense = 9999;
						this.rotation += (float)this.direction * 0.3f;
						Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num298 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector27.X;
						float num299 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector27.Y;
						float num300 = (float)Math.Sqrt((double)(num298 * num298 + num299 * num299));
						num300 = 8f / num300;
						this.velocity.X = num298 * num300;
						this.velocity.Y = num299 * num300;
					}
					else if (this.ai[1] == 3f)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.X = this.velocity.X * 0.95f;
						if (this.timeLeft > 500)
						{
							this.timeLeft = 500;
						}
					}
					if (this.ai[1] != 2f && this.ai[1] != 3f && this.type != 68)
					{
						int num301 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - 15f - this.velocity.X * 5f, this.position.Y + (float)this.height - 2f), 30, 10, 5, -this.velocity.X * 0.2f, 3f, 0, default(Color), 2f);
						Main.dust[num301].noGravity = true;
						Dust expr_129A0_cp_0 = Main.dust[num301];
						expr_129A0_cp_0.velocity.X = expr_129A0_cp_0.velocity.X * 1.3f;
						Dust expr_129C0_cp_0 = Main.dust[num301];
						expr_129C0_cp_0.velocity.X = expr_129C0_cp_0.velocity.X + this.velocity.X * 0.4f;
						Dust expr_129EC_cp_0 = Main.dust[num301];
						expr_129EC_cp_0.velocity.Y = expr_129EC_cp_0.velocity.Y + (2f + this.velocity.Y);
						for (int num302 = 0; num302 < 2; num302++)
						{
							num301 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 120f), this.width, 60, 5, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
							Main.dust[num301].noGravity = true;
							Main.dust[num301].velocity -= this.velocity;
							Dust expr_12AAF_cp_0 = Main.dust[num301];
							expr_12AAF_cp_0.velocity.Y = expr_12AAF_cp_0.velocity.Y + 5f;
						}
						return;
					}
				}
				else if (this.aiStyle == 12)
				{
					this.spriteDirection = -(int)this.ai[0];
					if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 11)
					{
						this.ai[2] += 10f;
						if (this.ai[2] > 50f || Main.netMode != 2)
						{
							this.life = -1;
							this.HitEffect(0, 10.0);
							this.active = false;
						}
					}
					if (this.ai[2] == 0f || this.ai[2] == 3f)
					{
						if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
						{
							this.timeLeft = 10;
						}
						if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
						{
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.07f;
								if (this.velocity.Y > 6f)
								{
									this.velocity.Y = 6f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.07f;
								if (this.velocity.Y < -6f)
								{
									this.velocity.Y = -6f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						else
						{
							this.ai[3] += 1f;
							if (this.ai[3] >= 300f)
							{
								this.ai[2] += 1f;
								this.ai[3] = 0f;
								this.netUpdate = true;
							}
							if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
							}
							else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
							{
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.96f;
								}
								this.velocity.Y = this.velocity.Y + 0.04f;
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X - 0.07f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
							}
							if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0])
							{
								if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.96f;
								}
								this.velocity.X = this.velocity.X + 0.07f;
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
							}
						}
						Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num303 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector28.X;
						float num304 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector28.Y;
						Math.Sqrt((double)(num303 * num303 + num304 * num304));
						this.rotation = (float)Math.Atan2((double)num304, (double)num303) + 1.57f;
						return;
					}
					if (this.ai[2] == 1f)
					{
						Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num305 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector29.X;
						float num306 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector29.Y;
						float num307 = (float)Math.Sqrt((double)(num305 * num305 + num306 * num306));
						this.rotation = (float)Math.Atan2((double)num306, (double)num305) + 1.57f;
						this.velocity.X = this.velocity.X * 0.95f;
						this.velocity.Y = this.velocity.Y - 0.1f;
						if (this.velocity.Y < -8f)
						{
							this.velocity.Y = -8f;
						}
						if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
						{
							this.TargetClosest(true);
							this.ai[2] = 2f;
							vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num305 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector29.X;
							num306 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector29.Y;
							num307 = (float)Math.Sqrt((double)(num305 * num305 + num306 * num306));
							num307 = 18f / num307;
							this.velocity.X = num305 * num307;
							this.velocity.Y = num306 * num307;
							this.netUpdate = true;
							return;
						}
					}
					else if (this.ai[2] == 2f)
					{
						if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
						{
							this.ai[2] = 3f;
							return;
						}
					}
					else if (this.ai[2] == 4f)
					{
						Vector2 vector30 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num308 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector30.X;
						float num309 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector30.Y;
						float num310 = (float)Math.Sqrt((double)(num308 * num308 + num309 * num309));
						this.rotation = (float)Math.Atan2((double)num309, (double)num308) + 1.57f;
						this.velocity.Y = this.velocity.Y * 0.95f;
						this.velocity.X = this.velocity.X + 0.1f * -this.ai[0];
						if (this.velocity.X < -8f)
						{
							this.velocity.X = -8f;
						}
						if (this.velocity.X > 8f)
						{
							this.velocity.X = 8f;
						}
						if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
						{
							this.TargetClosest(true);
							this.ai[2] = 5f;
							vector30 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							num308 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector30.X;
							num309 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector30.Y;
							num310 = (float)Math.Sqrt((double)(num308 * num308 + num309 * num309));
							num310 = 17f / num310;
							this.velocity.X = num308 * num310;
							this.velocity.Y = num309 * num310;
							this.netUpdate = true;
							return;
						}
					}
					else if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
					{
						this.ai[2] = 0f;
						return;
					}
				}
				else if (this.aiStyle == 13)
				{
					if (this.ai[0] < 0f || this.ai[0] >= (float)Main.maxTilesX || this.ai[1] < 0f || this.ai[1] >= (float)Main.maxTilesX)
					{
						return;
					}
					if (Main.tile[(int)this.ai[0], (int)this.ai[1]] == null)
					{
						Main.tile[(int)this.ai[0], (int)this.ai[1]] = new Tile();
					}
					if (!Main.tile[(int)this.ai[0], (int)this.ai[1]].active())
					{
						this.life = -1;
						this.HitEffect(0, 10.0);
						this.active = false;
						return;
					}
					this.TargetClosest(true);
					float num311 = 0.035f;
					float num312 = 150f;
					if (this.type == 43)
					{
						num312 = 250f;
					}
					if (this.type == 101)
					{
						num312 = 175f;
					}
					if (this.type == 259)
					{
						num312 = 100f;
					}
					if (this.type == 175)
					{
						num312 = 500f;
						num311 = 0.05f;
					}
					if (this.type == 260)
					{
						num312 = 350f;
						num311 = 0.15f;
					}
					this.ai[2] += 1f;
					if (this.ai[2] > 300f)
					{
						num312 = (float)((int)((double)num312 * 1.3));
						if (this.ai[2] > 450f)
						{
							this.ai[2] = 0f;
						}
					}
					Vector2 vector31 = new Vector2(this.ai[0] * 16f + 8f, this.ai[1] * 16f + 8f);
					float num313 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector31.X;
					float num314 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector31.Y;
					float num315 = (float)Math.Sqrt((double)(num313 * num313 + num314 * num314));
					if (num315 > num312)
					{
						num315 = num312 / num315;
						num313 *= num315;
						num314 *= num315;
					}
					if (this.position.X < this.ai[0] * 16f + 8f + num313)
					{
						this.velocity.X = this.velocity.X + num311;
						if (this.velocity.X < 0f && num313 > 0f)
						{
							this.velocity.X = this.velocity.X + num311 * 1.5f;
						}
					}
					else if (this.position.X > this.ai[0] * 16f + 8f + num313)
					{
						this.velocity.X = this.velocity.X - num311;
						if (this.velocity.X > 0f && num313 < 0f)
						{
							this.velocity.X = this.velocity.X - num311 * 1.5f;
						}
					}
					if (this.position.Y < this.ai[1] * 16f + 8f + num314)
					{
						this.velocity.Y = this.velocity.Y + num311;
						if (this.velocity.Y < 0f && num314 > 0f)
						{
							this.velocity.Y = this.velocity.Y + num311 * 1.5f;
						}
					}
					else if (this.position.Y > this.ai[1] * 16f + 8f + num314)
					{
						this.velocity.Y = this.velocity.Y - num311;
						if (this.velocity.Y > 0f && num314 < 0f)
						{
							this.velocity.Y = this.velocity.Y - num311 * 1.5f;
						}
					}
					if (this.type == 43)
					{
						if (this.velocity.X > 3f)
						{
							this.velocity.X = 3f;
						}
						if (this.velocity.X < -3f)
						{
							this.velocity.X = -3f;
						}
						if (this.velocity.Y > 3f)
						{
							this.velocity.Y = 3f;
						}
						if (this.velocity.Y < -3f)
						{
							this.velocity.Y = -3f;
						}
					}
					else if (this.type == 175)
					{
						if (this.velocity.X > 4f)
						{
							this.velocity.X = 4f;
						}
						if (this.velocity.X < -4f)
						{
							this.velocity.X = -4f;
						}
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
						}
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
					}
					else
					{
						if (this.velocity.X > 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.velocity.X < -2f)
						{
							this.velocity.X = -2f;
						}
						if (this.velocity.Y > 2f)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < -2f)
						{
							this.velocity.Y = -2f;
						}
					}
					if (this.type == 259 || this.type == 260)
					{
						this.rotation = (float)Math.Atan2((double)num314, (double)num313) + 1.57f;
					}
					else
					{
						if (num313 > 0f)
						{
							this.spriteDirection = 1;
							this.rotation = (float)Math.Atan2((double)num314, (double)num313);
						}
						if (num313 < 0f)
						{
							this.spriteDirection = -1;
							this.rotation = (float)Math.Atan2((double)num314, (double)num313) + 3.14f;
						}
					}
					if (this.collideX)
					{
						this.netUpdate = true;
						this.velocity.X = this.oldVelocity.X * -0.7f;
						if (this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.netUpdate = true;
						this.velocity.Y = this.oldVelocity.Y * -0.7f;
						if (this.velocity.Y > 0f && this.velocity.Y < 2f)
						{
							this.velocity.Y = 2f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -2f)
						{
							this.velocity.Y = -2f;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 101 && !Main.player[this.target].dead)
						{
							if (this.justHit)
							{
								this.localAI[0] = 0f;
							}
							this.localAI[0] += 1f;
							if (this.localAI[0] >= 120f)
							{
								if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num316 = 10f;
									vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num313 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector31.X + (float)Main.rand.Next(-10, 11);
									num314 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector31.Y + (float)Main.rand.Next(-10, 11);
									num315 = (float)Math.Sqrt((double)(num313 * num313 + num314 * num314));
									num315 = num316 / num315;
									num313 *= num315;
									num314 *= num315;
									int num317 = 22;
									int num318 = 96;
									int num319 = Projectile.NewProjectile(vector31.X, vector31.Y, num313, num314, num318, num317, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num319].timeLeft = 300;
									this.localAI[0] = 0f;
								}
								else
								{
									this.localAI[0] = 100f;
								}
							}
						}
						if (this.type == 260 && !Main.player[this.target].dead)
						{
							if (this.justHit)
							{
								this.localAI[0] = 0f;
							}
							this.localAI[0] += 1f;
							if (this.localAI[0] >= 150f)
							{
								if (!Collision.SolidCollision(this.position, this.width, this.height))
								{
									float num320 = 14f;
									vector31 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num313 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector31.X + (float)Main.rand.Next(-10, 11);
									float num321 = Math.Abs(num313 * 0.1f);
									if (num314 > 0f)
									{
										num321 = 0f;
									}
									num314 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector31.Y + (float)Main.rand.Next(-10, 11) - num321;
									num315 = (float)Math.Sqrt((double)(num313 * num313 + num314 * num314));
									num315 = num320 / num315;
									num313 *= num315;
									num314 *= num315;
									int num322 = NPC.NewNPC((int)this.center().X, (int)this.center().Y, 261, 0);
									Main.npc[num322].velocity.X = num313;
									Main.npc[num322].velocity.Y = num314;
									Main.npc[num322].netUpdate = true;
									this.localAI[0] = 0f;
									return;
								}
								this.localAI[0] = 250f;
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 14)
				{
					if (this.type == 60 || this.type == 151)
					{
						int num323 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num323].noGravity = true;
					}
					if (this.type == 150 && Main.rand.Next(10) == 0)
					{
						int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
						Main.dust[num324].noGravity = true;
						Main.dust[num324].velocity *= 0.2f;
						Main.dust[num324].noLight = true;
					}
					this.noGravity = true;
					if (this.collideX)
					{
						this.velocity.X = this.oldVelocity.X * -0.5f;
						if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
						{
							this.velocity.X = 2f;
						}
						if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
						{
							this.velocity.X = -2f;
						}
					}
					if (this.collideY)
					{
						this.velocity.Y = this.oldVelocity.Y * -0.5f;
						if (this.velocity.Y > 0f && this.velocity.Y < 1f)
						{
							this.velocity.Y = 1f;
						}
						if (this.velocity.Y < 0f && this.velocity.Y > -1f)
						{
							this.velocity.Y = -1f;
						}
					}
					if (this.type == 226)
					{
						int num325 = 1;
						int num326 = 1;
						if (this.velocity.X < 0f)
						{
							num325 = -1;
						}
						if (this.velocity.Y < 0f)
						{
							num326 = -1;
						}
						this.TargetClosest(true);
						if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.direction = num325;
							this.directionY = num326;
						}
					}
					else
					{
						this.TargetClosest(true);
					}
					if (this.type == 158)
					{
						if ((double)this.position.Y < Main.worldSurface * 16.0 && Main.dayTime && !Main.eclipse)
						{
							this.directionY = -1;
							this.direction *= -1;
						}
						if (this.direction == -1 && this.velocity.X > -7f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -7f)
							{
								this.velocity.X = -7f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 7f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 7f)
							{
								this.velocity.X = 7f;
							}
						}
						if (this.directionY == -1 && this.velocity.Y > -7f)
						{
							this.velocity.Y = this.velocity.Y - 0.2f;
							if (this.velocity.Y > 4f)
							{
								this.velocity.Y = this.velocity.Y - 0.1f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							if (this.velocity.Y < -7f)
							{
								this.velocity.Y = -7f;
							}
						}
						else if (this.directionY == 1 && this.velocity.Y < 7f)
						{
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							if (this.velocity.Y > 7f)
							{
								this.velocity.Y = 7f;
							}
						}
					}
					else if (this.type == 226)
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.2f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.2f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -2.5)
						{
							this.velocity.Y = this.velocity.Y - 0.1f;
							if ((double)this.velocity.Y > 2.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -2.5)
							{
								this.velocity.Y = -2.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 2.5)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
							if ((double)this.velocity.Y < -2.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 2.5)
							{
								this.velocity.Y = 2.5f;
							}
						}
					}
					else
					{
						if (this.direction == -1 && this.velocity.X > -4f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X < -4f)
							{
								this.velocity.X = -4f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 4f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X > 4f)
							{
								this.velocity.X = 4f;
							}
						}
						if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
						{
							this.velocity.Y = this.velocity.Y - 0.04f;
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
							else if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.03f;
							}
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = -1.5f;
							}
						}
						else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
						{
							this.velocity.Y = this.velocity.Y + 0.04f;
							if ((double)this.velocity.Y < -1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.05f;
							}
							else if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.03f;
							}
							if ((double)this.velocity.Y > 1.5)
							{
								this.velocity.Y = 1.5f;
							}
						}
					}
					if (this.type == 49 || this.type == 51 || this.type == 60 || this.type == 62 || this.type == 66 || this.type == 93 || this.type == 137 || this.type == 150 || this.type == 151 || this.type == 152)
					{
						if (this.wet)
						{
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
							this.velocity.Y = this.velocity.Y - 0.5f;
							if (this.velocity.Y < -4f)
							{
								this.velocity.Y = -4f;
							}
							this.TargetClosest(true);
						}
						if (this.type == 60)
						{
							if (this.direction == -1 && this.velocity.X > -4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 4f)
								{
									this.velocity.X = this.velocity.X - 0.07f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.03f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -4f)
								{
									this.velocity.X = this.velocity.X + 0.07f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.03f;
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.02f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.02f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
						}
						else
						{
							if (this.direction == -1 && this.velocity.X > -4f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > 4f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
							}
							else if (this.direction == 1 && this.velocity.X < 4f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -4f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
						}
					}
					if (this.type == 158 && Main.netMode != 1)
					{
						Vector2 vector32 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num327 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector32.X;
						float num328 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector32.Y;
						float num329 = (float)Math.Sqrt((double)(num327 * num327 + num328 * num328));
						if (num329 < 200f && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.Transform(159);
						}
					}
					this.ai[1] += 1f;
					if (this.type == 158)
					{
						this.ai[1] += 1f;
					}
					if (this.ai[1] > 200f)
					{
						if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[1] = 0f;
						}
						float num330 = 0.2f;
						float num331 = 0.1f;
						float num332 = 4f;
						float num333 = 1.5f;
						if (this.type == 48 || this.type == 62 || this.type == 66)
						{
							num330 = 0.12f;
							num331 = 0.07f;
							num332 = 3f;
							num333 = 1.25f;
						}
						if (this.ai[1] > 1000f)
						{
							this.ai[1] = 0f;
						}
						this.ai[2] += 1f;
						if (this.ai[2] > 0f)
						{
							if (this.velocity.Y < num333)
							{
								this.velocity.Y = this.velocity.Y + num331;
							}
						}
						else if (this.velocity.Y > -num333)
						{
							this.velocity.Y = this.velocity.Y - num331;
						}
						if (this.ai[2] < -150f || this.ai[2] > 150f)
						{
							if (this.velocity.X < num332)
							{
								this.velocity.X = this.velocity.X + num330;
							}
						}
						else if (this.velocity.X > -num332)
						{
							this.velocity.X = this.velocity.X - num330;
						}
						if (this.ai[2] > 300f)
						{
							this.ai[2] = -300f;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 48)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 30f || this.ai[0] == 60f || this.ai[0] == 90f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num334 = 6f;
									Vector2 vector33 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num335 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector33.X + (float)Main.rand.Next(-100, 101);
									float num336 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector33.Y + (float)Main.rand.Next(-100, 101);
									float num337 = (float)Math.Sqrt((double)(num335 * num335 + num336 * num336));
									num337 = num334 / num337;
									num335 *= num337;
									num336 *= num337;
									int num338 = 15;
									int num339 = 38;
									int num340 = Projectile.NewProjectile(vector33.X, vector33.Y, num335, num336, num339, num338, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num340].timeLeft = 300;
								}
							}
							else if (this.ai[0] >= (float)(400 + Main.rand.Next(400)))
							{
								this.ai[0] = 0f;
							}
						}
						if (this.type == 62 || this.type == 66)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num341 = 0.2f;
									Vector2 vector34 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num342 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector34.X + (float)Main.rand.Next(-100, 101);
									float num343 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector34.Y + (float)Main.rand.Next(-100, 101);
									float num344 = (float)Math.Sqrt((double)(num342 * num342 + num343 * num343));
									num344 = num341 / num344;
									num342 *= num344;
									num343 *= num344;
									int num345 = 21;
									int num346 = 44;
									int num347 = Projectile.NewProjectile(vector34.X, vector34.Y, num342, num343, num346, num345, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num347].timeLeft = 300;
								}
							}
							else if (this.ai[0] >= (float)(300 + Main.rand.Next(300)))
							{
								this.ai[0] = 0f;
							}
						}
						if (this.type == 156)
						{
							this.ai[0] += 1f;
							if (this.ai[0] == 20f || this.ai[0] == 40f || this.ai[0] == 60f || this.ai[0] == 80f || this.ai[0] == 100f)
							{
								if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num348 = 0.2f;
									Vector2 value = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num349 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - value.X + (float)Main.rand.Next(-50, 51);
									float num350 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - value.Y + (float)Main.rand.Next(-50, 51);
									float num351 = (float)Math.Sqrt((double)(num349 * num349 + num350 * num350));
									num351 = num348 / num351;
									num349 *= num351;
									num350 *= num351;
									int num352 = 80;
									int num353 = 115;
									value += this.velocity * 5f;
									int num354 = Projectile.NewProjectile(value.X + num349 * 100f, value.Y + num350 * 100f, num349, num350, num353, num352, 0f, Main.myPlayer, 0f, 0f);
									Main.projectile[num354].timeLeft = 300;
									return;
								}
							}
							else if (this.ai[0] >= (float)(250 + Main.rand.Next(250)))
							{
								this.ai[0] = 0f;
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 15)
				{
					this.aiAction = 0;
					if (this.ai[3] == 0f && this.life > 0)
					{
						this.ai[3] = (float)this.lifeMax;
					}
					if (this.ai[2] == 0f)
					{
						this.ai[0] = -100f;
						this.ai[2] = 1f;
						this.TargetClosest(true);
					}
					if (this.velocity.Y == 0f)
					{
						this.velocity.X = this.velocity.X * 0.8f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						this.ai[0] += 2f;
						if ((double)this.life < (double)this.lifeMax * 0.8)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.6)
						{
							this.ai[0] += 1f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.4)
						{
							this.ai[0] += 2f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.2)
						{
							this.ai[0] += 3f;
						}
						if ((double)this.life < (double)this.lifeMax * 0.1)
						{
							this.ai[0] += 4f;
						}
						if (this.ai[0] >= 0f)
						{
							this.netUpdate = true;
							this.TargetClosest(true);
							if (this.ai[1] == 3f)
							{
								this.velocity.Y = -13f;
								this.velocity.X = this.velocity.X + 3.5f * (float)this.direction;
								this.ai[0] = -200f;
								this.ai[1] = 0f;
							}
							else if (this.ai[1] == 2f)
							{
								this.velocity.Y = -6f;
								this.velocity.X = this.velocity.X + 4.5f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
							else
							{
								this.velocity.Y = -8f;
								this.velocity.X = this.velocity.X + 4f * (float)this.direction;
								this.ai[0] = -120f;
								this.ai[1] += 1f;
							}
						}
						else if (this.ai[0] >= -30f)
						{
							this.aiAction = 1;
						}
					}
					else if (this.target < 255 && ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f)))
					{
						if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
						{
							this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
						}
						else
						{
							this.velocity.X = this.velocity.X * 0.93f;
						}
					}
					int num355 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, 255, new Color(0, 80, 255, 80), this.scale * 1.2f);
					Main.dust[num355].noGravity = true;
					Main.dust[num355].velocity *= 0.5f;
					if (this.life > 0)
					{
						float num356 = (float)this.life / (float)this.lifeMax;
						num356 = num356 * 0.5f + 0.75f;
						if (num356 != this.scale)
						{
							this.position.X = this.position.X + (float)(this.width / 2);
							this.position.Y = this.position.Y + (float)this.height;
							this.scale = num356;
							this.width = (int)(98f * this.scale);
							this.height = (int)(92f * this.scale);
							this.position.X = this.position.X - (float)(this.width / 2);
							this.position.Y = this.position.Y - (float)this.height;
						}
						if (Main.netMode != 1)
						{
							int num357 = (int)((double)this.lifeMax * 0.05);
							if ((float)(this.life + num357) < this.ai[3])
							{
								this.ai[3] = (float)this.life;
								int num358 = Main.rand.Next(1, 4);
								for (int num359 = 0; num359 < num358; num359++)
								{
									int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
									int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
									int num360 = NPC.NewNPC(x, y, 1, 0);
									Main.npc[num360].SetDefaults(1, -1f);
									Main.npc[num360].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
									Main.npc[num360].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
									Main.npc[num360].ai[1] = (float)Main.rand.Next(3);
									if (Main.netMode == 2 && num360 < 200)
									{
										NetMessage.SendData(23, -1, -1, "", num360, 0f, 0f, 0f, 0);
									}
								}
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 16)
				{
					if (this.direction == 0)
					{
						this.TargetClosest(true);
					}
					if (this.wet)
					{
						bool flag30 = false;
						if (this.type != 55)
						{
							this.TargetClosest(false);
							if (Main.player[this.target].wet && !Main.player[this.target].dead)
							{
								flag30 = true;
							}
						}
						if (!flag30)
						{
							if (this.collideX)
							{
								this.velocity.X = this.velocity.X * -1f;
								this.direction *= -1;
								this.netUpdate = true;
							}
							if (this.collideY)
							{
								this.netUpdate = true;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
									this.directionY = -1;
									this.ai[0] = -1f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = Math.Abs(this.velocity.Y);
									this.directionY = 1;
									this.ai[0] = 1f;
								}
							}
						}
						if (this.type == 102)
						{
							Lighting.addLight((int)(this.position.X + (float)(this.width / 2) + (float)(this.direction * (this.width + 8))) / 16, (int)(this.position.Y + 2f) / 16, 0.07f, 0.04f, 0.025f);
						}
						if (flag30)
						{
							this.TargetClosest(true);
							if (this.type == 157)
							{
								if (this.velocity.X > 0f && this.direction < 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.velocity.X < 0f && this.direction > 0)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * 0.25f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.2f;
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 7f;
								}
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -7f;
								}
								if (this.velocity.Y > 5f)
								{
									this.velocity.Y = 4f;
								}
								if (this.velocity.Y < -5f)
								{
									this.velocity.Y = -4f;
								}
							}
							else if (this.type == 65 || this.type == 102)
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.15f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.15f;
								if (this.velocity.X > 5f)
								{
									this.velocity.X = 5f;
								}
								if (this.velocity.X < -5f)
								{
									this.velocity.X = -5f;
								}
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							else
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
								this.velocity.Y = this.velocity.Y + (float)this.directionY * 0.1f;
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
						}
						else
						{
							if (this.type == 157)
							{
								if (Main.player[this.target].position.Y > this.position.Y)
								{
									this.directionY = 1;
								}
								else
								{
									this.directionY = -1;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * 0.2f;
								if (this.velocity.X < -2f || this.velocity.X > 2f)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.ai[0] == -1f)
								{
									float num361 = -0.6f;
									if (this.directionY < 0)
									{
										num361 = -1f;
									}
									if (this.directionY > 0)
									{
										num361 = -0.2f;
									}
									this.velocity.Y = this.velocity.Y - 0.02f;
									if (this.velocity.Y < num361)
									{
										this.ai[0] = 1f;
									}
								}
								else
								{
									float num362 = 0.6f;
									if (this.directionY < 0)
									{
										num362 = 0.2f;
									}
									if (this.directionY > 0)
									{
										num362 = 1f;
									}
									this.velocity.Y = this.velocity.Y + 0.02f;
									if (this.velocity.Y > num362)
									{
										this.ai[0] = -1f;
									}
								}
							}
							else
							{
								this.velocity.X = this.velocity.X + (float)this.direction * 0.1f;
								if (this.velocity.X < -1f || this.velocity.X > 1f)
								{
									this.velocity.X = this.velocity.X * 0.95f;
								}
								if (this.ai[0] == -1f)
								{
									this.velocity.Y = this.velocity.Y - 0.01f;
									if ((double)this.velocity.Y < -0.3)
									{
										this.ai[0] = 1f;
									}
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.01f;
									if ((double)this.velocity.Y > 0.3)
									{
										this.ai[0] = -1f;
									}
								}
							}
							int num363 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num364 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
							if (Main.tile[num363, num364 - 1] == null)
							{
								Main.tile[num363, num364 - 1] = new Tile();
							}
							if (Main.tile[num363, num364 + 1] == null)
							{
								Main.tile[num363, num364 + 1] = new Tile();
							}
							if (Main.tile[num363, num364 + 2] == null)
							{
								Main.tile[num363, num364 + 2] = new Tile();
							}
							if (Main.tile[num363, num364 - 1].liquid > 128)
							{
								if (Main.tile[num363, num364 + 1].active())
								{
									this.ai[0] = -1f;
								}
								else if (Main.tile[num363, num364 + 2].active())
								{
									this.ai[0] = -1f;
								}
							}
							if (this.type != 157 && ((double)this.velocity.Y > 0.4 || (double)this.velocity.Y < -0.4))
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
						}
					}
					else
					{
						if (this.velocity.Y == 0f)
						{
							if (this.type == 65)
							{
								this.velocity.X = this.velocity.X * 0.94f;
								if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2)
								{
									this.velocity.X = 0f;
								}
							}
							else if (Main.netMode != 1)
							{
								this.velocity.Y = (float)Main.rand.Next(-50, -20) * 0.1f;
								this.velocity.X = (float)Main.rand.Next(-20, 20) * 0.1f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.3f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						this.ai[0] = 1f;
					}
					this.rotation = this.velocity.Y * (float)this.direction * 0.1f;
					if ((double)this.rotation < -0.2)
					{
						this.rotation = -0.2f;
					}
					if ((double)this.rotation > 0.2)
					{
						this.rotation = 0.2f;
						return;
					}
				}
				else if (this.aiStyle == 17)
				{
					this.noGravity = true;
					if (this.ai[0] == 0f)
					{
						this.noGravity = false;
						this.TargetClosest(true);
						if (Main.netMode != 1)
						{
							if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
							{
								this.ai[0] = 1f;
								this.netUpdate = true;
							}
							else
							{
								Rectangle rectangle5 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
								Rectangle rectangle6 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
								if (rectangle6.Intersects(rectangle5) || this.life < this.lifeMax)
								{
									this.ai[0] = 1f;
									this.velocity.Y = this.velocity.Y - 6f;
									this.netUpdate = true;
								}
							}
						}
					}
					else if (!Main.player[this.target].dead)
					{
						if (this.collideX)
						{
							this.velocity.X = this.oldVelocity.X * -0.5f;
							if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
							{
								this.velocity.X = 2f;
							}
							if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
							{
								this.velocity.X = -2f;
							}
						}
						if (this.collideY)
						{
							this.velocity.Y = this.oldVelocity.Y * -0.5f;
							if (this.velocity.Y > 0f && this.velocity.Y < 1f)
							{
								this.velocity.Y = 1f;
							}
							if (this.velocity.Y < 0f && this.velocity.Y > -1f)
							{
								this.velocity.Y = -1f;
							}
						}
						this.TargetClosest(true);
						if (this.direction == -1 && this.velocity.X > -3f)
						{
							this.velocity.X = this.velocity.X - 0.1f;
							if (this.velocity.X > 3f)
							{
								this.velocity.X = this.velocity.X - 0.1f;
							}
							else if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - 0.05f;
							}
							if (this.velocity.X < -3f)
							{
								this.velocity.X = -3f;
							}
						}
						else if (this.direction == 1 && this.velocity.X < 3f)
						{
							this.velocity.X = this.velocity.X + 0.1f;
							if (this.velocity.X < -3f)
							{
								this.velocity.X = this.velocity.X + 0.1f;
							}
							else if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + 0.05f;
							}
							if (this.velocity.X > 3f)
							{
								this.velocity.X = 3f;
							}
						}
						float num365 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
						float num366 = Main.player[this.target].position.Y - (float)(this.height / 2);
						if (num365 > 50f)
						{
							num366 -= 100f;
						}
						if (this.position.Y < num366)
						{
							this.velocity.Y = this.velocity.Y + 0.05f;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
							}
						}
						if (this.velocity.Y < -3f)
						{
							this.velocity.Y = -3f;
						}
						if (this.velocity.Y > 3f)
						{
							this.velocity.Y = 3f;
						}
					}
					if (this.wet)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.95f;
						}
						this.velocity.Y = this.velocity.Y - 0.5f;
						if (this.velocity.Y < -4f)
						{
							this.velocity.Y = -4f;
						}
						this.TargetClosest(true);
						return;
					}
				}
				else if (this.aiStyle == 18)
				{
					if (this.type == 63)
					{
						Lighting.addLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f, 0.15f, 0.4f);
					}
					else if (this.type == 103)
					{
						Lighting.addLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.05f, 0.45f, 0.1f);
					}
					else if (this.type != 221 && this.type != 242)
					{
						Lighting.addLight((int)(this.position.X + (float)(this.height / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.35f, 0.05f, 0.2f);
					}
					if (this.direction == 0)
					{
						this.TargetClosest(true);
					}
					if (!this.wet)
					{
						this.rotation += this.velocity.X * 0.1f;
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.98f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						this.ai[0] = 1f;
						return;
					}
					if (this.collideX)
					{
						this.velocity.X = this.velocity.X * -1f;
						this.direction *= -1;
					}
					if (this.collideY)
					{
						if (this.velocity.Y > 0f)
						{
							this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
							this.directionY = -1;
							this.ai[0] = -1f;
						}
						else if (this.velocity.Y < 0f)
						{
							this.velocity.Y = Math.Abs(this.velocity.Y);
							this.directionY = 1;
							this.ai[0] = 1f;
						}
					}
					bool flag31 = false;
					if (!this.friendly)
					{
						this.TargetClosest(false);
						if (Main.player[this.target].wet && !Main.player[this.target].dead)
						{
							flag31 = true;
						}
					}
					if (flag31)
					{
						this.localAI[2] = 1f;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						this.velocity *= 0.98f;
						float num367 = 0.2f;
						if (this.type == 103)
						{
							this.velocity *= 0.98f;
							num367 = 0.6f;
						}
						if (this.type == 221)
						{
							this.velocity *= 0.99f;
							num367 = 1f;
						}
						if (this.type == 242)
						{
							this.velocity *= 0.995f;
							num367 = 3f;
						}
						if (this.velocity.X > -num367 && this.velocity.X < num367 && this.velocity.Y > -num367 && this.velocity.Y < num367)
						{
							if (this.type == 221)
							{
								this.localAI[0] = 1f;
							}
							this.TargetClosest(true);
							float num368 = 7f;
							if (this.type == 103)
							{
								num368 = 9f;
							}
							Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num369 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector35.X;
							float num370 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector35.Y;
							float num371 = (float)Math.Sqrt((double)(num369 * num369 + num370 * num370));
							num371 = num368 / num371;
							num369 *= num371;
							num370 *= num371;
							this.velocity.X = num369;
							this.velocity.Y = num370;
							return;
						}
					}
					else
					{
						this.localAI[2] = 0f;
						this.velocity.X = this.velocity.X + (float)this.direction * 0.02f;
						this.rotation = this.velocity.X * 0.4f;
						if (this.velocity.X < -1f || this.velocity.X > 1f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						if (this.ai[0] == -1f)
						{
							this.velocity.Y = this.velocity.Y - 0.01f;
							if (this.velocity.Y < -1f)
							{
								this.ai[0] = 1f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.01f;
							if (this.velocity.Y > 1f)
							{
								this.ai[0] = -1f;
							}
						}
						int num372 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num373 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (Main.tile[num372, num373 - 1] == null)
						{
							Main.tile[num372, num373 - 1] = new Tile();
						}
						if (Main.tile[num372, num373 + 1] == null)
						{
							Main.tile[num372, num373 + 1] = new Tile();
						}
						if (Main.tile[num372, num373 + 2] == null)
						{
							Main.tile[num372, num373 + 2] = new Tile();
						}
						if (Main.tile[num372, num373 - 1].liquid > 128)
						{
							if (Main.tile[num372, num373 + 1].active())
							{
								this.ai[0] = -1f;
							}
							else if (Main.tile[num372, num373 + 2].active())
							{
								this.ai[0] = -1f;
							}
						}
						else
						{
							this.ai[0] = 1f;
						}
						if ((double)this.velocity.Y > 1.2 || (double)this.velocity.Y < -1.2)
						{
							this.velocity.Y = this.velocity.Y * 0.99f;
							return;
						}
					}
				}
				else
				{
					if (this.aiStyle == 19)
					{
						this.TargetClosest(true);
						float num374 = 12f;
						Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num375 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector36.X;
						float num376 = Main.player[this.target].position.Y - vector36.Y;
						float num377 = (float)Math.Sqrt((double)(num375 * num375 + num376 * num376));
						num377 = num374 / num377;
						num375 *= num377;
						num376 *= num377;
						bool flag32 = false;
						if (this.directionY < 0)
						{
							this.rotation = (float)(Math.Atan2((double)num376, (double)num375) + 1.57);
							flag32 = ((double)this.rotation >= -1.2 && (double)this.rotation <= 1.2);
							if ((double)this.rotation < -0.8)
							{
								this.rotation = -0.8f;
							}
							else if ((double)this.rotation > 0.8)
							{
								this.rotation = 0.8f;
							}
							if (this.velocity.X != 0f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								if ((double)this.velocity.X > -0.1 || (double)this.velocity.X < 0.1)
								{
									this.netUpdate = true;
									this.velocity.X = 0f;
								}
							}
						}
						if (this.ai[0] > 0f)
						{
							if (this.ai[0] == 200f)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
							}
							this.ai[0] -= 1f;
						}
						if (Main.netMode != 1 && flag32 && this.ai[0] == 0f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
						{
							this.ai[0] = 200f;
							int num378 = 10;
							int num379 = 31;
							int num380 = Projectile.NewProjectile(vector36.X, vector36.Y, num375, num376, num379, num378, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num380].ai[0] = 2f;
							Main.projectile[num380].timeLeft = 300;
							Main.projectile[num380].friendly = false;
							NetMessage.SendData(27, -1, -1, "", num380, 0f, 0f, 0f, 0);
							this.netUpdate = true;
						}
						try
						{
							int num381 = (int)this.position.X / 16;
							int num382 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num383 = (int)(this.position.X + (float)this.width) / 16;
							int num384 = (int)(this.position.Y + (float)this.height) / 16;
							bool flag33 = false;
							if (Main.tile[num381, num384] == null)
							{
								Main.tile[num381, num384] = new Tile();
							}
							if (Main.tile[num382, num384] == null)
							{
								Main.tile[num381, num384] = new Tile();
							}
							if (Main.tile[num383, num384] == null)
							{
								Main.tile[num381, num384] = new Tile();
							}
							if ((Main.tile[num381, num384].nactive() && Main.tileSolid[(int)Main.tile[num381, num384].type]) || (Main.tile[num382, num384].nactive() && Main.tileSolid[(int)Main.tile[num382, num384].type]) || (Main.tile[num383, num384].nactive() && Main.tileSolid[(int)Main.tile[num383, num384].type]))
							{
								flag33 = true;
							}
							if (flag33)
							{
								this.noGravity = true;
								this.noTileCollide = true;
								this.velocity.Y = -0.2f;
							}
							else
							{
								this.noGravity = false;
								this.noTileCollide = false;
								if (Main.rand.Next(2) == 0)
								{
									int num385 = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y + (float)this.height - 8f), this.width + 8, 24, 32, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
									Dust expr_189E8_cp_0 = Main.dust[num385];
									expr_189E8_cp_0.velocity.X = expr_189E8_cp_0.velocity.X * 0.4f;
									Dust expr_18A08_cp_0 = Main.dust[num385];
									expr_18A08_cp_0.velocity.Y = expr_18A08_cp_0.velocity.Y * -1f;
									if (Main.rand.Next(2) == 0)
									{
										Main.dust[num385].noGravity = true;
										Main.dust[num385].scale += 0.2f;
									}
								}
							}
							return;
						}
						catch
						{
							return;
						}
					}
					if (this.aiStyle == 20)
					{
						if (this.ai[0] == 0f)
						{
							if (Main.netMode != 1)
							{
								this.TargetClosest(true);
								this.direction *= -1;
								this.directionY *= -1;
								this.position.Y = this.position.Y + (float)(this.height / 2 + 8);
								this.ai[1] = this.position.X + (float)(this.width / 2);
								this.ai[2] = this.position.Y + (float)(this.height / 2);
								if (this.direction == 0)
								{
									this.direction = 1;
								}
								if (this.directionY == 0)
								{
									this.directionY = 1;
								}
								this.ai[3] = 1f + (float)Main.rand.Next(15) * 0.1f;
								this.velocity.Y = (float)(this.directionY * 6) * this.ai[3];
								this.ai[0] += 1f;
								this.netUpdate = true;
								return;
							}
							this.ai[1] = this.position.X + (float)(this.width / 2);
							this.ai[2] = this.position.Y + (float)(this.height / 2);
							return;
						}
						else
						{
							float num386 = 6f * this.ai[3];
							float num387 = 0.2f * this.ai[3];
							float num388 = num386 / num387 / 2f;
							if (this.ai[0] >= 1f && this.ai[0] < (float)((int)num388))
							{
								this.velocity.Y = (float)this.directionY * num386;
								this.ai[0] += 1f;
								return;
							}
							if (this.ai[0] >= (float)((int)num388))
							{
								this.velocity.Y = 0f;
								this.directionY *= -1;
								this.velocity.X = num386 * (float)this.direction;
								this.ai[0] = -1f;
								return;
							}
							if (this.directionY > 0)
							{
								if (this.velocity.Y >= num386)
								{
									this.directionY *= -1;
									this.velocity.Y = num386;
								}
							}
							else if (this.directionY < 0 && this.velocity.Y <= -num386)
							{
								this.directionY *= -1;
								this.velocity.Y = -num386;
							}
							if (this.direction > 0)
							{
								if (this.velocity.X >= num386)
								{
									this.direction *= -1;
									this.velocity.X = num386;
								}
							}
							else if (this.direction < 0 && this.velocity.X <= -num386)
							{
								this.direction *= -1;
								this.velocity.X = -num386;
							}
							this.velocity.X = this.velocity.X + num387 * (float)this.direction;
							this.velocity.Y = this.velocity.Y + num387 * (float)this.directionY;
							return;
						}
					}
					else
					{
						if (this.aiStyle == 21)
						{
							if (this.ai[0] == 0f)
							{
								this.TargetClosest(true);
								this.directionY = 1;
								this.ai[0] = 1f;
							}
							int num389 = 6;
							if (this.ai[1] == 0f)
							{
								this.rotation += (float)(this.direction * this.directionY) * 0.13f;
								if (this.collideY)
								{
									this.ai[0] = 2f;
								}
								if (!this.collideY && this.ai[0] == 2f)
								{
									this.direction = -this.direction;
									this.ai[1] = 1f;
									this.ai[0] = 1f;
								}
								if (this.collideX)
								{
									this.directionY = -this.directionY;
									this.ai[1] = 1f;
								}
							}
							else
							{
								this.rotation -= (float)(this.direction * this.directionY) * 0.13f;
								if (this.collideX)
								{
									this.ai[0] = 2f;
								}
								if (!this.collideX && this.ai[0] == 2f)
								{
									this.directionY = -this.directionY;
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (this.collideY)
								{
									this.direction = -this.direction;
									this.ai[1] = 0f;
								}
							}
							this.velocity.X = (float)(num389 * this.direction);
							this.velocity.Y = (float)(num389 * this.directionY);
							float num390 = (float)(270 - (int)Main.mouseTextColor) / 400f;
							Lighting.addLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.9f, 0.3f + num390, 0.2f);
							return;
						}
						if (this.aiStyle == 22)
						{
							bool flag34 = false;
							if (this.justHit)
							{
								this.ai[2] = 0f;
							}
							if (this.ai[2] >= 0f)
							{
								int num391 = 16;
								bool flag35 = false;
								bool flag36 = false;
								if (this.position.X > this.ai[0] - (float)num391 && this.position.X < this.ai[0] + (float)num391)
								{
									flag35 = true;
								}
								else if ((this.velocity.X < 0f && this.direction > 0) || (this.velocity.X > 0f && this.direction < 0))
								{
									flag35 = true;
								}
								num391 += 24;
								if (this.position.Y > this.ai[1] - (float)num391 && this.position.Y < this.ai[1] + (float)num391)
								{
									flag36 = true;
								}
								if (flag35 && flag36)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 30f && num391 == 16)
									{
										flag34 = true;
									}
									if (this.ai[2] >= 60f)
									{
										this.ai[2] = -200f;
										this.direction *= -1;
										this.velocity.X = this.velocity.X * -1f;
										this.collideX = false;
									}
								}
								else
								{
									this.ai[0] = this.position.X;
									this.ai[1] = this.position.Y;
									this.ai[2] = 0f;
								}
								this.TargetClosest(true);
							}
							else if (this.type == 253)
							{
								this.TargetClosest(true);
								this.ai[2] += 2f;
							}
							else
							{
								if (this.type == 330)
								{
									this.ai[2] += 0.1f;
								}
								else
								{
									this.ai[2] += 1f;
								}
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.direction = -1;
								}
								else
								{
									this.direction = 1;
								}
							}
							int num392 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction * 2;
							int num393 = (int)((this.position.Y + (float)this.height) / 16f);
							bool flag37 = true;
							bool flag38 = false;
							int num394 = 3;
							if (this.type == 122)
							{
								if (this.justHit)
								{
									this.ai[3] = 0f;
									this.localAI[1] = 0f;
								}
								float num395 = 7f;
								Vector2 vector37 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num396 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector37.X;
								float num397 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector37.Y;
								float num398 = (float)Math.Sqrt((double)(num396 * num396 + num397 * num397));
								num398 = num395 / num398;
								num396 *= num398;
								num397 *= num398;
								if (Main.netMode != 1 && this.ai[3] == 32f)
								{
									int num399 = 25;
									int num400 = 84;
									Projectile.NewProjectile(vector37.X, vector37.Y, num396, num397, num400, num399, 0f, Main.myPlayer, 0f, 0f);
								}
								num394 = 8;
								if (this.ai[3] > 0f)
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 64f)
									{
										this.ai[3] = 0f;
									}
								}
								if (Main.netMode != 1 && this.ai[3] == 0f)
								{
									this.localAI[1] += 1f;
									if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										this.ai[3] = 1f;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 75)
							{
								num394 = 4;
								if (Main.rand.Next(6) == 0)
								{
									int num401 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
									Main.dust[num401].velocity *= 0.3f;
								}
								if (Main.rand.Next(40) == 0)
								{
									Main.PlaySound(27, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
							else if (this.type == 169)
							{
								Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.6f, 0.75f);
								this.alpha = 30;
								if (Main.rand.Next(3) == 0)
								{
									int num402 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 200, default(Color), 1f);
									Main.dust[num402].velocity *= 0.3f;
									Main.dust[num402].noGravity = true;
								}
								if (this.justHit)
								{
									this.ai[3] = 0f;
									this.localAI[1] = 0f;
								}
								float num403 = 5f;
								Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num404 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector38.X;
								float num405 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector38.Y;
								float num406 = (float)Math.Sqrt((double)(num404 * num404 + num405 * num405));
								num406 = num403 / num406;
								num404 *= num406;
								num405 *= num406;
								if (num404 > 0f)
								{
									this.direction = 1;
								}
								else
								{
									this.direction = -1;
								}
								this.spriteDirection = this.direction;
								if (this.direction < 0)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num405), (double)(-(double)num404));
								}
								else
								{
									this.rotation = (float)Math.Atan2((double)num405, (double)num404);
								}
								if (Main.netMode != 1 && this.ai[3] == 16f)
								{
									int num407 = 45;
									int num408 = 128;
									Projectile.NewProjectile(vector38.X, vector38.Y, num404, num405, num408, num407, 0f, Main.myPlayer, 0f, 0f);
								}
								num394 = 10;
								if (this.ai[3] > 0f)
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 64f)
									{
										this.ai[3] = 0f;
									}
								}
								if (Main.netMode != 1 && this.ai[3] == 0f)
								{
									this.localAI[1] += 1f;
									if (this.localAI[1] > 120f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[1] = 0f;
										this.ai[3] = 1f;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 268)
							{
								this.rotation = this.velocity.X * 0.1f;
								if (Main.player[this.target].center().Y < this.center().Y)
								{
									num394 = 12;
								}
								else
								{
									num394 = 6;
								}
								if (Main.netMode != 1 && !this.confused)
								{
									this.ai[3] += 1f;
									if (this.justHit)
									{
										this.ai[3] = -45f;
										this.localAI[1] = 0f;
									}
									if (Main.netMode != 1 && this.ai[3] >= (float)(60 + Main.rand.Next(60)))
									{
										this.ai[3] = 0f;
										if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].head))
										{
											float num409 = 10f;
											Vector2 vector39 = new Vector2(this.position.X + (float)this.width * 0.5f - 4f, this.position.Y + (float)this.height * 0.7f);
											float num410 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector39.X;
											float num411 = Math.Abs(num410) * 0.1f;
											float num412 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector39.Y - num411;
											num410 += (float)Main.rand.Next(-10, 11);
											num412 += (float)Main.rand.Next(-30, 21);
											float num413 = (float)Math.Sqrt((double)(num410 * num410 + num412 * num412));
											num413 = num409 / num413;
											num410 *= num413;
											num412 *= num413;
											int num414 = 40;
											int num415 = 288;
											Projectile.NewProjectile(vector39.X, vector39.Y, num410, num412, num415, num414, 0f, Main.myPlayer, 0f, 0f);
										}
									}
								}
							}
							for (int num416 = num393; num416 < num393 + num394; num416++)
							{
								if (Main.tile[num392, num416] == null)
								{
									Main.tile[num392, num416] = new Tile();
								}
								if ((Main.tile[num392, num416].nactive() && Main.tileSolid[(int)Main.tile[num392, num416].type]) || Main.tile[num392, num416].liquid > 0)
								{
									if (num416 <= num393 + 1)
									{
										flag38 = true;
									}
									flag37 = false;
									break;
								}
							}
							if (this.type == 169 || this.type == 268)
							{
								for (int num417 = num393 - 3; num417 < num393; num417++)
								{
									if (Main.tile[num392, num417] == null)
									{
										Main.tile[num392, num417] = new Tile();
									}
									if ((Main.tile[num392, num417].nactive() && Main.tileSolid[(int)Main.tile[num392, num417].type]) || Main.tile[num392, num417].liquid > 0)
									{
										flag38 = false;
										flag34 = true;
										break;
									}
								}
							}
							if (flag34)
							{
								flag38 = false;
								flag37 = true;
								if (this.type == 268)
								{
									this.velocity.Y = this.velocity.Y + 2f;
								}
							}
							if (flag37)
							{
								if (this.type == 75 || this.type == 169)
								{
									this.velocity.Y = this.velocity.Y + 0.2f;
									if (this.velocity.Y > 2f)
									{
										this.velocity.Y = 2f;
									}
								}
								else
								{
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y > 3f)
									{
										this.velocity.Y = 3f;
									}
								}
							}
							else
							{
								if (this.type == 75 || this.type == 169)
								{
									if ((this.directionY < 0 && this.velocity.Y > 0f) || flag38)
									{
										this.velocity.Y = this.velocity.Y - 0.2f;
									}
								}
								else if (this.directionY < 0 && this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.1f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.type == 75 && this.wet)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
								if (this.velocity.Y < -2f)
								{
									this.velocity.Y = -2f;
								}
							}
							if (this.collideX)
							{
								this.velocity.X = this.oldVelocity.X * -0.4f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 1f)
								{
									this.velocity.X = 1f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -1f)
								{
									this.velocity.X = -1f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.25f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							float num418 = 2f;
							if (this.type == 75)
							{
								num418 = 3f;
							}
							if (this.type == 253)
							{
								num418 = 4f;
							}
							if (this.type == 330)
							{
								this.alpha = 0;
								num418 = 4f;
								this.TargetClosest(true);
								if (this.direction < 0 && this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if (this.direction > 0 && this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
							}
							if (this.direction == -1 && this.velocity.X > -num418)
							{
								this.velocity.X = this.velocity.X - 0.1f;
								if (this.velocity.X > num418)
								{
									this.velocity.X = this.velocity.X - 0.1f;
								}
								else if (this.velocity.X > 0f)
								{
									this.velocity.X = this.velocity.X + 0.05f;
								}
								if (this.velocity.X < -num418)
								{
									this.velocity.X = -num418;
								}
							}
							else if (this.direction == 1 && this.velocity.X < num418)
							{
								this.velocity.X = this.velocity.X + 0.1f;
								if (this.velocity.X < -num418)
								{
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.velocity.X < 0f)
								{
									this.velocity.X = this.velocity.X - 0.05f;
								}
								if (this.velocity.X > num418)
								{
									this.velocity.X = num418;
								}
							}
							if (this.directionY == -1 && (double)this.velocity.Y > -1.5)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y - 0.05f;
								}
								else if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = -1.5f;
								}
							}
							else if (this.directionY == 1 && (double)this.velocity.Y < 1.5)
							{
								this.velocity.Y = this.velocity.Y + 0.04f;
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = 1.5f;
								}
							}
							if (this.type == 122)
							{
								Lighting.addLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.4f, 0f, 0.25f);
								return;
							}
						}
						else if (this.aiStyle == 23)
						{
							this.noGravity = true;
							this.noTileCollide = true;
							if (this.type == 83)
							{
								Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.2f, 0.05f, 0.3f);
							}
							else if (this.type == 179)
							{
								Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.15f, 0.05f);
							}
							else
							{
								Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.05f, 0.2f, 0.3f);
							}
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							if (this.ai[0] == 0f)
							{
								float num419 = 9f;
								Vector2 vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num420 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector40.X;
								float num421 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector40.Y;
								float num422 = (float)Math.Sqrt((double)(num420 * num420 + num421 * num421));
								num422 = num419 / num422;
								num420 *= num422;
								num421 *= num422;
								this.velocity.X = num420;
								this.velocity.Y = num421;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								return;
							}
							if (this.ai[0] == 1f)
							{
								if (this.justHit)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
								}
								this.velocity *= 0.99f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 100f)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
									this.velocity.X = 0f;
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								if (this.justHit)
								{
									this.ai[0] = 2f;
									this.ai[1] = 0f;
								}
								this.velocity *= 0.96f;
								this.ai[1] += 1f;
								float num423 = this.ai[1] / 120f;
								num423 = 0.1f + num423 * 0.4f;
								this.rotation += num423 * (float)this.direction;
								if (this.ai[1] >= 120f)
								{
									this.netUpdate = true;
									this.ai[0] = 0f;
									this.ai[1] = 0f;
									return;
								}
							}
						}
						else if (this.aiStyle == 24)
						{
							this.noGravity = true;
							if (this.ai[0] == 0f)
							{
								this.noGravity = false;
								this.TargetClosest(true);
								if (Main.netMode != 1)
								{
									if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										this.direction = -this.direction;
									}
									else
									{
										Rectangle rectangle7 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
										Rectangle rectangle8 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
										if (rectangle8.Intersects(rectangle7) || this.life < this.lifeMax)
										{
											this.ai[0] = 1f;
											this.velocity.Y = this.velocity.Y - 6f;
											this.netUpdate = true;
											this.direction = -this.direction;
										}
									}
								}
							}
							else if (!Main.player[this.target].dead)
							{
								if (this.collideX)
								{
									this.direction *= -1;
									this.velocity.X = this.oldVelocity.X * -0.5f;
									if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
									{
										this.velocity.X = 2f;
									}
									if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
									{
										this.velocity.X = -2f;
									}
								}
								if (this.collideY)
								{
									this.velocity.Y = this.oldVelocity.Y * -0.5f;
									if (this.velocity.Y > 0f && this.velocity.Y < 1f)
									{
										this.velocity.Y = 1f;
									}
									if (this.velocity.Y < 0f && this.velocity.Y > -1f)
									{
										this.velocity.Y = -1f;
									}
								}
								if (this.direction == -1 && this.velocity.X > -3f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 3f)
									{
										this.velocity.X = this.velocity.X - 0.1f;
									}
									else if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X - 0.05f;
									}
									if (this.velocity.X < -3f)
									{
										this.velocity.X = -3f;
									}
								}
								else if (this.direction == 1 && this.velocity.X < 3f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -3f)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
									else if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + 0.05f;
									}
									if (this.velocity.X > 3f)
									{
										this.velocity.X = 3f;
									}
								}
								int num424 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
								int num425 = (int)((this.position.Y + (float)this.height) / 16f);
								bool flag39 = true;
								int num426 = 15;
								bool flag40 = false;
								for (int num427 = num425; num427 < num425 + num426; num427++)
								{
									if (Main.tile[num424, num427] == null)
									{
										Main.tile[num424, num427] = new Tile();
									}
									if ((Main.tile[num424, num427].nactive() && Main.tileSolid[(int)Main.tile[num424, num427].type]) || Main.tile[num424, num427].liquid > 0)
									{
										if (num427 < num425 + 5)
										{
											flag40 = true;
										}
										flag39 = false;
										break;
									}
								}
								if (flag39)
								{
									this.velocity.Y = this.velocity.Y + 0.05f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.1f;
								}
								if (flag40)
								{
									this.velocity.Y = this.velocity.Y - 0.2f;
								}
								if (this.velocity.Y > 2f)
								{
									this.velocity.Y = 2f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.wet)
							{
								this.ai[1] = 0f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.5f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
								this.TargetClosest(true);
								return;
							}
						}
						else if (this.aiStyle == 25)
						{
							if (this.ai[3] == 0f)
							{
								this.position.X = this.position.X + 8f;
								if (this.position.Y / 16f > (float)(Main.maxTilesY - 200))
								{
									this.ai[3] = 3f;
								}
								else if ((double)(this.position.Y / 16f) > Main.worldSurface)
								{
									this.TargetClosest(true);
									if (Main.player[this.target].zoneSnow)
									{
										this.ai[3] = 4f;
									}
									else
									{
										this.ai[3] = 2f;
									}
								}
								else
								{
									this.ai[3] = 1f;
								}
							}
							if (this.type == 341)
							{
								this.ai[3] = 1f;
							}
							if (this.ai[0] == 0f)
							{
								this.TargetClosest(true);
								if (Main.netMode != 1)
								{
									if (this.velocity.X != 0f || this.velocity.Y < 0f || (double)this.velocity.Y > 0.3)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
									Rectangle rectangle9 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
									Rectangle rectangle10 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
									if (rectangle10.Intersects(rectangle9) || this.life < this.lifeMax)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
								}
							}
							else if (this.velocity.Y == 0f)
							{
								this.ai[2] += 1f;
								int num428 = 20;
								if (this.ai[1] == 0f)
								{
									num428 = 12;
								}
								if (this.ai[2] < (float)num428)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									return;
								}
								this.ai[2] = 0f;
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								this.ai[1] += 1f;
								if (this.ai[1] == 2f)
								{
									this.velocity.X = (float)this.direction * 2.5f;
									this.velocity.Y = -8f;
									this.ai[1] = 0f;
								}
								else
								{
									this.velocity.X = (float)this.direction * 3.5f;
									this.velocity.Y = -4f;
								}
								this.netUpdate = true;
								return;
							}
							else
							{
								if (this.direction == 1 && this.velocity.X < 1f)
								{
									this.velocity.X = this.velocity.X + 0.1f;
									return;
								}
								if (this.direction == -1 && this.velocity.X > -1f)
								{
									this.velocity.X = this.velocity.X - 0.1f;
									return;
								}
							}
						}
						else if (this.aiStyle == 26)
						{
							int num429 = 30;
							bool flag41 = false;
							if (this.velocity.Y == 0f && ((this.velocity.X > 0f && this.direction < 0) || (this.velocity.X < 0f && this.direction > 0)))
							{
								flag41 = true;
								this.ai[3] += 1f;
							}
							if (this.position.X == this.oldPosition.X || this.ai[3] >= (float)num429 || flag41)
							{
								this.ai[3] += 1f;
							}
							else if (this.ai[3] > 0f)
							{
								this.ai[3] -= 1f;
							}
							if (this.ai[3] > (float)(num429 * 10))
							{
								this.ai[3] = 0f;
							}
							if (this.justHit)
							{
								this.ai[3] = 0f;
							}
							if (this.ai[3] == (float)num429)
							{
								this.netUpdate = true;
							}
							Vector2 vector41 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num430 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector41.X;
							float num431 = Main.player[this.target].position.Y - vector41.Y;
							float num432 = (float)Math.Sqrt((double)(num430 * num430 + num431 * num431));
							if (num432 < 200f)
							{
								this.ai[3] = 0f;
							}
							if ((this.type == 155 || this.type == 329) && this.velocity.Y == 0f && num432 < 100f && Math.Abs(this.velocity.X) > 3f && ((this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X > 0f) || (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) && this.velocity.X < 0f)))
							{
								this.velocity.Y = this.velocity.Y - 4f;
							}
							if (this.ai[3] < (float)num429)
							{
								this.TargetClosest(true);
							}
							else
							{
								if (this.velocity.X == 0f)
								{
									if (this.velocity.Y == 0f)
									{
										this.ai[0] += 1f;
										if (this.ai[0] >= 2f)
										{
											this.direction *= -1;
											this.spriteDirection = this.direction;
											this.ai[0] = 0f;
										}
									}
								}
								else
								{
									this.ai[0] = 0f;
								}
								this.directionY = -1;
								if (this.direction == 0)
								{
									this.direction = 1;
								}
							}
							float num433 = 6f;
							if (this.velocity.Y == 0f || this.wet || (this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0))
							{
								if (this.type == 155)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
								}
								if (this.type == 329)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								if (this.type == 315)
								{
									if (this.velocity.X > 0f && this.direction < 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < 0f && this.direction > 0)
									{
										this.velocity.X = this.velocity.X * 0.95f;
									}
									if (this.velocity.X < -num433 || this.velocity.X > num433)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
										}
									}
									else if (this.velocity.X < num433 && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > num433)
										{
											this.velocity.X = num433;
										}
									}
									else if (this.velocity.X > -num433 && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -num433)
										{
											this.velocity.X = -num433;
										}
									}
								}
								if (this.type == 329)
								{
									if (this.direction > 0 && this.velocity.X < 3f)
									{
										this.velocity.X = this.velocity.X + 0.1f;
									}
									if (this.direction < 0 && this.velocity.X > -3f)
									{
										this.velocity.X = this.velocity.X - 0.1f;
									}
								}
								if (this.velocity.X < -num433 || this.velocity.X > num433)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
									}
								}
								else if (this.velocity.X < num433 && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > num433)
									{
										this.velocity.X = num433;
									}
								}
								else if (this.velocity.X > -num433 && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -num433)
									{
										this.velocity.X = -num433;
									}
								}
							}
							if (this.velocity.Y >= 0f)
							{
								int num434 = 0;
								if (this.velocity.X < 0f)
								{
									num434 = -1;
								}
								if (this.velocity.X > 0f)
								{
									num434 = 1;
								}
								Vector2 vector42 = this.position;
								vector42.X += this.velocity.X;
								int num435 = (int)((vector42.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num434)) / 16f);
								int num436 = (int)((vector42.Y + (float)this.height - 1f) / 16f);
								if (Main.tile[num435, num436] == null)
								{
									Main.tile[num435, num436] = new Tile();
								}
								if (Main.tile[num435, num436 - 1] == null)
								{
									Main.tile[num435, num436 - 1] = new Tile();
								}
								if (Main.tile[num435, num436 - 2] == null)
								{
									Main.tile[num435, num436 - 2] = new Tile();
								}
								if (Main.tile[num435, num436 - 3] == null)
								{
									Main.tile[num435, num436 - 3] = new Tile();
								}
								if (Main.tile[num435, num436 + 1] == null)
								{
									Main.tile[num435, num436 + 1] = new Tile();
								}
								if ((float)(num435 * 16) < vector42.X + (float)this.width && (float)(num435 * 16 + 16) > vector42.X && ((Main.tile[num435, num436].nactive() && !Main.tile[num435, num436].topSlope() && !Main.tile[num435, num436 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num435, num436].type] && !Main.tileSolidTop[(int)Main.tile[num435, num436].type]) || (Main.tile[num435, num436 - 1].halfBrick() && Main.tile[num435, num436 - 1].nactive())) && (!Main.tile[num435, num436 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num435, num436 - 1].type] || Main.tileSolidTop[(int)Main.tile[num435, num436 - 1].type] || (Main.tile[num435, num436 - 1].halfBrick() && (!Main.tile[num435, num436 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num435, num436 - 4].type] || Main.tileSolidTop[(int)Main.tile[num435, num436 - 4].type]))) && (!Main.tile[num435, num436 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num435, num436 - 2].type] || Main.tileSolidTop[(int)Main.tile[num435, num436 - 2].type]) && (!Main.tile[num435, num436 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num435, num436 - 3].type] || Main.tileSolidTop[(int)Main.tile[num435, num436 - 3].type]) && (!Main.tile[num435 - num434, num436 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num435 - num434, num436 - 3].type]))
								{
									float num437 = (float)(num436 * 16);
									if (Main.tile[num435, num436].halfBrick())
									{
										num437 += 8f;
									}
									if (Main.tile[num435, num436 - 1].halfBrick())
									{
										num437 -= 8f;
									}
									if (num437 < vector42.Y + (float)this.height)
									{
										float num438 = vector42.Y + (float)this.height - num437;
										if ((double)num438 <= 16.1)
										{
											this.gfxOffY += this.position.Y + (float)this.height - num437;
											this.position.Y = num437 - (float)this.height;
											if (num438 < 9f)
											{
												this.stepSpeed = 1f;
											}
											else
											{
												this.stepSpeed = 2f;
											}
										}
									}
								}
							}
							if (this.velocity.Y == 0f)
							{
								int num439 = (int)((this.position.X + (float)(this.width / 2) + (float)((this.width / 2 + 2) * this.direction) + this.velocity.X * 5f) / 16f);
								int num440 = (int)((this.position.Y + (float)this.height - 15f) / 16f);
								if (Main.tile[num439, num440] == null)
								{
									Main.tile[num439, num440] = new Tile();
								}
								if (Main.tile[num439, num440 - 1] == null)
								{
									Main.tile[num439, num440 - 1] = new Tile();
								}
								if (Main.tile[num439, num440 - 2] == null)
								{
									Main.tile[num439, num440 - 2] = new Tile();
								}
								if (Main.tile[num439, num440 - 3] == null)
								{
									Main.tile[num439, num440 - 3] = new Tile();
								}
								if (Main.tile[num439, num440 + 1] == null)
								{
									Main.tile[num439, num440 + 1] = new Tile();
								}
								if (Main.tile[num439 + this.direction, num440 - 1] == null)
								{
									Main.tile[num439 + this.direction, num440 - 1] = new Tile();
								}
								if (Main.tile[num439 + this.direction, num440 + 1] == null)
								{
									Main.tile[num439 + this.direction, num440 + 1] = new Tile();
								}
								if (Main.tile[num439 - this.direction, num440 + 1] == null)
								{
									Main.tile[num439 - this.direction, num440 + 1] = new Tile();
								}
								if ((this.velocity.X < 0f && this.spriteDirection == -1) || (this.velocity.X > 0f && this.spriteDirection == 1))
								{
									if (Main.tile[num439, num440 - 2].nactive() && Main.tileSolid[(int)Main.tile[num439, num440 - 2].type])
									{
										if (Main.tile[num439, num440 - 3].nactive() && Main.tileSolid[(int)Main.tile[num439, num440 - 3].type])
										{
											this.velocity.Y = -8.5f;
											this.netUpdate = true;
											return;
										}
										this.velocity.Y = -7.5f;
										this.netUpdate = true;
										return;
									}
									else
									{
										if (Main.tile[num439, num440 - 1].nactive() && !Main.tile[num439, num440 - 1].topSlope() && Main.tileSolid[(int)Main.tile[num439, num440 - 1].type])
										{
											this.velocity.Y = -7f;
											this.netUpdate = true;
											return;
										}
										if (this.position.Y + (float)this.height - (float)(num440 * 16) > 20f && Main.tile[num439, num440].nactive() && !Main.tile[num439, num440].topSlope() && Main.tileSolid[(int)Main.tile[num439, num440].type])
										{
											this.velocity.Y = -6f;
											this.netUpdate = true;
											return;
										}
										if ((this.directionY < 0 || Math.Abs(this.velocity.X) > 3f) && (!Main.tile[num439, num440 + 2].nactive() || !Main.tileSolid[(int)Main.tile[num439, num440 + 2].type]) && (!Main.tile[num439 + this.direction, num440 + 3].nactive() || !Main.tileSolid[(int)Main.tile[num439 + this.direction, num440 + 3].type]))
										{
											this.velocity.Y = -8f;
											this.netUpdate = true;
											return;
										}
									}
								}
							}
						}
						else if (this.aiStyle == 27)
						{
							if (this.position.X < 160f || this.position.X > (float)((Main.maxTilesX - 10) * 16))
							{
								this.active = false;
							}
							if (this.localAI[0] == 0f)
							{
								this.localAI[0] = 1f;
								Main.wofB = -1;
								Main.wofT = -1;
							}
							this.ai[1] += 1f;
							if (this.ai[2] == 0f)
							{
								if ((double)this.life < (double)this.lifeMax * 0.5)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.ai[1] += 1f;
								}
								if (this.ai[1] > 2700f)
								{
									this.ai[2] = 1f;
								}
							}
							if (this.ai[2] > 0f && this.ai[1] > 60f)
							{
								int num441 = 3;
								if ((double)this.life < (double)this.lifeMax * 0.3)
								{
									num441++;
								}
								this.ai[2] += 1f;
								this.ai[1] = 0f;
								if (this.ai[2] > (float)num441)
								{
									this.ai[2] = 0f;
								}
								if (Main.netMode != 1)
								{
									int num442 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)(this.height / 2) + 20f), 117, 1);
									Main.npc[num442].velocity.X = (float)(this.direction * 8);
								}
							}
							this.localAI[3] += 1f;
							if (this.localAI[3] >= (float)(600 + Main.rand.Next(1000)))
							{
								this.localAI[3] = (float)(-(float)Main.rand.Next(200));
								Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 10);
							}
							Main.wof = this.whoAmI;
							int num443 = (int)(this.position.X / 16f);
							int num444 = (int)((this.position.X + (float)this.width) / 16f);
							int num445 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
							int num446 = 0;
							int num447 = num445 + 7;
							while (num446 < 15 && num447 > Main.maxTilesY - 200)
							{
								num447++;
								for (int num448 = num443; num448 <= num444; num448++)
								{
									try
									{
										if (WorldGen.SolidTile(num448, num447) || Main.tile[num448, num447].liquid > 0)
										{
											num446++;
										}
									}
									catch
									{
										num446 += 15;
									}
								}
							}
							num447 += 4;
							if (Main.wofB == -1)
							{
								Main.wofB = num447 * 16;
							}
							else if (Main.wofB > num447 * 16)
							{
								Main.wofB--;
								if (Main.wofB < num447 * 16)
								{
									Main.wofB = num447 * 16;
								}
							}
							else if (Main.wofB < num447 * 16)
							{
								Main.wofB++;
								if (Main.wofB > num447 * 16)
								{
									Main.wofB = num447 * 16;
								}
							}
							num446 = 0;
							num447 = num445 - 7;
							while (num446 < 15 && num447 < Main.maxTilesY - 10)
							{
								num447--;
								for (int num449 = num443; num449 <= num444; num449++)
								{
									try
									{
										if (WorldGen.SolidTile(num449, num447) || Main.tile[num449, num447].liquid > 0)
										{
											num446++;
										}
									}
									catch
									{
										num446 += 15;
									}
								}
							}
							num447 -= 4;
							if (Main.wofT == -1)
							{
								Main.wofT = num447 * 16;
							}
							else if (Main.wofT > num447 * 16)
							{
								Main.wofT--;
								if (Main.wofT < num447 * 16)
								{
									Main.wofT = num447 * 16;
								}
							}
							else if (Main.wofT < num447 * 16)
							{
								Main.wofT++;
								if (Main.wofT > num447 * 16)
								{
									Main.wofT = num447 * 16;
								}
							}
							float num450 = (float)((Main.wofB + Main.wofT) / 2 - this.height / 2);
							if (this.position.Y > num450 + 1f)
							{
								this.velocity.Y = -1f;
							}
							else if (this.position.Y < num450 - 1f)
							{
								this.velocity.Y = 1f;
							}
							this.velocity.Y = 0f;
							this.position.Y = num450;
							float num451 = 1.5f;
							if ((double)this.life < (double)this.lifeMax * 0.75)
							{
								num451 += 0.25f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.5)
							{
								num451 += 0.4f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.25)
							{
								num451 += 0.5f;
							}
							if ((double)this.life < (double)this.lifeMax * 0.1)
							{
								num451 += 0.6f;
							}
							if (this.velocity.X == 0f)
							{
								this.TargetClosest(true);
								this.velocity.X = (float)this.direction;
							}
							if (this.velocity.X < 0f)
							{
								this.velocity.X = -num451;
								this.direction = -1;
							}
							else
							{
								this.velocity.X = num451;
								this.direction = 1;
							}
							this.spriteDirection = this.direction;
							Vector2 vector43 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num452 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector43.X;
							float num453 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector43.Y;
							float num454 = (float)Math.Sqrt((double)(num452 * num452 + num453 * num453));
							num452 *= num454;
							num453 *= num454;
							if (this.direction > 0)
							{
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num453), (double)(-(double)num452)) + 3.14f;
								}
								else
								{
									this.rotation = 0f;
								}
							}
							else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)num453, (double)num452) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
							}
							if (this.localAI[0] == 1f && Main.netMode != 1)
							{
								this.localAI[0] = 2f;
								num450 = (float)((Main.wofB + Main.wofT) / 2);
								num450 = (num450 + (float)Main.wofT) / 2f;
								int num455 = NPC.NewNPC((int)this.position.X, (int)num450, 114, this.whoAmI);
								Main.npc[num455].ai[0] = 1f;
								num450 = (float)((Main.wofB + Main.wofT) / 2);
								num450 = (num450 + (float)Main.wofB) / 2f;
								num455 = NPC.NewNPC((int)this.position.X, (int)num450, 114, this.whoAmI);
								Main.npc[num455].ai[0] = -1f;
								num450 = (float)((Main.wofB + Main.wofT) / 2);
								num450 = (num450 + (float)Main.wofB) / 2f;
								for (int num456 = 0; num456 < 11; num456++)
								{
									num455 = NPC.NewNPC((int)this.position.X, (int)num450, 115, this.whoAmI);
									Main.npc[num455].ai[0] = (float)num456 * 0.1f - 0.05f;
								}
								return;
							}
						}
						else if (this.aiStyle == 28)
						{
							if (Main.wof < 0)
							{
								this.active = false;
								return;
							}
							this.realLife = Main.wof;
							if (Main.npc[Main.wof].life > 0)
							{
								this.life = Main.npc[Main.wof].life;
							}
							this.TargetClosest(true);
							this.position.X = Main.npc[Main.wof].position.X;
							this.direction = Main.npc[Main.wof].direction;
							this.spriteDirection = this.direction;
							float num457 = (float)((Main.wofB + Main.wofT) / 2);
							if (this.ai[0] > 0f)
							{
								num457 = (num457 + (float)Main.wofT) / 2f;
							}
							else
							{
								num457 = (num457 + (float)Main.wofB) / 2f;
							}
							num457 -= (float)(this.height / 2);
							if (this.position.Y > num457 + 1f)
							{
								this.velocity.Y = -1f;
							}
							else if (this.position.Y < num457 - 1f)
							{
								this.velocity.Y = 1f;
							}
							else
							{
								this.velocity.Y = 0f;
								this.position.Y = num457;
							}
							if (this.velocity.Y > 5f)
							{
								this.velocity.Y = 5f;
							}
							if (this.velocity.Y < -5f)
							{
								this.velocity.Y = -5f;
							}
							Vector2 vector44 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num458 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector44.X;
							float num459 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector44.Y;
							float num460 = (float)Math.Sqrt((double)(num458 * num458 + num459 * num459));
							num458 *= num460;
							num459 *= num460;
							bool flag42 = true;
							if (this.direction > 0)
							{
								if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) > this.position.X + (float)(this.width / 2))
								{
									this.rotation = (float)Math.Atan2((double)(-(double)num459), (double)(-(double)num458)) + 3.14f;
								}
								else
								{
									this.rotation = 0f;
									flag42 = false;
								}
							}
							else if (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.rotation = (float)Math.Atan2((double)num459, (double)num458) + 3.14f;
							}
							else
							{
								this.rotation = 0f;
								flag42 = false;
							}
							if (Main.netMode != 1)
							{
								int num461 = 4;
								this.localAI[1] += 1f;
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
								{
									this.localAI[1] += 1f;
									num461++;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
								{
									this.localAI[1] += 1f;
									num461++;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
								{
									this.localAI[1] += 1f;
									num461 += 2;
								}
								if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
								{
									this.localAI[1] += 2f;
									num461 += 3;
								}
								if (this.localAI[2] == 0f)
								{
									if (this.localAI[1] > 600f)
									{
										this.localAI[2] = 1f;
										this.localAI[1] = 0f;
										return;
									}
								}
								else if (this.localAI[1] > 45f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									this.localAI[1] = 0f;
									this.localAI[2] += 1f;
									if (this.localAI[2] >= (float)num461)
									{
										this.localAI[2] = 0f;
									}
									if (flag42)
									{
										float num462 = 9f;
										int num463 = 11;
										int num464 = 83;
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
										{
											num463++;
											num462 += 1f;
										}
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
										{
											num463++;
											num462 += 1f;
										}
										if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.1)
										{
											num463 += 2;
											num462 += 2f;
										}
										vector44 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num458 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector44.X;
										num459 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector44.Y;
										num460 = (float)Math.Sqrt((double)(num458 * num458 + num459 * num459));
										num460 = num462 / num460;
										num458 *= num460;
										num459 *= num460;
										vector44.X += num458;
										vector44.Y += num459;
										Projectile.NewProjectile(vector44.X, vector44.Y, num458, num459, num464, num463, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 29)
						{
							if (this.justHit)
							{
								this.ai[1] = 10f;
							}
							if (Main.wof < 0)
							{
								this.active = false;
								return;
							}
							this.TargetClosest(true);
							float num465 = 0.1f;
							float num466 = 300f;
							if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.25)
							{
								this.damage = 75;
								this.defense = 40;
								num466 = 900f;
							}
							else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.5)
							{
								this.damage = 60;
								this.defense = 30;
								num466 = 700f;
							}
							else if ((double)Main.npc[Main.wof].life < (double)Main.npc[Main.wof].lifeMax * 0.75)
							{
								this.damage = 45;
								this.defense = 20;
								num466 = 500f;
							}
							float num467 = Main.npc[Main.wof].position.X + (float)(Main.npc[Main.wof].width / 2);
							float num468 = Main.npc[Main.wof].position.Y;
							float num469 = (float)(Main.wofB - Main.wofT);
							num468 = (float)Main.wofT + num469 * this.ai[0];
							this.ai[2] += 1f;
							if (this.ai[2] > 100f)
							{
								num466 = (float)((int)(num466 * 1.3f));
								if (this.ai[2] > 200f)
								{
									this.ai[2] = 0f;
								}
							}
							Vector2 vector45 = new Vector2(num467, num468);
							float num470 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - (float)(this.width / 2) - vector45.X;
							float num471 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - (float)(this.height / 2) - vector45.Y;
							float num472 = (float)Math.Sqrt((double)(num470 * num470 + num471 * num471));
							if (this.ai[1] == 0f)
							{
								if (num472 > num466)
								{
									num472 = num466 / num472;
									num470 *= num472;
									num471 *= num472;
								}
								if (this.position.X < num467 + num470)
								{
									this.velocity.X = this.velocity.X + num465;
									if (this.velocity.X < 0f && num470 > 0f)
									{
										this.velocity.X = this.velocity.X + num465 * 2.5f;
									}
								}
								else if (this.position.X > num467 + num470)
								{
									this.velocity.X = this.velocity.X - num465;
									if (this.velocity.X > 0f && num470 < 0f)
									{
										this.velocity.X = this.velocity.X - num465 * 2.5f;
									}
								}
								if (this.position.Y < num468 + num471)
								{
									this.velocity.Y = this.velocity.Y + num465;
									if (this.velocity.Y < 0f && num471 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num465 * 2.5f;
									}
								}
								else if (this.position.Y > num468 + num471)
								{
									this.velocity.Y = this.velocity.Y - num465;
									if (this.velocity.Y > 0f && num471 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num465 * 2.5f;
									}
								}
								if (this.velocity.X > 4f)
								{
									this.velocity.X = 4f;
								}
								if (this.velocity.X < -4f)
								{
									this.velocity.X = -4f;
								}
								if (this.velocity.Y > 4f)
								{
									this.velocity.Y = 4f;
								}
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							else if (this.ai[1] > 0f)
							{
								this.ai[1] -= 1f;
							}
							else
							{
								this.ai[1] = 0f;
							}
							if (num470 > 0f)
							{
								this.spriteDirection = 1;
								this.rotation = (float)Math.Atan2((double)num471, (double)num470);
							}
							if (num470 < 0f)
							{
								this.spriteDirection = -1;
								this.rotation = (float)Math.Atan2((double)num471, (double)num470) + 3.14f;
							}
							Lighting.addLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, 0.3f, 0.2f, 0.1f);
							return;
						}
						else if (this.aiStyle == 30)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							bool dead2 = Main.player[this.target].dead;
							float num473 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
							float num474 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
							float num475 = (float)Math.Atan2((double)num474, (double)num473) + 1.57f;
							if (num475 < 0f)
							{
								num475 += 6.283f;
							}
							else if ((double)num475 > 6.283)
							{
								num475 -= 6.283f;
							}
							float num476 = 0.1f;
							if (this.rotation < num475)
							{
								if ((double)(num475 - this.rotation) > 3.1415)
								{
									this.rotation -= num476;
								}
								else
								{
									this.rotation += num476;
								}
							}
							else if (this.rotation > num475)
							{
								if ((double)(this.rotation - num475) > 3.1415)
								{
									this.rotation += num476;
								}
								else
								{
									this.rotation -= num476;
								}
							}
							if (this.rotation > num475 - num476 && this.rotation < num475 + num476)
							{
								this.rotation = num475;
							}
							if (this.rotation < 0f)
							{
								this.rotation += 6.283f;
							}
							else if ((double)this.rotation > 6.283)
							{
								this.rotation -= 6.283f;
							}
							if (this.rotation > num475 - num476 && this.rotation < num475 + num476)
							{
								this.rotation = num475;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num477 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
								Dust expr_1E0E9_cp_0 = Main.dust[num477];
								expr_1E0E9_cp_0.velocity.X = expr_1E0E9_cp_0.velocity.X * 0.5f;
								Dust expr_1E109_cp_0 = Main.dust[num477];
								expr_1E109_cp_0.velocity.Y = expr_1E109_cp_0.velocity.Y * 0.1f;
							}
							if (Main.netMode != 1 && !Main.dayTime && !dead2 && this.timeLeft < 10)
							{
								for (int num478 = 0; num478 < 200; num478++)
								{
									if (num478 != this.whoAmI && Main.npc[num478].active && (Main.npc[num478].type == 125 || Main.npc[num478].type == 126) && Main.npc[num478].timeLeft - 1 > this.timeLeft)
									{
										this.timeLeft = Main.npc[num478].timeLeft - 1;
									}
								}
							}
							if (Main.dayTime || dead2)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
									return;
								}
							}
							else if (this.ai[0] == 0f)
							{
								if (this.ai[1] == 0f)
								{
									float num479 = 7f;
									float num480 = 0.1f;
									int num481 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num481 = -1;
									}
									Vector2 vector46 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num482 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num481 * 300) - vector46.X;
									float num483 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector46.Y;
									float num484 = (float)Math.Sqrt((double)(num482 * num482 + num483 * num483));
									float num485 = num484;
									num484 = num479 / num484;
									num482 *= num484;
									num483 *= num484;
									if (this.velocity.X < num482)
									{
										this.velocity.X = this.velocity.X + num480;
										if (this.velocity.X < 0f && num482 > 0f)
										{
											this.velocity.X = this.velocity.X + num480;
										}
									}
									else if (this.velocity.X > num482)
									{
										this.velocity.X = this.velocity.X - num480;
										if (this.velocity.X > 0f && num482 < 0f)
										{
											this.velocity.X = this.velocity.X - num480;
										}
									}
									if (this.velocity.Y < num483)
									{
										this.velocity.Y = this.velocity.Y + num480;
										if (this.velocity.Y < 0f && num483 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num480;
										}
									}
									else if (this.velocity.Y > num483)
									{
										this.velocity.Y = this.velocity.Y - num480;
										if (this.velocity.Y > 0f && num483 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num480;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 600f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									else if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && num485 < 400f)
									{
										if (!Main.player[this.target].dead)
										{
											this.ai[3] += 1f;
										}
										if (this.ai[3] >= 60f)
										{
											this.ai[3] = 0f;
											vector46 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num482 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector46.X;
											num483 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector46.Y;
											if (Main.netMode != 1)
											{
												float num486 = 9f;
												int num487 = 20;
												int num488 = 83;
												num484 = (float)Math.Sqrt((double)(num482 * num482 + num483 * num483));
												num484 = num486 / num484;
												num482 *= num484;
												num483 *= num484;
												num482 += (float)Main.rand.Next(-40, 41) * 0.08f;
												num483 += (float)Main.rand.Next(-40, 41) * 0.08f;
												vector46.X += num482 * 15f;
												vector46.Y += num483 * 15f;
												Projectile.NewProjectile(vector46.X, vector46.Y, num482, num483, num488, num487, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
								}
								else if (this.ai[1] == 1f)
								{
									this.rotation = num475;
									float num489 = 12f;
									Vector2 vector47 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num490 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector47.X;
									float num491 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector47.Y;
									float num492 = (float)Math.Sqrt((double)(num490 * num490 + num491 * num491));
									num492 = num489 / num492;
									this.velocity.X = num490 * num492;
									this.velocity.Y = num491 * num492;
									this.ai[1] = 2f;
								}
								else if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 25f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
										this.velocity.Y = this.velocity.Y * 0.96f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 70f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num475;
										if (this.ai[3] >= 4f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
										}
										else
										{
											this.ai[1] = 1f;
										}
									}
								}
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[0] == 1f || this.ai[0] == 2f)
							{
								if (this.ai[0] == 1f)
								{
									this.ai[2] += 0.005f;
									if ((double)this.ai[2] > 0.5)
									{
										this.ai[2] = 0.5f;
									}
								}
								else
								{
									this.ai[2] -= 0.005f;
									if (this.ai[2] < 0f)
									{
										this.ai[2] = 0f;
									}
								}
								this.rotation += this.ai[2];
								this.ai[1] += 1f;
								if (this.ai[1] == 100f)
								{
									this.ai[0] += 1f;
									this.ai[1] = 0f;
									if (this.ai[0] == 3f)
									{
										this.ai[2] = 0f;
									}
									else
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										for (int num493 = 0; num493 < 2; num493++)
										{
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 143, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
										}
										for (int num494 = 0; num494 < 20; num494++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
								this.velocity.X = this.velocity.X * 0.98f;
								this.velocity.Y = this.velocity.Y * 0.98f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								this.damage = (int)((double)this.defDamage * 1.5);
								this.defense = this.defDefense + 10;
								this.soundHit = 4;
								if (this.ai[1] == 0f)
								{
									float num495 = 8f;
									float num496 = 0.15f;
									Vector2 vector48 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num497 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector48.X;
									float num498 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector48.Y;
									float num499 = (float)Math.Sqrt((double)(num497 * num497 + num498 * num498));
									num499 = num495 / num499;
									num497 *= num499;
									num498 *= num499;
									if (this.velocity.X < num497)
									{
										this.velocity.X = this.velocity.X + num496;
										if (this.velocity.X < 0f && num497 > 0f)
										{
											this.velocity.X = this.velocity.X + num496;
										}
									}
									else if (this.velocity.X > num497)
									{
										this.velocity.X = this.velocity.X - num496;
										if (this.velocity.X > 0f && num497 < 0f)
										{
											this.velocity.X = this.velocity.X - num496;
										}
									}
									if (this.velocity.Y < num498)
									{
										this.velocity.Y = this.velocity.Y + num496;
										if (this.velocity.Y < 0f && num498 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num496;
										}
									}
									else if (this.velocity.Y > num498)
									{
										this.velocity.Y = this.velocity.Y - num496;
										if (this.velocity.Y > 0f && num498 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num496;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 300f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.TargetClosest(true);
										this.netUpdate = true;
									}
									vector48 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num497 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector48.X;
									num498 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector48.Y;
									this.rotation = (float)Math.Atan2((double)num498, (double)num497) - 1.57f;
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 180f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											this.localAI[1] = 0f;
											float num500 = 8.5f;
											int num501 = 25;
											int num502 = 100;
											num499 = (float)Math.Sqrt((double)(num497 * num497 + num498 * num498));
											num499 = num500 / num499;
											num497 *= num499;
											num498 *= num499;
											vector48.X += num497 * 15f;
											vector48.Y += num498 * 15f;
											Projectile.NewProjectile(vector48.X, vector48.Y, num497, num498, num502, num501, 0f, Main.myPlayer, 0f, 0f);
											return;
										}
									}
								}
								else
								{
									int num503 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num503 = -1;
									}
									float num504 = 8f;
									float num505 = 0.2f;
									Vector2 vector49 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num506 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num503 * 340) - vector49.X;
									float num507 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector49.Y;
									float num508 = (float)Math.Sqrt((double)(num506 * num506 + num507 * num507));
									num508 = num504 / num508;
									num506 *= num508;
									num507 *= num508;
									if (this.velocity.X < num506)
									{
										this.velocity.X = this.velocity.X + num505;
										if (this.velocity.X < 0f && num506 > 0f)
										{
											this.velocity.X = this.velocity.X + num505;
										}
									}
									else if (this.velocity.X > num506)
									{
										this.velocity.X = this.velocity.X - num505;
										if (this.velocity.X > 0f && num506 < 0f)
										{
											this.velocity.X = this.velocity.X - num505;
										}
									}
									if (this.velocity.Y < num507)
									{
										this.velocity.Y = this.velocity.Y + num505;
										if (this.velocity.Y < 0f && num507 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num505;
										}
									}
									else if (this.velocity.Y > num507)
									{
										this.velocity.Y = this.velocity.Y - num505;
										if (this.velocity.Y > 0f && num507 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num505;
										}
									}
									vector49 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num506 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector49.X;
									num507 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector49.Y;
									this.rotation = (float)Math.Atan2((double)num507, (double)num506) - 1.57f;
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.1)
										{
											this.localAI[1] += 2f;
										}
										if (this.localAI[1] > 60f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											this.localAI[1] = 0f;
											float num509 = 9f;
											int num510 = 18;
											int num511 = 100;
											num508 = (float)Math.Sqrt((double)(num506 * num506 + num507 * num507));
											num508 = num509 / num508;
											num506 *= num508;
											num507 *= num508;
											vector49.X += num506 * 15f;
											vector49.Y += num507 * 15f;
											Projectile.NewProjectile(vector49.X, vector49.Y, num506, num507, num511, num510, 0f, Main.myPlayer, 0f, 0f);
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 180f)
									{
										this.ai[1] = 0f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.TargetClosest(true);
										this.netUpdate = true;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 31)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							bool dead3 = Main.player[this.target].dead;
							float num512 = this.position.X + (float)(this.width / 2) - Main.player[this.target].position.X - (float)(Main.player[this.target].width / 2);
							float num513 = this.position.Y + (float)this.height - 59f - Main.player[this.target].position.Y - (float)(Main.player[this.target].height / 2);
							float num514 = (float)Math.Atan2((double)num513, (double)num512) + 1.57f;
							if (num514 < 0f)
							{
								num514 += 6.283f;
							}
							else if ((double)num514 > 6.283)
							{
								num514 -= 6.283f;
							}
							float num515 = 0.15f;
							if (this.rotation < num514)
							{
								if ((double)(num514 - this.rotation) > 3.1415)
								{
									this.rotation -= num515;
								}
								else
								{
									this.rotation += num515;
								}
							}
							else if (this.rotation > num514)
							{
								if ((double)(this.rotation - num514) > 3.1415)
								{
									this.rotation += num515;
								}
								else
								{
									this.rotation -= num515;
								}
							}
							if (this.rotation > num514 - num515 && this.rotation < num514 + num515)
							{
								this.rotation = num514;
							}
							if (this.rotation < 0f)
							{
								this.rotation += 6.283f;
							}
							else if ((double)this.rotation > 6.283)
							{
								this.rotation -= 6.283f;
							}
							if (this.rotation > num514 - num515 && this.rotation < num514 + num515)
							{
								this.rotation = num514;
							}
							if (Main.rand.Next(5) == 0)
							{
								int num516 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height * 0.25f), this.width, (int)((float)this.height * 0.5f), 5, this.velocity.X, 2f, 0, default(Color), 1f);
								Dust expr_1FE15_cp_0 = Main.dust[num516];
								expr_1FE15_cp_0.velocity.X = expr_1FE15_cp_0.velocity.X * 0.5f;
								Dust expr_1FE35_cp_0 = Main.dust[num516];
								expr_1FE35_cp_0.velocity.Y = expr_1FE35_cp_0.velocity.Y * 0.1f;
							}
							if (Main.netMode != 1 && !Main.dayTime && !dead3 && this.timeLeft < 10)
							{
								for (int num517 = 0; num517 < 200; num517++)
								{
									if (num517 != this.whoAmI && Main.npc[num517].active && (Main.npc[num517].type == 125 || Main.npc[num517].type == 126) && Main.npc[num517].timeLeft - 1 > this.timeLeft)
									{
										this.timeLeft = Main.npc[num517].timeLeft - 1;
									}
								}
							}
							if (Main.dayTime || dead3)
							{
								this.velocity.Y = this.velocity.Y - 0.04f;
								if (this.timeLeft > 10)
								{
									this.timeLeft = 10;
									return;
								}
							}
							else if (this.ai[0] == 0f)
							{
								if (this.ai[1] == 0f)
								{
									this.TargetClosest(true);
									float num518 = 12f;
									float num519 = 0.4f;
									int num520 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num520 = -1;
									}
									Vector2 vector50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num521 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num520 * 400) - vector50.X;
									float num522 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector50.Y;
									float num523 = (float)Math.Sqrt((double)(num521 * num521 + num522 * num522));
									num523 = num518 / num523;
									num521 *= num523;
									num522 *= num523;
									if (this.velocity.X < num521)
									{
										this.velocity.X = this.velocity.X + num519;
										if (this.velocity.X < 0f && num521 > 0f)
										{
											this.velocity.X = this.velocity.X + num519;
										}
									}
									else if (this.velocity.X > num521)
									{
										this.velocity.X = this.velocity.X - num519;
										if (this.velocity.X > 0f && num521 < 0f)
										{
											this.velocity.X = this.velocity.X - num519;
										}
									}
									if (this.velocity.Y < num522)
									{
										this.velocity.Y = this.velocity.Y + num519;
										if (this.velocity.Y < 0f && num522 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num519;
										}
									}
									else if (this.velocity.Y > num522)
									{
										this.velocity.Y = this.velocity.Y - num519;
										if (this.velocity.Y > 0f && num522 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num519;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 600f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									else
									{
										if (!Main.player[this.target].dead)
										{
											this.ai[3] += 1f;
										}
										if (this.ai[3] >= 60f)
										{
											this.ai[3] = 0f;
											vector50 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num521 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector50.X;
											num522 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector50.Y;
											if (Main.netMode != 1)
											{
												float num524 = 12f;
												int num525 = 25;
												int num526 = 96;
												num523 = (float)Math.Sqrt((double)(num521 * num521 + num522 * num522));
												num523 = num524 / num523;
												num521 *= num523;
												num522 *= num523;
												num521 += (float)Main.rand.Next(-40, 41) * 0.05f;
												num522 += (float)Main.rand.Next(-40, 41) * 0.05f;
												vector50.X += num521 * 4f;
												vector50.Y += num522 * 4f;
												Projectile.NewProjectile(vector50.X, vector50.Y, num521, num522, num526, num525, 0f, Main.myPlayer, 0f, 0f);
											}
										}
									}
								}
								else if (this.ai[1] == 1f)
								{
									this.rotation = num514;
									float num527 = 13f;
									Vector2 vector51 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num528 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector51.X;
									float num529 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector51.Y;
									float num530 = (float)Math.Sqrt((double)(num528 * num528 + num529 * num529));
									num530 = num527 / num530;
									this.velocity.X = num528 * num530;
									this.velocity.Y = num529 * num530;
									this.ai[1] = 2f;
								}
								else if (this.ai[1] == 2f)
								{
									this.ai[2] += 1f;
									if (this.ai[2] >= 8f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										this.velocity.Y = this.velocity.Y * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
										if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = 0f;
										}
									}
									else
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									}
									if (this.ai[2] >= 42f)
									{
										this.ai[3] += 1f;
										this.ai[2] = 0f;
										this.target = 255;
										this.rotation = num514;
										if (this.ai[3] >= 10f)
										{
											this.ai[1] = 0f;
											this.ai[3] = 0f;
										}
										else
										{
											this.ai[1] = 1f;
										}
									}
								}
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
									return;
								}
							}
							else if (this.ai[0] == 1f || this.ai[0] == 2f)
							{
								if (this.ai[0] == 1f)
								{
									this.ai[2] += 0.005f;
									if ((double)this.ai[2] > 0.5)
									{
										this.ai[2] = 0.5f;
									}
								}
								else
								{
									this.ai[2] -= 0.005f;
									if (this.ai[2] < 0f)
									{
										this.ai[2] = 0f;
									}
								}
								this.rotation += this.ai[2];
								this.ai[1] += 1f;
								if (this.ai[1] == 100f)
								{
									this.ai[0] += 1f;
									this.ai[1] = 0f;
									if (this.ai[0] == 3f)
									{
										this.ai[2] = 0f;
									}
									else
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										for (int num531 = 0; num531 < 2; num531++)
										{
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 144, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
											Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 6, 1f);
										}
										for (int num532 = 0; num532 < 20; num532++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
								Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
								this.velocity.X = this.velocity.X * 0.98f;
								this.velocity.Y = this.velocity.Y * 0.98f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
								{
									this.velocity.Y = 0f;
									return;
								}
							}
							else
							{
								this.soundHit = 4;
								this.damage = (int)((double)this.defDamage * 1.5);
								this.defense = this.defDefense + 18;
								if (this.ai[1] == 0f)
								{
									float num533 = 4f;
									float num534 = 0.1f;
									int num535 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										num535 = -1;
									}
									Vector2 vector52 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num536 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + (float)(num535 * 180) - vector52.X;
									float num537 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector52.Y;
									float num538 = (float)Math.Sqrt((double)(num536 * num536 + num537 * num537));
									num538 = num533 / num538;
									num536 *= num538;
									num537 *= num538;
									if (this.velocity.X < num536)
									{
										this.velocity.X = this.velocity.X + num534;
										if (this.velocity.X < 0f && num536 > 0f)
										{
											this.velocity.X = this.velocity.X + num534;
										}
									}
									else if (this.velocity.X > num536)
									{
										this.velocity.X = this.velocity.X - num534;
										if (this.velocity.X > 0f && num536 < 0f)
										{
											this.velocity.X = this.velocity.X - num534;
										}
									}
									if (this.velocity.Y < num537)
									{
										this.velocity.Y = this.velocity.Y + num534;
										if (this.velocity.Y < 0f && num537 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num534;
										}
									}
									else if (this.velocity.Y > num537)
									{
										this.velocity.Y = this.velocity.Y - num534;
										if (this.velocity.Y > 0f && num537 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num534;
										}
									}
									this.ai[2] += 1f;
									if (this.ai[2] >= 400f)
									{
										this.ai[1] = 1f;
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										this.target = 255;
										this.netUpdate = true;
									}
									if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.localAI[2] += 1f;
										if (this.localAI[2] > 22f)
										{
											this.localAI[2] = 0f;
											Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
										}
										if (Main.netMode != 1)
										{
											this.localAI[1] += 1f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												this.localAI[1] += 1f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												this.localAI[1] += 2f;
											}
											if (this.localAI[1] > 8f)
											{
												this.localAI[1] = 0f;
												float num539 = 6f;
												int num540 = 30;
												int num541 = 101;
												vector52 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num536 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector52.X;
												num537 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector52.Y;
												num538 = (float)Math.Sqrt((double)(num536 * num536 + num537 * num537));
												num538 = num539 / num538;
												num536 *= num538;
												num537 *= num538;
												num537 += (float)Main.rand.Next(-40, 41) * 0.01f;
												num536 += (float)Main.rand.Next(-40, 41) * 0.01f;
												num537 += this.velocity.Y * 0.5f;
												num536 += this.velocity.X * 0.5f;
												vector52.X -= num536 * 1f;
												vector52.Y -= num537 * 1f;
												Projectile.NewProjectile(vector52.X, vector52.Y, num536, num537, num541, num540, 0f, Main.myPlayer, 0f, 0f);
												return;
											}
										}
									}
								}
								else
								{
									if (this.ai[1] == 1f)
									{
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
										this.rotation = num514;
										float num542 = 14f;
										Vector2 vector53 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num543 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector53.X;
										float num544 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector53.Y;
										float num545 = (float)Math.Sqrt((double)(num543 * num543 + num544 * num544));
										num545 = num542 / num545;
										this.velocity.X = num543 * num545;
										this.velocity.Y = num544 * num545;
										this.ai[1] = 2f;
										return;
									}
									if (this.ai[1] == 2f)
									{
										this.ai[2] += 1f;
										if (this.ai[2] >= 50f)
										{
											this.velocity.X = this.velocity.X * 0.93f;
											this.velocity.Y = this.velocity.Y * 0.93f;
											if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
											{
												this.velocity.X = 0f;
											}
											if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
											{
												this.velocity.Y = 0f;
											}
										}
										else
										{
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
										}
										if (this.ai[2] >= 80f)
										{
											this.ai[3] += 1f;
											this.ai[2] = 0f;
											this.target = 255;
											this.rotation = num514;
											if (this.ai[3] >= 6f)
											{
												this.ai[1] = 0f;
												this.ai[3] = 0f;
												return;
											}
											this.ai[1] = 1f;
											return;
										}
									}
								}
							}
						}
						else if (this.aiStyle == 32)
						{
							this.damage = this.defDamage;
							this.defense = this.defDefense;
							if (this.ai[0] == 0f && Main.netMode != 1)
							{
								this.TargetClosest(true);
								this.ai[0] = 1f;
								if (this.type != 68)
								{
									int num546 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 128, this.whoAmI);
									Main.npc[num546].ai[0] = -1f;
									Main.npc[num546].ai[1] = (float)this.whoAmI;
									Main.npc[num546].target = this.target;
									Main.npc[num546].netUpdate = true;
									num546 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 129, this.whoAmI);
									Main.npc[num546].ai[0] = 1f;
									Main.npc[num546].ai[1] = (float)this.whoAmI;
									Main.npc[num546].target = this.target;
									Main.npc[num546].netUpdate = true;
									num546 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 130, this.whoAmI);
									Main.npc[num546].ai[0] = -1f;
									Main.npc[num546].ai[1] = (float)this.whoAmI;
									Main.npc[num546].target = this.target;
									Main.npc[num546].ai[3] = 150f;
									Main.npc[num546].netUpdate = true;
									num546 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 131, this.whoAmI);
									Main.npc[num546].ai[0] = 1f;
									Main.npc[num546].ai[1] = (float)this.whoAmI;
									Main.npc[num546].target = this.target;
									Main.npc[num546].netUpdate = true;
									Main.npc[num546].ai[3] = 150f;
								}
							}
							if (this.type == 68 && this.ai[1] != 3f && this.ai[1] != 2f)
							{
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
								this.ai[1] = 2f;
							}
							if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
							{
								this.TargetClosest(true);
								if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 6000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 6000f)
								{
									this.ai[1] = 3f;
								}
							}
							if (Main.dayTime && this.ai[1] != 3f && this.ai[1] != 2f)
							{
								this.ai[1] = 2f;
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							}
							if (this.ai[1] == 0f)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 600f)
								{
									this.ai[2] = 0f;
									this.ai[1] = 1f;
									this.TargetClosest(true);
									this.netUpdate = true;
								}
								this.rotation = this.velocity.X / 15f;
								if (this.position.Y > Main.player[this.target].position.Y - 200f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.98f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 2f)
									{
										this.velocity.Y = 2f;
									}
								}
								else if (this.position.Y < Main.player[this.target].position.Y - 500f)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.98f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -2f)
									{
										this.velocity.Y = -2f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) + 100f)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
									if (this.velocity.X > 8f)
									{
										this.velocity.X = 8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
									if (this.velocity.X < -8f)
									{
										this.velocity.X = -8f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[1] == 1f)
								{
									this.defense *= 2;
									this.damage *= 2;
									this.ai[2] += 1f;
									if (this.ai[2] == 2f)
									{
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									if (this.ai[2] >= 400f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
									this.rotation += (float)this.direction * 0.3f;
									Vector2 vector54 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num547 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector54.X;
									float num548 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector54.Y;
									float num549 = (float)Math.Sqrt((double)(num547 * num547 + num548 * num548));
									num549 = 2f / num549;
									this.velocity.X = num547 * num549;
									this.velocity.Y = num548 * num549;
									return;
								}
								if (this.ai[1] == 2f)
								{
									this.damage = 1000;
									this.defense = 9999;
									this.rotation += (float)this.direction * 0.3f;
									Vector2 vector55 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num550 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector55.X;
									float num551 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector55.Y;
									float num552 = (float)Math.Sqrt((double)(num550 * num550 + num551 * num551));
									num552 = 8f / num552;
									this.velocity.X = num550 * num552;
									this.velocity.Y = num551 * num552;
									return;
								}
								if (this.ai[1] == 3f)
								{
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.95f;
									}
									this.velocity.X = this.velocity.X * 0.95f;
									if (this.timeLeft > 500)
									{
										this.timeLeft = 500;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 33)
						{
							Vector2 vector56 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num553 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector56.X;
							float num554 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector56.Y;
							float num555 = (float)Math.Sqrt((double)(num553 * num553 + num554 * num554));
							if (this.ai[2] != 99f)
							{
								if (num555 > 800f)
								{
									this.ai[2] = 99f;
								}
							}
							else if (num555 < 400f)
							{
								this.ai[2] = 0f;
							}
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 99f)
							{
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 8f)
									{
										this.velocity.Y = 8f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X < -12f)
									{
										this.velocity.X = -12f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[2] == 0f || this.ai[2] == 3f)
								{
									if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
									{
										this.TargetClosest(true);
										if (Main.player[this.target].dead)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y > 16f)
											{
												this.velocity.Y = 16f;
											}
										}
										else
										{
											Vector2 vector57 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num556 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector57.X;
											float num557 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector57.Y;
											float num558 = (float)Math.Sqrt((double)(num556 * num556 + num557 * num557));
											num558 = 7f / num558;
											num556 *= num558;
											num557 *= num558;
											this.rotation = (float)Math.Atan2((double)num557, (double)num556) - 1.57f;
											if (this.velocity.X > num556)
											{
												if (this.velocity.X > 0f)
												{
													this.velocity.X = this.velocity.X * 0.97f;
												}
												this.velocity.X = this.velocity.X - 0.05f;
											}
											if (this.velocity.X < num556)
											{
												if (this.velocity.X < 0f)
												{
													this.velocity.X = this.velocity.X * 0.97f;
												}
												this.velocity.X = this.velocity.X + 0.05f;
											}
											if (this.velocity.Y > num557)
											{
												if (this.velocity.Y > 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.97f;
												}
												this.velocity.Y = this.velocity.Y - 0.05f;
											}
											if (this.velocity.Y < num557)
											{
												if (this.velocity.Y < 0f)
												{
													this.velocity.Y = this.velocity.Y * 0.97f;
												}
												this.velocity.Y = this.velocity.Y + 0.05f;
											}
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
									}
									else
									{
										this.ai[3] += 1f;
										if (this.ai[3] >= 300f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 320f)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y - 0.04f;
											if (this.velocity.Y > 3f)
											{
												this.velocity.Y = 3f;
											}
										}
										else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 260f)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y + 0.04f;
											if (this.velocity.Y < -3f)
											{
												this.velocity.Y = -3f;
											}
										}
										if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.96f;
											}
											this.velocity.X = this.velocity.X - 0.3f;
											if (this.velocity.X > 12f)
											{
												this.velocity.X = 12f;
											}
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 250f)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.96f;
											}
											this.velocity.X = this.velocity.X + 0.3f;
											if (this.velocity.X < -12f)
											{
												this.velocity.X = -12f;
											}
										}
									}
									Vector2 vector58 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num559 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector58.X;
									float num560 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector58.Y;
									Math.Sqrt((double)(num559 * num559 + num560 * num560));
									this.rotation = (float)Math.Atan2((double)num560, (double)num559) + 1.57f;
									return;
								}
								if (this.ai[2] == 1f)
								{
									Vector2 vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num561 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector59.X;
									float num562 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector59.Y;
									float num563 = (float)Math.Sqrt((double)(num561 * num561 + num562 * num562));
									this.rotation = (float)Math.Atan2((double)num562, (double)num561) + 1.57f;
									this.velocity.X = this.velocity.X * 0.95f;
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
									if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
									{
										this.TargetClosest(true);
										this.ai[2] = 2f;
										vector59 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num561 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector59.X;
										num562 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector59.Y;
										num563 = (float)Math.Sqrt((double)(num561 * num561 + num562 * num562));
										num563 = 22f / num563;
										this.velocity.X = num561 * num563;
										this.velocity.Y = num562 * num563;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 2f)
								{
									if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
									{
										this.ai[2] = 3f;
										return;
									}
								}
								else
								{
									if (this.ai[2] == 4f)
									{
										this.TargetClosest(true);
										Vector2 vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num564 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector60.X;
										float num565 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector60.Y;
										float num566 = (float)Math.Sqrt((double)(num564 * num564 + num565 * num565));
										num566 = 7f / num566;
										num564 *= num566;
										num565 *= num566;
										if (this.velocity.X > num564)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X - 0.05f;
										}
										if (this.velocity.X < num564)
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.97f;
											}
											this.velocity.X = this.velocity.X + 0.05f;
										}
										if (this.velocity.Y > num565)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y - 0.05f;
										}
										if (this.velocity.Y < num565)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.97f;
											}
											this.velocity.Y = this.velocity.Y + 0.05f;
										}
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										vector60 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num564 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector60.X;
										num565 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector60.Y;
										num566 = (float)Math.Sqrt((double)(num564 * num564 + num565 * num565));
										this.rotation = (float)Math.Atan2((double)num565, (double)num564) + 1.57f;
										return;
									}
									if (this.ai[2] == 5f && ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))))
									{
										this.ai[2] = 0f;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 34)
						{
							this.spriteDirection = -(int)this.ai[0];
							Vector2 vector61 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num567 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector61.X;
							float num568 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector61.Y;
							float num569 = (float)Math.Sqrt((double)(num567 * num567 + num568 * num568));
							if (this.ai[2] != 99f)
							{
								if (num569 > 800f)
								{
									this.ai[2] = 99f;
								}
							}
							else if (num569 < 400f)
							{
								this.ai[2] = 0f;
							}
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 99f)
							{
								if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y - 0.1f;
									if (this.velocity.Y > 8f)
									{
										this.velocity.Y = 8f;
									}
								}
								else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.96f;
									}
									this.velocity.Y = this.velocity.Y + 0.1f;
									if (this.velocity.Y < -8f)
									{
										this.velocity.Y = -8f;
									}
								}
								if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X - 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
								}
								if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.96f;
									}
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X < -12f)
									{
										this.velocity.X = -12f;
										return;
									}
								}
							}
							else
							{
								if (this.ai[2] == 0f || this.ai[2] == 3f)
								{
									if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
									{
										this.timeLeft = 10;
									}
									if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
									{
										this.TargetClosest(true);
										this.TargetClosest(true);
										if (Main.player[this.target].dead)
										{
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y > 16f)
											{
												this.velocity.Y = 16f;
											}
										}
										else
										{
											Vector2 vector62 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num570 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector62.X;
											float num571 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector62.Y;
											float num572 = (float)Math.Sqrt((double)(num570 * num570 + num571 * num571));
											num572 = 12f / num572;
											num570 *= num572;
											num571 *= num572;
											this.rotation = (float)Math.Atan2((double)num571, (double)num570) - 1.57f;
											if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 2f)
											{
												this.rotation = (float)Math.Atan2((double)num571, (double)num570) - 1.57f;
												this.velocity.X = num570;
												this.velocity.Y = num571;
												this.netUpdate = true;
											}
											else
											{
												this.velocity *= 0.97f;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 600f)
											{
												this.ai[2] = 0f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
										}
									}
									else
									{
										this.ai[3] += 1f;
										if (this.ai[3] >= 600f)
										{
											this.ai[2] += 1f;
											this.ai[3] = 0f;
											this.netUpdate = true;
										}
										if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y + 300f)
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y - 0.1f;
											if (this.velocity.Y > 3f)
											{
												this.velocity.Y = 3f;
											}
										}
										else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y + 230f)
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.96f;
											}
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y < -3f)
											{
												this.velocity.Y = -3f;
											}
										}
										if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 250f)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X * 0.94f;
											}
											this.velocity.X = this.velocity.X - 0.3f;
											if (this.velocity.X > 9f)
											{
												this.velocity.X = 9f;
											}
										}
										if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2))
										{
											if (this.velocity.X < 0f)
											{
												this.velocity.X = this.velocity.X * 0.94f;
											}
											this.velocity.X = this.velocity.X + 0.2f;
											if (this.velocity.X < -8f)
											{
												this.velocity.X = -8f;
											}
										}
									}
									Vector2 vector63 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num573 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector63.X;
									float num574 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector63.Y;
									Math.Sqrt((double)(num573 * num573 + num574 * num574));
									this.rotation = (float)Math.Atan2((double)num574, (double)num573) + 1.57f;
									return;
								}
								if (this.ai[2] == 1f)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									Vector2 vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num575 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 280f * this.ai[0] - vector64.X;
									float num576 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector64.Y;
									float num577 = (float)Math.Sqrt((double)(num575 * num575 + num576 * num576));
									this.rotation = (float)Math.Atan2((double)num576, (double)num575) + 1.57f;
									this.velocity.X = (this.velocity.X * 5f + Main.npc[(int)this.ai[1]].velocity.X) / 6f;
									this.velocity.X = this.velocity.X + 0.5f;
									this.velocity.Y = this.velocity.Y - 0.5f;
									if (this.velocity.Y < -9f)
									{
										this.velocity.Y = -9f;
									}
									if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 280f)
									{
										this.TargetClosest(true);
										this.ai[2] = 2f;
										vector64 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num575 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector64.X;
										num576 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector64.Y;
										num577 = (float)Math.Sqrt((double)(num575 * num575 + num576 * num576));
										num577 = 20f / num577;
										this.velocity.X = num575 * num577;
										this.velocity.Y = num576 * num577;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 2f)
								{
									if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f)
									{
										if (this.ai[3] >= 4f)
										{
											this.ai[2] = 3f;
											this.ai[3] = 0f;
											return;
										}
										this.ai[2] = 1f;
										this.ai[3] += 1f;
										return;
									}
								}
								else if (this.ai[2] == 4f)
								{
									Vector2 vector65 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num578 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector65.X;
									float num579 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector65.Y;
									float num580 = (float)Math.Sqrt((double)(num578 * num578 + num579 * num579));
									this.rotation = (float)Math.Atan2((double)num579, (double)num578) + 1.57f;
									this.velocity.Y = (this.velocity.Y * 5f + Main.npc[(int)this.ai[1]].velocity.Y) / 6f;
									this.velocity.X = this.velocity.X + 0.5f;
									if (this.velocity.X > 12f)
									{
										this.velocity.X = 12f;
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
									{
										this.TargetClosest(true);
										this.ai[2] = 5f;
										vector65 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num578 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector65.X;
										num579 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector65.Y;
										num580 = (float)Math.Sqrt((double)(num578 * num578 + num579 * num579));
										num580 = 17f / num580;
										this.velocity.X = num578 * num580;
										this.velocity.Y = num579 * num580;
										this.netUpdate = true;
										return;
									}
								}
								else if (this.ai[2] == 5f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 100f)
								{
									if (this.ai[3] >= 4f)
									{
										this.ai[2] = 0f;
										this.ai[3] = 0f;
										return;
									}
									this.ai[2] = 4f;
									this.ai[3] += 1f;
									return;
								}
							}
						}
						else if (this.aiStyle == 35)
						{
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 0f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.localAI[0] += 2f;
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.07f;
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.07f;
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.1f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.1f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 1100f)
									{
										this.localAI[0] = 0f;
										this.ai[2] = 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 150f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.04f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 150f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.04f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 200f)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.2f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 160f)
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.2f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								Vector2 vector66 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num581 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector66.X;
								float num582 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector66.Y;
								float num583 = (float)Math.Sqrt((double)(num581 * num581 + num582 * num582));
								this.rotation = (float)Math.Atan2((double)num582, (double)num581) + 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 140f)
									{
										this.localAI[0] = 0f;
										float num584 = 12f;
										int num585 = 0;
										int num586 = 102;
										num583 = num584 / num583;
										num581 = -num581 * num583;
										num582 = -num582 * num583;
										num581 += (float)Main.rand.Next(-40, 41) * 0.01f;
										num582 += (float)Main.rand.Next(-40, 41) * 0.01f;
										vector66.X += num581 * 4f;
										vector66.Y += num582 * 4f;
										Projectile.NewProjectile(vector66.X, vector66.Y, num581, num582, num586, num585, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else if (this.ai[2] == 1f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 300f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								Vector2 vector67 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num587 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector67.X;
								float num588 = Main.npc[(int)this.ai[1]].position.Y - vector67.Y;
								num588 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 80f - vector67.Y;
								float num589 = (float)Math.Sqrt((double)(num587 * num587 + num588 * num588));
								num589 = 6f / num589;
								num587 *= num589;
								num588 *= num589;
								if (this.velocity.X > num587)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X - 0.04f;
								}
								if (this.velocity.X < num587)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X + 0.04f;
								}
								if (this.velocity.Y > num588)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y - 0.08f;
								}
								if (this.velocity.Y < num588)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y + 0.08f;
								}
								this.TargetClosest(true);
								vector67 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num587 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector67.X;
								num588 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector67.Y;
								num589 = (float)Math.Sqrt((double)(num587 * num587 + num588 * num588));
								this.rotation = (float)Math.Atan2((double)num588, (double)num587) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 40f)
									{
										this.localAI[0] = 0f;
										float num590 = 10f;
										int num591 = 0;
										int num592 = 102;
										num589 = num590 / num589;
										num587 *= num589;
										num588 *= num589;
										num587 += (float)Main.rand.Next(-40, 41) * 0.01f;
										num588 += (float)Main.rand.Next(-40, 41) * 0.01f;
										vector67.X += num587 * 4f;
										vector67.Y += num588 * 4f;
										Projectile.NewProjectile(vector67.X, vector67.Y, num587, num588, num592, num591, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 36)
						{
							this.spriteDirection = -(int)this.ai[0];
							if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 32)
							{
								this.ai[2] += 10f;
								if (this.ai[2] > 50f || Main.netMode != 2)
								{
									this.life = -1;
									this.HitEffect(0, 10.0);
									this.active = false;
								}
							}
							if (this.ai[2] == 0f || this.ai[2] == 3f)
							{
								if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
								{
									this.timeLeft = 10;
								}
								if (Main.npc[(int)this.ai[1]].ai[1] != 0f)
								{
									this.localAI[0] += 3f;
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.07f;
										if (this.velocity.Y > 6f)
										{
											this.velocity.Y = 6f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.07f;
										if (this.velocity.Y < -6f)
										{
											this.velocity.Y = -6f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.1f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 120f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.1f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								else
								{
									this.ai[3] += 1f;
									if (this.ai[3] >= 800f)
									{
										this.ai[2] += 1f;
										this.ai[3] = 0f;
										this.netUpdate = true;
									}
									if (this.position.Y > Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y - 0.1f;
										if (this.velocity.Y > 3f)
										{
											this.velocity.Y = 3f;
										}
									}
									else if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 100f)
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.96f;
										}
										this.velocity.Y = this.velocity.Y + 0.1f;
										if (this.velocity.Y < -3f)
										{
											this.velocity.Y = -3f;
										}
									}
									if (this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X - 0.14f;
										if (this.velocity.X > 8f)
										{
											this.velocity.X = 8f;
										}
									}
									if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 180f * this.ai[0])
									{
										if (this.velocity.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.96f;
										}
										this.velocity.X = this.velocity.X + 0.14f;
										if (this.velocity.X < -8f)
										{
											this.velocity.X = -8f;
										}
									}
								}
								this.TargetClosest(true);
								Vector2 vector68 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num593 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector68.X;
								float num594 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector68.Y;
								float num595 = (float)Math.Sqrt((double)(num593 * num593 + num594 * num594));
								this.rotation = (float)Math.Atan2((double)num594, (double)num593) - 1.57f;
								if (Main.netMode != 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 200f)
									{
										this.localAI[0] = 0f;
										float num596 = 8f;
										int num597 = 25;
										int num598 = 100;
										num595 = num596 / num595;
										num593 *= num595;
										num594 *= num595;
										num593 += (float)Main.rand.Next(-40, 41) * 0.05f;
										num594 += (float)Main.rand.Next(-40, 41) * 0.05f;
										vector68.X += num593 * 8f;
										vector68.Y += num594 * 8f;
										Projectile.NewProjectile(vector68.X, vector68.Y, num593, num594, num598, num597, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
							else if (this.ai[2] == 1f)
							{
								this.ai[3] += 1f;
								if (this.ai[3] >= 200f)
								{
									this.localAI[0] = 0f;
									this.ai[2] = 0f;
									this.ai[3] = 0f;
									this.netUpdate = true;
								}
								Vector2 vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num599 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - 350f - vector69.X;
								float num600 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 20f - vector69.Y;
								float num601 = (float)Math.Sqrt((double)(num599 * num599 + num600 * num600));
								num601 = 7f / num601;
								num599 *= num601;
								num600 *= num601;
								if (this.velocity.X > num599)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
								}
								if (this.velocity.X < num599)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
								}
								if (this.velocity.Y > num600)
								{
									if (this.velocity.Y > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y - 0.03f;
								}
								if (this.velocity.Y < num600)
								{
									if (this.velocity.Y < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
									this.velocity.Y = this.velocity.Y + 0.03f;
								}
								this.TargetClosest(true);
								vector69 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								num599 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector69.X;
								num600 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector69.Y;
								num601 = (float)Math.Sqrt((double)(num599 * num599 + num600 * num600));
								this.rotation = (float)Math.Atan2((double)num600, (double)num599) - 1.57f;
								if (Main.netMode == 1)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 80f)
									{
										this.localAI[0] = 0f;
										float num602 = 10f;
										int num603 = 25;
										int num604 = 100;
										num601 = num602 / num601;
										num599 *= num601;
										num600 *= num601;
										num599 += (float)Main.rand.Next(-40, 41) * 0.05f;
										num600 += (float)Main.rand.Next(-40, 41) * 0.05f;
										vector69.X += num599 * 8f;
										vector69.Y += num600 * 8f;
										Projectile.NewProjectile(vector69.X, vector69.Y, num599, num600, num604, num603, 0f, Main.myPlayer, 0f, 0f);
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 37)
						{
							if (this.ai[3] > 0f)
							{
								this.realLife = (int)this.ai[3];
							}
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							if (this.type > 134)
							{
								bool flag43 = false;
								if (this.ai[1] <= 0f)
								{
									flag43 = true;
								}
								else if (Main.npc[(int)this.ai[1]].life <= 0)
								{
									flag43 = true;
								}
								if (flag43)
								{
									this.life = 0;
									this.HitEffect(0, 10.0);
									this.checkDead();
								}
							}
							if (Main.netMode != 1)
							{
								if (this.ai[0] == 0f && this.type == 134)
								{
									this.ai[3] = (float)this.whoAmI;
									this.realLife = this.whoAmI;
									int num605 = this.whoAmI;
									int num606 = 80;
									for (int num607 = 0; num607 <= num606; num607++)
									{
										int num608 = 135;
										if (num607 == num606)
										{
											num608 = 136;
										}
										int num609 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), num608, this.whoAmI);
										Main.npc[num609].ai[3] = (float)this.whoAmI;
										Main.npc[num609].realLife = this.whoAmI;
										Main.npc[num609].ai[1] = (float)num605;
										Main.npc[num605].ai[0] = (float)num609;
										NetMessage.SendData(23, -1, -1, "", num609, 0f, 0f, 0f, 0);
										num605 = num609;
									}
								}
								if (this.type == 135)
								{
									this.localAI[0] += (float)Main.rand.Next(4);
									if (this.localAI[0] >= (float)Main.rand.Next(1400, 26000))
									{
										this.localAI[0] = 0f;
										this.TargetClosest(true);
										if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
										{
											float num610 = 8f;
											Vector2 vector70 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2));
											float num611 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector70.X + (float)Main.rand.Next(-20, 21);
											float num612 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector70.Y + (float)Main.rand.Next(-20, 21);
											float num613 = (float)Math.Sqrt((double)(num611 * num611 + num612 * num612));
											num613 = num610 / num613;
											num611 *= num613;
											num612 *= num613;
											num611 += (float)Main.rand.Next(-20, 21) * 0.05f;
											num612 += (float)Main.rand.Next(-20, 21) * 0.05f;
											int num614 = 22;
											int num615 = 100;
											vector70.X += num611 * 5f;
											vector70.Y += num612 * 5f;
											int num616 = Projectile.NewProjectile(vector70.X, vector70.Y, num611, num612, num615, num614, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num616].timeLeft = 300;
											this.netUpdate = true;
										}
									}
								}
							}
							int num617 = (int)(this.position.X / 16f) - 1;
							int num618 = (int)((this.position.X + (float)this.width) / 16f) + 2;
							int num619 = (int)(this.position.Y / 16f) - 1;
							int num620 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
							if (num617 < 0)
							{
								num617 = 0;
							}
							if (num618 > Main.maxTilesX)
							{
								num618 = Main.maxTilesX;
							}
							if (num619 < 0)
							{
								num619 = 0;
							}
							if (num620 > Main.maxTilesY)
							{
								num620 = Main.maxTilesY;
							}
							bool flag44 = false;
							if (!flag44)
							{
								for (int num621 = num617; num621 < num618; num621++)
								{
									for (int num622 = num619; num622 < num620; num622++)
									{
										if (Main.tile[num621, num622] != null && ((Main.tile[num621, num622].nactive() && (Main.tileSolid[(int)Main.tile[num621, num622].type] || (Main.tileSolidTop[(int)Main.tile[num621, num622].type] && Main.tile[num621, num622].frameY == 0))) || Main.tile[num621, num622].liquid > 64))
										{
											Vector2 vector71;
											vector71.X = (float)(num621 * 16);
											vector71.Y = (float)(num622 * 16);
											if (this.position.X + (float)this.width > vector71.X && this.position.X < vector71.X + 16f && this.position.Y + (float)this.height > vector71.Y && this.position.Y < vector71.Y + 16f)
											{
												flag44 = true;
												break;
											}
										}
									}
								}
							}
							if (!flag44)
							{
								if (this.type != 135 || this.ai[2] != 1f)
								{
									Lighting.addLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
								}
								this.localAI[1] = 1f;
								if (this.type == 134)
								{
									Rectangle rectangle11 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									int num623 = 1000;
									bool flag45 = true;
									if (this.position.Y > Main.player[this.target].position.Y)
									{
										for (int num624 = 0; num624 < 255; num624++)
										{
											if (Main.player[num624].active)
											{
												Rectangle rectangle12 = new Rectangle((int)Main.player[num624].position.X - num623, (int)Main.player[num624].position.Y - num623, num623 * 2, num623 * 2);
												if (rectangle11.Intersects(rectangle12))
												{
													flag45 = false;
													break;
												}
											}
										}
										if (flag45)
										{
											flag44 = true;
										}
									}
								}
							}
							else
							{
								this.localAI[1] = 0f;
							}
							float num625 = 16f;
							if (Main.dayTime || Main.player[this.target].dead)
							{
								flag44 = false;
								this.velocity.Y = this.velocity.Y + 1f;
								if ((double)this.position.Y > Main.worldSurface * 16.0)
								{
									this.velocity.Y = this.velocity.Y + 1f;
									num625 = 32f;
								}
								if ((double)this.position.Y > Main.rockLayer * 16.0)
								{
									for (int num626 = 0; num626 < 200; num626++)
									{
										if (Main.npc[num626].aiStyle == this.aiStyle)
										{
											Main.npc[num626].active = false;
										}
									}
								}
							}
							float num627 = 0.1f;
							float num628 = 0.15f;
							Vector2 vector72 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num629 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
							float num630 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
							num629 = (float)((int)(num629 / 16f) * 16);
							num630 = (float)((int)(num630 / 16f) * 16);
							vector72.X = (float)((int)(vector72.X / 16f) * 16);
							vector72.Y = (float)((int)(vector72.Y / 16f) * 16);
							num629 -= vector72.X;
							num630 -= vector72.Y;
							float num631 = (float)Math.Sqrt((double)(num629 * num629 + num630 * num630));
							if (this.ai[1] > 0f && this.ai[1] < (float)Main.npc.Length)
							{
								try
								{
									vector72 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									num629 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - vector72.X;
									num630 = Main.npc[(int)this.ai[1]].position.Y + (float)(Main.npc[(int)this.ai[1]].height / 2) - vector72.Y;
								}
								catch
								{
								}
								this.rotation = (float)Math.Atan2((double)num630, (double)num629) + 1.57f;
								num631 = (float)Math.Sqrt((double)(num629 * num629 + num630 * num630));
								int num632 = (int)(44f * this.scale);
								num631 = (num631 - (float)num632) / num631;
								num629 *= num631;
								num630 *= num631;
								this.velocity = Vector2.Zero;
								this.position.X = this.position.X + num629;
								this.position.Y = this.position.Y + num630;
								return;
							}
							if (!flag44)
							{
								this.TargetClosest(true);
								this.velocity.Y = this.velocity.Y + 0.15f;
								if (this.velocity.Y > num625)
								{
									this.velocity.Y = num625;
								}
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num625 * 0.4)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X - num627 * 1.1f;
									}
									else
									{
										this.velocity.X = this.velocity.X + num627 * 1.1f;
									}
								}
								else if (this.velocity.Y == num625)
								{
									if (this.velocity.X < num629)
									{
										this.velocity.X = this.velocity.X + num627;
									}
									else if (this.velocity.X > num629)
									{
										this.velocity.X = this.velocity.X - num627;
									}
								}
								else if (this.velocity.Y > 4f)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + num627 * 0.9f;
									}
									else
									{
										this.velocity.X = this.velocity.X - num627 * 0.9f;
									}
								}
							}
							else
							{
								if (this.soundDelay == 0)
								{
									float num633 = num631 / 40f;
									if (num633 < 10f)
									{
										num633 = 10f;
									}
									if (num633 > 20f)
									{
										num633 = 20f;
									}
									this.soundDelay = (int)num633;
									Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 1);
								}
								num631 = (float)Math.Sqrt((double)(num629 * num629 + num630 * num630));
								float num634 = Math.Abs(num629);
								float num635 = Math.Abs(num630);
								float num636 = num625 / num631;
								num629 *= num636;
								num630 *= num636;
								if (((this.velocity.X > 0f && num629 > 0f) || (this.velocity.X < 0f && num629 < 0f)) && ((this.velocity.Y > 0f && num630 > 0f) || (this.velocity.Y < 0f && num630 < 0f)))
								{
									if (this.velocity.X < num629)
									{
										this.velocity.X = this.velocity.X + num628;
									}
									else if (this.velocity.X > num629)
									{
										this.velocity.X = this.velocity.X - num628;
									}
									if (this.velocity.Y < num630)
									{
										this.velocity.Y = this.velocity.Y + num628;
									}
									else if (this.velocity.Y > num630)
									{
										this.velocity.Y = this.velocity.Y - num628;
									}
								}
								if ((this.velocity.X > 0f && num629 > 0f) || (this.velocity.X < 0f && num629 < 0f) || (this.velocity.Y > 0f && num630 > 0f) || (this.velocity.Y < 0f && num630 < 0f))
								{
									if (this.velocity.X < num629)
									{
										this.velocity.X = this.velocity.X + num627;
									}
									else if (this.velocity.X > num629)
									{
										this.velocity.X = this.velocity.X - num627;
									}
									if (this.velocity.Y < num630)
									{
										this.velocity.Y = this.velocity.Y + num627;
									}
									else if (this.velocity.Y > num630)
									{
										this.velocity.Y = this.velocity.Y - num627;
									}
									if ((double)Math.Abs(num630) < (double)num625 * 0.2 && ((this.velocity.X > 0f && num629 < 0f) || (this.velocity.X < 0f && num629 > 0f)))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y + num627 * 2f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - num627 * 2f;
										}
									}
									if ((double)Math.Abs(num629) < (double)num625 * 0.2 && ((this.velocity.Y > 0f && num630 < 0f) || (this.velocity.Y < 0f && num630 > 0f)))
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + num627 * 2f;
										}
										else
										{
											this.velocity.X = this.velocity.X - num627 * 2f;
										}
									}
								}
								else if (num634 > num635)
								{
									if (this.velocity.X < num629)
									{
										this.velocity.X = this.velocity.X + num627 * 1.1f;
									}
									else if (this.velocity.X > num629)
									{
										this.velocity.X = this.velocity.X - num627 * 1.1f;
									}
									if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num625 * 0.5)
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y + num627;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - num627;
										}
									}
								}
								else
								{
									if (this.velocity.Y < num630)
									{
										this.velocity.Y = this.velocity.Y + num627 * 1.1f;
									}
									else if (this.velocity.Y > num630)
									{
										this.velocity.Y = this.velocity.Y - num627 * 1.1f;
									}
									if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num625 * 0.5)
									{
										if (this.velocity.X > 0f)
										{
											this.velocity.X = this.velocity.X + num627;
										}
										else
										{
											this.velocity.X = this.velocity.X - num627;
										}
									}
								}
							}
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
							if (this.type == 134)
							{
								if (flag44)
								{
									if (this.localAI[0] != 1f)
									{
										this.netUpdate = true;
									}
									this.localAI[0] = 1f;
								}
								else
								{
									if (this.localAI[0] != 0f)
									{
										this.netUpdate = true;
									}
									this.localAI[0] = 0f;
								}
								if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
								{
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.aiStyle == 38)
						{
							float num637 = 4f;
							float num638 = 1f;
							if (this.type == 143)
							{
								num637 = 3f;
								num638 = 0.7f;
							}
							if (this.type == 145)
							{
								num637 = 3.5f;
								num638 = 0.8f;
							}
							if (this.type == 143)
							{
								this.ai[2] += 1f;
								if (this.ai[2] >= 120f)
								{
									this.ai[2] = 0f;
									if (Main.netMode != 1)
									{
										Vector2 vector73 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.5f);
										float speedX = (float)(12 * this.spriteDirection);
										float speedY = 0f;
										if (Main.netMode != 1)
										{
											int num639 = 25;
											int num640 = 110;
											int num641 = Projectile.NewProjectile(vector73.X, vector73.Y, speedX, speedY, num640, num639, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num641].ai[0] = 2f;
											Main.projectile[num641].timeLeft = 300;
											Main.projectile[num641].friendly = false;
											NetMessage.SendData(27, -1, -1, "", num641, 0f, 0f, 0f, 0);
											this.netUpdate = true;
										}
									}
								}
							}
							if (this.type == 144 && this.ai[1] >= 3f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.ai[2] += 1f;
									if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
									{
										this.velocity.X = 0f;
									}
									if (this.ai[2] >= 200f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
								}
							}
							else if (this.type == 145 && this.ai[1] >= 3f)
							{
								this.TargetClosest(true);
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.9f;
									this.ai[2] += 1f;
									if ((double)this.velocity.X > -0.3 && (double)this.velocity.X < 0.3)
									{
										this.velocity.X = 0f;
									}
									if (this.ai[2] >= 16f)
									{
										this.ai[2] = 0f;
										this.ai[1] = 0f;
									}
								}
								if (this.velocity.X == 0f && this.velocity.Y == 0f && this.ai[2] == 8f)
								{
									float num642 = 10f;
									Vector2 vector74 = new Vector2(this.position.X + (float)this.width * 0.5f - (float)(this.direction * 12), this.position.Y + (float)this.height * 0.25f);
									float num643 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector74.X;
									float num644 = Main.player[this.target].position.Y - vector74.Y;
									float num645 = (float)Math.Sqrt((double)(num643 * num643 + num644 * num644));
									num645 = num642 / num645;
									num643 *= num645;
									num644 *= num645;
									if (Main.netMode != 1)
									{
										int num646 = 35;
										int num647 = 109;
										int num648 = Projectile.NewProjectile(vector74.X, vector74.Y, num643, num644, num647, num646, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num648].ai[0] = 2f;
										Main.projectile[num648].timeLeft = 300;
										Main.projectile[num648].friendly = false;
										NetMessage.SendData(27, -1, -1, "", num648, 0f, 0f, 0f, 0);
										this.netUpdate = true;
									}
								}
							}
							else
							{
								if (this.velocity.Y == 0f)
								{
									if (this.localAI[2] == this.position.X)
									{
										this.direction *= -1;
										this.ai[3] = 60f;
									}
									this.localAI[2] = this.position.X;
									if (this.ai[3] == 0f)
									{
										this.TargetClosest(true);
									}
									this.ai[0] += 1f;
									if (this.ai[0] > 2f)
									{
										this.ai[0] = 0f;
										this.ai[1] += 1f;
										this.velocity.Y = -8.2f;
										this.velocity.X = this.velocity.X + (float)this.direction * num638 * 1.1f;
									}
									else
									{
										this.velocity.Y = -6f;
										this.velocity.X = this.velocity.X + (float)this.direction * num638 * 0.9f;
									}
									this.spriteDirection = this.direction;
								}
								this.velocity.X = this.velocity.X + (float)this.direction * num638 * 0.01f;
							}
							if (this.ai[3] > 0f)
							{
								this.ai[3] -= 1f;
							}
							if (this.velocity.X > num637 && this.direction > 0)
							{
								this.velocity.X = 4f;
							}
							if (this.velocity.X < -num637 && this.direction < 0)
							{
								this.velocity.X = -4f;
								return;
							}
						}
						else if (this.aiStyle == 39)
						{
							if (this.target < 0 || Main.player[this.target].dead || this.direction == 0)
							{
								this.TargetClosest(true);
							}
							bool flag46 = true;
							int num649 = 0;
							if (this.velocity.X < 0f)
							{
								num649 = -1;
							}
							if (this.velocity.X > 0f)
							{
								num649 = 1;
							}
							Vector2 vector75 = this.position;
							vector75.X += this.velocity.X;
							int num650 = (int)((vector75.X + (float)(this.width / 2) + (float)((this.width / 2 + 1) * num649)) / 16f);
							int num651 = (int)((vector75.Y + (float)this.height - 1f) / 16f);
							if ((float)(num650 * 16) < vector75.X + (float)this.width && (float)(num650 * 16 + 16) > vector75.X && ((Main.tile[num650, num651].nactive() && !Main.tile[num650, num651].topSlope() && !Main.tile[num650, num651 - 1].topSlope() && ((Main.tileSolid[(int)Main.tile[num650, num651].type] && !Main.tileSolidTop[(int)Main.tile[num650, num651].type]) || (flag46 && Main.tileSolidTop[(int)Main.tile[num650, num651].type] && (!Main.tileSolid[(int)Main.tile[num650, num651 - 1].type] || !Main.tile[num650, num651 - 1].nactive()) && Main.tile[num650, num651].type != 16 && Main.tile[num650, num651].type != 18 && Main.tile[num650, num651].type != 134))) || (Main.tile[num650, num651 - 1].halfBrick() && Main.tile[num650, num651 - 1].nactive())) && (!Main.tile[num650, num651 - 1].nactive() || !Main.tileSolid[(int)Main.tile[num650, num651 - 1].type] || Main.tileSolidTop[(int)Main.tile[num650, num651 - 1].type] || (Main.tile[num650, num651 - 1].halfBrick() && (!Main.tile[num650, num651 - 4].nactive() || !Main.tileSolid[(int)Main.tile[num650, num651 - 4].type] || Main.tileSolidTop[(int)Main.tile[num650, num651 - 4].type]))) && (!Main.tile[num650, num651 - 2].nactive() || !Main.tileSolid[(int)Main.tile[num650, num651 - 2].type] || Main.tileSolidTop[(int)Main.tile[num650, num651 - 2].type]) && (!Main.tile[num650, num651 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num650, num651 - 3].type] || Main.tileSolidTop[(int)Main.tile[num650, num651 - 3].type]) && (!Main.tile[num650 - num649, num651 - 3].nactive() || !Main.tileSolid[(int)Main.tile[num650 - num649, num651 - 3].type] || Main.tileSolidTop[(int)Main.tile[num650 - num649, num651 - 3].type]))
							{
								float num652 = (float)(num651 * 16);
								if (Main.tile[num650, num651].halfBrick())
								{
									num652 += 8f;
								}
								if (Main.tile[num650, num651 - 1].halfBrick())
								{
									num652 -= 8f;
								}
								if (num652 < vector75.Y + (float)this.height)
								{
									float num653 = vector75.Y + (float)this.height - num652;
									if ((double)num653 <= 16.1)
									{
										this.gfxOffY += this.position.Y + (float)this.height - num652;
										this.position.Y = num652 - (float)this.height;
										if (num653 < 9f)
										{
											this.stepSpeed = 0.75f;
										}
										else
										{
											this.stepSpeed = 1.5f;
										}
									}
								}
							}
							if (this.justHit)
							{
								this.ai[0] = 0f;
								this.ai[1] = 0f;
								this.TargetClosest(true);
							}
							if (this.type == 154 && Main.rand.Next(10) == 0)
							{
								int num654 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
								Main.dust[num654].noGravity = true;
								Main.dust[num654].velocity *= 0.2f;
							}
							if (this.ai[0] == 0f)
							{
								if (this.velocity.X < 0f)
								{
									this.direction = -1;
								}
								else if (this.velocity.X > 0f)
								{
									this.direction = 1;
								}
								this.spriteDirection = this.direction;
								Vector2 vector76 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num655 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector76.X;
								float num656 = Main.player[this.target].position.Y - vector76.Y;
								float num657 = (float)Math.Sqrt((double)(num655 * num655 + num656 * num656));
								bool flag47 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
								if (num657 > 200f && flag47)
								{
									this.ai[1] += 4f;
								}
								if (num657 > 600f && (flag47 || this.position.Y + (float)this.height > Main.player[this.target].position.Y - 200f))
								{
									this.ai[1] += 10f;
								}
								if (this.wet)
								{
									this.ai[1] = 1000f;
								}
								this.defense = 30;
								this.damage = 80;
								this.knockBackResist = 0.3f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 400f)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (!this.justHit && this.velocity.X != this.oldVelocity.X)
								{
									this.direction *= -1;
								}
								if (this.velocity.Y == 0f && Main.player[this.target].position.Y < this.position.Y + (float)this.height)
								{
									int num658;
									int num659;
									if (this.direction > 0)
									{
										num658 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
										num659 = num658 + 3;
									}
									else
									{
										num659 = (int)(((double)this.position.X + (double)this.width * 0.5) / 16.0);
										num658 = num659 - 3;
									}
									int num660 = (int)((this.position.Y + (float)this.height + 2f) / 16f) - 1;
									int num661 = num660 + 4;
									bool flag48 = false;
									for (int num662 = num658; num662 <= num659; num662++)
									{
										for (int num663 = num660; num663 <= num661; num663++)
										{
											if (Main.tile[num662, num663] != null && Main.tile[num662, num663].nactive() && Main.tileSolid[(int)Main.tile[num662, num663].type])
											{
												flag48 = true;
											}
										}
									}
									if (!flag48)
									{
										this.direction *= -1;
										this.velocity.X = 0.1f * (float)this.direction;
									}
								}
								if (num657 < 400f)
								{
									if (this.velocity.X < -1f || this.velocity.X > 1f)
									{
										if (this.velocity.Y == 0f)
										{
											this.velocity *= 0.8f;
											return;
										}
									}
									else if (this.velocity.X < 1f && this.direction == 1)
									{
										this.velocity.X = this.velocity.X + 0.07f;
										if (this.velocity.X > 1f)
										{
											this.velocity.X = 1f;
											return;
										}
									}
									else if (this.velocity.X > -1f && this.direction == -1)
									{
										this.velocity.X = this.velocity.X - 0.07f;
										if (this.velocity.X < -1f)
										{
											this.velocity.X = -1f;
											return;
										}
									}
								}
								else if (this.velocity.X < -1.5f || this.velocity.X > 1.5f)
								{
									if (this.velocity.Y == 0f)
									{
										this.velocity *= 0.8f;
										return;
									}
								}
								else if (this.velocity.X < 1.5f && this.direction == 1)
								{
									this.velocity.X = this.velocity.X + 0.07f;
									if (this.velocity.X > 1.5f)
									{
										this.velocity.X = 1.5f;
										return;
									}
								}
								else if (this.velocity.X > -1.5f && this.direction == -1)
								{
									this.velocity.X = this.velocity.X - 0.07f;
									if (this.velocity.X < -1.5f)
									{
										this.velocity.X = -1.5f;
										return;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.velocity.X = this.velocity.X * 0.5f;
								this.ai[1] += 1f;
								if (this.ai[1] >= 30f)
								{
									this.netUpdate = true;
									this.TargetClosest(true);
									this.ai[1] = 0f;
									this.ai[0] = 3f;
									this.ai[2] = 0f;
									return;
								}
							}
							else
							{
								if (this.ai[0] == 3f)
								{
									if (this.type == 154 && Main.rand.Next(3) < 2)
									{
										int num664 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 90, default(Color), 1.5f);
										Main.dust[num664].noGravity = true;
										Main.dust[num664].velocity *= 0.2f;
									}
									this.damage = 120;
									this.defense = 70;
									this.ai[1] += 1f;
									if (this.ai[1] == 1f)
									{
										this.netUpdate = true;
										this.TargetClosest(true);
										this.ai[2] += 0.3f;
										this.rotation += this.ai[2] * (float)this.direction;
										this.ai[1] += 1f;
										bool flag49 = Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height);
										float num665 = 10f;
										if (!flag49)
										{
											num665 = 6f;
										}
										Vector2 vector77 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num666 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector77.X;
										float num667 = Math.Abs(num666) * 0.2f;
										if (this.directionY > 0)
										{
											num667 = 0f;
										}
										float num668 = Main.player[this.target].position.Y - vector77.Y - num667;
										float num669 = (float)Math.Sqrt((double)(num666 * num666 + num668 * num668));
										this.netUpdate = true;
										num669 = num665 / num669;
										num666 *= num669;
										num668 *= num669;
										if (!flag49)
										{
											num668 = -10f;
										}
										this.velocity.X = num666;
										this.velocity.Y = num668;
										this.ai[3] = this.velocity.X;
									}
									else
									{
										if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y < Main.player[this.target].position.Y + (float)Main.player[this.target].height)
										{
											this.velocity.X = this.velocity.X * 0.8f;
											this.ai[3] = 0f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
										}
										if (this.ai[3] != 0f)
										{
											this.velocity.X = this.ai[3];
											this.velocity.Y = this.velocity.Y - 0.22f;
										}
										if (this.ai[1] >= 90f)
										{
											this.noGravity = false;
											this.ai[1] = 0f;
											this.ai[0] = 4f;
										}
									}
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.rotation += this.ai[2] * (float)this.direction;
									return;
								}
								if (this.ai[0] == 4f)
								{
									if (this.wet && this.directionY < 0)
									{
										this.velocity.Y = this.velocity.Y - 0.3f;
									}
									this.velocity.X = this.velocity.X * 0.96f;
									if (this.ai[2] > 0f)
									{
										this.ai[2] -= 0.01f;
										this.rotation += this.ai[2] * (float)this.direction;
									}
									else if (this.velocity.Y >= 0f)
									{
										this.rotation = 0f;
									}
									if (this.ai[2] <= 0f && (this.velocity.Y == 0f || this.wet))
									{
										this.netUpdate = true;
										this.rotation = 0f;
										this.ai[2] = 0f;
										this.ai[1] = 0f;
										this.ai[0] = 5f;
										return;
									}
								}
								else if (this.ai[0] == 5f)
								{
									this.rotation = 0f;
									this.velocity.X = 0f;
									this.ai[1] += 1f;
									if (this.ai[1] >= 30f)
									{
										this.TargetClosest(true);
										this.netUpdate = true;
										this.ai[1] = 0f;
										this.ai[0] = 0f;
									}
									if (this.wet)
									{
										this.ai[0] = 3f;
										this.ai[1] = 0f;
										return;
									}
								}
							}
						}
						else if (this.aiStyle == 40)
						{
							if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							float num670 = 2f;
							float num671 = 0.08f;
							Vector2 vector78 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num672 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2);
							float num673 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2);
							num672 = (float)((int)(num672 / 8f) * 8);
							num673 = (float)((int)(num673 / 8f) * 8);
							vector78.X = (float)((int)(vector78.X / 8f) * 8);
							vector78.Y = (float)((int)(vector78.Y / 8f) * 8);
							num672 -= vector78.X;
							num673 -= vector78.Y;
							float num674 = (float)Math.Sqrt((double)(num672 * num672 + num673 * num673));
							if (num674 == 0f)
							{
								num672 = this.velocity.X;
								num673 = this.velocity.Y;
							}
							else
							{
								num674 = num670 / num674;
								num672 *= num674;
								num673 *= num674;
							}
							if (Main.player[this.target].dead)
							{
								num672 = (float)this.direction * num670 / 2f;
								num673 = -num670 / 2f;
							}
							this.spriteDirection = -1;
							if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.023f;
								}
								else
								{
									this.velocity.Y = this.velocity.Y - 0.023f;
								}
								if (this.ai[0] < -100f || this.ai[0] > 100f)
								{
									this.velocity.X = this.velocity.X + 0.023f;
								}
								else
								{
									this.velocity.X = this.velocity.X - 0.023f;
								}
								if (this.ai[0] > 200f)
								{
									this.ai[0] = -200f;
								}
								this.velocity.X = this.velocity.X + num672 * 0.007f;
								this.velocity.Y = this.velocity.Y + num673 * 0.007f;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if ((double)this.velocity.X > 1.5)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if ((double)this.velocity.X < -1.5)
								{
									this.velocity.X = this.velocity.X * 0.9f;
								}
								if ((double)this.velocity.Y > 1.5)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								if ((double)this.velocity.Y < -1.5)
								{
									this.velocity.Y = this.velocity.Y * 0.9f;
								}
								if (this.velocity.X > 3f)
								{
									this.velocity.X = 3f;
								}
								if (this.velocity.X < -3f)
								{
									this.velocity.X = -3f;
								}
								if (this.velocity.Y > 3f)
								{
									this.velocity.Y = 3f;
								}
								if (this.velocity.Y < -3f)
								{
									this.velocity.Y = -3f;
								}
							}
							else
							{
								if (this.velocity.X < num672)
								{
									this.velocity.X = this.velocity.X + num671;
									if (this.velocity.X < 0f && num672 > 0f)
									{
										this.velocity.X = this.velocity.X + num671;
									}
								}
								else if (this.velocity.X > num672)
								{
									this.velocity.X = this.velocity.X - num671;
									if (this.velocity.X > 0f && num672 < 0f)
									{
										this.velocity.X = this.velocity.X - num671;
									}
								}
								if (this.velocity.Y < num673)
								{
									this.velocity.Y = this.velocity.Y + num671;
									if (this.velocity.Y < 0f && num673 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num671;
									}
								}
								else if (this.velocity.Y > num673)
								{
									this.velocity.Y = this.velocity.Y - num671;
									if (this.velocity.Y > 0f && num673 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num671;
									}
								}
								this.rotation = (float)Math.Atan2((double)num673, (double)num672);
							}
							float num675 = 0.5f;
							if (this.collideX)
							{
								this.netUpdate = true;
								this.velocity.X = this.oldVelocity.X * -num675;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.netUpdate = true;
								this.velocity.Y = this.oldVelocity.Y * -num675;
								if (this.velocity.Y > 0f && (double)this.velocity.Y < 1.5)
								{
									this.velocity.Y = 2f;
								}
								if (this.velocity.Y < 0f && (double)this.velocity.Y > -1.5)
								{
									this.velocity.Y = -2f;
								}
							}
							if (((this.velocity.X > 0f && this.oldVelocity.X < 0f) || (this.velocity.X < 0f && this.oldVelocity.X > 0f) || (this.velocity.Y > 0f && this.oldVelocity.Y < 0f) || (this.velocity.Y < 0f && this.oldVelocity.Y > 0f)) && !this.justHit)
							{
								this.netUpdate = true;
							}
							if (Main.netMode != 1)
							{
								int num676 = (int)this.center().X / 16;
								int num677 = (int)this.center().Y / 16;
								bool flag50 = false;
								for (int num678 = num676 - 1; num678 <= num676 + 1; num678++)
								{
									for (int num679 = num677 - 1; num679 <= num677 + 1; num679++)
									{
										if (Main.tile[num678, num679] == null)
										{
											return;
										}
										if (Main.tile[num678, num679].wall > 0)
										{
											flag50 = true;
										}
									}
								}
								if (!flag50)
								{
									if (this.type == 237)
									{
										this.Transform(236);
										return;
									}
									if (this.type == 238)
									{
										this.Transform(163);
										return;
									}
									if (this.type == 240)
									{
										this.Transform(239);
										return;
									}
									this.Transform(164);
									return;
								}
							}
						}
						else if (this.aiStyle == 41)
						{
							if (this.ai[2] > 1f)
							{
								this.ai[2] -= 1f;
							}
							if (this.ai[2] == 0f)
							{
								this.ai[0] = -100f;
								this.ai[2] = 1f;
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
							}
							if (this.wet && this.type != 177)
							{
								if (this.collideX)
								{
									this.direction *= -this.direction;
									this.spriteDirection = this.direction;
								}
								if (this.collideY)
								{
									this.TargetClosest(true);
									if (this.oldVelocity.Y < 0f)
									{
										this.velocity.Y = 5f;
									}
									else
									{
										this.velocity.Y = this.velocity.Y - 2f;
									}
									this.spriteDirection = this.direction;
								}
								if (this.velocity.Y > 4f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.3f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
							}
							if (this.velocity.Y == 0f)
							{
								if (this.ai[3] == this.position.X)
								{
									this.direction *= -1;
									this.ai[2] = 300f;
								}
								this.ai[3] = 0f;
								this.velocity.X = this.velocity.X * 0.8f;
								if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
								{
									this.velocity.X = 0f;
								}
								if (this.type == 177)
								{
									this.ai[0] += 2f;
								}
								else
								{
									this.ai[0] += 5f;
								}
								Vector2 vector79 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num680 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector79.X;
								float num681 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector79.Y;
								float num682 = (float)Math.Sqrt((double)(num680 * num680 + num681 * num681));
								float num683 = 400f / num682;
								if (this.type == 177)
								{
									num683 *= 5f;
								}
								else
								{
									num683 *= 10f;
								}
								if (num683 > 30f)
								{
									num683 = 30f;
								}
								this.ai[0] += (float)((int)num683);
								if (this.ai[0] >= 0f)
								{
									this.netUpdate = true;
									if (this.ai[2] == 1f)
									{
										this.TargetClosest(true);
									}
									if (this.type == 177)
									{
										if (this.ai[1] == 2f)
										{
											this.velocity.Y = -11.5f;
											this.velocity.X = this.velocity.X + 2f * (float)this.direction;
											if (num682 < 350f && num682 > 200f)
											{
												this.velocity.X = this.velocity.X + (float)this.direction;
											}
											this.ai[0] = -200f;
											this.ai[1] = 0f;
											this.ai[3] = this.position.X;
										}
										else
										{
											this.velocity.Y = -7.5f;
											this.velocity.X = this.velocity.X + (float)(4 * this.direction);
											if (num682 < 350f && num682 > 200f)
											{
												this.velocity.X = this.velocity.X + (float)this.direction;
											}
											this.ai[0] = -120f;
											this.ai[1] += 1f;
										}
									}
									else if (this.ai[1] == 3f)
									{
										this.velocity.Y = -9f;
										this.velocity.X = this.velocity.X + (float)(3 * this.direction);
										if (num682 < 350f && num682 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -200f;
										this.ai[1] = 0f;
										this.ai[3] = this.position.X;
									}
									else
									{
										this.velocity.Y = -5f;
										this.velocity.X = this.velocity.X + (float)(5 * this.direction);
										if (num682 < 350f && num682 > 200f)
										{
											this.velocity.X = this.velocity.X + (float)this.direction;
										}
										this.ai[0] = -120f;
										this.ai[1] += 1f;
									}
								}
								else if (this.ai[0] >= -30f)
								{
									this.aiAction = 1;
								}
								this.spriteDirection = this.direction;
								return;
							}
							if (this.target < 255)
							{
								if (this.type == 177)
								{
									bool flag51 = false;
									if (this.position.Y + (float)this.height < Main.player[this.target].position.Y && this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										flag51 = true;
										this.velocity.X = this.velocity.X * 0.92f;
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.9f;
											this.velocity.Y = this.velocity.Y + 0.1f;
										}
									}
									if (!flag51 && ((this.direction == 1 && this.velocity.X < 4f) || (this.direction == -1 && this.velocity.X > -4f)))
									{
										if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
										{
											this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
											return;
										}
										this.velocity.X = this.velocity.X * 0.93f;
										return;
									}
								}
								else if ((this.direction == 1 && this.velocity.X < 3f) || (this.direction == -1 && this.velocity.X > -3f))
								{
									if ((this.direction == -1 && (double)this.velocity.X < 0.1) || (this.direction == 1 && (double)this.velocity.X > -0.1))
									{
										this.velocity.X = this.velocity.X + 0.2f * (float)this.direction;
										return;
									}
									this.velocity.X = this.velocity.X * 0.93f;
									return;
								}
							}
						}
						else if (this.aiStyle == 42)
						{
							this.TargetClosest(true);
							if (this.ai[0] == 0f)
							{
								if (this.target >= 0)
								{
									Vector2 vector80 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
									float num684 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector80.X;
									float num685 = Main.player[this.target].position.Y - vector80.Y;
									float num686 = (float)Math.Sqrt((double)(num684 * num684 + num685 * num685));
									if (num686 < 200f && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
									{
										this.ai[0] = 1f;
									}
								}
								if (this.velocity.X != 0f || this.velocity.Y < 0f || this.velocity.Y > 2f || this.life != this.lifeMax)
								{
									this.ai[0] = 1f;
									return;
								}
							}
							else
							{
								this.ai[0] += 1f;
								if (this.ai[0] >= 21f)
								{
									this.ai[0] = 21f;
									this.Transform(196);
									return;
								}
							}
						}
						else if (this.aiStyle == 43)
						{
							if (this.target == -1 || Main.player[this.target].dead || !Main.player[this.target].active)
							{
								this.TargetClosest(true);
							}
							if (this.ai[0] == -1f && Main.netMode != 1)
							{
								float num687 = this.ai[1];
								int num688;
								do
								{
									num688 = Main.rand.Next(3);
									if (num688 == 1)
									{
										num688 = 2;
									}
									else if (num688 == 2)
									{
										num688 = 3;
									}
								}
								while ((float)num688 == num687);
								this.ai[0] = (float)num688;
								this.ai[1] = 0f;
								this.ai[2] = 0f;
							}
							if (this.ai[0] == 0f)
							{
								if (this.ai[1] > 4f && this.ai[1] % 2f == 0f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 0f;
									this.ai[2] = 0f;
									this.netUpdate = true;
								}
								else if (this.ai[1] % 2f == 0f)
								{
									this.TargetClosest(true);
									if (Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))) < 20f)
									{
										this.localAI[0] = 1f;
										this.ai[1] += 1f;
										this.ai[2] = 0f;
										float num689 = 12f;
										Vector2 vector81 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num690 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector81.X;
										float num691 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector81.Y;
										float num692 = (float)Math.Sqrt((double)(num690 * num690 + num691 * num691));
										num692 = num689 / num692;
										this.velocity.X = num690 * num692;
										this.velocity.Y = num691 * num692;
										this.spriteDirection = this.direction;
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									else
									{
										this.localAI[0] = 0f;
										if (this.position.Y + (float)(this.height / 2) < Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2))
										{
											this.velocity.Y = this.velocity.Y + 0.15f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.15f;
										}
										if (this.velocity.Y < -12f)
										{
											this.velocity.Y = -12f;
										}
										if (this.velocity.Y > 12f)
										{
											this.velocity.Y = 12f;
										}
										if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
										{
											this.velocity.X = this.velocity.X + 0.15f * (float)this.direction;
										}
										else if (Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) < 300f)
										{
											this.velocity.X = this.velocity.X - 0.15f * (float)this.direction;
										}
										else
										{
											this.velocity.X = this.velocity.X * 0.8f;
										}
										if (this.velocity.X < -16f)
										{
											this.velocity.X = -16f;
										}
										if (this.velocity.X > 16f)
										{
											this.velocity.X = 16f;
										}
										this.spriteDirection = this.direction;
									}
								}
								else
								{
									if (this.velocity.X < 0f)
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
									this.spriteDirection = this.direction;
									int num693 = 1;
									if (this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))
									{
										num693 = -1;
									}
									if (this.direction == num693 && Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2))) > 600f)
									{
										this.ai[2] = 1f;
									}
									if (this.ai[2] == 1f)
									{
										this.TargetClosest(true);
										this.spriteDirection = this.direction;
										this.localAI[0] = 0f;
										this.velocity *= 0.9f;
										if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
										{
											this.ai[2] = 0f;
											this.ai[1] += 1f;
										}
									}
									else
									{
										this.localAI[0] = 1f;
									}
								}
							}
							if (this.ai[0] == 2f)
							{
								this.TargetClosest(true);
								this.spriteDirection = this.direction;
								float num694 = 12f;
								float num695 = 0.07f;
								Vector2 vector82 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num696 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector82.X;
								float num697 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector82.Y;
								float num698 = (float)Math.Sqrt((double)(num696 * num696 + num697 * num697));
								if (num698 < 200f)
								{
									this.ai[0] = 1f;
									this.ai[1] = 0f;
									this.netUpdate = true;
								}
								else
								{
									num698 = num694 / num698;
									if (this.velocity.X < num696)
									{
										this.velocity.X = this.velocity.X + num695;
										if (this.velocity.X < 0f && num696 > 0f)
										{
											this.velocity.X = this.velocity.X + num695;
										}
									}
									else if (this.velocity.X > num696)
									{
										this.velocity.X = this.velocity.X - num695;
										if (this.velocity.X > 0f && num696 < 0f)
										{
											this.velocity.X = this.velocity.X - num695;
										}
									}
									if (this.velocity.Y < num697)
									{
										this.velocity.Y = this.velocity.Y + num695;
										if (this.velocity.Y < 0f && num697 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num695;
										}
									}
									else if (this.velocity.Y > num697)
									{
										this.velocity.Y = this.velocity.Y - num695;
										if (this.velocity.Y > 0f && num697 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num695;
										}
									}
								}
							}
							if (this.ai[0] == 1f)
							{
								this.localAI[0] = 0f;
								this.TargetClosest(true);
								Vector2 vector83 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
								Vector2 vector84 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num699 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
								float num700 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
								float num701 = (float)Math.Sqrt((double)(num699 * num699 + num700 * num700));
								this.ai[1] += 1f;
								bool flag52 = false;
								if (this.ai[1] > 40f)
								{
									this.ai[1] = 0f;
									this.ai[2] += 1f;
									flag52 = true;
								}
								if (Collision.CanHit(vector83, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && flag52)
								{
									Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
									if (Main.netMode != 1)
									{
										int num702 = Main.rand.Next(210, 212);
										int num703 = NPC.NewNPC((int)vector83.X, (int)vector83.Y, num702, 0);
										Main.npc[num703].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
										Main.npc[num703].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
										Main.npc[num703].localAI[0] = 60f;
										Main.npc[num703].netUpdate = true;
									}
								}
								if (num701 > 400f || !Collision.CanHit(new Vector2(vector83.X, vector83.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									float num704 = 14f;
									float num705 = 0.1f;
									vector84 = vector83;
									num699 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector84.X;
									num700 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector84.Y;
									num701 = (float)Math.Sqrt((double)(num699 * num699 + num700 * num700));
									num701 = num704 / num701;
									if (this.velocity.X < num699)
									{
										this.velocity.X = this.velocity.X + num705;
										if (this.velocity.X < 0f && num699 > 0f)
										{
											this.velocity.X = this.velocity.X + num705;
										}
									}
									else if (this.velocity.X > num699)
									{
										this.velocity.X = this.velocity.X - num705;
										if (this.velocity.X > 0f && num699 < 0f)
										{
											this.velocity.X = this.velocity.X - num705;
										}
									}
									if (this.velocity.Y < num700)
									{
										this.velocity.Y = this.velocity.Y + num705;
										if (this.velocity.Y < 0f && num700 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num705;
										}
									}
									else if (this.velocity.Y > num700)
									{
										this.velocity.Y = this.velocity.Y - num705;
										if (this.velocity.Y > 0f && num700 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num705;
										}
									}
								}
								else
								{
									this.velocity *= 0.9f;
								}
								this.spriteDirection = this.direction;
								if (this.ai[2] > 5f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 1f;
									this.netUpdate = true;
								}
							}
							if (this.ai[0] == 3f)
							{
								float num706 = 4f;
								float num707 = 0.05f;
								Vector2 vector85 = new Vector2(this.position.X + (float)(this.width / 2) + (float)(Main.rand.Next(20) * this.direction), this.position.Y + (float)this.height * 0.8f);
								Vector2 vector86 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num708 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
								float num709 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 300f - vector86.Y;
								float num710 = (float)Math.Sqrt((double)(num708 * num708 + num709 * num709));
								this.ai[1] += 1f;
								if (this.ai[1] % 40f == 39f && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(vector85, 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
									if (Main.netMode != 1)
									{
										float num711 = 8f;
										float num712 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector85.X + (float)Main.rand.Next(-80, 81);
										float num713 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector85.Y + (float)Main.rand.Next(-40, 41);
										float num714 = (float)Math.Sqrt((double)(num712 * num712 + num713 * num713));
										num714 = num711 / num714;
										num712 *= num714;
										num713 *= num714;
										int num715 = 11;
										int num716 = 55;
										int num717 = Projectile.NewProjectile(vector85.X, vector85.Y, num712, num713, num716, num715, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num717].timeLeft = 300;
									}
								}
								if (!Collision.CanHit(new Vector2(vector85.X, vector85.Y - 30f), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
								{
									num706 = 14f;
									num707 = 0.1f;
									vector86 = vector85;
									num708 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector86.X;
									num709 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector86.Y;
									num710 = (float)Math.Sqrt((double)(num708 * num708 + num709 * num709));
									num710 = num706 / num710;
									if (this.velocity.X < num708)
									{
										this.velocity.X = this.velocity.X + num707;
										if (this.velocity.X < 0f && num708 > 0f)
										{
											this.velocity.X = this.velocity.X + num707;
										}
									}
									else if (this.velocity.X > num708)
									{
										this.velocity.X = this.velocity.X - num707;
										if (this.velocity.X > 0f && num708 < 0f)
										{
											this.velocity.X = this.velocity.X - num707;
										}
									}
									if (this.velocity.Y < num709)
									{
										this.velocity.Y = this.velocity.Y + num707;
										if (this.velocity.Y < 0f && num709 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num707;
										}
									}
									else if (this.velocity.Y > num709)
									{
										this.velocity.Y = this.velocity.Y - num707;
										if (this.velocity.Y > 0f && num709 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num707;
										}
									}
								}
								else if (num710 > 100f)
								{
									this.TargetClosest(true);
									this.spriteDirection = this.direction;
									num710 = num706 / num710;
									if (this.velocity.X < num708)
									{
										this.velocity.X = this.velocity.X + num707;
										if (this.velocity.X < 0f && num708 > 0f)
										{
											this.velocity.X = this.velocity.X + num707 * 2f;
										}
									}
									else if (this.velocity.X > num708)
									{
										this.velocity.X = this.velocity.X - num707;
										if (this.velocity.X > 0f && num708 < 0f)
										{
											this.velocity.X = this.velocity.X - num707 * 2f;
										}
									}
									if (this.velocity.Y < num709)
									{
										this.velocity.Y = this.velocity.Y + num707;
										if (this.velocity.Y < 0f && num709 > 0f)
										{
											this.velocity.Y = this.velocity.Y + num707 * 2f;
										}
									}
									else if (this.velocity.Y > num709)
									{
										this.velocity.Y = this.velocity.Y - num707;
										if (this.velocity.Y > 0f && num709 < 0f)
										{
											this.velocity.Y = this.velocity.Y - num707 * 2f;
										}
									}
								}
								if (this.ai[1] > 800f)
								{
									this.ai[0] = -1f;
									this.ai[1] = 3f;
									this.netUpdate = true;
									return;
								}
							}
						}
						else if (this.aiStyle == 44)
						{
							this.noGravity = true;
							if (this.collideX)
							{
								this.velocity.X = this.oldVelocity.X * -0.5f;
								if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
								{
									this.velocity.X = 2f;
								}
								if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
								{
									this.velocity.X = -2f;
								}
							}
							if (this.collideY)
							{
								this.velocity.Y = this.oldVelocity.Y * -0.5f;
								if (this.velocity.Y > 0f && this.velocity.Y < 1f)
								{
									this.velocity.Y = 1f;
								}
								if (this.velocity.Y < 0f && this.velocity.Y > -1f)
								{
									this.velocity.Y = -1f;
								}
							}
							this.TargetClosest(true);
							float num718 = 0.05f;
							float num719 = 3f;
							float num720 = Math.Abs(this.position.X + (float)(this.width / 2) - (Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)));
							float num721 = Main.player[this.target].position.Y - (float)(this.height / 2);
							if (num720 > 30f)
							{
								if (this.direction == -1 && this.velocity.X > -num719)
								{
									this.velocity.X = this.velocity.X - num718;
									if (this.velocity.X > num719)
									{
										this.velocity.X = this.velocity.X - num718;
									}
									else if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X - num718 / 2f;
									}
									if (this.velocity.X < -num719)
									{
										this.velocity.X = -num719;
									}
								}
								else if (this.direction == 1 && this.velocity.X < num719)
								{
									this.velocity.X = this.velocity.X + num718;
									if (this.velocity.X < -num719)
									{
										this.velocity.X = this.velocity.X + num718;
									}
									else if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X + num718 / 2f;
									}
									if (this.velocity.X > num719)
									{
										this.velocity.X = num719;
									}
								}
							}
							if (num720 > 100f)
							{
								num721 -= 50f;
							}
							if (this.position.Y < num721)
							{
								this.velocity.Y = this.velocity.Y + 0.01f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y + 0.01f;
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y - 0.01f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y - 0.01f;
								}
							}
							if (this.velocity.Y < -1f)
							{
								this.velocity.Y = -1f;
							}
							if (this.velocity.Y > 1f)
							{
								this.velocity.Y = 1f;
								return;
							}
						}
						else if (this.aiStyle == 45)
						{
							NPC.golemBoss = this.whoAmI;
							if (this.localAI[0] == 0f && Main.netMode != 1)
							{
								this.localAI[0] = 1f;
								NPC.NewNPC((int)this.center().X - 84, (int)this.center().Y - 9, 247, 0);
								NPC.NewNPC((int)this.center().X + 78, (int)this.center().Y - 9, 248, 0);
								NPC.NewNPC((int)this.center().X - 3, (int)this.center().Y - 57, 246, 0);
							}
							if (this.target >= 0 && Main.player[this.target].dead)
							{
								this.TargetClosest(true);
								if (Main.player[this.target].dead)
								{
									this.noTileCollide = true;
								}
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 0f;
							}
							bool flag53 = false;
							bool flag54 = false;
							bool flag55 = false;
							this.dontTakeDamage = false;
							for (int num722 = 0; num722 < 200; num722++)
							{
								if (Main.npc[num722].active && Main.npc[num722].type == 246)
								{
									flag53 = true;
								}
								if (Main.npc[num722].active && Main.npc[num722].type == 247)
								{
									flag54 = true;
								}
								if (Main.npc[num722].active && Main.npc[num722].type == 248)
								{
									flag55 = true;
								}
							}
							this.dontTakeDamage = flag53;
							if (!flag54)
							{
								int num723 = Dust.NewDust(new Vector2(this.center().X - 80f, this.center().Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num723].alpha += Main.rand.Next(100);
								Main.dust[num723].velocity *= 0.2f;
								Dust expr_2C385_cp_0 = Main.dust[num723];
								expr_2C385_cp_0.velocity.Y = expr_2C385_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
								Main.dust[num723].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
								if (Main.rand.Next(10) == 0)
								{
									num723 = Dust.NewDust(new Vector2(this.center().X - 80f, this.center().Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
									if (Main.rand.Next(20) != 0)
									{
										Main.dust[num723].noGravity = true;
										Main.dust[num723].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
										Dust expr_2C490_cp_0 = Main.dust[num723];
										expr_2C490_cp_0.velocity.Y = expr_2C490_cp_0.velocity.Y - 1f;
									}
								}
							}
							if (!flag55)
							{
								int num724 = Dust.NewDust(new Vector2(this.center().X + 62f, this.center().Y - 9f), 8, 8, 31, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num724].alpha += Main.rand.Next(100);
								Main.dust[num724].velocity *= 0.2f;
								Dust expr_2C54D_cp_0 = Main.dust[num724];
								expr_2C54D_cp_0.velocity.Y = expr_2C54D_cp_0.velocity.Y - (0.5f + (float)Main.rand.Next(10) * 0.1f);
								Main.dust[num724].fadeIn = 0.5f + (float)Main.rand.Next(10) * 0.1f;
								if (Main.rand.Next(10) == 0)
								{
									num724 = Dust.NewDust(new Vector2(this.center().X + 62f, this.center().Y - 9f), 8, 8, 6, 0f, 0f, 0, default(Color), 1f);
									if (Main.rand.Next(20) != 0)
									{
										Main.dust[num724].noGravity = true;
										Main.dust[num724].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
										Dust expr_2C658_cp_0 = Main.dust[num724];
										expr_2C658_cp_0.velocity.Y = expr_2C658_cp_0.velocity.Y - 1f;
									}
								}
							}
							if (this.ai[0] == 0f)
							{
								this.noTileCollide = false;
								if (this.velocity.Y == 0f)
								{
									this.velocity.X = this.velocity.X * 0.8f;
									this.ai[1] += 1f;
									if (this.ai[1] > 0f)
									{
										if (!flag54)
										{
											this.ai[1] += 2f;
										}
										if (!flag55)
										{
											this.ai[1] += 2f;
										}
										if (!flag53)
										{
											this.ai[1] += 2f;
										}
										if (this.life < this.lifeMax)
										{
											this.ai[1] += 1f;
										}
										if (this.life < this.lifeMax / 2)
										{
											this.ai[1] += 4f;
										}
										if (this.life < this.lifeMax / 3)
										{
											this.ai[1] += 8f;
										}
									}
									if (this.ai[1] >= 300f)
									{
										this.ai[1] = -20f;
										this.frameCounter = 0.0;
									}
									else if (this.ai[1] == -1f)
									{
										this.TargetClosest(true);
										this.velocity.X = (float)(4 * this.direction);
										this.velocity.Y = -12.1f;
										this.ai[0] = 1f;
										this.ai[1] = 0f;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								if (this.velocity.Y == 0f)
								{
									Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
									this.ai[0] = 0f;
									for (int num725 = (int)this.position.X - 20; num725 < (int)this.position.X + this.width + 40; num725 += 20)
									{
										for (int num726 = 0; num726 < 4; num726++)
										{
											int num727 = Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y + (float)this.height), this.width + 20, 4, 31, 0f, 0f, 100, default(Color), 1.5f);
											Main.dust[num727].velocity *= 0.2f;
										}
										int num728 = Gore.NewGore(new Vector2((float)(num725 - 20), this.position.Y + (float)this.height - 8f), default(Vector2), Main.rand.Next(61, 64), 1f);
										Main.gore[num728].velocity *= 0.4f;
									}
								}
								else
								{
									this.TargetClosest(true);
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										this.velocity.Y = this.velocity.Y + 0.2f;
									}
									else
									{
										if (this.direction < 0)
										{
											this.velocity.X = this.velocity.X - 0.2f;
										}
										else if (this.direction > 0)
										{
											this.velocity.X = this.velocity.X + 0.2f;
										}
										float num729 = 3f;
										if (this.life < this.lifeMax)
										{
											num729 += 1f;
										}
										if (this.life < this.lifeMax / 2)
										{
											num729 += 1f;
										}
										if (this.life < this.lifeMax / 4)
										{
											num729 += 1f;
										}
										if (this.velocity.X < -num729)
										{
											this.velocity.X = -num729;
										}
										if (this.velocity.X > num729)
										{
											this.velocity.X = num729;
										}
									}
								}
							}
							if (this.target <= 0 || this.target == 255 || Main.player[this.target].dead)
							{
								this.TargetClosest(true);
							}
							int num730 = 3000;
							if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num730)
							{
								this.TargetClosest(true);
								if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num730)
								{
									this.active = false;
									return;
								}
							}
						}
						else if (this.aiStyle == 46)
						{
							this.noTileCollide = true;
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							float num731 = 12f;
							Vector2 vector87 = new Vector2(this.center().X, this.center().Y);
							float num732 = Main.npc[NPC.golemBoss].center().X - vector87.X;
							float num733 = Main.npc[NPC.golemBoss].center().Y - vector87.Y;
							num733 -= 57f;
							num732 -= 3f;
							float num734 = (float)Math.Sqrt((double)(num732 * num732 + num733 * num733));
							if (num734 < 20f)
							{
								this.rotation = 0f;
								this.velocity.X = num732;
								this.velocity.Y = num733;
							}
							else
							{
								num734 = num731 / num734;
								this.velocity.X = num732 * num734;
								this.velocity.Y = num733 * num734;
								this.rotation = this.velocity.X * 0.1f;
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 30f;
							}
							if (this.ai[0] == 0f)
							{
								this.ai[1] += 1f;
								int num735 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num735 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num735)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									Vector2 vector88 = new Vector2(this.center().X, this.center().Y + 10f);
									float num736 = 8f;
									float num737 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector88.X;
									float num738 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector88.Y;
									float num739 = (float)Math.Sqrt((double)(num737 * num737 + num738 * num738));
									num739 = num736 / num739;
									num737 *= num739;
									num738 *= num739;
									int num740 = 18;
									int num741 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(vector88.X, vector88.Y, num737, num738, num741, num740, 0f, Main.myPlayer, 0f, 0f);
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.TargetClosest(true);
								Vector2 vector89 = new Vector2(this.center().X, this.center().Y + 10f);
								if (Main.player[this.target].center().X < this.center().X - (float)this.width)
								{
									this.localAI[1] = -1f;
									vector89.X -= 40f;
								}
								else if (Main.player[this.target].center().X > this.center().X + (float)this.width)
								{
									this.localAI[1] = 1f;
									vector89.X += 40f;
								}
								else
								{
									this.localAI[1] = 0f;
								}
								this.ai[1] += 1f;
								if ((double)this.life < (double)this.lifeMax * 0.4)
								{
									this.ai[1] += 1f;
								}
								if ((double)this.life < (double)this.lifeMax * 0.2)
								{
									this.ai[1] += 1f;
								}
								int num742 = 300;
								if (this.ai[1] < 20f || this.ai[1] > (float)(num742 - 20))
								{
									this.localAI[0] = 1f;
								}
								else
								{
									this.localAI[0] = 0f;
								}
								if (this.ai[1] >= (float)num742)
								{
									this.TargetClosest(true);
									this.ai[1] = 0f;
									float num743 = 8f;
									float num744 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector89.X;
									float num745 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector89.Y;
									float num746 = (float)Math.Sqrt((double)(num744 * num744 + num745 * num745));
									num746 = num743 / num746;
									num744 *= num746;
									num745 *= num746;
									int num747 = 24;
									int num748 = 258;
									if (Main.netMode != 1)
									{
										Projectile.NewProjectile(vector89.X, vector89.Y, num744, num745, num748, num747, 0f, Main.myPlayer, 0f, 0f);
									}
								}
								this.ai[2] += 1f;
								if (this.life < this.lifeMax / 3)
								{
									this.ai[2] += 1f;
								}
								if (this.life < this.lifeMax / 4)
								{
									this.ai[2] += 1f;
								}
								if (this.life < this.lifeMax / 5)
								{
									this.ai[2] += 1f;
								}
								if (!Collision.CanHit(this.center(), 1, 1, Main.player[this.target].center(), 1, 1))
								{
									this.ai[2] += 4f;
								}
								if (this.ai[2] > (float)(60 + Main.rand.Next(600)))
								{
									this.ai[2] = 0f;
									int num749 = 28;
									int num750 = 259;
									if (this.localAI[1] == 0f)
									{
										for (int num751 = 0; num751 < 2; num751++)
										{
											vector89 = new Vector2(this.center().X, this.center().Y - 22f);
											if (num751 == 0)
											{
												vector89.X -= 18f;
											}
											else
											{
												vector89.X += 18f;
											}
											float num752 = 11f;
											float num753 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector89.X;
											float num754 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector89.Y;
											float num755 = (float)Math.Sqrt((double)(num753 * num753 + num754 * num754));
											num755 = num752 / num755;
											num753 *= num755;
											num754 *= num755;
											vector89.X += num753 * 3f;
											vector89.Y += num754 * 3f;
											if (Main.netMode != 1)
											{
												int num756 = Projectile.NewProjectile(vector89.X, vector89.Y, num753, num754, num750, num749, 0f, Main.myPlayer, 0f, 0f);
												Main.projectile[num756].timeLeft = 300;
											}
										}
									}
									else if (this.localAI[1] != 0f)
									{
										vector89 = new Vector2(this.center().X, this.center().Y - 22f);
										if (this.localAI[1] == -1f)
										{
											vector89.X -= 30f;
										}
										else if (this.localAI[1] == 1f)
										{
											vector89.X += 30f;
										}
										float num757 = 12f;
										float num758 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector89.X;
										float num759 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector89.Y;
										float num760 = (float)Math.Sqrt((double)(num758 * num758 + num759 * num759));
										num760 = num757 / num760;
										num758 *= num760;
										num759 *= num760;
										vector89.X += num758 * 3f;
										vector89.Y += num759 * 3f;
										if (Main.netMode != 1)
										{
											int num761 = Projectile.NewProjectile(vector89.X, vector89.Y, num758, num759, num750, num749, 0f, Main.myPlayer, 0f, 0f);
											Main.projectile[num761].timeLeft = 300;
										}
									}
								}
							}
							if (this.life < this.lifeMax / 2)
							{
								this.ai[0] = 1f;
								return;
							}
							this.ai[0] = 0f;
							return;
						}
						else if (this.aiStyle == 47)
						{
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							if (this.alpha > 0)
							{
								this.alpha -= 10;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								this.ai[1] = 0f;
							}
							if (this.ai[0] == 0f)
							{
								this.noTileCollide = true;
								float num762 = 14f;
								if (this.life < this.lifeMax / 2)
								{
									num762 += 3f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num762 += 3f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									num762 += 8f;
								}
								Vector2 vector90 = new Vector2(this.center().X, this.center().Y);
								float num763 = Main.npc[NPC.golemBoss].center().X - vector90.X;
								float num764 = Main.npc[NPC.golemBoss].center().Y - vector90.Y;
								num764 -= 9f;
								if (this.type == 247)
								{
									num763 -= 84f;
								}
								else
								{
									num763 += 78f;
								}
								float num765 = (float)Math.Sqrt((double)(num763 * num763 + num764 * num764));
								if (num765 < 12f + num762)
								{
									this.rotation = 0f;
									this.velocity.X = num763;
									this.velocity.Y = num764;
									this.ai[1] += 1f;
									if (this.life < this.lifeMax / 2)
									{
										this.ai[1] += 1f;
									}
									if (this.life < this.lifeMax / 4)
									{
										this.ai[1] += 1f;
									}
									if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
									{
										this.ai[1] += 10f;
									}
									if (this.ai[1] >= 60f)
									{
										this.TargetClosest(true);
										if ((this.type == 247 && this.center().X + 100f > Main.player[this.target].center().X) || (this.type == 248 && this.center().X - 100f < Main.player[this.target].center().X))
										{
											this.ai[1] = 0f;
											this.ai[0] = 1f;
											return;
										}
										this.ai[1] = 0f;
										return;
									}
								}
								else
								{
									num765 = num762 / num765;
									this.velocity.X = num763 * num765;
									this.velocity.Y = num764 * num765;
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									if (this.type == 247)
									{
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
										return;
									}
								}
							}
							else if (this.ai[0] == 1f)
							{
								this.noTileCollide = true;
								this.collideX = false;
								this.collideY = false;
								float num766 = 12f;
								if (this.life < this.lifeMax / 2)
								{
									num766 += 4f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num766 += 4f;
								}
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									num766 += 10f;
								}
								Vector2 vector91 = new Vector2(this.center().X, this.center().Y);
								float num767 = Main.player[this.target].center().X - vector91.X;
								float num768 = Main.player[this.target].center().Y - vector91.Y;
								float num769 = (float)Math.Sqrt((double)(num767 * num767 + num768 * num768));
								num769 = num766 / num769;
								this.velocity.X = num767 * num769;
								this.velocity.Y = num768 * num769;
								this.ai[0] = 2f;
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									return;
								}
							}
							else if (this.ai[0] == 2f)
							{
								if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
								{
									if (this.velocity.X > 0f && this.center().X > Main.player[this.target].center().X)
									{
										this.noTileCollide = false;
									}
									if (this.velocity.X < 0f && this.center().X < Main.player[this.target].center().X)
									{
										this.noTileCollide = false;
									}
								}
								else
								{
									if (this.velocity.Y > 0f && this.center().Y > Main.player[this.target].center().Y)
									{
										this.noTileCollide = false;
									}
									if (this.velocity.Y < 0f && this.center().Y < Main.player[this.target].center().Y)
									{
										this.noTileCollide = false;
									}
								}
								Vector2 vector92 = new Vector2(this.center().X, this.center().Y);
								float num770 = Main.npc[NPC.golemBoss].center().X - vector92.X;
								float num771 = Main.npc[NPC.golemBoss].center().Y - vector92.Y;
								num770 += Main.npc[NPC.golemBoss].velocity.X;
								num771 += Main.npc[NPC.golemBoss].velocity.Y;
								num771 -= 9f;
								if (this.type == 247)
								{
									num770 -= 84f;
								}
								else
								{
									num770 += 78f;
								}
								float num772 = (float)Math.Sqrt((double)(num770 * num770 + num771 * num771));
								if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax)
								{
									this.knockBackResist = 0f;
									if (num772 > 700f || this.collideX || this.collideY)
									{
										this.noTileCollide = true;
										this.ai[0] = 0f;
										return;
									}
								}
								else
								{
									bool flag56 = this.justHit;
									if (flag56)
									{
										int num773 = 0;
										while (num773 < 200)
										{
											if (Main.npc[num773].active && Main.npc[num773].type == 246)
											{
												if (Main.npc[num773].life < Main.npc[num773].lifeMax / 2)
												{
													if (this.knockBackResist == 0f)
													{
														flag56 = false;
													}
													this.knockBackResist = 0f;
													break;
												}
												break;
											}
											else
											{
												num773++;
											}
										}
									}
									if (num772 > 600f || this.collideX || this.collideY || flag56)
									{
										this.noTileCollide = true;
										this.ai[0] = 0f;
										return;
									}
								}
							}
							else if (this.ai[0] == 3f)
							{
								this.noTileCollide = true;
								float num774 = 12f;
								float num775 = 0.4f;
								Vector2 vector93 = new Vector2(this.center().X, this.center().Y);
								float num776 = Main.player[this.target].center().X - vector93.X;
								float num777 = Main.player[this.target].center().Y - vector93.Y;
								float num778 = (float)Math.Sqrt((double)(num776 * num776 + num777 * num777));
								num778 = num774 / num778;
								num776 *= num778;
								num777 *= num778;
								if (this.velocity.X < num776)
								{
									this.velocity.X = this.velocity.X + num775;
									if (this.velocity.X < 0f && num776 > 0f)
									{
										this.velocity.X = this.velocity.X + num775 * 2f;
									}
								}
								else if (this.velocity.X > num776)
								{
									this.velocity.X = this.velocity.X - num775;
									if (this.velocity.X > 0f && num776 < 0f)
									{
										this.velocity.X = this.velocity.X - num775 * 2f;
									}
								}
								if (this.velocity.Y < num777)
								{
									this.velocity.Y = this.velocity.Y + num775;
									if (this.velocity.Y < 0f && num777 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num775 * 2f;
									}
								}
								else if (this.velocity.Y > num777)
								{
									this.velocity.Y = this.velocity.Y - num775;
									if (this.velocity.Y > 0f && num777 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num775 * 2f;
									}
								}
								this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
								if (this.type == 247)
								{
									this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									return;
								}
							}
						}
						else if (this.aiStyle == 48)
						{
							bool flag57 = false;
							if (!Collision.CanHit(this.center(), 1, 1, Main.player[this.target].center(), 1, 1))
							{
								this.noTileCollide = true;
								flag57 = true;
							}
							else
							{
								this.noTileCollide = false;
							}
							if (NPC.golemBoss < 0)
							{
								this.StrikeNPC(9999, 0f, 0, false, false);
								return;
							}
							this.TargetClosest(true);
							float num779 = 7f;
							float num780 = 0.05f;
							Vector2 vector94 = new Vector2(this.center().X, this.center().Y);
							float num781 = Main.player[this.target].center().X - vector94.X;
							float num782 = Main.player[this.target].center().Y - vector94.Y - 300f;
							float num783 = (float)Math.Sqrt((double)(num781 * num781 + num782 * num782));
							num783 = num779 / num783;
							num781 *= num783;
							num782 *= num783;
							if (this.velocity.X < num781)
							{
								this.velocity.X = this.velocity.X + num780;
								if (this.velocity.X < 0f && num781 > 0f)
								{
									this.velocity.X = this.velocity.X + num780;
								}
							}
							else if (this.velocity.X > num781)
							{
								this.velocity.X = this.velocity.X - num780;
								if (this.velocity.X > 0f && num781 < 0f)
								{
									this.velocity.X = this.velocity.X - num780;
								}
							}
							if (this.velocity.Y < num782)
							{
								this.velocity.Y = this.velocity.Y + num780;
								if (this.velocity.Y < 0f && num782 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num780;
								}
							}
							else if (this.velocity.Y > num782)
							{
								this.velocity.Y = this.velocity.Y - num780;
								if (this.velocity.Y > 0f && num782 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num780;
								}
							}
							this.ai[1] += 1f;
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.8)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.6)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
							{
								this.ai[1] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
							{
								this.ai[1] += 1f;
							}
							int num784 = 360;
							if (this.ai[1] < 20f || this.ai[1] > (float)(num784 - 20))
							{
								this.localAI[0] = 1f;
							}
							else
							{
								this.localAI[0] = 0f;
							}
							if (flag57)
							{
								this.ai[1] = 20f;
							}
							if (this.ai[1] >= (float)num784)
							{
								this.TargetClosest(true);
								this.ai[1] = 0f;
								Vector2 vector95 = new Vector2(this.center().X, this.center().Y - 10f);
								float num785 = 8f;
								int num786 = 20;
								int num787 = 258;
								float num788 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector95.X;
								float num789 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector95.Y;
								float num790 = (float)Math.Sqrt((double)(num788 * num788 + num789 * num789));
								num790 = num785 / num790;
								num788 *= num790;
								num789 *= num790;
								if (Main.netMode != 1)
								{
									Projectile.NewProjectile(vector95.X, vector95.Y, num788, num789, num787, num786, 0f, Main.myPlayer, 0f, 0f);
								}
							}
							this.ai[2] += 1f;
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.25)
							{
								this.ai[2] += 1f;
							}
							if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax / 1.5)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 2)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 3)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 4)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 5)
							{
								this.ai[2] += 1f;
							}
							if (Main.npc[NPC.golemBoss].life < Main.npc[NPC.golemBoss].lifeMax / 6)
							{
								this.ai[2] += 1f;
							}
							if (!Collision.CanHit(Main.npc[NPC.golemBoss].center(), 1, 1, Main.player[this.target].center(), 1, 1))
							{
								this.ai[2] += 4f;
							}
							if (this.ai[2] > (float)(100 + Main.rand.Next(4800)))
							{
								this.ai[2] = 0f;
								for (int num791 = 0; num791 < 2; num791++)
								{
									Vector2 vector96 = new Vector2(this.center().X, this.center().Y - 50f);
									if (num791 == 0)
									{
										vector96.X -= 14f;
									}
									else if (num791 == 1)
									{
										vector96.X += 14f;
									}
									float num792 = 11f;
									int num793 = 24;
									int num794 = 259;
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.5)
									{
										num793++;
										num792 += 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.4)
									{
										num793++;
										num792 += 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.3)
									{
										num793++;
										num792 += 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.2)
									{
										num793++;
										num792 += 0.25f;
									}
									if ((double)Main.npc[NPC.golemBoss].life < (double)Main.npc[NPC.golemBoss].lifeMax * 0.1)
									{
										num793++;
										num792 += 0.25f;
									}
									float num795 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector96.X;
									float num796 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector96.Y;
									float num797 = (float)Math.Sqrt((double)(num795 * num795 + num796 * num796));
									num797 = num792 / num797;
									num795 *= num797;
									num796 *= num797;
									vector96.X += num795 * 3f;
									vector96.Y += num796 * 3f;
									if (Main.netMode != 1)
									{
										int num798 = Projectile.NewProjectile(vector96.X, vector96.Y, num795, num796, num794, num793, 0f, Main.myPlayer, 0f, 0f);
										Main.projectile[num798].timeLeft = 300;
									}
								}
								return;
							}
						}
						else if (this.aiStyle == 49)
						{
							this.noGravity = true;
							this.TargetClosest(true);
							float num799 = 4f;
							float num800 = 0.25f;
							Vector2 vector97 = new Vector2(this.center().X, this.center().Y);
							float num801 = Main.player[this.target].center().X - vector97.X;
							float num802 = Main.player[this.target].center().Y - vector97.Y - 200f;
							float num803 = (float)Math.Sqrt((double)(num801 * num801 + num802 * num802));
							if (num803 < 20f)
							{
								num801 = this.velocity.X;
								num802 = this.velocity.Y;
							}
							else
							{
								num803 = num799 / num803;
								num801 *= num803;
								num802 *= num803;
							}
							if (this.velocity.X < num801)
							{
								this.velocity.X = this.velocity.X + num800;
								if (this.velocity.X < 0f && num801 > 0f)
								{
									this.velocity.X = this.velocity.X + num800 * 2f;
								}
							}
							else if (this.velocity.X > num801)
							{
								this.velocity.X = this.velocity.X - num800;
								if (this.velocity.X > 0f && num801 < 0f)
								{
									this.velocity.X = this.velocity.X - num800 * 2f;
								}
							}
							if (this.velocity.Y < num802)
							{
								this.velocity.Y = this.velocity.Y + num800;
								if (this.velocity.Y < 0f && num802 > 0f)
								{
									this.velocity.Y = this.velocity.Y + num800 * 2f;
								}
							}
							else if (this.velocity.Y > num802)
							{
								this.velocity.Y = this.velocity.Y - num800;
								if (this.velocity.Y > 0f && num802 < 0f)
								{
									this.velocity.Y = this.velocity.Y - num800 * 2f;
								}
							}
							if (this.position.X + (float)this.width > Main.player[this.target].position.X && this.position.X < Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height) && Main.netMode != 1)
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 8f)
								{
									this.ai[0] = 0f;
									int num804 = (int)(this.position.X + 10f + (float)Main.rand.Next(this.width - 20));
									int num805 = (int)(this.position.Y + (float)this.height + 4f);
									Projectile.NewProjectile((float)num804, (float)num805, 0f, 5f, 264, 20, 0f, Main.myPlayer, 0f, 0f);
									return;
								}
							}
						}
						else
						{
							if (this.aiStyle == 50)
							{
								if (this.timeLeft > 5)
								{
									this.timeLeft = 5;
								}
								this.noTileCollide = true;
								this.velocity.Y = this.velocity.Y + 0.02f;
								if (this.velocity.Y < 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.99f;
								}
								if (this.velocity.Y > 1f)
								{
									this.velocity.Y = 1f;
								}
								this.TargetClosest(true);
								if (this.position.X + (float)this.width < Main.player[this.target].position.X)
								{
									if (this.velocity.X < 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X + 0.1f;
								}
								else if (this.position.X > Main.player[this.target].position.X + (float)Main.player[this.target].width)
								{
									if (this.velocity.X > 0f)
									{
										this.velocity.X = this.velocity.X * 0.98f;
									}
									this.velocity.X = this.velocity.X - 0.1f;
								}
								if (this.velocity.X > 5f || this.velocity.X < -5f)
								{
									this.velocity.X = this.velocity.X * 0.97f;
								}
								this.rotation = this.velocity.X * 0.2f;
								return;
							}
							if (this.aiStyle == 51)
							{
								bool flag58 = false;
								bool flag59 = false;
								this.TargetClosest(true);
								if (Main.player[this.target].dead)
								{
									flag59 = true;
									flag58 = true;
								}
								if (Main.netMode != 1)
								{
									int num806 = 6000;
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num806)
									{
										this.active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
										}
									}
								}
								NPC.plantBoss = this.whoAmI;
								if (this.localAI[0] == 0f && Main.netMode != 1)
								{
									this.localAI[0] = 1f;
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
									NPC.NewNPC((int)this.center().X, (int)this.center().Y, 263, this.whoAmI);
								}
								int[] array = new int[3];
								float num807 = 0f;
								float num808 = 0f;
								int num809 = 0;
								for (int num810 = 0; num810 < 200; num810++)
								{
									if (Main.npc[num810].active && Main.npc[num810].aiStyle == 52)
									{
										num807 += Main.npc[num810].center().X;
										num808 += Main.npc[num810].center().Y;
										array[num809] = num810;
										num809++;
										if (num809 > 2)
										{
											break;
										}
									}
								}
								num807 /= (float)num809;
								num808 /= (float)num809;
								float num811 = 2.5f;
								float num812 = 0.025f;
								if (this.life < this.lifeMax / 2)
								{
									num811 = 5f;
									num812 = 0.05f;
								}
								if (this.life < this.lifeMax / 4)
								{
									num811 = 7f;
								}
								if (!Main.player[this.target].zoneJungle || (double)Main.player[this.target].position.Y < Main.worldSurface * 16.0 || Main.player[this.target].position.Y > (float)((Main.maxTilesY - 200) * 16))
								{
									flag58 = true;
									num811 += 8f;
									num812 = 0.15f;
								}
								Vector2 vector98 = new Vector2(num807, num808);
								float num813 = Main.player[this.target].center().X - vector98.X;
								float num814 = Main.player[this.target].center().Y - vector98.Y;
								if (flag59)
								{
									num814 *= -1f;
									num813 *= -1f;
									num811 += 8f;
								}
								float num815 = (float)Math.Sqrt((double)(num813 * num813 + num814 * num814));
								int num816 = 500;
								if (flag58)
								{
									num816 += 350;
								}
								if (num815 >= (float)num816)
								{
									num815 = (float)num816 / num815;
									num813 *= num815;
									num814 *= num815;
								}
								num807 += num813;
								num808 += num814;
								vector98 = new Vector2(this.center().X, this.center().Y);
								num813 = num807 - vector98.X;
								num814 = num808 - vector98.Y;
								num815 = (float)Math.Sqrt((double)(num813 * num813 + num814 * num814));
								if (num815 < num811)
								{
									num813 = this.velocity.X;
									num814 = this.velocity.Y;
								}
								else
								{
									num815 = num811 / num815;
									num813 *= num815;
									num814 *= num815;
								}
								if (this.velocity.X < num813)
								{
									this.velocity.X = this.velocity.X + num812;
									if (this.velocity.X < 0f && num813 > 0f)
									{
										this.velocity.X = this.velocity.X + num812 * 2f;
									}
								}
								else if (this.velocity.X > num813)
								{
									this.velocity.X = this.velocity.X - num812;
									if (this.velocity.X > 0f && num813 < 0f)
									{
										this.velocity.X = this.velocity.X - num812 * 2f;
									}
								}
								if (this.velocity.Y < num814)
								{
									this.velocity.Y = this.velocity.Y + num812;
									if (this.velocity.Y < 0f && num814 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num812 * 2f;
									}
								}
								else if (this.velocity.Y > num814)
								{
									this.velocity.Y = this.velocity.Y - num812;
									if (this.velocity.Y > 0f && num814 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num812 * 2f;
									}
								}
								Vector2 vector99 = new Vector2(this.center().X, this.center().Y);
								float num817 = Main.player[this.target].center().X - vector99.X;
								float num818 = Main.player[this.target].center().Y - vector99.Y;
								this.rotation = (float)Math.Atan2((double)num818, (double)num817) + 1.57f;
								if (this.life > this.lifeMax / 2)
								{
									this.defense = 36;
									this.damage = 50;
									if (flag58)
									{
										this.defense *= 2;
										this.damage *= 2;
									}
									if (Main.netMode != 1)
									{
										this.localAI[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.9)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.8)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.7)
										{
											this.localAI[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.6)
										{
											this.localAI[1] += 1f;
										}
										if (flag58)
										{
											this.localAI[1] += 3f;
										}
										if (this.localAI[1] > 80f)
										{
											this.localAI[1] = 0f;
											if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
											{
												Vector2 vector100 = new Vector2(this.center().X, this.center().Y);
												float num819 = 15f;
												float num820 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector100.X;
												float num821 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector100.Y;
												float num822 = (float)Math.Sqrt((double)(num820 * num820 + num821 * num821));
												num822 = num819 / num822;
												num820 *= num822;
												num821 *= num822;
												int num823 = 22;
												int num824 = 275;
												if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(4) == 0)
												{
													num823 = 27;
													this.localAI[1] = -30f;
													num824 = 276;
												}
												else if ((double)this.life < (double)this.lifeMax * 0.8 && Main.rand.Next(8) == 0)
												{
													num823 = 31;
													this.localAI[1] = -120f;
													num824 = 277;
												}
												if (flag58)
												{
													num823 *= 2;
												}
												vector100.X += num820 * 3f;
												vector100.Y += num821 * 3f;
												int num825 = Projectile.NewProjectile(vector100.X, vector100.Y, num820, num821, num824, num823, 0f, Main.myPlayer, 0f, 0f);
												if (num824 != 277)
												{
													Main.projectile[num825].timeLeft = 300;
													return;
												}
											}
										}
									}
								}
								else
								{
									this.defense = 10;
									this.damage = 70;
									if (flag58)
									{
										this.defense *= 4;
										this.damage *= 2;
									}
									if (this.localAI[0] == 1f && Main.netMode != 1)
									{
										this.localAI[0] = 2f;
										for (int num826 = 0; num826 < 8; num826++)
										{
											NPC.NewNPC((int)this.center().X, (int)this.center().Y, 264, this.whoAmI);
										}
									}
									if (this.localAI[2] == 0f)
									{
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 378, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 379, this.scale);
										Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 380, this.scale);
										this.localAI[2] = 1f;
									}
									this.localAI[1] += 1f;
									if ((double)this.life < (double)this.lifeMax * 0.4)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.3)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.2)
									{
										this.localAI[1] += 1f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.1)
									{
										this.localAI[1] += 1f;
									}
									if (this.localAI[1] >= 350f)
									{
										float num827 = 8f;
										Vector2 vector101 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num828 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector101.X + (float)Main.rand.Next(-10, 11);
										float num829 = Math.Abs(num828 * 0.2f);
										float num830 = Main.player[this.target].position.Y + (float)Main.player[this.target].height * 0.5f - vector101.Y + (float)Main.rand.Next(-10, 11);
										if (num830 > 0f)
										{
											num829 = 0f;
										}
										num830 -= num829;
										float num831 = (float)Math.Sqrt((double)(num828 * num828 + num830 * num830));
										num831 = num827 / num831;
										num828 *= num831;
										num830 *= num831;
										int num832 = NPC.NewNPC((int)this.center().X, (int)this.center().Y, 265, 0);
										Main.npc[num832].velocity.X = num828;
										Main.npc[num832].velocity.Y = num830;
										Main.npc[num832].netUpdate = true;
										this.localAI[1] = 0f;
										return;
									}
								}
							}
							else if (this.aiStyle == 52)
							{
								bool flag60 = false;
								bool flag61 = false;
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPC(9999, 0f, 0, false, false);
									this.netUpdate = true;
									return;
								}
								if (Main.player[Main.npc[NPC.plantBoss].target].dead)
								{
									flag61 = true;
								}
								if ((NPC.plantBoss != -1 && !Main.player[Main.npc[NPC.plantBoss].target].zoneJungle) || (double)Main.player[Main.npc[NPC.plantBoss].target].position.Y < Main.worldSurface * 16.0 || Main.player[Main.npc[NPC.plantBoss].target].position.Y > (float)((Main.maxTilesY - 200) * 16) || flag61)
								{
									this.localAI[0] -= 4f;
									flag60 = true;
								}
								if (Main.netMode == 1)
								{
									if (this.ai[0] == 0f)
									{
										this.ai[0] = (float)((int)(this.center().X / 16f));
									}
									if (this.ai[1] == 0f)
									{
										this.ai[1] = (float)((int)(this.center().X / 16f));
									}
								}
								if (Main.netMode != 1)
								{
									if (this.ai[0] == 0f || this.ai[1] == 0f)
									{
										this.localAI[0] = 0f;
									}
									this.localAI[0] -= 1f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										this.localAI[0] -= 2f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										this.localAI[0] -= 2f;
									}
									if (flag60)
									{
										this.localAI[0] -= 6f;
									}
									if (!flag61 && this.localAI[0] <= 0f && this.ai[0] != 0f)
									{
										for (int num833 = 0; num833 < 200; num833++)
										{
											if (num833 != this.whoAmI && Main.npc[num833].active && Main.npc[num833].type == this.type && (Main.npc[num833].velocity.X != 0f || Main.npc[num833].velocity.Y != 0f))
											{
												this.localAI[0] = (float)Main.rand.Next(60, 300);
											}
										}
									}
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(300, 600);
										bool flag62 = false;
										int num834 = 0;
										while (!flag62 && num834 <= 1000)
										{
											num834++;
											int num835 = (int)(Main.player[Main.npc[NPC.plantBoss].target].center().X / 16f);
											int num836 = (int)(Main.player[Main.npc[NPC.plantBoss].target].center().Y / 16f);
											if (this.ai[0] == 0f)
											{
												num835 = (int)((Main.player[Main.npc[NPC.plantBoss].target].center().X + Main.npc[NPC.plantBoss].center().X) / 32f);
												num836 = (int)((Main.player[Main.npc[NPC.plantBoss].target].center().Y + Main.npc[NPC.plantBoss].center().Y) / 32f);
											}
											if (flag61)
											{
												num835 = (int)Main.npc[NPC.plantBoss].position.X / 16;
												num836 = (int)(Main.npc[NPC.plantBoss].position.Y + 400f) / 16;
											}
											int num837 = 20;
											num837 += (int)(100f * ((float)num834 / 1000f));
											int num838 = num835 + Main.rand.Next(-num837, num837 + 1);
											int num839 = num836 + Main.rand.Next(-num837, num837 + 1);
											if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2 && Main.rand.Next(6) == 0)
											{
												this.TargetClosest(true);
												int num840 = (int)(Main.player[this.target].center().X / 16f);
												int num841 = (int)(Main.player[this.target].center().Y / 16f);
												if (Main.tile[num840, num841].wall > 0)
												{
													num838 = num840;
													num839 = num841;
												}
											}
											try
											{
												if (WorldGen.SolidTile(num838, num839) || (Main.tile[num838, num839].wall > 0 && (num834 > 500 || Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)))
												{
													flag62 = true;
													this.ai[0] = (float)num838;
													this.ai[1] = (float)num839;
													this.netUpdate = true;
												}
											}
											catch
											{
											}
										}
									}
								}
								if (this.ai[0] > 0f && this.ai[1] > 0f)
								{
									float num842 = 6f;
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 2)
									{
										num842 = 8f;
									}
									if (Main.npc[NPC.plantBoss].life < Main.npc[NPC.plantBoss].lifeMax / 4)
									{
										num842 = 10f;
									}
									if (flag60)
									{
										num842 *= 2f;
									}
									if (flag61)
									{
										num842 *= 2f;
									}
									Vector2 vector102 = new Vector2(this.center().X, this.center().Y);
									float num843 = this.ai[0] * 16f - 8f - vector102.X;
									float num844 = this.ai[1] * 16f - 8f - vector102.Y;
									float num845 = (float)Math.Sqrt((double)(num843 * num843 + num844 * num844));
									if (num845 < 12f + num842)
									{
										this.velocity.X = num843;
										this.velocity.Y = num844;
									}
									else
									{
										num845 = num842 / num845;
										this.velocity.X = num843 * num845;
										this.velocity.Y = num844 * num845;
									}
									Vector2 vector103 = new Vector2(this.center().X, this.center().Y);
									float num846 = Main.npc[NPC.plantBoss].center().X - vector103.X;
									float num847 = Main.npc[NPC.plantBoss].center().Y - vector103.Y;
									this.rotation = (float)Math.Atan2((double)num847, (double)num846) - 1.57f;
									return;
								}
							}
							else if (this.aiStyle == 53)
							{
								if (NPC.plantBoss < 0)
								{
									this.StrikeNPC(9999, 0f, 0, false, false);
									this.netUpdate = true;
									return;
								}
								int num848 = NPC.plantBoss;
								if (Main.netMode != 1)
								{
									this.localAI[0] -= 1f;
									if (this.localAI[0] <= 0f)
									{
										this.localAI[0] = (float)Main.rand.Next(120, 480);
										this.ai[0] = (float)Main.rand.Next(-100, 101);
										this.ai[1] = (float)Main.rand.Next(-100, 101);
										this.netUpdate = true;
									}
								}
								this.TargetClosest(true);
								float num849 = 0.2f;
								float num850 = 200f;
								if ((double)Main.npc[num848].life < (double)Main.npc[num848].lifeMax * 0.25)
								{
									num850 += 100f;
								}
								if ((double)Main.npc[num848].life < (double)Main.npc[num848].lifeMax * 0.1)
								{
									num850 += 100f;
								}
								if (!Main.npc[num848].active || NPC.plantBoss < 0)
								{
									this.active = false;
									return;
								}
								float num851 = Main.npc[num848].position.X + (float)(Main.npc[num848].width / 2);
								float num852 = Main.npc[num848].position.Y + (float)(Main.npc[num848].height / 2);
								Vector2 vector104 = new Vector2(num851, num852);
								float num853 = num851 + this.ai[0];
								float num854 = num852 + this.ai[1];
								float num855 = num853 - vector104.X;
								float num856 = num854 - vector104.Y;
								float num857 = (float)Math.Sqrt((double)(num855 * num855 + num856 * num856));
								num857 = num850 / num857;
								num855 *= num857;
								num856 *= num857;
								if (this.position.X < num851 + num855)
								{
									this.velocity.X = this.velocity.X + num849;
									if (this.velocity.X < 0f && num855 > 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								else if (this.position.X > num851 + num855)
								{
									this.velocity.X = this.velocity.X - num849;
									if (this.velocity.X > 0f && num855 < 0f)
									{
										this.velocity.X = this.velocity.X * 0.9f;
									}
								}
								if (this.position.Y < num852 + num856)
								{
									this.velocity.Y = this.velocity.Y + num849;
									if (this.velocity.Y < 0f && num856 > 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								else if (this.position.Y > num852 + num856)
								{
									this.velocity.Y = this.velocity.Y - num849;
									if (this.velocity.Y > 0f && num856 < 0f)
									{
										this.velocity.Y = this.velocity.Y * 0.9f;
									}
								}
								if (this.velocity.X > 8f)
								{
									this.velocity.X = 8f;
								}
								if (this.velocity.X < -8f)
								{
									this.velocity.X = -8f;
								}
								if (this.velocity.Y > 8f)
								{
									this.velocity.Y = 8f;
								}
								if (this.velocity.Y < -8f)
								{
									this.velocity.Y = -8f;
								}
								if (num855 > 0f)
								{
									this.spriteDirection = 1;
									this.rotation = (float)Math.Atan2((double)num856, (double)num855);
								}
								if (num855 < 0f)
								{
									this.spriteDirection = -1;
									this.rotation = (float)Math.Atan2((double)num856, (double)num855) + 3.14f;
									return;
								}
							}
							else if (this.aiStyle == 54)
							{
								NPC.crimsonBoss = this.whoAmI;
								if (Main.netMode != 1 && this.localAI[0] == 0f)
								{
									this.localAI[0] = 1f;
									for (int num858 = 0; num858 < 20; num858++)
									{
										float num859 = this.center().X;
										float num860 = this.center().Y;
										num859 += (float)Main.rand.Next(-this.width, this.width);
										num860 += (float)Main.rand.Next(-this.height, this.height);
										int num861 = NPC.NewNPC((int)num859, (int)num860, 267, 0);
										Main.npc[num861].velocity = new Vector2((float)Main.rand.Next(-30, 31) * 0.1f, (float)Main.rand.Next(-30, 31) * 0.1f);
										Main.npc[num861].netUpdate = true;
									}
								}
								if (Main.netMode != 1)
								{
									this.TargetClosest(true);
									int num862 = 6000;
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) + Math.Abs(this.center().Y - Main.player[this.target].center().Y) > (float)num862)
									{
										this.active = false;
										this.life = 0;
										if (Main.netMode == 2)
										{
											NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
										}
									}
								}
								if (this.ai[0] < 0f)
								{
									if (this.localAI[2] == 0f)
									{
										Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
										this.localAI[2] = 1f;
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 392, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 393, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 394, 1f);
										Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 395, 1f);
										for (int num863 = 0; num863 < 20; num863++)
										{
											Dust.NewDust(this.position, this.width, this.height, 5, (float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f, 0, default(Color), 1f);
										}
										Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
									}
									this.dontTakeDamage = false;
									this.knockBackResist = 0.5f;
									this.TargetClosest(true);
									Vector2 vector105 = new Vector2(this.center().X, this.center().Y);
									float num864 = Main.player[this.target].center().X - vector105.X;
									float num865 = Main.player[this.target].center().Y - vector105.Y;
									float num866 = (float)Math.Sqrt((double)(num864 * num864 + num865 * num865));
									float num867 = 8f;
									num866 = num867 / num866;
									num864 *= num866;
									num865 *= num866;
									this.velocity.X = (this.velocity.X * 50f + num864) / 51f;
									this.velocity.Y = (this.velocity.Y * 50f + num865) / 51f;
									if (this.ai[0] == -1f)
									{
										if (Main.netMode != 1)
										{
											this.localAI[1] += 1f;
											if (this.localAI[1] >= (float)(60 + Main.rand.Next(120)))
											{
												this.localAI[1] = 0f;
												this.TargetClosest(true);
												int num868 = 0;
												int num869;
												int num870;
												while (true)
												{
													num868++;
													num869 = (int)Main.player[this.target].center().X / 16;
													num870 = (int)Main.player[this.target].center().Y / 16;
													if (Main.rand.Next(2) == 0)
													{
														num869 += Main.rand.Next(7, 13);
													}
													else
													{
														num869 -= Main.rand.Next(7, 13);
													}
													if (Main.rand.Next(2) == 0)
													{
														num870 += Main.rand.Next(7, 13);
													}
													else
													{
														num870 -= Main.rand.Next(7, 13);
													}
													if (!WorldGen.SolidTile(num869, num870))
													{
														break;
													}
													if (num868 > 100)
													{
														return;
													}
												}
												this.ai[0] = -2f;
												this.ai[1] = (float)num869;
												this.ai[2] = (float)num870;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.ai[0] == -2f)
									{
										this.velocity *= 0.9f;
										this.alpha += 25;
										if (this.alpha >= 255)
										{
											this.alpha = 255;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											Main.PlaySound(2, (int)this.center().X, (int)this.center().Y, 8);
											this.ai[0] = -3f;
											return;
										}
									}
									else if (this.ai[0] == -3f)
									{
										this.alpha -= 25;
										if (this.alpha <= 0)
										{
											this.alpha = 0;
											this.ai[0] = -1f;
											return;
										}
									}
								}
								else
								{
									this.TargetClosest(true);
									Vector2 vector106 = new Vector2(this.center().X, this.center().Y);
									float num871 = Main.player[this.target].center().X - vector106.X;
									float num872 = Main.player[this.target].center().Y - vector106.Y;
									float num873 = (float)Math.Sqrt((double)(num871 * num871 + num872 * num872));
									float num874 = 1f;
									if (num873 < num874)
									{
										this.velocity.X = num871;
										this.velocity.Y = num872;
									}
									else
									{
										num873 = num874 / num873;
										this.velocity.X = num871 * num873;
										this.velocity.Y = num872 * num873;
									}
									if (this.ai[0] == 0f)
									{
										if (Main.netMode != 1)
										{
											int num875 = 0;
											for (int num876 = 0; num876 < 200; num876++)
											{
												if (Main.npc[num876].active && Main.npc[num876].type == 267)
												{
													num875++;
												}
											}
											if (num875 == 0)
											{
												this.ai[0] = -1f;
												this.localAI[1] = 0f;
												this.alpha = 0;
												this.netUpdate = true;
											}
											this.localAI[1] += 1f;
											if (this.localAI[1] >= (float)(120 + Main.rand.Next(300)))
											{
												this.localAI[1] = 0f;
												this.TargetClosest(true);
												int num877 = 0;
												int num878;
												int num879;
												while (true)
												{
													num877++;
													num878 = (int)Main.player[this.target].center().X / 16;
													num879 = (int)Main.player[this.target].center().Y / 16;
													num878 += Main.rand.Next(-50, 51);
													num879 += Main.rand.Next(-50, 51);
													if (!WorldGen.SolidTile(num878, num879) && Collision.CanHit(new Vector2((float)(num878 * 16), (float)(num879 * 16)), 1, 1, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
													{
														break;
													}
													if (num877 > 100)
													{
														return;
													}
												}
												this.ai[0] = 1f;
												this.ai[1] = (float)num878;
												this.ai[2] = (float)num879;
												this.netUpdate = true;
												return;
											}
										}
									}
									else if (this.ai[0] == 1f)
									{
										this.alpha += 5;
										if (this.alpha >= 255)
										{
											Main.PlaySound(2, (int)this.center().X, (int)this.center().Y, 8);
											this.alpha = 255;
											this.position.X = this.ai[1] * 16f - (float)(this.width / 2);
											this.position.Y = this.ai[2] * 16f - (float)(this.height / 2);
											this.ai[0] = 2f;
											return;
										}
									}
									else if (this.ai[0] == 2f)
									{
										this.alpha -= 5;
										if (this.alpha <= 0)
										{
											this.alpha = 0;
											this.ai[0] = 0f;
											return;
										}
									}
								}
							}
							else if (this.aiStyle == 55)
							{
								if (NPC.crimsonBoss < 0)
								{
									this.active = false;
									this.netUpdate = true;
									return;
								}
								if (this.ai[0] == 0f)
								{
									Vector2 vector107 = new Vector2(this.center().X, this.center().Y);
									float num880 = Main.npc[NPC.crimsonBoss].center().X - vector107.X;
									float num881 = Main.npc[NPC.crimsonBoss].center().Y - vector107.Y;
									float num882 = (float)Math.Sqrt((double)(num880 * num880 + num881 * num881));
									if (num882 > 90f)
									{
										num882 = 8f / num882;
										num880 *= num882;
										num881 *= num882;
										this.velocity.X = (this.velocity.X * 15f + num880) / 16f;
										this.velocity.Y = (this.velocity.Y * 15f + num881) / 16f;
										return;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 8f)
									{
										this.velocity.Y = this.velocity.Y * 1.05f;
										this.velocity.X = this.velocity.X * 1.05f;
									}
									if (Main.netMode != 1 && Main.rand.Next(200) == 0)
									{
										this.TargetClosest(true);
										vector107 = new Vector2(this.center().X, this.center().Y);
										num880 = Main.player[this.target].center().X - vector107.X;
										num881 = Main.player[this.target].center().Y - vector107.Y;
										num882 = (float)Math.Sqrt((double)(num880 * num880 + num881 * num881));
										num882 = 8f / num882;
										this.velocity.X = num880 * num882;
										this.velocity.Y = num881 * num882;
										this.ai[0] = 1f;
										this.netUpdate = true;
										return;
									}
								}
								else
								{
									Vector2 vector108 = new Vector2(this.center().X, this.center().Y);
									float num883 = Main.npc[NPC.crimsonBoss].center().X - vector108.X;
									float num884 = Main.npc[NPC.crimsonBoss].center().Y - vector108.Y;
									float num885 = (float)Math.Sqrt((double)(num883 * num883 + num884 * num884));
									if (num885 > 700f || this.justHit)
									{
										this.ai[0] = 0f;
										return;
									}
								}
							}
							else
							{
								if (this.aiStyle == 56)
								{
									this.TargetClosest(true);
									Vector2 vector109 = new Vector2(this.center().X, this.center().Y);
									float num886 = Main.player[this.target].center().X - vector109.X;
									float num887 = Main.player[this.target].center().Y - vector109.Y;
									float num888 = (float)Math.Sqrt((double)(num886 * num886 + num887 * num887));
									float num889 = 12f;
									num888 = num889 / num888;
									num886 *= num888;
									num887 *= num888;
									this.velocity.X = (this.velocity.X * 100f + num886) / 101f;
									this.velocity.Y = (this.velocity.Y * 100f + num887) / 101f;
									this.rotation = (float)Math.Atan2((double)num887, (double)num886) - 1.57f;
									int num890 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 0, default(Color), 1f);
									Main.dust[num890].velocity *= 0.1f;
									Main.dust[num890].scale = 1.3f;
									Main.dust[num890].noGravity = true;
									return;
								}
								if (this.aiStyle == 57)
								{
									float num891 = 2f;
									this.noGravity = true;
									this.noTileCollide = true;
									if (!Main.dayTime)
									{
										this.TargetClosest(true);
									}
									bool flag63 = false;
									if ((double)this.life < (double)this.lifeMax * 0.75)
									{
										num891 = 3f;
									}
									if ((double)this.life < (double)this.lifeMax * 0.5)
									{
										num891 = 4f;
									}
									if (Main.dayTime)
									{
										if (this.timeLeft > 10)
										{
											this.timeLeft = 10;
										}
										num891 = 8f;
									}
									else if (this.ai[0] == 0f)
									{
										this.ai[1] += 1f;
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											this.ai[1] += 1f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											this.ai[1] += 1f;
										}
										if (this.ai[1] >= 300f && Main.netMode != 1)
										{
											this.ai[1] = 0f;
											if ((double)this.life < (double)this.lifeMax * 0.25 && this.type != 344)
											{
												this.ai[0] = (float)Main.rand.Next(3, 5);
											}
											else
											{
												this.ai[0] = (float)Main.rand.Next(1, 3);
											}
											this.netUpdate = true;
										}
									}
									else if (this.ai[0] == 1f)
									{
										if (this.type == 344)
										{
											flag63 = true;
											this.ai[1] += 1f;
											if (this.ai[1] % 5f == 0f)
											{
												Vector2 vector110 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 20f + (float)Main.rand.Next(this.height - 40));
												float num892 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector110.X;
												float num893 = Main.player[this.target].position.Y - vector110.Y;
												num892 += (float)Main.rand.Next(-50, 51);
												num893 += (float)Main.rand.Next(-50, 51);
												num893 -= Math.Abs(num892) * ((float)Main.rand.Next(0, 21) * 0.01f);
												float num894 = (float)Math.Sqrt((double)(num892 * num892 + num893 * num893));
												float num895 = 12.5f;
												num894 = num895 / num894;
												num892 *= num894;
												num893 *= num894;
												num892 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
												num893 *= 1f + (float)Main.rand.Next(-20, 21) * 0.02f;
												Projectile.NewProjectile(vector110.X, vector110.Y, num892, num893, 345, 43, 0f, Main.myPlayer, (float)Main.rand.Next(0, 31), 0f);
											}
											if (this.ai[1] >= 180f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
										else
										{
											flag63 = true;
											this.ai[1] += 1f;
											if (this.ai[1] % 15f == 0f)
											{
												Vector2 vector111 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float num896 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector111.X;
												float num897 = Main.player[this.target].position.Y - vector111.Y;
												float num898 = (float)Math.Sqrt((double)(num896 * num896 + num897 * num897));
												float num899 = 10f;
												num898 = num899 / num898;
												num896 *= num898;
												num897 *= num898;
												num896 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												num897 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
												Projectile.NewProjectile(vector111.X, vector111.Y, num896, num897, 325, 50, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 120f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
									}
									else if (this.ai[0] == 2f)
									{
										if (this.type == 344)
										{
											flag63 = true;
											this.ai[1] += 1f;
											if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 15f == 0f)
											{
												float num900 = 4.5f;
												Vector2 vector112 = new Vector2(this.position.X + 20f + (float)Main.rand.Next(this.width - 40), this.position.Y + 60f + (float)Main.rand.Next(this.height - 80));
												float num901 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector112.X;
												float num902 = Main.player[this.target].position.Y - vector112.Y;
												num902 -= Math.Abs(num901) * 0.3f;
												num900 += Math.Abs(num901) * 0.004f;
												num901 += (float)Main.rand.Next(-50, 51);
												num902 -= (float)Main.rand.Next(50, 201);
												float num903 = (float)Math.Sqrt((double)(num901 * num901 + num902 * num902));
												num903 = num900 / num903;
												num901 *= num903;
												num902 *= num903;
												num901 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												num902 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												Projectile.NewProjectile(vector112.X, vector112.Y, num901, num902, 346, 57, 0f, Main.myPlayer, 0f, (float)Main.rand.Next(2));
											}
											if (this.ai[1] >= 300f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
										else
										{
											flag63 = true;
											this.ai[1] += 1f;
											if (this.ai[1] > 60f && this.ai[1] < 240f && this.ai[1] % 6f == 0f)
											{
												float num904 = 10f;
												Vector2 vector113 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float num905 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector113.X;
												float num906 = Main.player[this.target].position.Y - vector113.Y;
												num906 -= Math.Abs(num905) * 0.3f;
												num904 += Math.Abs(num905) * 0.004f;
												if (num904 > 14f)
												{
													num904 = 14f;
												}
												num905 += (float)Main.rand.Next(-50, 51);
												num906 -= (float)Main.rand.Next(50, 201);
												float num907 = (float)Math.Sqrt((double)(num905 * num905 + num906 * num906));
												num907 = num904 / num907;
												num905 *= num907;
												num906 *= num907;
												num905 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												num906 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
												Projectile.NewProjectile(vector113.X, vector113.Y, num905, num906, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] >= 300f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 0f;
											}
										}
									}
									else if (this.ai[0] == 3f)
									{
										num891 = 4f;
										this.ai[1] += 1f;
										if (this.ai[1] % 30f == 0f)
										{
											Vector2 vector114 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num908 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector114.X;
											float num909 = Main.player[this.target].position.Y - vector114.Y;
											float num910 = (float)Math.Sqrt((double)(num908 * num908 + num909 * num909));
											float num911 = 16f;
											num910 = num911 / num910;
											num908 *= num910;
											num909 *= num910;
											num908 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
											num909 *= 1f + (float)Main.rand.Next(-20, 21) * 0.001f;
											Projectile.NewProjectile(vector114.X, vector114.Y, num908, num909, 325, 75, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 120f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									else if (this.ai[0] == 4f)
									{
										num891 = 4f;
										this.ai[1] += 1f;
										if (this.ai[1] % 10f == 0f)
										{
											float num912 = 12f;
											Vector2 vector115 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
											float num913 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector115.X;
											float num914 = Main.player[this.target].position.Y - vector115.Y;
											num914 -= Math.Abs(num913) * 0.2f;
											num912 += Math.Abs(num913) * 0.002f;
											if (num912 > 16f)
											{
												num912 = 16f;
											}
											num913 += (float)Main.rand.Next(-50, 51);
											num914 -= (float)Main.rand.Next(50, 201);
											float num915 = (float)Math.Sqrt((double)(num913 * num913 + num914 * num914));
											num915 = num912 / num915;
											num913 *= num915;
											num914 *= num915;
											num913 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
											num914 *= 1f + (float)Main.rand.Next(-30, 31) * 0.005f;
											Projectile.NewProjectile(vector115.X, vector115.Y, num913, num914, Main.rand.Next(326, 329), 50, 0f, Main.myPlayer, 0f, 0f);
										}
										if (this.ai[1] >= 240f)
										{
											this.ai[1] = 0f;
											this.ai[0] = 0f;
										}
									}
									if (Math.Abs(this.center().X - Main.player[this.target].center().X) < 50f)
									{
										flag63 = true;
									}
									if (flag63)
									{
										this.velocity.X = this.velocity.X * 0.9f;
										if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
										{
											this.velocity.X = 0f;
										}
									}
									else
									{
										if (this.direction > 0)
										{
											this.velocity.X = (this.velocity.X * 20f + num891) / 21f;
										}
										if (this.direction < 0)
										{
											this.velocity.X = (this.velocity.X * 20f - num891) / 21f;
										}
									}
									int num916 = 80;
									int num917 = 20;
									Vector2 vector116 = new Vector2(this.center().X - (float)(num916 / 2), this.position.Y + (float)this.height - (float)num917);
									bool flag64 = false;
									if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
									{
										flag64 = true;
									}
									if (flag64)
									{
										this.velocity.Y = this.velocity.Y + 0.5f;
									}
									else if (Collision.SolidCollision(vector116, num916, num917))
									{
										if (this.velocity.Y > 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y > -0.2)
										{
											this.velocity.Y = this.velocity.Y - 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y - 0.2f;
										}
										if (this.velocity.Y < -4f)
										{
											this.velocity.Y = -4f;
										}
									}
									else
									{
										if (this.velocity.Y < 0f)
										{
											this.velocity.Y = 0f;
										}
										if ((double)this.velocity.Y < 0.1)
										{
											this.velocity.Y = this.velocity.Y + 0.025f;
										}
										else
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
									}
									if (this.velocity.Y > 10f)
									{
										this.velocity.Y = 10f;
										return;
									}
								}
								else
								{
									if (this.aiStyle == 58)
									{
										this.localAI[0] += 1f;
										if (this.localAI[0] > 6f)
										{
											this.localAI[0] = 0f;
											this.localAI[1] += 1f;
											if (this.localAI[1] > 4f)
											{
												this.localAI[1] = 0f;
											}
										}
										if (Main.netMode != 1)
										{
											this.localAI[2] += 1f;
											if (this.localAI[2] > 300f)
											{
												this.ai[3] = (float)Main.rand.Next(3);
												this.localAI[2] = 0f;
											}
											else if (this.ai[3] == 0f && this.localAI[2] % 30f == 0f && this.localAI[2] > 30f)
											{
												float num918 = 5f;
												Vector2 vector117 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												if (!WorldGen.SolidTile((int)vector117.X / 16, (int)vector117.Y / 16))
												{
													float num919 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector117.X;
													float num920 = Main.player[this.target].position.Y - vector117.Y;
													num919 += (float)Main.rand.Next(-50, 51);
													num920 += (float)Main.rand.Next(50, 201);
													num920 *= 0.2f;
													float num921 = (float)Math.Sqrt((double)(num919 * num919 + num920 * num920));
													num921 = num918 / num921;
													num919 *= num921;
													num920 *= num921;
													num919 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
													num920 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
													Projectile.NewProjectile(vector117.X, vector117.Y, num919, num920, Main.rand.Next(326, 329), 40, 0f, Main.myPlayer, 0f, 0f);
												}
											}
										}
										if (this.ai[0] == 0f && Main.netMode != 1)
										{
											this.TargetClosest(true);
											this.ai[0] = 1f;
											int num922 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI);
											Main.npc[num922].ai[0] = -1f;
											Main.npc[num922].ai[1] = (float)this.whoAmI;
											Main.npc[num922].target = this.target;
											Main.npc[num922].netUpdate = true;
											num922 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)this.position.Y + this.height / 2, 328, this.whoAmI);
											Main.npc[num922].ai[0] = 1f;
											Main.npc[num922].ai[1] = (float)this.whoAmI;
											Main.npc[num922].ai[3] = 150f;
											Main.npc[num922].target = this.target;
											Main.npc[num922].netUpdate = true;
										}
										if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
										{
											this.TargetClosest(true);
											if (Main.player[this.target].dead || Math.Abs(this.position.X - Main.player[this.target].position.X) > 2000f || Math.Abs(this.position.Y - Main.player[this.target].position.Y) > 2000f)
											{
												this.ai[1] = 2f;
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
										}
										else if (this.ai[1] == 0f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= 300f)
											{
												if (this.ai[3] != 1f)
												{
													this.ai[1] = 0f;
													this.ai[2] = 0f;
												}
												else
												{
													this.ai[2] = 0f;
													this.ai[1] = 1f;
													this.TargetClosest(true);
													this.netUpdate = true;
												}
											}
											Vector2 vector118 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num923 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector118.X;
											float num924 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - 200f - vector118.Y;
											float num925 = (float)Math.Sqrt((double)(num923 * num923 + num924 * num924));
											float num926 = 6f;
											if (this.ai[3] == 1f)
											{
												if (num925 > 900f)
												{
													num926 = 12f;
												}
												else if (num925 > 600f)
												{
													num926 = 10f;
												}
												else if (num925 > 300f)
												{
													num926 = 8f;
												}
											}
											if (num925 > 50f)
											{
												num925 = num926 / num925;
												this.velocity.X = (this.velocity.X * 14f + num923 * num925) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num924 * num925) / 15f;
											}
										}
										else if (this.ai[1] == 1f)
										{
											this.ai[2] += 1f;
											if (this.ai[2] >= 600f || this.ai[3] != 1f)
											{
												this.ai[2] = 0f;
												this.ai[1] = 0f;
											}
											Vector2 vector119 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num927 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector119.X;
											float num928 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector119.Y;
											float num929 = (float)Math.Sqrt((double)(num927 * num927 + num928 * num928));
											num929 = 16f / num929;
											this.velocity.X = (this.velocity.X * 49f + num927 * num929) / 50f;
											this.velocity.Y = (this.velocity.Y * 49f + num928 * num929) / 50f;
										}
										else if (this.ai[1] == 2f)
										{
											this.ai[1] = 3f;
											this.velocity.Y = this.velocity.Y + 0.1f;
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = this.velocity.Y * 0.95f;
											}
											this.velocity.X = this.velocity.X * 0.95f;
											if (this.timeLeft > 500)
											{
												this.timeLeft = 500;
											}
										}
										this.rotation = this.velocity.X * -0.02f;
										return;
									}
									if (this.aiStyle == 59)
									{
										this.spriteDirection = -(int)this.ai[0];
										if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].aiStyle != 58)
										{
											this.ai[2] += 10f;
											if (this.ai[2] > 50f || Main.netMode != 2)
											{
												this.life = -1;
												this.HitEffect(0, 10.0);
												this.active = false;
											}
										}
										if (Main.netMode != 1 && Main.npc[(int)this.ai[1]].ai[3] == 2f)
										{
											this.localAI[1] += 1f;
											if (this.localAI[1] > 90f)
											{
												this.localAI[1] = 0f;
												float num930 = 0.01f;
												Vector2 vector120 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f + 30f);
												float num931 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector120.X;
												float num932 = Main.player[this.target].position.Y - vector120.Y;
												float num933 = (float)Math.Sqrt((double)(num931 * num931 + num932 * num932));
												num933 = num930 / num933;
												num931 *= num933;
												num932 *= num933;
												Projectile.NewProjectile(this.center().X, this.center().Y, num931, num932, 329, 60, 0f, Main.myPlayer, this.rotation, (float)this.spriteDirection);
											}
										}
										if (Main.dayTime)
										{
											this.velocity.Y = this.velocity.Y + 0.3f;
											this.velocity.X = this.velocity.X * 0.9f;
											return;
										}
										if (this.ai[2] == 0f || this.ai[2] == 3f)
										{
											if (Main.npc[(int)this.ai[1]].ai[1] == 3f && this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											this.ai[3] += 1f;
											if (this.ai[3] >= 180f)
											{
												this.ai[2] += 1f;
												this.ai[3] = 0f;
												this.netUpdate = true;
											}
											Vector2 vector121 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num934 = (Main.player[this.target].center().X + Main.npc[(int)this.ai[1]].center().X) / 2f;
											float num935 = (Main.player[this.target].center().Y + Main.npc[(int)this.ai[1]].center().Y) / 2f;
											num934 += -170f * this.ai[0] - vector121.X;
											num935 += 90f - vector121.Y;
											float num936 = Math.Abs(Main.player[this.target].center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(Main.player[this.target].center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if (num936 > 700f)
											{
												num934 = Main.npc[(int)this.ai[1]].center().X - 170f * this.ai[0] - vector121.X;
												num935 = Main.npc[(int)this.ai[1]].center().Y + 90f - vector121.Y;
											}
											float num937 = (float)Math.Sqrt((double)(num934 * num934 + num935 * num935));
											float num938 = 6f;
											if (num937 > 1000f)
											{
												num938 = 21f;
											}
											else if (num937 > 800f)
											{
												num938 = 18f;
											}
											else if (num937 > 600f)
											{
												num938 = 15f;
											}
											else if (num937 > 400f)
											{
												num938 = 12f;
											}
											else if (num937 > 200f)
											{
												num938 = 9f;
											}
											if (this.ai[0] < 0f && this.center().X > Main.npc[(int)this.ai[1]].center().X)
											{
												num934 -= 4f;
											}
											if (this.ai[0] > 0f && this.center().X < Main.npc[(int)this.ai[1]].center().X)
											{
												num934 += 4f;
											}
											num937 = num938 / num937;
											this.velocity.X = (this.velocity.X * 14f + num934 * num937) / 15f;
											this.velocity.Y = (this.velocity.Y * 14f + num935 * num937) / 15f;
											num937 = (float)Math.Sqrt((double)(num934 * num934 + num935 * num935));
											if (num937 > 20f)
											{
												this.rotation = (float)Math.Atan2((double)num935, (double)num934) + 1.57f;
												return;
											}
										}
										else if (this.ai[2] == 1f)
										{
											Vector2 vector122 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num939 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector122.X;
											float num940 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector122.Y;
											float num941 = (float)Math.Sqrt((double)(num939 * num939 + num940 * num940));
											this.rotation = (float)Math.Atan2((double)num940, (double)num939) + 1.57f;
											this.velocity.X = this.velocity.X * 0.95f;
											this.velocity.Y = this.velocity.Y - 0.3f;
											if (this.velocity.Y < -14f)
											{
												this.velocity.Y = -14f;
											}
											if (this.position.Y < Main.npc[(int)this.ai[1]].position.Y - 200f)
											{
												this.TargetClosest(true);
												this.ai[2] = 2f;
												vector122 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num939 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector122.X;
												num940 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector122.Y;
												num941 = (float)Math.Sqrt((double)(num939 * num939 + num940 * num940));
												num941 = 18f / num941;
												this.velocity.X = num939 * num941;
												this.velocity.Y = num940 * num941;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 2f)
										{
											float num942 = Math.Abs(this.center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(this.center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if (this.position.Y > Main.player[this.target].position.Y || this.velocity.Y < 0f || num942 > 800f)
											{
												this.ai[2] = 3f;
												return;
											}
										}
										else if (this.ai[2] == 4f)
										{
											Vector2 vector123 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num943 = Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 200f * this.ai[0] - vector123.X;
											float num944 = Main.npc[(int)this.ai[1]].position.Y + 230f - vector123.Y;
											float num945 = (float)Math.Sqrt((double)(num943 * num943 + num944 * num944));
											this.rotation = (float)Math.Atan2((double)num944, (double)num943) + 1.57f;
											this.velocity.Y = this.velocity.Y * 0.95f;
											this.velocity.X = this.velocity.X + 0.3f * -this.ai[0];
											if (this.velocity.X < -14f)
											{
												this.velocity.X = -14f;
											}
											if (this.velocity.X > 14f)
											{
												this.velocity.X = 14f;
											}
											if (this.position.X + (float)(this.width / 2) < Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) - 500f || this.position.X + (float)(this.width / 2) > Main.npc[(int)this.ai[1]].position.X + (float)(Main.npc[(int)this.ai[1]].width / 2) + 500f)
											{
												this.TargetClosest(true);
												this.ai[2] = 5f;
												vector123 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												num943 = Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2) - vector123.X;
												num944 = Main.player[this.target].position.Y + (float)(Main.player[this.target].height / 2) - vector123.Y;
												num945 = (float)Math.Sqrt((double)(num943 * num943 + num944 * num944));
												num945 = 17f / num945;
												this.velocity.X = num943 * num945;
												this.velocity.Y = num944 * num945;
												this.netUpdate = true;
												return;
											}
										}
										else if (this.ai[2] == 5f)
										{
											float num946 = Math.Abs(this.center().X - Main.npc[(int)this.ai[1]].center().X) + Math.Abs(this.center().Y - Main.npc[(int)this.ai[1]].center().Y);
											if ((this.velocity.X > 0f && this.position.X + (float)(this.width / 2) > Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || (this.velocity.X < 0f && this.position.X + (float)(this.width / 2) < Main.player[this.target].position.X + (float)(Main.player[this.target].width / 2)) || num946 > 800f)
											{
												this.ai[2] = 0f;
												return;
											}
										}
									}
									else if (this.aiStyle == 60)
									{
										if (Main.dayTime)
										{
											if (this.velocity.X > 0f)
											{
												this.velocity.X = this.velocity.X + 0.25f;
											}
											else
											{
												this.velocity.X = this.velocity.X - 0.25f;
											}
											this.velocity.Y = this.velocity.Y - 0.1f;
											this.rotation = this.velocity.X * 0.05f;
										}
										else if (this.ai[0] == 0f)
										{
											if (this.ai[2] == 0f)
											{
												this.TargetClosest(true);
												if (this.center().X < Main.player[this.target].center().X)
												{
													this.ai[2] = 1f;
												}
												else
												{
													this.ai[2] = -1f;
												}
											}
											this.TargetClosest(true);
											int num947 = 800;
											float num948 = Math.Abs(this.center().X - Main.player[this.target].center().X);
											if (this.center().X < Main.player[this.target].center().X && this.ai[2] < 0f && num948 > (float)num947)
											{
												this.ai[2] = 0f;
											}
											if (this.center().X > Main.player[this.target].center().X && this.ai[2] > 0f && num948 > (float)num947)
											{
												this.ai[2] = 0f;
											}
											float num949 = 0.45f;
											float num950 = 7f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num949 = 0.55f;
												num950 = 8f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num949 = 0.7f;
												num950 = 10f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num949 = 0.8f;
												num950 = 11f;
											}
											this.velocity.X = this.velocity.X + this.ai[2] * num949;
											if (this.velocity.X > num950)
											{
												this.velocity.X = num950;
											}
											if (this.velocity.X < -num950)
											{
												this.velocity.X = -num950;
											}
											float num951 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
											if (num951 < 150f)
											{
												this.velocity.Y = this.velocity.Y - 0.2f;
											}
											if (num951 > 200f)
											{
												this.velocity.Y = this.velocity.Y + 0.2f;
											}
											if (this.velocity.Y > 8f)
											{
												this.velocity.Y = 8f;
											}
											if (this.velocity.Y < -8f)
											{
												this.velocity.Y = -8f;
											}
											this.rotation = this.velocity.X * 0.05f;
											if ((num948 < 500f || this.ai[3] < 0f) && this.position.Y < Main.player[this.target].position.Y)
											{
												this.ai[3] += 1f;
												int num952 = 13;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num952 = 12;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num952 = 11;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num952 = 10;
												}
												num952++;
												if (this.ai[3] > (float)num952)
												{
													this.ai[3] = (float)(-(float)num952);
												}
												if (this.ai[3] == 0f && Main.netMode != 1)
												{
													Vector2 vector124 = new Vector2(this.center().X, this.center().Y);
													vector124.X += this.velocity.X * 7f;
													float num953 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector124.X;
													float num954 = Main.player[this.target].center().Y - vector124.Y;
													float num955 = (float)Math.Sqrt((double)(num953 * num953 + num954 * num954));
													float num956 = 6f;
													if ((double)this.life < (double)this.lifeMax * 0.75)
													{
														num956 = 7f;
													}
													if ((double)this.life < (double)this.lifeMax * 0.5)
													{
														num956 = 8f;
													}
													if ((double)this.life < (double)this.lifeMax * 0.25)
													{
														num956 = 9f;
													}
													num955 = num956 / num955;
													num953 *= num955;
													num954 *= num955;
													Projectile.NewProjectile(vector124.X, vector124.Y, num953, num954, 348, 47, 0f, Main.myPlayer, 0f, 0f);
												}
											}
											else if (this.ai[3] < 0f)
											{
												this.ai[3] += 1f;
											}
											if (Main.netMode != 1)
											{
												this.ai[1] += (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 800f && num948 < 600f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.TargetClosest(true);
											float num957 = 0.15f;
											float num958 = 7f;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num957 = 0.17f;
												num958 = 8f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num957 = 0.2f;
												num958 = 9f;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num957 = 0.25f;
												num958 = 10f;
											}
											num957 -= 0.05f;
											num958 -= 1f;
											if (this.center().X < Main.player[this.target].center().X)
											{
												this.velocity.X = this.velocity.X + num957;
												if (this.velocity.X < 0f)
												{
													this.velocity.X = this.velocity.X * 0.98f;
												}
											}
											if (this.center().X > Main.player[this.target].center().X)
											{
												this.velocity.X = this.velocity.X - num957;
												if (this.velocity.X > 0f)
												{
													this.velocity.X = this.velocity.X * 0.98f;
												}
											}
											if (this.velocity.X > num958 || this.velocity.X < -num958)
											{
												this.velocity.X = this.velocity.X * 0.95f;
											}
											float num959 = Main.player[this.target].position.Y - (this.position.Y + (float)this.height);
											if (num959 < 180f)
											{
												this.velocity.Y = this.velocity.Y - 0.1f;
											}
											if (num959 > 200f)
											{
												this.velocity.Y = this.velocity.Y + 0.1f;
											}
											if (this.velocity.Y > 6f)
											{
												this.velocity.Y = 6f;
											}
											if (this.velocity.Y < -6f)
											{
												this.velocity.Y = -6f;
											}
											this.rotation = this.velocity.X * 0.01f;
											if (Main.netMode != 1)
											{
												this.ai[3] += 1f;
												int num960 = 15;
												if ((double)this.life < (double)this.lifeMax * 0.75)
												{
													num960 = 14;
												}
												if ((double)this.life < (double)this.lifeMax * 0.5)
												{
													num960 = 12;
												}
												if ((double)this.life < (double)this.lifeMax * 0.25)
												{
													num960 = 10;
												}
												if ((double)this.life < (double)this.lifeMax * 0.1)
												{
													num960 = 8;
												}
												num960 += 3;
												if (this.ai[3] >= (float)num960)
												{
													this.ai[3] = 0f;
													Vector2 vector125 = new Vector2(this.center().X, this.position.Y + (float)this.height - 14f);
													int i2 = (int)(vector125.X / 16f);
													int j2 = (int)(vector125.Y / 16f);
													if (!WorldGen.SolidTile(i2, j2))
													{
														float num961 = this.velocity.Y;
														if (num961 < 0f)
														{
															num961 = 0f;
														}
														num961 += 3f;
														float speedX2 = this.velocity.X * 0.25f;
														Projectile.NewProjectile(vector125.X, vector125.Y, speedX2, num961, 349, 40, 0f, Main.myPlayer, (float)Main.rand.Next(5), 0f);
													}
												}
											}
											if (Main.netMode != 1)
											{
												this.ai[1] += (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 600f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										else if (this.ai[0] == 2f)
										{
											this.TargetClosest(true);
											Vector2 vector126 = new Vector2(this.center().X, this.center().Y - 20f);
											float num962 = (float)Main.rand.Next(-1000, 1001);
											float num963 = (float)Main.rand.Next(-1000, 1001);
											float num964 = (float)Math.Sqrt((double)(num962 * num962 + num963 * num963));
											float num965 = 15f;
											this.velocity *= 0.95f;
											num964 = num965 / num964;
											num962 *= num964;
											num963 *= num964;
											this.rotation += 0.2f;
											vector126.X += num962 * 4f;
											vector126.Y += num963 * 4f;
											this.ai[3] += 1f;
											int num966 = 7;
											if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num966--;
											}
											if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num966 -= 2;
											}
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num966 -= 3;
											}
											if ((double)this.life < (double)this.lifeMax * 0.1)
											{
												num966 -= 4;
											}
											if (this.ai[3] > (float)num966)
											{
												this.ai[3] = 0f;
												Projectile.NewProjectile(vector126.X, vector126.Y, num962, num963, 349, 45, 0f, Main.myPlayer, 0f, 0f);
											}
											if (Main.netMode != 1)
											{
												this.ai[1] += (float)Main.rand.Next(1, 4);
												if (this.ai[1] > 500f)
												{
													this.ai[0] = -1f;
												}
											}
										}
										if (this.ai[0] == -1f)
										{
											int num967 = Main.rand.Next(3);
											this.TargetClosest(true);
											if (Math.Abs(this.center().X - Main.player[this.target].center().X) > 1000f)
											{
												num967 = 0;
											}
											this.ai[0] = (float)num967;
											this.ai[1] = 0f;
											this.ai[2] = 0f;
											this.ai[3] = 0f;
											return;
										}
									}
									else if (this.aiStyle == 61)
									{
										float num968 = 2f;
										this.noGravity = true;
										this.noTileCollide = true;
										if (!Main.dayTime)
										{
											this.TargetClosest(true);
										}
										bool flag65 = false;
										if ((double)this.life < (double)this.lifeMax * 0.75)
										{
											num968 = 3f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.5)
										{
											num968 = 4f;
										}
										if ((double)this.life < (double)this.lifeMax * 0.25)
										{
											num968 = 5f;
										}
										if (Main.dayTime)
										{
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
											}
											num968 = 8f;
											if (this.velocity.X == 0f)
											{
												this.velocity.X = 0.1f;
											}
										}
										else if (this.ai[0] == 0f)
										{
											this.ai[1] += 1f;
											if (this.ai[1] >= 300f && Main.netMode != 1)
											{
												this.TargetClosest(true);
												this.ai[1] = 0f;
												this.ai[0] = 1f;
												this.netUpdate = true;
											}
										}
										else if (this.ai[0] == 1f)
										{
											this.ai[1] += 1f;
											flag65 = true;
											int num969 = 14;
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num969 = 8;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num969 = 10;
											}
											else if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num969 = 12;
											}
											if (this.ai[1] % (float)num969 == 0f)
											{
												Vector2 vector127 = new Vector2(this.center().X + (float)(this.direction * 50), this.center().Y + (float)Main.rand.Next(15, 36));
												float num970 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector127.X;
												float num971 = Main.player[this.target].center().Y - vector127.Y;
												num970 += (float)Main.rand.Next(-40, 41);
												num971 += (float)Main.rand.Next(-40, 41);
												float num972 = (float)Math.Sqrt((double)(num970 * num970 + num971 * num971));
												float num973 = 15f;
												num972 = num973 / num972;
												num970 *= num972;
												num971 *= num972;
												num970 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												num971 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
												Projectile.NewProjectile(vector127.X, vector127.Y, num970, num971, 180, 36, 0f, Main.myPlayer, 0f, 0f);
											}
											if (this.ai[1] > 240f)
											{
												this.ai[0] = 0f;
												this.ai[1] = 0f;
											}
										}
										if (Main.netMode != 1)
										{
											int num974 = 600;
											int num975 = 1200;
											int num976 = 2700;
											if ((double)this.life < (double)this.lifeMax * 0.25)
											{
												num974 = (int)((double)num974 * 0.5);
												num975 = (int)((double)num975 * 0.5);
												num976 = (int)((double)num976 * 0.5);
											}
											else if ((double)this.life < (double)this.lifeMax * 0.5)
											{
												num974 = (int)((double)num974 * 0.75);
												num975 = (int)((double)num975 * 0.75);
												num976 = (int)((double)num976 * 0.75);
											}
											else if ((double)this.life < (double)this.lifeMax * 0.75)
											{
												num974 = (int)((double)num974 * 0.9);
												num975 = (int)((double)num975 * 0.9);
												num976 = (int)((double)num976 * 0.9);
											}
											if (Main.rand.Next(num974) == 0)
											{
												Vector2 vector128 = new Vector2(this.center().X - (float)(this.direction * 24), this.center().Y - 64f);
												float num977 = (float)(Main.rand.Next(1, 100) * this.direction);
												float num978 = 1f;
												float num979 = (float)Math.Sqrt((double)(num977 * num977 + num978 * num978));
												float num980 = 1f;
												num979 = num980 / num979;
												num977 *= num979;
												num978 *= num979;
												Projectile.NewProjectile(vector128.X, vector128.Y, num977, num978, 352, 80, 0f, Main.myPlayer, 0f, 0f);
											}
											if (Main.rand.Next(num975) == 0)
											{
												this.localAI[1] = 1f;
											}
											if (this.localAI[1] >= 1f)
											{
												this.localAI[1] += 1f;
												int num981 = 12;
												if (this.localAI[1] % (float)num981 == 0f)
												{
													Vector2 vector129 = new Vector2(this.center().X - (float)(this.direction * 24), this.center().Y - 64f);
													float num982 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector129.X;
													float num983 = Main.player[this.target].center().Y - vector129.Y;
													num982 += (float)Main.rand.Next(-50, 51);
													num983 += (float)Main.rand.Next(-50, 51);
													float num984 = (float)Math.Sqrt((double)(num982 * num982 + num983 * num983));
													float num985 = 12.5f;
													num984 = num985 / num984;
													num982 *= num984;
													num983 *= num984;
													num982 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
													num983 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
													Projectile.NewProjectile(vector129.X, vector129.Y, num982, num983, 350, 42, 0f, Main.myPlayer, 0f, 0f);
												}
												if (this.localAI[1] >= 100f)
												{
													this.localAI[1] = 0f;
												}
											}
											if (Main.rand.Next(num976) == 0)
											{
												this.localAI[2] = 2f;
											}
											if (this.localAI[2] > 0f)
											{
												this.localAI[2] += 1f;
												int num986 = 9;
												if (this.localAI[2] % (float)num986 == 0f)
												{
													Vector2 vector130 = new Vector2(this.center().X - (float)(this.direction * 24), this.center().Y - 64f);
													float num987 = (float)Main.rand.Next(-100, 101);
													float num988 = -300f;
													float num989 = (float)Math.Sqrt((double)(num987 * num987 + num988 * num988));
													float num990 = 11f;
													num989 = num990 / num989;
													num987 *= num989;
													num988 *= num989;
													num987 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
													num988 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
													Projectile.NewProjectile(vector130.X, vector130.Y, num987, num988, 351, 50, 0f, Main.myPlayer, 0f, 0f);
												}
												if (this.localAI[2] >= 100f)
												{
													this.localAI[2] = 0f;
												}
											}
										}
										if (Math.Abs(this.center().X - Main.player[this.target].center().X) < 50f)
										{
											flag65 = true;
										}
										if (flag65)
										{
											this.velocity.X = this.velocity.X * 0.9f;
											if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
											{
												this.velocity.X = 0f;
											}
										}
										else
										{
											if (this.direction > 0)
											{
												this.velocity.X = (this.velocity.X * 20f + num968) / 21f;
											}
											if (this.direction < 0)
											{
												this.velocity.X = (this.velocity.X * 20f - num968) / 21f;
											}
										}
										int num991 = 80;
										int num992 = 20;
										Vector2 vector131 = new Vector2(this.center().X - (float)(num991 / 2), this.position.Y + (float)this.height - (float)num992);
										bool flag66 = false;
										if (this.position.X < Main.player[this.target].position.X && this.position.X + (float)this.width > Main.player[this.target].position.X + (float)Main.player[this.target].width && this.position.Y + (float)this.height < Main.player[this.target].position.Y + (float)Main.player[this.target].height - 16f)
										{
											flag66 = true;
										}
										if (flag66)
										{
											this.velocity.Y = this.velocity.Y + 0.5f;
										}
										else if (Collision.SolidCollision(vector131, num991, num992))
										{
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = 0f;
											}
											if ((double)this.velocity.Y > -0.2)
											{
												this.velocity.Y = this.velocity.Y - 0.025f;
											}
											else
											{
												this.velocity.Y = this.velocity.Y - 0.2f;
											}
											if (this.velocity.Y < -4f)
											{
												this.velocity.Y = -4f;
											}
										}
										else
										{
											if (this.velocity.Y < 0f)
											{
												this.velocity.Y = 0f;
											}
											if ((double)this.velocity.Y < 0.1)
											{
												this.velocity.Y = this.velocity.Y + 0.025f;
											}
											else
											{
												this.velocity.Y = this.velocity.Y + 0.5f;
											}
										}
										if (this.velocity.Y > 10f)
										{
											this.velocity.Y = 10f;
											return;
										}
									}
									else if (this.aiStyle == 62)
									{
										this.TargetClosest(true);
										this.rotation = Math.Abs(this.velocity.X) * (float)this.direction * 0.1f;
										this.spriteDirection = this.direction;
										float num993 = 7f;
										Vector2 vector132 = new Vector2(this.center().X + (float)(this.direction * 20), this.center().Y + 6f);
										float num994 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector132.X;
										float num995 = Main.player[this.target].position.Y - vector132.Y;
										float num996 = (float)Math.Sqrt((double)(num994 * num994 + num995 * num995));
										float num997 = num993 / num996;
										num994 *= num997;
										num995 *= num997;
										bool flag67 = Collision.CanHit(this.center(), 1, 1, Main.player[this.target].center(), 1, 1);
										if (Main.dayTime)
										{
											int num998 = 60;
											this.velocity.X = (this.velocity.X * (float)(num998 - 1) - num994) / (float)num998;
											this.velocity.Y = (this.velocity.Y * (float)(num998 - 1) - num995) / (float)num998;
											if (this.timeLeft > 10)
											{
												this.timeLeft = 10;
												return;
											}
										}
										else
										{
											if (num996 > 600f || !flag67)
											{
												int num999 = 60;
												this.velocity.X = (this.velocity.X * (float)(num999 - 1) + num994) / (float)num999;
												this.velocity.Y = (this.velocity.Y * (float)(num999 - 1) + num995) / (float)num999;
												return;
											}
											this.velocity *= 0.98f;
											if (Math.Abs(this.velocity.X) < 1f && Math.Abs(this.velocity.Y) < 1f && Main.netMode != 1)
											{
												this.localAI[0] += 1f;
												if (this.localAI[0] >= 13f)
												{
													this.localAI[0] = 0f;
													num994 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector132.X;
													num995 = Main.player[this.target].center().Y - vector132.Y;
													num994 += (float)Main.rand.Next(-35, 36);
													num995 += (float)Main.rand.Next(-35, 36);
													num994 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
													num995 *= 1f + (float)Main.rand.Next(-20, 21) * 0.015f;
													num996 = (float)Math.Sqrt((double)(num994 * num994 + num995 * num995));
													num993 = 10f;
													num997 = num993 / num996;
													num994 *= num997;
													num995 *= num997;
													num994 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
													num995 *= 1f + (float)Main.rand.Next(-20, 21) * 0.0125f;
													Projectile.NewProjectile(vector132.X, vector132.Y, num994, num995, 180, 37, 0f, Main.myPlayer, 0f, 0f);
													return;
												}
											}
										}
									}
									else if (this.aiStyle == 63)
									{
										this.TargetClosest(true);
										float num1000 = 12f;
										Vector2 vector133 = new Vector2(this.center().X + (float)(this.direction * 20), this.center().Y + 6f);
										float num1001 = Main.player[this.target].position.X + (float)Main.player[this.target].width * 0.5f - vector133.X;
										float num1002 = Main.player[this.target].center().Y - vector133.Y;
										float num1003 = (float)Math.Sqrt((double)(num1001 * num1001 + num1002 * num1002));
										float num1004 = num1000 / num1003;
										num1001 *= num1004;
										num1002 *= num1004;
										if (Main.dayTime)
										{
											num1001 = -num1001;
											num1002 = -num1002;
										}
										this.ai[0] -= 1f;
										if (num1003 < 200f || this.ai[0] > 0f)
										{
											if (num1003 < 200f)
											{
												this.ai[0] = 20f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											else
											{
												this.direction = 1;
											}
											this.rotation += (float)this.direction * 0.3f;
											return;
										}
										this.velocity.X = (this.velocity.X * 50f + num1001) / 51f;
										this.velocity.Y = (this.velocity.Y * 50f + num1002) / 51f;
										if (num1003 < 350f)
										{
											this.velocity.X = (this.velocity.X * 10f + num1001) / 11f;
											this.velocity.Y = (this.velocity.Y * 10f + num1002) / 11f;
										}
										if (num1003 < 300f)
										{
											this.velocity.X = (this.velocity.X * 7f + num1001) / 8f;
											this.velocity.Y = (this.velocity.Y * 7f + num1002) / 8f;
										}
										this.rotation = this.velocity.X * 0.15f;
										return;
									}
									else
									{
										if (this.aiStyle == 64)
										{
											float num1005 = this.ai[0];
											float num1006 = this.ai[1];
											if (Main.netMode != 1)
											{
												this.localAI[0] -= 1f;
												if (this.ai[3] == 0f)
												{
													this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
												}
												if (this.localAI[0] <= 0f)
												{
													this.TargetClosest(true);
													this.localAI[0] = (float)Main.rand.Next(60, 180);
													float num1007 = Math.Abs(this.center().X - Main.player[this.target].center().X);
													if (num1007 > 700f && this.localAI[3] == 0f)
													{
														float num1008 = (float)Main.rand.Next(50, 151) * 0.01f;
														if (num1007 > 1000f)
														{
															num1008 = (float)Main.rand.Next(150, 201) * 0.01f;
														}
														else if (num1007 > 850f)
														{
															num1008 = (float)Main.rand.Next(100, 151) * 0.01f;
														}
														int num1009 = this.direction * Main.rand.Next(100, 251);
														int num1010 = Main.rand.Next(-50, 51);
														if (this.position.Y > Main.player[this.target].position.Y - 100f)
														{
															num1010 -= Main.rand.Next(100, 251);
														}
														float num1011 = num1008 / (float)Math.Sqrt((double)(num1009 * num1009 + num1010 * num1010));
														num1005 = (float)num1009 * num1011;
														num1006 = (float)num1010 * num1011;
													}
													else
													{
														this.localAI[3] = 1f;
														float num1012 = (float)Main.rand.Next(5, 151) * 0.01f;
														int num1013 = Main.rand.Next(-100, 101);
														int num1014 = Main.rand.Next(-100, 101);
														float num1015 = num1012 / (float)Math.Sqrt((double)(num1013 * num1013 + num1014 * num1014));
														num1005 = (float)num1013 * num1015;
														num1006 = (float)num1014 * num1015;
													}
													this.netUpdate = true;
												}
											}
											this.scale = this.ai[3];
											if (this.localAI[2] > 0f)
											{
												int i3 = (int)this.center().X / 16;
												int j3 = (int)this.center().Y / 16;
												if (this.localAI[2] > 3f)
												{
													if (this.type == 358)
													{
														Lighting.addLight(i3, j3, 0.101249993f * this.scale, 0.21374999f * this.scale, 0.225f * this.scale);
													}
													else
													{
														Lighting.addLight(i3, j3, 0.109500006f * this.scale, 0.15f * this.scale, 0.0615f * this.scale);
													}
												}
												this.localAI[2] -= 1f;
											}
											else if (this.localAI[1] > 0f)
											{
												this.localAI[1] -= 1f;
											}
											else
											{
												this.localAI[1] = (float)Main.rand.Next(30, 180);
												if (!Main.dayTime || (double)(this.position.Y / 16f) > Main.worldSurface + 10.0)
												{
													this.localAI[2] = (float)Main.rand.Next(10, 30);
												}
											}
											int num1016 = 80;
											this.velocity.X = (this.velocity.X * (float)(num1016 - 1) + num1005) / (float)num1016;
											this.velocity.Y = (this.velocity.Y * (float)(num1016 - 1) + num1006) / (float)num1016;
											if (this.velocity.Y > 0f)
											{
												int num1017 = 4;
												int num1018 = (int)this.center().X / 16;
												int num1019 = (int)this.center().Y / 16;
												for (int num1020 = num1019; num1020 < num1019 + num1017; num1020++)
												{
													if (Main.tile[num1018, num1020] != null && ((Main.tile[num1018, num1020].nactive() && Main.tileSolid[(int)Main.tile[num1018, num1020].type]) || Main.tile[num1018, num1020].liquid > 0))
													{
														num1006 *= -1f;
														if (this.velocity.Y > 0f)
														{
															this.velocity.Y = this.velocity.Y * 0.9f;
														}
													}
												}
											}
											if (this.velocity.Y < 0f)
											{
												int num1021 = 30;
												bool flag68 = false;
												int num1022 = (int)this.center().X / 16;
												int num1023 = (int)this.center().Y / 16;
												for (int num1024 = num1023; num1024 < num1023 + num1021; num1024++)
												{
													if (Main.tile[num1022, num1024] != null && Main.tile[num1022, num1024].nactive() && Main.tileSolid[(int)Main.tile[num1022, num1024].type])
													{
														flag68 = true;
													}
												}
												if (!flag68)
												{
													num1006 *= -1f;
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
											if (this.collideX)
											{
												if (this.velocity.X < 0f)
												{
													num1005 = Math.Abs(num1005);
												}
												else
												{
													num1005 = -Math.Abs(num1005);
												}
												this.velocity.X = this.velocity.X * -0.2f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											this.ai[0] = num1005;
											this.ai[1] = num1006;
											return;
										}
										if (this.aiStyle == 65)
										{
											float num1025 = this.ai[0];
											float num1026 = this.ai[1];
											if (Main.netMode != 1)
											{
												if (this.ai[2] == 0f)
												{
													int num1027 = 0;
													int num1028 = 4;
													int num1029 = 6;
													int num1030 = 3;
													int num1031 = 7;
													int num1032 = 2;
													int num1033 = 1;
													int num1034 = 5;
													int num1035 = Main.rand.Next(100);
													if (num1035 == 0)
													{
														num1035 = num1034;
													}
													else if (num1035 < 3)
													{
														num1035 = num1033;
													}
													else if (num1035 < 9)
													{
														num1035 = num1032;
													}
													else if (num1035 < 19)
													{
														num1035 = num1031;
													}
													else if (num1035 < 34)
													{
														num1035 = num1030;
													}
													else if (num1035 < 53)
													{
														num1035 = num1029;
													}
													else if (num1035 < 75)
													{
														num1035 = num1028;
													}
													else
													{
														num1035 = num1027;
													}
													this.ai[2] = (float)(1 + num1035);
												}
												if (this.ai[3] == 0f)
												{
													this.ai[3] = (float)Main.rand.Next(75, 111) * 0.01f;
												}
												this.localAI[0] -= 1f;
												if (this.localAI[0] <= 0f)
												{
													this.TargetClosest(true);
													this.localAI[0] = (float)Main.rand.Next(90, 240);
													float num1036 = Math.Abs(this.center().X - Main.player[this.target].center().X);
													if (num1036 > 700f && this.localAI[3] == 0f)
													{
														float num1037 = (float)Main.rand.Next(50, 151) * 0.01f;
														if (num1036 > 1000f)
														{
															num1037 = (float)Main.rand.Next(150, 201) * 0.01f;
														}
														else if (num1036 > 850f)
														{
															num1037 = (float)Main.rand.Next(100, 151) * 0.01f;
														}
														int num1038 = this.direction * Main.rand.Next(100, 251);
														int num1039 = Main.rand.Next(-50, 51);
														if (this.position.Y > Main.player[this.target].position.Y - 100f)
														{
															num1039 -= Main.rand.Next(100, 251);
														}
														float num1040 = num1037 / (float)Math.Sqrt((double)(num1038 * num1038 + num1039 * num1039));
														num1025 = (float)num1038 * num1040;
														num1026 = (float)num1039 * num1040;
													}
													else
													{
														this.localAI[3] = 1f;
														float num1041 = (float)Main.rand.Next(26, 301) * 0.01f;
														int num1042 = Main.rand.Next(-100, 101);
														int num1043 = Main.rand.Next(-100, 101);
														float num1044 = num1041 / (float)Math.Sqrt((double)(num1042 * num1042 + num1043 * num1043));
														num1025 = (float)num1042 * num1044;
														num1026 = (float)num1043 * num1044;
													}
													this.netUpdate = true;
												}
											}
											this.scale = this.ai[3];
											int num1045 = 60;
											this.velocity.X = (this.velocity.X * (float)(num1045 - 1) + num1025) / (float)num1045;
											this.velocity.Y = (this.velocity.Y * (float)(num1045 - 1) + num1026) / (float)num1045;
											if (this.velocity.Y > 0f)
											{
												int num1046 = 3;
												int num1047 = (int)this.center().X / 16;
												int num1048 = (int)this.center().Y / 16;
												for (int num1049 = num1048; num1049 < num1048 + num1046; num1049++)
												{
													if (Main.tile[num1047, num1049] != null && ((Main.tile[num1047, num1049].nactive() && Main.tileSolid[(int)Main.tile[num1047, num1049].type]) || Main.tile[num1047, num1049].liquid > 0))
													{
														num1026 *= -1f;
														if (this.velocity.Y > 0f)
														{
															this.velocity.Y = this.velocity.Y * 0.9f;
														}
													}
												}
											}
											if (this.velocity.Y < 0f)
											{
												int num1050 = 30;
												bool flag69 = false;
												int num1051 = (int)this.center().X / 16;
												int num1052 = (int)this.center().Y / 16;
												for (int num1053 = num1052; num1053 < num1052 + num1050; num1053++)
												{
													if (Main.tile[num1051, num1053] != null && Main.tile[num1051, num1053].nactive() && Main.tileSolid[(int)Main.tile[num1051, num1053].type])
													{
														flag69 = true;
													}
												}
												if (!flag69)
												{
													num1026 *= -1f;
													if (this.velocity.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.9f;
													}
												}
											}
											if (this.collideX)
											{
												if (this.velocity.X < 0f)
												{
													num1025 = Math.Abs(num1025);
												}
												else
												{
													num1025 = -Math.Abs(num1025);
												}
												this.velocity.X = this.velocity.X * -0.2f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											this.ai[0] = num1025;
											this.ai[1] = num1026;
											if (this.type == 356)
											{
												this.catchItem = (short)(1994f + this.ai[2] - 1f);
												return;
											}
										}
										else if (this.aiStyle == 66)
										{
											if (this.type == 357)
											{
												if (this.localAI[2] < 90f)
												{
													this.localAI[2] += 1f;
												}
												else
												{
													this.friendly = false;
												}
											}
											if (this.velocity.Y == 0f)
											{
												if (this.ai[0] == 1f)
												{
													if (this.direction == 0)
													{
														this.TargetClosest(true);
													}
													if (this.collideX)
													{
														this.direction *= -1;
													}
													this.velocity.X = 0.2f * (float)this.direction;
													if (this.type == 374)
													{
														this.velocity.X = this.velocity.X * 3f;
													}
												}
												else
												{
													this.velocity.X = 0f;
												}
												if (Main.netMode != 1)
												{
													this.localAI[1] -= 1f;
													if (this.localAI[1] <= 0f)
													{
														if (this.ai[0] == 1f)
														{
															this.ai[0] = 0f;
															this.localAI[1] = (float)Main.rand.Next(300, 900);
														}
														else
														{
															this.ai[0] = 1f;
															this.localAI[1] = (float)Main.rand.Next(600, 1800);
														}
														this.netUpdate = true;
													}
												}
											}
											if (this.type == 374)
											{
												this.spriteDirection = this.direction;
												bool flag70 = false;
												for (int num1054 = 0; num1054 < 255; num1054++)
												{
													Player player = Main.player[num1054];
													if (player.active && !player.dead && Vector2.Distance(player.center(), this.center()) <= 160f)
													{
														flag70 = true;
														break;
													}
												}
												if (flag70 && this.ai[1] < 60f)
												{
													this.ai[1] += 1f;
												}
												if (this.ai[1] == 60f && Main.netMode != 1)
												{
													this.position.Y = this.position.Y + 16f;
													this.Transform(375);
													this.netUpdate = true;
													return;
												}
											}
										}
										else if (this.aiStyle == 67)
										{
											if (this.type == 359)
											{
												if (this.ai[3] != 0f)
												{
													this.scale = this.ai[3];
													int num1055 = (int)(12f * this.scale);
													int num1056 = (int)(12f * this.scale);
													if (num1055 != this.width)
													{
														this.position.X = this.position.X + (float)(this.width / 2) - (float)num1055 - 2f;
														this.width = num1055;
													}
													if (num1056 != this.height)
													{
														this.position.Y = this.position.Y + (float)this.height - (float)num1056;
														this.height = num1056;
													}
												}
												if (this.ai[3] == 0f && Main.netMode != 1)
												{
													this.ai[3] = (float)Main.rand.Next(80, 111) * 0.01f;
													this.netUpdate = true;
												}
											}
											if (this.type == 360)
											{
												Lighting.addLight((int)this.center().X / 16, (int)this.center().Y / 16, 0.1f, 0.2f, 0.7f);
											}
											float num1057 = 0.3f;
											if (this.type == 360)
											{
												num1057 = 0.6f;
											}
											if (this.ai[0] == 0f)
											{
												this.TargetClosest(true);
												this.directionY = 1;
												this.ai[0] = 1f;
												if (this.direction > 0)
												{
													this.spriteDirection = 1;
												}
											}
											bool flag71 = false;
											if (Main.netMode != 1)
											{
												if (this.ai[2] == 0f && Main.rand.Next(7200) == 0)
												{
													this.ai[2] = 2f;
													this.netUpdate = true;
												}
												if (!this.collideX && !this.collideY)
												{
													this.localAI[3] += 1f;
													if (this.localAI[3] > 5f)
													{
														this.ai[2] = 2f;
														this.netUpdate = true;
													}
												}
												else
												{
													this.localAI[3] = 0f;
												}
											}
											if (this.ai[2] > 0f)
											{
												this.ai[1] = 0f;
												this.ai[0] = 1f;
												this.directionY = 1;
												if (this.velocity.Y > num1057)
												{
													this.rotation += (float)this.direction * 0.1f;
												}
												else
												{
													this.rotation = 0f;
												}
												this.spriteDirection = this.direction;
												this.velocity.X = num1057 * (float)this.direction;
												this.noGravity = false;
												int num1058 = (int)(this.center().X + (float)(this.width / 2 * -(float)this.direction)) / 16;
												int num1059 = (int)(this.position.Y + (float)this.height + 8f) / 16;
												if (Main.tile[num1058, num1059] != null && !Main.tile[num1058, num1059].topSlope() && this.collideY)
												{
													this.ai[2] -= 1f;
												}
												num1059 = (int)(this.position.Y + (float)this.height - 4f) / 16;
												num1058 = (int)(this.center().X + (float)(this.width / 2 * this.direction)) / 16;
												if (Main.tile[num1058, num1059] != null && Main.tile[num1058, num1059].bottomSlope())
												{
													this.direction *= -1;
												}
												if (this.collideX && this.velocity.Y == 0f)
												{
													flag71 = true;
													this.ai[2] = 0f;
													this.directionY = -1;
													this.ai[1] = 1f;
												}
												if (this.velocity.Y == 0f)
												{
													if (this.localAI[1] == this.position.X)
													{
														this.localAI[2] += 1f;
														if (this.localAI[2] > 10f)
														{
															this.direction = 1;
															this.velocity.X = (float)this.direction * num1057;
															this.localAI[2] = 0f;
														}
													}
													else
													{
														this.localAI[2] = 0f;
														this.localAI[1] = this.position.X;
													}
												}
											}
											if (this.ai[2] == 0f)
											{
												this.noGravity = true;
												if (this.ai[1] == 0f)
												{
													if (this.collideY)
													{
														this.ai[0] = 2f;
													}
													if (!this.collideY && this.ai[0] == 2f)
													{
														this.direction = -this.direction;
														this.ai[1] = 1f;
														this.ai[0] = 1f;
													}
													if (this.collideX)
													{
														this.directionY = -this.directionY;
														this.ai[1] = 1f;
													}
												}
												else
												{
													if (this.collideX)
													{
														this.ai[0] = 2f;
													}
													if (!this.collideX && this.ai[0] == 2f)
													{
														this.directionY = -this.directionY;
														this.ai[1] = 0f;
														this.ai[0] = 1f;
													}
													if (this.collideY)
													{
														this.direction = -this.direction;
														this.ai[1] = 0f;
													}
												}
												if (!flag71)
												{
													float num1060 = this.rotation;
													if (this.directionY < 0)
													{
														if (this.direction < 0)
														{
															if (this.collideX)
															{
																this.rotation = 1.57f;
																this.spriteDirection = -1;
															}
															else if (this.collideY)
															{
																this.rotation = 3.14f;
																this.spriteDirection = 1;
															}
														}
														else if (this.collideY)
														{
															this.rotation = 3.14f;
															this.spriteDirection = -1;
														}
														else if (this.collideX)
														{
															this.rotation = 4.71f;
															this.spriteDirection = 1;
														}
													}
													else if (this.direction < 0)
													{
														if (this.collideY)
														{
															this.rotation = 0f;
															this.spriteDirection = -1;
														}
														else if (this.collideX)
														{
															this.rotation = 1.57f;
															this.spriteDirection = 1;
														}
													}
													else if (this.collideX)
													{
														this.rotation = 4.71f;
														this.spriteDirection = -1;
													}
													else if (this.collideY)
													{
														this.rotation = 0f;
														this.spriteDirection = 1;
													}
													float num1061 = this.rotation;
													this.rotation = num1060;
													if ((double)this.rotation > 6.28)
													{
														this.rotation -= 6.28f;
													}
													if (this.rotation < 0f)
													{
														this.rotation += 6.28f;
													}
													float num1062 = Math.Abs(this.rotation - num1061);
													float num1063 = 0.1f;
													if (this.rotation > num1061)
													{
														if ((double)num1062 > 3.14)
														{
															this.rotation += num1063;
														}
														else
														{
															this.rotation -= num1063;
															if (this.rotation < num1061)
															{
																this.rotation = num1061;
															}
														}
													}
													if (this.rotation < num1061)
													{
														if ((double)num1062 > 3.14)
														{
															this.rotation -= num1063;
														}
														else
														{
															this.rotation += num1063;
															if (this.rotation > num1061)
															{
																this.rotation = num1061;
															}
														}
													}
												}
												this.velocity.X = num1057 * (float)this.direction;
												this.velocity.Y = num1057 * (float)this.directionY;
												return;
											}
										}
										else if (this.aiStyle == 68)
										{
											this.noGravity = true;
											if (this.ai[0] == 0f)
											{
												this.noGravity = false;
												int num1064 = this.direction;
												int num1065 = this.target;
												this.TargetClosest(true);
												if (num1065 >= 0 && num1064 != 0)
												{
													this.direction = num1064;
												}
												if (this.wet)
												{
													float num1066 = 2f;
													this.velocity.X = (this.velocity.X * 19f + num1066 * (float)this.direction) / 20f;
													int num1067 = (int)(this.center().X + (float)((this.width / 2 + 8) * this.direction)) / 16;
													int num1068 = (int)(this.center().Y / 16f);
													int j4 = (int)(this.position.Y / 16f);
													int num1069 = (int)((this.position.Y + (float)this.height) / 16f);
													if (Main.tile[num1067, num1068] == null)
													{
														Main.tile[num1067, num1068] = new Tile();
													}
													if (Main.tile[num1067, num1069] == null)
													{
														Main.tile[num1067, num1069] = new Tile();
													}
													if (WorldGen.SolidTile(num1067, num1068) || WorldGen.SolidTile(num1067, j4) || WorldGen.SolidTile(num1067, num1069) || Main.tile[num1067, num1069].liquid == 0)
													{
														this.direction *= -1;
													}
													this.spriteDirection = this.direction;
													if (this.velocity.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y * 0.5f;
													}
													this.noGravity = true;
													num1067 = (int)(this.center().X / 16f);
													num1068 = (int)(this.center().Y / 16f);
													float num1070 = this.position.Y + (float)this.height;
													if (Main.tile[num1067, num1068 - 1] == null)
													{
														Main.tile[num1067, num1068 - 1] = new Tile();
													}
													if (Main.tile[num1067, num1068] == null)
													{
														Main.tile[num1067, num1068] = new Tile();
													}
													if (Main.tile[num1067, num1068 + 1] == null)
													{
														Main.tile[num1067, num1068 + 1] = new Tile();
													}
													if (Main.tile[num1067, num1068 - 1].liquid > 0)
													{
														num1070 = (float)(num1068 * 16);
														num1070 -= (float)(Main.tile[num1067, num1068 - 1].liquid / 16);
													}
													else if (Main.tile[num1067, num1068].liquid > 0)
													{
														num1070 = (float)((num1068 + 1) * 16);
														num1070 -= (float)(Main.tile[num1067, num1068].liquid / 16);
													}
													else if (Main.tile[num1067, num1068 + 1].liquid > 0)
													{
														num1070 = (float)((num1068 + 2) * 16);
														num1070 -= (float)(Main.tile[num1067, num1068 + 1].liquid / 16);
													}
													num1070 -= 6f;
													if (this.center().Y > num1070)
													{
														this.velocity.Y = this.velocity.Y - 0.1f;
														if (this.velocity.Y < -8f)
														{
															this.velocity.Y = -8f;
														}
														if (this.center().Y + this.velocity.Y < num1070)
														{
															this.velocity.Y = num1070 - this.center().Y;
														}
													}
													else
													{
														this.velocity.Y = num1070 - this.center().Y;
													}
												}
												if (Main.netMode != 1)
												{
													if (!this.wet)
													{
														this.ai[0] = 1f;
														this.netUpdate = true;
														this.direction = -this.direction;
														return;
													}
													Rectangle rectangle13 = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
													Rectangle rectangle14 = new Rectangle((int)this.position.X - 100, (int)this.position.Y - 100, this.width + 200, this.height + 200);
													if (rectangle14.Intersects(rectangle13) || this.life < this.lifeMax)
													{
														this.ai[0] = 1f;
														this.velocity.Y = this.velocity.Y - 6f;
														this.netUpdate = true;
														this.direction = -this.direction;
														return;
													}
												}
											}
											else if (!Main.player[this.target].dead)
											{
												bool flag72 = false;
												this.ai[1] += 1f;
												if (this.ai[1] >= 300f)
												{
													flag72 = true;
												}
												if (flag72)
												{
													if (this.velocity.Y == 0f || this.collideY || this.wet)
													{
														this.velocity.X = 0f;
														this.velocity.Y = 0f;
														this.ai[0] = 0f;
														this.ai[1] = 0f;
														if (Main.netMode != 1)
														{
															if ((this.type == 363 || this.type == 365) && !this.wet)
															{
																int num1071 = this.direction;
																this.Transform(this.type - 1);
																this.TargetClosest(true);
																this.direction = num1071;
																this.ai[0] = 0f;
																this.ai[1] = (float)(200 + Main.rand.Next(200));
															}
															this.netUpdate = true;
															return;
														}
													}
													else
													{
														this.velocity.X = this.velocity.X * 0.98f;
														this.velocity.Y = this.velocity.Y + 0.1f;
														if (this.velocity.Y > 2f)
														{
															this.velocity.Y = 2f;
															return;
														}
													}
												}
												else
												{
													if (this.collideX)
													{
														this.direction *= -1;
														this.velocity.X = this.oldVelocity.X * -0.5f;
														if (this.direction == -1 && this.velocity.X > 0f && this.velocity.X < 2f)
														{
															this.velocity.X = 2f;
														}
														if (this.direction == 1 && this.velocity.X < 0f && this.velocity.X > -2f)
														{
															this.velocity.X = -2f;
														}
													}
													if (this.collideY)
													{
														this.velocity.Y = this.oldVelocity.Y * -0.5f;
														if (this.velocity.Y > 0f && this.velocity.Y < 1f)
														{
															this.velocity.Y = 1f;
														}
														if (this.velocity.Y < 0f && this.velocity.Y > -1f)
														{
															this.velocity.Y = -1f;
														}
													}
													if (this.direction == -1 && this.velocity.X > -3f)
													{
														this.velocity.X = this.velocity.X - 0.1f;
														if (this.velocity.X > 3f)
														{
															this.velocity.X = this.velocity.X - 0.1f;
														}
														else if (this.velocity.X > 0f)
														{
															this.velocity.X = this.velocity.X - 0.05f;
														}
														if (this.velocity.X < -3f)
														{
															this.velocity.X = -3f;
														}
													}
													else if (this.direction == 1 && this.velocity.X < 3f)
													{
														this.velocity.X = this.velocity.X + 0.1f;
														if (this.velocity.X < -3f)
														{
															this.velocity.X = this.velocity.X + 0.1f;
														}
														else if (this.velocity.X < 0f)
														{
															this.velocity.X = this.velocity.X + 0.05f;
														}
														if (this.velocity.X > 3f)
														{
															this.velocity.X = 3f;
														}
													}
													int num1072 = (int)((this.position.X + (float)(this.width / 2)) / 16f) + this.direction;
													int num1073 = (int)((this.position.Y + (float)this.height) / 16f);
													bool flag73 = true;
													int num1074 = 15;
													bool flag74 = false;
													for (int num1075 = num1073; num1075 < num1073 + num1074; num1075++)
													{
														if (Main.tile[num1072, num1075] == null)
														{
															Main.tile[num1072, num1075] = new Tile();
														}
														if ((Main.tile[num1072, num1075].nactive() && Main.tileSolid[(int)Main.tile[num1072, num1075].type]) || Main.tile[num1072, num1075].liquid > 0)
														{
															if (num1075 < num1073 + 5)
															{
																flag74 = true;
															}
															flag73 = false;
															break;
														}
													}
													if (flag73)
													{
														this.velocity.Y = this.velocity.Y + 0.1f;
													}
													else
													{
														this.velocity.Y = this.velocity.Y - 0.1f;
													}
													if (flag74)
													{
														this.velocity.Y = this.velocity.Y - 0.2f;
													}
													if (this.velocity.Y > 3f)
													{
														this.velocity.Y = 3f;
													}
													if (this.velocity.Y < -4f)
													{
														this.velocity.Y = -4f;
														return;
													}
												}
											}
										}
										else if (this.aiStyle == 69)
										{
											bool flag75 = this.life <= 25000;
											if (flag75)
											{
												this.damage = 150;
												this.defense = 40;
											}
											int num1076 = 60;
											float num1077 = 0.45f;
											float scaleFactor = 7.5f;
											if (this.ai[0] == 5f)
											{
												num1077 = 0.5f;
												scaleFactor = 8f;
											}
											int num1078 = 30;
											float scaleFactor2 = 16f;
											if (this.ai[0] < 4f && this.ai[3] < 10f)
											{
												num1076 = 30;
											}
											else if (this.ai[0] > 4f && this.ai[3] < 10f)
											{
												num1076 = 20;
												num1078 = 30;
											}
											int num1079 = 80;
											int num1080 = 4;
											float num1081 = 0.3f;
											float scaleFactor3 = 5f;
											int num1082 = 90;
											int num1083 = 180;
											int num1084 = 120;
											int num1085 = 4;
											float scaleFactor4 = 6f;
											float scaleFactor5 = 20f;
											float num1086 = 6.28318548f / (float)(num1084 / 2);
											int num1087 = 75;
											Vector2 vector134 = this.center();
											Player player2 = Main.player[this.target];
											if (this.target < 0 || this.target == 255 || player2.dead || !player2.active)
											{
												this.TargetClosest(true);
												player2 = Main.player[this.target];
												this.netUpdate = true;
											}
											if (player2.dead || Vector2.Distance(player2.center(), vector134) > 2400f)
											{
												this.velocity.Y = this.velocity.Y - 0.4f;
												if (this.timeLeft > 10)
												{
													this.timeLeft = 10;
												}
												if (this.ai[0] > 4f)
												{
													this.ai[0] = 5f;
												}
												else
												{
													this.ai[0] = 0f;
												}
												this.ai[2] = 0f;
											}
											if (this.localAI[0] == 0f)
											{
												this.localAI[0] = 1f;
												this.alpha = 255;
												this.rotation = 0f;
												if (Main.netMode != 1)
												{
													this.ai[0] = -1f;
													this.netUpdate = true;
												}
											}
											float num1088 = (float)Math.Atan2((double)(player2.center().Y - vector134.Y), (double)(player2.center().X - vector134.X));
											if (this.spriteDirection == 1)
											{
												num1088 += 3.14159274f;
											}
											if (num1088 < 0f)
											{
												num1088 += 6.28318548f;
											}
											if (num1088 > 6.28318548f)
											{
												num1088 -= 6.28318548f;
											}
											if (this.ai[0] == -1f)
											{
												num1088 = 0f;
											}
											if (this.ai[0] == 3f)
											{
												num1088 = 0f;
											}
											if (this.ai[0] == 4f)
											{
												num1088 = 0f;
											}
											if (this.ai[0] == 8f)
											{
												num1088 = 0f;
											}
											float num1089 = 0.04f;
											if (this.ai[0] == 1f || this.ai[0] == 6f)
											{
												num1089 = 0f;
											}
											if (this.ai[0] == 7f)
											{
												num1089 = 0f;
											}
											if (this.ai[0] == 3f)
											{
												num1089 = 0.01f;
											}
											if (this.ai[0] == 4f)
											{
												num1089 = 0.01f;
											}
											if (this.ai[0] == 8f)
											{
												num1089 = 0.01f;
											}
											if (this.rotation < num1088)
											{
												if ((double)(num1088 - this.rotation) > 3.1415926535897931)
												{
													this.rotation -= num1089;
												}
												else
												{
													this.rotation += num1089;
												}
											}
											if (this.rotation > num1088)
											{
												if ((double)(this.rotation - num1088) > 3.1415926535897931)
												{
													this.rotation += num1089;
												}
												else
												{
													this.rotation -= num1089;
												}
											}
											if (this.rotation > num1088 - num1089 && this.rotation < num1088 + num1089)
											{
												this.rotation = num1088;
											}
											if (this.rotation < 0f)
											{
												this.rotation += 6.28318548f;
											}
											if (this.rotation > 6.28318548f)
											{
												this.rotation -= 6.28318548f;
											}
											if (this.rotation > num1088 - num1089 && this.rotation < num1088 + num1089)
											{
												this.rotation = num1088;
											}
											if (this.ai[0] != -1f)
											{
												bool flag76 = Collision.SolidCollision(this.position, this.width, this.height);
												if (flag76)
												{
													this.alpha += 15;
												}
												else
												{
													this.alpha -= 15;
												}
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.alpha > 150)
												{
													this.alpha = 150;
												}
											}
											if (this.ai[0] == -1f)
											{
												this.velocity *= 0.98f;
												int num1090 = Math.Sign(player2.center().X - vector134.X);
												if (num1090 != 0)
												{
													this.direction = num1090;
													this.spriteDirection = -this.direction;
												}
												if (this.ai[2] > 20f)
												{
													this.velocity.Y = -2f;
													this.alpha -= 5;
													bool flag77 = Collision.SolidCollision(this.position, this.width, this.height);
													if (flag77)
													{
														this.alpha += 15;
													}
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													if (this.alpha > 150)
													{
														this.alpha = 150;
													}
												}
												if (this.ai[2] == (float)(num1082 - 30))
												{
													int num1091 = 36;
													for (int num1092 = 0; num1092 < num1091; num1092++)
													{
														Vector2 vector135 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f * 0.5f;
														vector135 = vector135.Rotate((double)((float)(num1092 - (num1091 / 2 - 1)) * 6.28318548f / (float)num1091), default(Vector2)) + this.center();
														Vector2 value2 = vector135 - this.center();
														int num1093 = Dust.NewDust(vector135 + value2, 0, 0, 172, value2.X * 2f, value2.Y * 2f, 100, default(Color), 1.4f);
														Main.dust[num1093].noGravity = true;
														Main.dust[num1093].noLight = true;
														Main.dust[num1093].velocity = Vector2.Normalize(value2) * 3f;
													}
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 20);
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1087)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 0f && !player2.dead)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((vector134 - player2.Center()).X));
												}
												Vector2 value3 = player2.center() + new Vector2(this.ai[1], -200f) - vector134;
												Vector2 vector136 = Vector2.Normalize(value3 - this.velocity) * scaleFactor;
												if (this.velocity.X < vector136.X)
												{
													this.velocity.X = this.velocity.X + num1077;
													if (this.velocity.X < 0f && vector136.X > 0f)
													{
														this.velocity.X = this.velocity.X + num1077;
													}
												}
												else if (this.velocity.X > vector136.X)
												{
													this.velocity.X = this.velocity.X - num1077;
													if (this.velocity.X > 0f && vector136.X < 0f)
													{
														this.velocity.X = this.velocity.X - num1077;
													}
												}
												if (this.velocity.Y < vector136.Y)
												{
													this.velocity.Y = this.velocity.Y + num1077;
													if (this.velocity.Y < 0f && vector136.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + num1077;
													}
												}
												else if (this.velocity.Y > vector136.Y)
												{
													this.velocity.Y = this.velocity.Y - num1077;
													if (this.velocity.Y > 0f && vector136.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - num1077;
													}
												}
												int num1094 = Math.Sign(player2.center().X - vector134.X);
												if (num1094 != 0)
												{
													if (this.ai[2] == 0f && num1094 != this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.direction = num1094;
													if (this.spriteDirection != -this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1076)
												{
													int num1095 = 0;
													switch ((int)this.ai[3])
													{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
													case 6:
													case 7:
													case 8:
													case 9:
														num1095 = 1;
														break;
													case 10:
														this.ai[3] = 1f;
														num1095 = 2;
														break;
													case 11:
														this.ai[3] = 0f;
														num1095 = 3;
														break;
													}
													if (flag75)
													{
														num1095 = 4;
													}
													if (num1095 == 1)
													{
														this.ai[0] = 1f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.velocity = Vector2.Normalize(player2.center() - vector134) * scaleFactor2;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num1094 != 0)
														{
															this.direction = num1094;
															if (this.spriteDirection == 1)
															{
																this.rotation += 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
													}
													else if (num1095 == 2)
													{
														this.ai[0] = 2f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num1095 == 3)
													{
														this.ai[0] = 3f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num1095 == 4)
													{
														this.ai[0] = 4f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 1f)
											{
												int num1096 = 7;
												for (int num1097 = 0; num1097 < num1096; num1097++)
												{
													Vector2 vector137 = Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f;
													vector137 = vector137.Rotate((double)(num1097 - (num1096 / 2 - 1)) * 3.1415926535897931 / (double)((float)num1096), default(Vector2)) + vector134;
													Vector2 value4 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
													int num1098 = Dust.NewDust(vector137 + value4, 0, 0, 172, value4.X * 2f, value4.Y * 2f, 100, default(Color), 1.4f);
													Main.dust[num1098].noGravity = true;
													Main.dust[num1098].noLight = true;
													Main.dust[num1098].velocity /= 4f;
													Main.dust[num1098].velocity -= this.velocity;
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1078)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] += 2f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 2f)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((vector134 - player2.Center()).X));
												}
												Vector2 value5 = player2.center() + new Vector2(this.ai[1], -200f) - vector134;
												Vector2 vector138 = Vector2.Normalize(value5 - this.velocity) * scaleFactor3;
												if (this.velocity.X < vector138.X)
												{
													this.velocity.X = this.velocity.X + num1081;
													if (this.velocity.X < 0f && vector138.X > 0f)
													{
														this.velocity.X = this.velocity.X + num1081;
													}
												}
												else if (this.velocity.X > vector138.X)
												{
													this.velocity.X = this.velocity.X - num1081;
													if (this.velocity.X > 0f && vector138.X < 0f)
													{
														this.velocity.X = this.velocity.X - num1081;
													}
												}
												if (this.velocity.Y < vector138.Y)
												{
													this.velocity.Y = this.velocity.Y + num1081;
													if (this.velocity.Y < 0f && vector138.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + num1081;
													}
												}
												else if (this.velocity.Y > vector138.Y)
												{
													this.velocity.Y = this.velocity.Y - num1081;
													if (this.velocity.Y > 0f && vector138.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - num1081;
													}
												}
												if (this.ai[2] == 0f)
												{
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 20);
												}
												if (this.ai[2] % (float)num1080 == 0f)
												{
													Main.PlaySound(4, (int)this.center().X, (int)this.center().Y, 19);
													if (Main.netMode != 1)
													{
														Vector2 vector139 = Vector2.Normalize(player2.center() - vector134) * (float)(this.width + 20) / 2f + vector134;
														NPC.NewNPC((int)vector139.X, (int)vector139.Y + 45, 371, 0);
													}
												}
												int num1099 = Math.Sign(player2.center().X - vector134.X);
												if (num1099 != 0)
												{
													this.direction = num1099;
													if (this.spriteDirection != -this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1079)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 3f)
											{
												this.velocity *= 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num1082 - 30))
												{
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 9);
												}
												if (Main.netMode != 1 && this.ai[2] == (float)(num1082 - 30))
												{
													Vector2 vector140 = this.rotation.ToRotationVector2() * (Vector2.UnitX * (float)this.direction) * (float)(this.width + 20) / 2f + vector134;
													Projectile.NewProjectile(vector140.X, vector140.Y, (float)(this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
													Projectile.NewProjectile(vector140.X, vector140.Y, (float)(-(float)this.direction * 2), 8f, 385, 0, 0f, Main.myPlayer, 0f, 0f);
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1082)
												{
													this.ai[0] = 0f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 4f)
											{
												this.velocity *= 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num1083 - 60))
												{
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 20);
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1083)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 5f && !player2.dead)
											{
												if (this.ai[1] == 0f)
												{
													this.ai[1] = (float)(300 * Math.Sign((vector134 - player2.Center()).X));
												}
												Vector2 value6 = player2.center() + new Vector2(this.ai[1], -200f) - vector134;
												Vector2 vector141 = Vector2.Normalize(value6 - this.velocity) * scaleFactor;
												if (this.velocity.X < vector141.X)
												{
													this.velocity.X = this.velocity.X + num1077;
													if (this.velocity.X < 0f && vector141.X > 0f)
													{
														this.velocity.X = this.velocity.X + num1077;
													}
												}
												else if (this.velocity.X > vector141.X)
												{
													this.velocity.X = this.velocity.X - num1077;
													if (this.velocity.X > 0f && vector141.X < 0f)
													{
														this.velocity.X = this.velocity.X - num1077;
													}
												}
												if (this.velocity.Y < vector141.Y)
												{
													this.velocity.Y = this.velocity.Y + num1077;
													if (this.velocity.Y < 0f && vector141.Y > 0f)
													{
														this.velocity.Y = this.velocity.Y + num1077;
													}
												}
												else if (this.velocity.Y > vector141.Y)
												{
													this.velocity.Y = this.velocity.Y - num1077;
													if (this.velocity.Y > 0f && vector141.Y < 0f)
													{
														this.velocity.Y = this.velocity.Y - num1077;
													}
												}
												int num1100 = Math.Sign(player2.center().X - vector134.X);
												if (num1100 != 0)
												{
													if (this.ai[2] == 0f && num1100 != this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.direction = num1100;
													if (this.spriteDirection != -this.direction)
													{
														this.rotation += 3.14159274f;
													}
													this.spriteDirection = -this.direction;
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1076)
												{
													int num1101 = 0;
													switch ((int)this.ai[3])
													{
													case 0:
													case 1:
													case 2:
													case 3:
													case 4:
													case 5:
														num1101 = 1;
														break;
													case 6:
														this.ai[3] = 1f;
														num1101 = 2;
														break;
													case 7:
														this.ai[3] = 0f;
														num1101 = 3;
														break;
													}
													if (num1101 == 1)
													{
														this.ai[0] = 6f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
														this.velocity = Vector2.Normalize(player2.center() - vector134) * scaleFactor2;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num1100 != 0)
														{
															this.direction = num1100;
															if (this.spriteDirection == 1)
															{
																this.rotation += 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
													}
													else if (num1101 == 2)
													{
														this.velocity = Vector2.Normalize(player2.center() - vector134) * scaleFactor5;
														this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
														if (num1100 != 0)
														{
															this.direction = num1100;
															if (this.spriteDirection == 1)
															{
																this.rotation += 3.14159274f;
															}
															this.spriteDirection = -this.direction;
														}
														this.ai[0] = 7f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													else if (num1101 == 3)
													{
														this.ai[0] = 8f;
														this.ai[1] = 0f;
														this.ai[2] = 0f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 6f)
											{
												int num1102 = 7;
												for (int num1103 = 0; num1103 < num1102; num1103++)
												{
													Vector2 vector142 = Vector2.Normalize(this.velocity) * new Vector2((float)(this.width + 50) / 2f, (float)this.height) * 0.75f;
													vector142 = vector142.Rotate((double)(num1103 - (num1102 / 2 - 1)) * 3.1415926535897931 / (double)((float)num1102), default(Vector2)) + vector134;
													Vector2 value7 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
													int num1104 = Dust.NewDust(vector142 + value7, 0, 0, 172, value7.X * 2f, value7.Y * 2f, 100, default(Color), 1.4f);
													Main.dust[num1104].noGravity = true;
													Main.dust[num1104].noLight = true;
													Main.dust[num1104].velocity /= 4f;
													Main.dust[num1104].velocity -= this.velocity;
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1078)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.ai[3] += 2f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 7f)
											{
												if (this.ai[2] == 0f)
												{
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 20);
												}
												if (this.ai[2] % (float)num1085 == 0f)
												{
													Main.PlaySound(4, (int)this.center().X, (int)this.center().Y, 19);
													if (Main.netMode != 1)
													{
														Vector2 vector143 = Vector2.Normalize(this.velocity) * (float)(this.width + 20) / 2f + vector134;
														int num1105 = NPC.NewNPC((int)vector143.X, (int)vector143.Y + 45, 371, 0);
														Main.npc[num1105].target = this.target;
														Main.npc[num1105].velocity = Vector2.Normalize(this.velocity).Rotate((double)(1.57079637f * (float)this.direction), default(Vector2)) * scaleFactor4;
														Main.npc[num1105].netUpdate = true;
														Main.npc[num1105].ai[3] = (float)Main.rand.Next(80, 121) / 100f;
													}
												}
												this.velocity = this.velocity.Rotate((double)(-(double)num1086 * (float)this.direction), default(Vector2));
												this.rotation -= num1086 * (float)this.direction;
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1084)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 8f)
											{
												this.velocity *= 0.98f;
												this.velocity.Y = MathHelper.Lerp(this.velocity.Y, 0f, 0.02f);
												if (this.ai[2] == (float)(num1082 - 30))
												{
													Main.PlaySound(29, (int)vector134.X, (int)vector134.Y, 20);
												}
												if (Main.netMode != 1 && this.ai[2] == (float)(num1082 - 30))
												{
													Projectile.NewProjectile(vector134.X, vector134.Y, 0f, 0f, 385, 0, 0f, Main.myPlayer, 1f, (float)(this.target + 1));
												}
												this.ai[2] += 1f;
												if (this.ai[2] >= (float)num1082)
												{
													this.ai[0] = 5f;
													this.ai[1] = 0f;
													this.ai[2] = 0f;
													this.netUpdate = true;
													return;
												}
											}
										}
										else if (this.aiStyle == 70)
										{
											if (this.target == 255)
											{
												this.TargetClosest(true);
												this.ai[3] = (float)Main.rand.Next(80, 121) / 100f;
												float scaleFactor6 = (float)Main.rand.Next(165, 265) / 15f;
												this.velocity = Vector2.Normalize(Main.player[this.target].center() - this.center() + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor6;
												this.netUpdate = true;
											}
											Vector2 vector144 = Vector2.Normalize(Main.player[this.target].center() - this.center());
											this.velocity = (this.velocity * 40f + vector144 * 20f) / 41f;
											this.scale = this.ai[3];
											this.alpha -= 30;
											if (this.alpha < 50)
											{
												this.alpha = 50;
											}
											this.alpha = 50;
											this.velocity.X = (this.velocity.X * 50f + Main.windSpeed * 2f + (float)Main.rand.Next(-10, 11) * 0.1f) / 51f;
											this.velocity.Y = (this.velocity.Y * 50f + -0.25f + (float)Main.rand.Next(-10, 11) * 0.2f) / 51f;
											if (this.velocity.Y > 0f)
											{
												this.velocity.Y = this.velocity.Y - 0.04f;
											}
											if (this.ai[0] == 0f)
											{
												int num1106 = 40;
												Rectangle rect = this.getRect();
												rect.X -= num1106 + this.width / 2;
												rect.Y -= num1106 + this.height / 2;
												rect.Width += num1106 * 2;
												rect.Height += num1106 * 2;
												for (int num1107 = 0; num1107 < 255; num1107++)
												{
													Player player3 = Main.player[num1107];
													if (player3.active && !player3.dead && rect.Intersects(player3.getRect()))
													{
														this.ai[0] = 1f;
														this.ai[1] = 4f;
														this.netUpdate = true;
														break;
													}
												}
											}
											if (this.ai[0] == 0f)
											{
												this.ai[1] += 1f;
												if (this.ai[1] >= 150f)
												{
													this.ai[0] = 1f;
													this.ai[1] = 4f;
												}
											}
											if (this.ai[0] == 1f)
											{
												this.ai[1] -= 1f;
												if (this.ai[1] <= 0f)
												{
													this.life = 0;
													this.HitEffect(0, 10.0);
													this.active = false;
													return;
												}
											}
											if (this.justHit || this.ai[0] == 1f)
											{
												this.dontTakeDamage = true;
												this.position = this.center();
												this.width = (this.height = 100);
												this.position = new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2));
												if (this.timeLeft > 3)
												{
													this.timeLeft = 3;
													return;
												}
											}
										}
										else if (this.aiStyle == 71)
										{
											this.noTileCollide = true;
											int num1108 = 90;
											if (this.target < 0 || this.target == 255 || Main.player[this.target].dead)
											{
												this.TargetClosest(false);
												this.direction = 1;
												this.netUpdate = true;
											}
											if (this.ai[0] == 0f)
											{
												this.ai[1] += 1f;
												int arg_3B850_0 = this.type;
												this.noGravity = true;
												this.dontTakeDamage = true;
												this.velocity.Y = this.ai[3];
												if (this.type == 373)
												{
													float num1109 = 0.104719758f;
													float num1110 = this.ai[2];
													float num1111 = (float)(Math.Cos((double)(num1109 * this.localAI[1])) - 0.5) * num1110;
													this.position.X = this.position.X - num1111 * (float)(-(float)this.direction);
													this.localAI[1] += 1f;
													num1111 = (float)(Math.Cos((double)(num1109 * this.localAI[1])) - 0.5) * num1110;
													this.position.X = this.position.X + num1111 * (float)(-(float)this.direction);
													if (Math.Abs(Math.Cos((double)(num1109 * this.localAI[1])) - 0.5) > 0.25)
													{
														this.spriteDirection = ((Math.Cos((double)(num1109 * this.localAI[1])) - 0.5 >= 0.0) ? -1 : 1);
													}
													this.rotation = this.velocity.Y * (float)this.spriteDirection * 0.1f;
													if ((double)this.rotation < -0.2)
													{
														this.rotation = -0.2f;
													}
													if ((double)this.rotation > 0.2)
													{
														this.rotation = 0.2f;
													}
													this.alpha -= 6;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
												}
												if (this.ai[1] >= (float)num1108)
												{
													this.ai[0] = 1f;
													this.ai[1] = 0f;
													if (!Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.ai[1] = 1f;
													}
													Main.PlaySound(4, (int)this.center().X, (int)this.center().Y, 19);
													this.TargetClosest(true);
													this.spriteDirection = this.direction;
													Vector2 vector145 = Main.player[this.target].center() - this.center();
													vector145.Normalize();
													this.velocity = vector145 * 16f;
													this.rotation = this.velocity.ToRotation();
													if (this.direction == -1)
													{
														this.rotation += 3.14159274f;
													}
													this.netUpdate = true;
													return;
												}
											}
											else if (this.ai[0] == 1f)
											{
												this.noGravity = true;
												if (!Collision.SolidCollision(this.position, this.width, this.height))
												{
													if (this.ai[1] < 1f)
													{
														this.ai[1] = 1f;
													}
												}
												else
												{
													this.alpha -= 15;
													if (this.alpha < 150)
													{
														this.alpha = 150;
													}
												}
												if (this.ai[1] >= 1f)
												{
													this.alpha -= 60;
													if (this.alpha < 0)
													{
														this.alpha = 0;
													}
													this.dontTakeDamage = false;
													this.ai[1] += 1f;
													if (Collision.SolidCollision(this.position, this.width, this.height))
													{
														Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
														this.life = 0;
														this.HitEffect(0, 10.0);
														this.active = false;
														return;
													}
												}
												if (this.ai[1] >= 60f)
												{
													this.noGravity = false;
												}
												this.rotation = this.velocity.ToRotation();
												if (this.direction == -1)
												{
													this.rotation += 3.14159274f;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		public void FindFrame()
		{
			int num = 1;
			if (!Main.dedServ)
			{
				if (!Main.NPCLoaded[this.type])
				{
					return;
				}
				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
			}
			int num2 = 0;
			if (this.aiAction == 0)
			{
				if (this.velocity.Y < 0f)
				{
					num2 = 2;
				}
				else if (this.velocity.Y > 0f)
				{
					num2 = 3;
				}
				else if (this.velocity.X != 0f)
				{
					num2 = 1;
				}
				else
				{
					num2 = 0;
				}
			}
			else if (this.aiAction == 1)
			{
				num2 = 4;
			}
			if (this.type == 1 || this.type == 16 || this.type == 59 || this.type == 71 || this.type == 81 || this.type == 138 || this.type == 147 || this.type == 183 || this.type == 184 || this.type == 204 || this.type == 225 || this.type == 302 || this.type == 304 || (this.type >= 333 && this.type <= 336))
			{
				if (this.type == 302 || this.type == 304)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 377)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 376)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 30.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 2)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 375)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 374)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y >= num * 4)
							{
								this.frame.Y = num;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y >= num * 4)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 372 || this.type == 373)
			{
				this.frame.Y = num;
			}
			if (this.type == 371)
			{
				this.frame.Y = num;
			}
			if (this.type == 370)
			{
				if (this.ai[0] == 0f || this.ai[0] == 5f)
				{
					int num3 = 5;
					if (this.ai[0] == 5f)
					{
						num3 = 4;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter > (double)num3)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y >= num * 6)
					{
						this.frame.Y = 0;
					}
				}
				if (this.ai[0] == 1f || this.ai[0] == 6f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 2f || this.ai[0] == 7f)
				{
					if (this.ai[2] < 10f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				if (this.ai[0] == 3f || this.ai[0] == 8f || this.ai[0] == -1f)
				{
					int num4 = 90;
					if (this.ai[2] < (float)(num4 - 30) || this.ai[2] > (float)(num4 - 10))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num4 - 20) && this.ai[2] < (float)(num4 - 15))
						{
							this.frame.Y = num * 7;
						}
					}
				}
				if (this.ai[0] == 4f)
				{
					int num5 = 180;
					if (this.ai[2] < (float)(num5 - 60) || this.ai[2] > (float)(num5 - 20))
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 5.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y >= num * 6)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frame.Y = num * 6;
						if (this.ai[2] > (float)(num5 - 50) && this.ai[2] < (float)(num5 - 25))
						{
							this.frame.Y = num * 7;
						}
					}
				}
			}
			if (this.type == 359 || this.type == 360)
			{
				if (this.velocity.Y > 1f)
				{
					this.frameCounter += 1.0;
					int num6 = 6;
					if (this.frameCounter < (double)num6)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = num * 5;
						if (this.frameCounter >= (double)(num6 * 2 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
				else
				{
					this.frameCounter += 1.0;
					int num7 = 10;
					if (this.frameCounter < (double)num7)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < (double)(num7 * 2))
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num7 * 3))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num7 * 4))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num7 * 5))
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num;
						if (this.frameCounter >= (double)(num7 * 6 - 1))
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 327)
			{
				if (this.ai[3] == 0f)
				{
					if (this.frame.Y > num * 5)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > 0)
					{
						this.frameCounter -= 1.0;
					}
				}
				else if (this.ai[3] == 1f)
				{
					if (this.frame.Y > num * 10)
					{
						this.frameCounter += 1.0;
					}
					else if (this.frame.Y > num * 4)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 4)
					{
						this.frameCounter += 1.0;
					}
				}
				else if (this.ai[3] == 2f)
				{
					if (this.frame.Y < num * 2)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y > num * 8)
					{
						this.frameCounter -= 1.0;
					}
					else if (this.frame.Y < num * 8)
					{
						this.frameCounter += 1.0;
					}
				}
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y > num * 11)
					{
						this.frame.Y = 0;
					}
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 6.0;
					this.frame.Y = this.frame.Y - num;
					if (this.frame.Y < 0)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 347)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 1.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 3)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 346)
			{
				if (this.ai[0] == 1f)
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 8)
					{
						this.frame.Y = num * 6;
					}
					if (this.frame.Y < num * 6)
					{
						this.frame.Y = num * 6;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frame.Y = this.frame.Y;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += 1.0;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) / 2f);
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 352)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 5)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 345)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[3] >= 0f)
					{
						this.frame.Y = 0;
					}
					else if (this.velocity.X < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 5.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.ai[0] == 2f)
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 344)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 2.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 3.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 325)
			{
				if (this.velocity.X == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y < num * 5)
					{
						this.frame.Y = num * 5;
					}
					if (this.frame.Y > num * 9)
					{
						this.frame.Y = num * 5;
					}
				}
			}
			if (this.type == 266)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.ai[0] >= 0f)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type == 262)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
				}
				if (this.life > this.lifeMax / 2)
				{
					if (this.frame.Y > num * 3)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type >= 305 && this.type <= 309)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				if (this.velocity.Y < -3f)
				{
					this.frame.Y = num * 5;
				}
				else if (this.velocity.Y <= 0f)
				{
					this.frame.Y = 0;
				}
				else if (this.velocity.Y < 2f)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num;
				}
				this.rotation = this.velocity.X * 0.1f;
			}
			if (this.type == 263)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.frame.Y > 0)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 4.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y - num;
						}
					}
				}
				else if (this.frame.Y < 2)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
			}
			if (this.type == 244)
			{
				this.frameCounter += 1.0;
				if (num2 > 0)
				{
					this.frameCounter += 1.0;
				}
				if (num2 == 4)
				{
					this.frameCounter += 1.0;
				}
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 289)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 3.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				if (this.ai[3] == 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			if (this.type == 288)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 355 || this.type == 358)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter < 4.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 7.0)
					{
						this.frameCounter = 0.0;
					}
				}
				if (this.localAI[2] <= 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			if (this.type == 356)
			{
				int num8 = 7;
				this.rotation = this.velocity.X * 0.3f;
				this.spriteDirection = this.direction;
				this.frameCounter = this.frameCounter + 1.0 + (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) / 2f);
				if (this.frameCounter < (double)num8)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num8 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num8 * 3))
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= (double)(num8 * 4 - 1))
					{
						this.frameCounter = 0.0;
					}
				}
				this.frame.Y = this.frame.Y + (int)((float)(num * 3) * (this.ai[2] - 1f));
			}
			if (this.type == 357)
			{
				this.localAI[0] = -2f;
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 12.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
							if (this.frame.Y > num)
							{
								this.frame.Y = 0;
							}
						}
					}
				}
				else
				{
					this.rotation += (float)this.direction * 0.1f;
					this.frame.Y = num;
				}
				int num9 = (int)this.center().X / 16;
				int num10 = (int)this.position.Y / 16;
				if (Main.tile[num9, num10] != null)
				{
					if (Main.tile[num9, num10].slope() == 1)
					{
						this.rotation = 0.785f;
						this.localAI[0] = 0f;
					}
					else if (Main.tile[num9, num10].slope() == 2)
					{
						this.rotation = -0.785f;
						this.localAI[0] = 0f;
					}
				}
			}
			if (this.type == 250 || this.type == 264 || this.type == 268)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 245)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] < -16f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[1] < -12f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[1] < -8f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[1] < -4f)
					{
						this.frame.Y = num * 3;
					}
					else if (this.ai[1] < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frame.Y = 1;
				}
			}
			if (this.type == 246)
			{
				if (this.ai[0] == 0f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = 0;
					}
					if (this.localAI[1] == -1f)
					{
						this.frame.Y = this.frame.Y + num * 4;
					}
					if (this.localAI[1] == 1f)
					{
						this.frame.Y = this.frame.Y + num * 2;
					}
				}
			}
			if (this.type == 249)
			{
				if (this.localAI[0] == 1f)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 141)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 243)
			{
				if (this.frameCounter < 0.0)
				{
					if (this.velocity.Y == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter < -12.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
						else if (this.frameCounter < -6.0)
						{
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 12;
							}
						}
						else if (this.frameCounter < 0.0)
						{
							this.frameCounter = 0.0;
							if (this.frame.Y > num * 9)
							{
								this.frame.Y = num * 11;
							}
						}
					}
					else
					{
						this.frameCounter = -18.0;
						if (this.velocity.Y < 0f)
						{
							this.frame.Y = num * 14;
						}
						else
						{
							this.frame.Y = num * 13;
						}
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)Math.Abs(this.velocity.X * 1.1f);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = 0;
						}
					}
					if (this.velocity.Y < -2f || this.velocity.Y > 5f)
					{
						this.frameCounter = -18.0;
					}
				}
			}
			if (this.type == 222)
			{
				this.frameCounter += 1.0;
				if (this.localAI[0] == 1f)
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					if (this.frameCounter > 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y < num * 4)
					{
						this.frame.Y = num * 4;
					}
					if (this.frame.Y >= num * 12)
					{
						this.frame.Y = num * 4;
					}
				}
			}
			if (this.type == 164 || this.type == 239)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 236)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				else
				{
					this.frame.Y = 0;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num || this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 165 || this.type == 237 || this.type == 238 || this.type == 240)
			{
				this.frameCounter += (double)((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.5f);
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 195)
			{
				if (this.ai[0] < 3f)
				{
					this.frame.Y = 0;
				}
				else if (this.ai[0] < 6f)
				{
					this.frame.Y = num;
				}
				else if (this.ai[0] < 9f)
				{
					this.frame.Y = num * 2;
				}
				else if (this.ai[0] < 12f)
				{
					this.frame.Y = num * 3;
				}
				else if (this.ai[0] < 15f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 174)
			{
				if (this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
				}
				else if ((double)this.velocity.Y < -1.5)
				{
					this.frame.Y = num;
				}
				else if ((double)this.velocity.Y > 1.5)
				{
					this.frame.Y = num * 3;
				}
				else
				{
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 177)
			{
				if (this.velocity.Y == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 30.0;
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 163)
			{
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = -12.0;
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frame.Y = num * 6;
					}
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < -6.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 0.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter < 6.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 143)
			{
				if (this.velocity.Y > 0f)
				{
					this.frameCounter += 1.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter -= 1.0;
				}
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 3;
				}
				if (this.frameCounter < 0.0)
				{
					this.frameCounter = 0.0;
				}
				if (this.frameCounter > 17.0)
				{
					this.frameCounter = 17.0;
				}
			}
			if (this.type == 144)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.localAI[3] += 1f;
					if (this.localAI[3] < 6f)
					{
						this.frame.Y = 0;
					}
					else if (this.localAI[3] < 12f)
					{
						this.frame.Y = num;
					}
					if (this.localAI[3] >= 11f)
					{
						this.localAI[3] = 0f;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 4;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			if (this.type == 145)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					if (this.ai[2] < 4f)
					{
						this.frame.Y = 0;
					}
					else if (this.ai[2] < 8f)
					{
						this.frame.Y = num;
					}
					else if (this.ai[2] < 12f)
					{
						this.frame.Y = num * 2;
					}
					else if (this.ai[2] < 16f)
					{
						this.frame.Y = num * 3;
					}
				}
				else
				{
					if (this.velocity.Y > 0f)
					{
						this.frameCounter += 1.0;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter -= 1.0;
					}
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 6;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > 17.0)
					{
						this.frameCounter = 17.0;
					}
				}
			}
			if (this.aiStyle == 39)
			{
				if (this.ai[0] == 0f)
				{
					this.rotation = 0f;
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = this.direction;
					}
					else if (this.velocity.Y < 0f)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1.1f);
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 4;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 5;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 7;
					}
				}
				else if (this.ai[0] == 5f)
				{
					this.frameCounter = 0.0;
					if (this.ai[1] < 10f)
					{
						this.frame.Y = num * 7;
					}
					else if (this.ai[1] < 20f)
					{
						this.frame.Y = num * 6;
					}
					else
					{
						this.frame.Y = num * 5;
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 7;
				}
			}
			if (this.type == 50)
			{
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter += 1.0;
					if (num2 > 0)
					{
						this.frameCounter += 1.0;
					}
					if (num2 == 4)
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 4)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 170 || this.type == 171 || this.type == 180)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 14)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 135)
			{
				if (this.ai[2] == 0f)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
				}
			}
			if (this.type == 85 || this.type == 341)
			{
				if (this.ai[0] == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					int num11 = 3;
					if (this.velocity.Y == 0f)
					{
						this.frameCounter -= 1.0;
					}
					else
					{
						this.frameCounter += 1.0;
					}
					if (this.frameCounter < 0.0)
					{
						this.frameCounter = 0.0;
					}
					if (this.frameCounter > (double)(num11 * 4))
					{
						this.frameCounter = (double)(num11 * 4);
					}
					if (this.frameCounter < (double)num11)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < (double)(num11 * 2))
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < (double)(num11 * 3))
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < (double)(num11 * 4))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num11 * 5))
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter < (double)(num11 * 6))
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < (double)(num11 * 7))
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= (double)(num11 * 8))
						{
							this.frameCounter = (double)num11;
						}
					}
				}
				if (this.ai[3] == 2f)
				{
					this.frame.Y = this.frame.Y + num * 6;
				}
				else if (this.ai[3] == 3f)
				{
					this.frame.Y = this.frame.Y + num * 12;
				}
				else if (this.ai[3] == 4f)
				{
					this.frame.Y = this.frame.Y + num * 18;
				}
			}
			if (this.type == 113 || this.type == 114)
			{
				if (this.ai[2] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
				else
				{
					this.frame.Y = 0;
					this.frameCounter = -60.0;
				}
			}
			if (this.type == 61)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter < 4.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num * 2;
						if (this.frameCounter >= 7.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			if (this.type == 252 || this.type == 301)
			{
				if (this.type == 301)
				{
					if (this.velocity.Y == 0f)
					{
						this.spriteDirection = -this.direction;
					}
					else
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
				}
				else
				{
					if ((double)this.velocity.X > 0.5)
					{
						this.spriteDirection = 1;
					}
					if ((double)this.velocity.X < -0.5)
					{
						this.spriteDirection = -1;
					}
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
					if (this.frame.Y > num * 4 || this.frame.Y == 0)
					{
						this.frame.Y = num;
					}
				}
			}
			if (this.type == 122)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				if (this.ai[3] > 0f)
				{
					int num12 = (int)(this.ai[3] / 8f);
					this.frameCounter = 0.0;
					this.frame.Y = (num12 + 3) * num;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 3)
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 74 || this.type == 297 || this.type == 298)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 362 || this.type == 364)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * 10)
					{
						this.frame.Y = num * 3;
					}
					if (this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
			}
			else if (this.type == 363 || this.type == 365)
			{
				this.spriteDirection = this.direction;
				if (this.wet)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 2)
					{
						this.frame.Y = num;
					}
					if (this.frame.Y < num)
					{
						this.frame.Y = num;
					}
					this.rotation = 0f;
				}
				else if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.frame.Y = num;
					this.frameCounter = 0.0;
					this.rotation = 0f;
				}
				else
				{
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 11;
					}
					if (this.frame.Y < num * 11)
					{
						this.frame.Y = num * 11;
					}
				}
			}
			if (this.type == 62 || this.type == 66 || this.type == 156)
			{
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 11.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 63 || this.type == 64 || this.type == 103 || this.type == 242 || this.type == 256)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num * 3;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 221)
			{
				if (this.localAI[2] == 1f)
				{
					if (this.localAI[0] == 1f)
					{
						this.frame.Y = 0;
						this.localAI[0] = 0f;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter >= 8.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * Main.npcFrameCount[this.type] - num;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 13.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y >= num * Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 2 || this.type == 23 || this.type == 121 || this.type == 169 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
			{
				if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
				}
				else if (this.type == 2 || this.type == 121)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = 1;
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					this.rotation = this.velocity.X * 0.1f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 133)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frame.Y = 0;
				}
				if (this.frameCounter >= 16.0)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				if ((double)this.life < (double)this.lifeMax * 0.5)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			if (this.type == 116)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 5.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 75)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				else
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 157)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (!this.wet)
				{
					this.frameCounter += 1.0;
				}
				int num13 = 5;
				if (this.frameCounter < (double)num13)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < (double)(num13 * 2))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num13 * 3))
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < (double)(num13 * 4))
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < (double)(num13 * 5))
				{
					this.frame.Y = num * 3;
				}
				else if (this.frameCounter < (double)(num13 * 6))
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < (double)(num13 * 7))
				{
					this.frame.Y = num * 5;
				}
				else if (this.frameCounter < (double)(num13 * 8))
				{
					this.frame.Y = num * 4;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 55 || this.type == 57 || this.type == 58 || this.type == 102 || this.type == 241)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 4;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 5;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 69)
			{
				if (this.ai[0] < 190f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
				}
			}
			if (this.type == 155)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 4;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 6;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if ((this.direction > 0 && this.velocity.X < 0f) || (this.direction < 0 && this.velocity.X > 0f))
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 8.0)
					{
						this.frame.Y = num * 3;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 5;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 329)
			{
				if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 3;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.Y < 0f)
				{
					this.frame.Y = num * 2;
					this.frameCounter = 0.0;
				}
				else
				{
					this.spriteDirection = this.direction;
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.4f);
					if (this.frameCounter > 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						if (this.frame.Y > num * 9)
						{
							this.frame.Y = num * 2;
						}
					}
				}
			}
			if (this.type == 86)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -2f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 2f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = num * 15;
					this.frameCounter = 0.0;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else if (Math.Abs(this.velocity.X) < 3f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 9)
						{
							this.frame.Y = num;
						}
						if (this.frame.Y / num <= 0)
						{
							this.frame.Y = num;
						}
					}
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 10.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 15)
						{
							this.frame.Y = num * 9;
						}
						if (this.frame.Y / num <= 8)
						{
							this.frame.Y = num * 9;
						}
					}
				}
			}
			if (this.type == 315)
			{
				if (this.velocity.Y == 0f || this.wet)
				{
					if (this.velocity.X < -1f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X > 1f)
					{
						this.spriteDirection = 1;
					}
					else
					{
						this.spriteDirection = this.direction;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter >= 8.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num > 10)
						{
							this.frame.Y = num;
						}
					}
				}
			}
			if (this.type == 127)
			{
				if (this.ai[1] == 0f)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= 2)
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
			}
			if (this.type == 129)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 2.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 130)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 67 || this.type == 217 || this.type == 218 || this.type == 219)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 220)
			{
				if (this.velocity.Y == 0f)
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 10.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 109)
			{
				if (this.velocity.Y == 0f && ((this.velocity.X <= 0f && this.direction < 0) || (this.velocity.X >= 0f && this.direction > 0)))
				{
					this.spriteDirection = this.direction;
				}
				this.frameCounter += (double)Math.Abs(this.velocity.X);
				if (this.frameCounter >= 7.0)
				{
					this.frameCounter -= 7.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 83 || this.type == 84 || this.type == 179)
			{
				if (this.ai[0] == 2f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter >= 4.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
			}
			if (this.type == 72)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 3.0)
				{
					this.frameCounter = 0.0;
					this.frame.Y = this.frame.Y + num;
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			if (this.type == 65)
			{
				this.spriteDirection = this.direction;
				this.frameCounter += 1.0;
				if (this.wet)
				{
					if (this.frameCounter < 6.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 12.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 18.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			if (this.type == 224)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
					this.rotation = this.velocity.Y * 0.2f;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
					this.rotation = -this.velocity.Y * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 150 || this.type == 151 || this.type == 152 || this.type == 158 || this.type == 226)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * 4)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 48 || this.type == 49 || this.type == 51 || this.type == 60 || this.type == 82 || this.type == 93 || this.type == 137 || this.type == 182 || this.type == 210 || this.type == 211 || this.type == 253 || this.type == 316)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.1f;
				if (this.type == 210 || this.type == 211)
				{
					this.frameCounter += 1.0;
					this.rotation = this.velocity.X * 0.2f;
				}
				this.frameCounter += 1.0;
				if (this.frameCounter >= 6.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 330)
			{
				if (this.velocity.X > 0f)
				{
					this.spriteDirection = 1;
				}
				if (this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation = this.velocity.X * 0.15f;
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 42 || (this.type >= 231 && this.type <= 235))
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 205)
			{
				this.frameCounter += 0.5;
				if (this.frameCounter < 2.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 4.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 8.0)
				{
					this.frame.Y = num;
				}
				else
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 176)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 43 || this.type == 56 || this.type == 175)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 24.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 23.0)
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 115)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 3.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 6.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num * 2;
				}
				else if (this.frameCounter < 15.0)
				{
					this.frame.Y = num;
				}
				if (this.frameCounter == 15.0)
				{
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 101)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 6.0)
				{
					this.frame.Y = this.frame.Y + num * 2;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 2)
				{
					this.frame.Y = 0;
				}
			}
			if (this.type == 199)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.frame.Y < num * 3)
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
					}
				}
				else if (this.velocity.Y == 0f)
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter > 12.0)
					{
						this.frameCounter = 0.0;
						this.frame.Y = this.frame.Y + num;
						if (this.frame.Y > num * 7)
						{
							this.frame.Y = num * 3;
						}
					}
				}
			}
			if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 17 || this.type == 18 || this.type == 19 || this.type == 20 || this.type == 22 || this.type == 142 || this.type == 353 || this.type == 178 || this.type == 38 || this.type == 26 || this.type == 27 || this.type == 28 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 21 || this.type == 44 || this.type == 54 || this.type == 37 || this.type == 73 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 104 || this.type == 107 || this.type == 108 || this.type == 120 || this.type == 124 || this.type == 140 || this.type == 159 || this.type == 160 || this.type == 167 || this.type == 181 || this.type == 185 || this.type == 196 || this.type == 197 || this.type == 198 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 207 || this.type == 208 || this.type == 209 || this.type == 212 || this.type == 213 || this.type == 227 || this.type == 228 || this.type == 229 || this.type == 287 || (this.type >= 310 && this.type <= 314) || (this.type >= 322 && this.type <= 324) || this.type == 326 || this.type == 368 || this.type == 369)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						if (this.type == 140 || this.type == 287)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
					if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 326 || this.type == 295 || this.type == 296 || this.type == 44 || this.type == 77 || this.type == 78 || this.type == 79 || this.type == 80 || this.type == 120 || this.type == 140 || this.type == 159 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || (this.type >= 322 && this.type <= 324))
					{
						this.frame.Y = 0;
					}
					if (this.type == 181)
					{
						this.frame.Y = num * 14;
					}
				}
			}
			if (this.type == 351)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
				}
			}
			if (this.type == 343)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num * 2;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					if (this.velocity.Y < 0f)
					{
						this.frame.Y = 0;
					}
					else
					{
						this.frame.Y = num;
					}
					this.frameCounter = 0.0;
				}
			}
			if (this.type >= 269 && this.type <= 280)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						if (this.type == 140)
						{
							this.frame.Y = num;
							this.frameCounter = 0.0;
						}
						else
						{
							this.frame.Y = 0;
							this.frameCounter = 0.0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 230)
			{
				if (this.velocity.Y == 0f)
				{
					this.rotation = 0f;
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 10.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
					if (this.velocity.Y > 4f)
					{
						this.rotation -= this.velocity.Y * 0.01f;
					}
				}
			}
			else if (this.type == 290)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						if (this.ai[1] < 10f)
						{
							this.frame.Y = num * 11;
						}
						else if (this.ai[1] < 20f)
						{
							this.frame.Y = num * 10;
						}
						else
						{
							this.frame.Y = num * 9;
						}
					}
					else if (this.velocity.X == 0f)
					{
						this.frameCounter = 0.0;
						this.frame.Y = 0;
					}
					else
					{
						if (this.frame.Y < num * 2)
						{
							this.frame.Y = num * 2;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y > num * 8)
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num;
				}
			}
			else if (this.type == 110 || this.type == 214 || this.type == 215 || this.type == 216 || this.type == 291 || this.type == 292 || this.type == 293)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * (int)this.ai[2];
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = num * 6;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)this.velocity.X;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 6;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			else if (this.type == 206)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * (int)this.ai[2];
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 6)
						{
							this.frame.Y = num * 6;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)this.velocity.X;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 6;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
			}
			if (this.type == 350)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1);
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 4.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 5;
				}
			}
			if (this.type == 111)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.ai[2] > 0f)
					{
						this.spriteDirection = this.direction;
						this.frame.Y = num * ((int)this.ai[2] - 1);
						this.frameCounter = 0.0;
					}
					else
					{
						if (this.frame.Y < num * 7)
						{
							this.frame.Y = num * 7;
						}
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 2f);
						this.frameCounter += (double)(this.velocity.X * 1.3f);
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 7;
						}
					}
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
				}
			}
			else if (this.type == 257)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num * 3;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 258)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter += 1.0;
					if (this.frameCounter > 1.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 5 || this.frame.Y < num * 3)
					{
						this.frame.Y = num * 3;
					}
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 348)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 8;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y > num * 7)
					{
						this.frame.Y = num;
					}
				}
			}
			else if (this.type == 349)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter > 3.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y > num * 7)
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 3 || this.type == 342 || this.type == 331 || this.type == 332 || this.type == 52 || this.type == 53 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 166 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 254 || this.type == 255 || (this.type >= 319 && this.type <= 321))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.Y != 0f || (this.direction == -1 && this.velocity.X > 0f) || (this.direction == 1 && this.velocity.X < 0f))
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
				else if (this.velocity.X == 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				else
				{
					this.frameCounter += (double)Math.Abs(this.velocity.X);
					if (this.frameCounter < 8.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter < 16.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter < 24.0)
					{
						this.frame.Y = num * 2;
					}
					else if (this.frameCounter < 32.0)
					{
						this.frame.Y = num;
					}
					else
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 148 || this.type == 149 || this.type == 168)
			{
				int num14 = 0;
				if (this.localAI[0] == 2f)
				{
					num14 = 3;
				}
				if (this.localAI[0] == 3f)
				{
					num14 = 6;
				}
				if (this.localAI[0] == 4f)
				{
					num14 = 9;
				}
				num14 *= num;
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = num14;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						if (this.frameCounter < 6.0)
						{
							this.frame.Y = num14;
						}
						else if (this.frameCounter < 12.0)
						{
							this.frame.Y = num + num14;
						}
						else if (this.frameCounter < 15.0)
						{
							this.frame.Y = num * 2 + num14;
						}
						else
						{
							this.frameCounter = 0.0;
							this.frame.Y = num * 2 + num14;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num14;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2 + num14;
				}
			}
			else if (this.type == 299)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type] - 1)
						{
							this.frame.Y = num;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 2;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
			}
			else if (this.type == 300)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 8.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num > 1)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = num * 2;
						}
					}
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 0.5f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = num * 2;
					}
				}
			}
			else if (this.type == 361)
			{
				this.spriteDirection = this.direction;
				if (this.velocity.Y == 0f)
				{
					if (this.velocity.X == 0f)
					{
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frameCounter = 0.0;
							this.frame.Y = this.frame.Y + num;
						}
						if (this.frame.Y > num * 5)
						{
							this.frame.Y = 0;
						}
					}
					else
					{
						this.frameCounter += 1.0;
						int num15 = 6;
						if (this.frameCounter < (double)num15)
						{
							this.frame.Y = 0;
						}
						else if (this.frameCounter < (double)(num15 * 2))
						{
							this.frame.Y = num * 6;
						}
						else if (this.frameCounter < (double)(num15 * 3))
						{
							this.frame.Y = num * 8;
						}
						else
						{
							this.frame.Y = num * 9;
							if (this.frameCounter >= (double)(num15 * 4 - 1))
							{
								this.frameCounter = 0.0;
							}
						}
					}
				}
				else if (this.velocity.Y > 0f)
				{
					this.frame.Y = num * 9;
				}
				else
				{
					this.frame.Y = num * 8;
				}
			}
			else if (this.type == 366 || this.type == 367)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.velocity.X == 0f)
				{
					this.frame.Y = 0;
					this.frameCounter = 0.0;
				}
				else
				{
					this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
					this.frameCounter += 1.0;
					if (this.frameCounter > 6.0)
					{
						this.frame.Y = this.frame.Y + num;
						this.frameCounter = 0.0;
					}
					if (this.frame.Y / num >= Main.npcFrameCount[this.type])
					{
						this.frame.Y = 0;
					}
				}
			}
			else if (this.type == 46 || this.type == 47 || this.type == 303 || this.type == 337)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
					if (this.velocity.X == 0f)
					{
						this.frame.Y = 0;
						this.frameCounter = 0.0;
					}
					else
					{
						this.frameCounter += (double)(Math.Abs(this.velocity.X) * 1f);
						this.frameCounter += 1.0;
						if (this.frameCounter > 6.0)
						{
							this.frame.Y = this.frame.Y + num;
							this.frameCounter = 0.0;
						}
						if (this.frame.Y / num >= Main.npcFrameCount[this.type])
						{
							this.frame.Y = 0;
						}
					}
				}
				else if (this.velocity.Y < 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 4;
				}
				else if (this.velocity.Y > 0f)
				{
					this.frameCounter = 0.0;
					this.frame.Y = num * 6;
				}
			}
			else if (this.type == 4 || this.type == 125 || this.type == 126)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 7.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 14.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 21.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frameCounter = 0.0;
					this.frame.Y = 0;
				}
				if (this.ai[0] > 1f)
				{
					this.frame.Y = this.frame.Y + num * 3;
				}
			}
			else if (this.type == 5)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 94)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter < 6.0)
				{
					this.frame.Y = 0;
				}
				else if (this.frameCounter < 12.0)
				{
					this.frame.Y = num;
				}
				else if (this.frameCounter < 18.0)
				{
					this.frame.Y = num * 2;
				}
				else
				{
					this.frame.Y = num;
					if (this.frameCounter >= 23.0)
					{
						this.frameCounter = 0.0;
					}
				}
			}
			else if (this.type == 6 || this.type == 173)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 8.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
			else if (this.type == 24)
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				if (this.ai[1] > 0f)
				{
					if (this.frame.Y < 4)
					{
						this.frameCounter = 0.0;
					}
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = num * 4;
					}
					else if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num * 5;
					}
					else if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 6;
					}
					else if (this.frameCounter <= 16.0)
					{
						this.frame.Y = num * 7;
					}
					else if (this.frameCounter <= 20.0)
					{
						this.frame.Y = num * 8;
					}
					else
					{
						this.frame.Y = num * 9;
						this.frameCounter = 100.0;
					}
				}
				else
				{
					this.frameCounter += 1.0;
					if (this.frameCounter <= 4.0)
					{
						this.frame.Y = 0;
					}
					else if (this.frameCounter <= 8.0)
					{
						this.frame.Y = num;
					}
					else if (this.frameCounter <= 12.0)
					{
						this.frame.Y = num * 2;
					}
					else
					{
						this.frame.Y = num * 3;
						if (this.frameCounter >= 16.0)
						{
							this.frameCounter = 0.0;
						}
					}
				}
			}
			else if (this.type == 29 || this.type == 32 || this.type == 45 || this.type == 172 || (this.type >= 281 && this.type <= 286))
			{
				if (this.velocity.Y == 0f)
				{
					if (this.direction == 1)
					{
						this.spriteDirection = 1;
					}
					if (this.direction == -1)
					{
						this.spriteDirection = -1;
					}
				}
				this.frame.Y = 0;
				if (this.velocity.Y != 0f)
				{
					this.frame.Y = this.frame.Y + num;
				}
				else if (this.ai[1] > 0f)
				{
					this.frame.Y = this.frame.Y + num * 2;
				}
			}
			if (this.type == 34)
			{
				this.frameCounter += 1.0;
				if (this.frameCounter >= 4.0)
				{
					this.frame.Y = this.frame.Y + num;
					this.frameCounter = 0.0;
				}
				if (this.frame.Y >= num * Main.npcFrameCount[this.type])
				{
					this.frame.Y = 0;
				}
			}
		}
		public void TargetClosest(bool faceTarget = true)
		{
			float num = 0f;
			float num2 = 0f;
			bool flag = false;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead)
				{
					float num3 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					num3 -= (float)Main.player[i].aggro;
					if (!flag || num3 < num)
					{
						flag = true;
						num2 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
						num = num3;
						this.target = i;
					}
				}
			}
			if (this.target < 0 || this.target >= 255)
			{
				this.target = 0;
			}
			this.targetRect = new Rectangle((int)Main.player[this.target].position.X, (int)Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
			if (Main.player[this.target].dead)
			{
				faceTarget = false;
			}
			if (faceTarget)
			{
				float num4 = num2 - (float)Main.player[this.target].aggro;
				float num5 = (float)((Main.player[this.target].height + Main.player[this.target].width + this.height + this.width) / 4 + 750 + 50);
				if (Main.player[this.target].itemAnimation != 0 || Main.player[this.target].aggro >= 0 || num4 <= num5 || this.oldTarget < 0 || this.oldTarget > 254)
				{
					this.direction = 1;
					if ((float)(this.targetRect.X + this.targetRect.Width / 2) < this.position.X + (float)(this.width / 2))
					{
						this.direction = -1;
					}
					this.directionY = 1;
					if ((float)(this.targetRect.Y + this.targetRect.Height / 2) < this.position.Y + (float)(this.height / 2))
					{
						this.directionY = -1;
					}
				}
			}
			if (this.confused)
			{
				this.direction *= -1;
			}
			if ((this.direction != this.oldDirection || this.directionY != this.oldDirectionY || this.target != this.oldTarget) && !this.collideX && !this.collideY)
			{
				this.netUpdate = true;
			}
		}
		public void CheckActive()
		{
			if (this.active)
			{
				if (this.type == 8 || this.type == 9 || this.type == 11 || this.type == 12 || this.type == 14 || this.type == 15 || this.type == 40 || this.type == 41 || this.type == 96 || this.type == 97 || this.type == 99 || this.type == 100 || (this.type > 87 && this.type <= 92) || this.type == 118 || this.type == 119 || this.type == 113 || this.type == 114 || this.type == 115 || this.type == 263 || this.type == 267)
				{
					return;
				}
				if (this.type >= 246 && this.type <= 249)
				{
					return;
				}
				if (this.type >= 134 && this.type <= 136)
				{
					return;
				}
				if (this.type == 328)
				{
					return;
				}
				if (this.townNPC)
				{
					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && rectangle.Intersects(new Rectangle((int)Main.player[i].position.X, (int)Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
						{
							Main.player[i].townNPCs += this.npcSlots;
						}
					}
					return;
				}
				bool flag = false;
				Rectangle rectangle2 = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.activeRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.activeRangeY), NPC.activeRangeX * 2, NPC.activeRangeY * 2);
				Rectangle rectangle3 = new Rectangle((int)((double)(this.position.X + (float)(this.width / 2)) - (double)NPC.sWidth * 0.5 - (double)this.width), (int)((double)(this.position.Y + (float)(this.height / 2)) - (double)NPC.sHeight * 0.5 - (double)this.height), NPC.sWidth + this.width * 2, NPC.sHeight + this.height * 2);
				for (int j = 0; j < 255; j++)
				{
					if (Main.player[j].active)
					{
						if (rectangle2.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							flag = true;
							if (this.type != 25 && this.type != 30 && this.type != 33 && this.releaseOwner == 255 && this.lifeMax > 0)
							{
								Main.player[j].activeNPCs += this.npcSlots;
							}
						}
						if (rectangle3.Intersects(new Rectangle((int)Main.player[j].position.X, (int)Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
						{
							this.timeLeft = NPC.activeTime;
						}
						if (this.type == 7 || this.type == 10 || this.type == 13 || this.type == 39 || this.type == 87)
						{
							flag = true;
						}
						if (this.boss || this.type == 35 || this.type == 36 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131)
						{
							flag = true;
						}
					}
				}
				this.timeLeft--;
				if (this.timeLeft <= 0)
				{
					flag = false;
				}
				if (!flag && Main.netMode != 1)
				{
					NPC.noSpawnCycle = true;
					this.active = false;
					if (Main.netMode == 2)
					{
						this.netSkip = -1;
						this.life = 0;
						NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
					}
					if (this.aiStyle == 6)
					{
						for (int k = (int)this.ai[0]; k > 0; k = (int)Main.npc[k].ai[0])
						{
							if (Main.npc[k].active)
							{
								Main.npc[k].active = false;
								if (Main.netMode == 2)
								{
									Main.npc[k].life = 0;
									Main.npc[k].netSkip = -1;
									NetMessage.SendData(23, -1, -1, "", k, 0f, 0f, 0f, 0);
								}
							}
						}
					}
				}
			}
		}
		public static void CatchNPC(int i, int who = -1)
		{
			if (!Main.npc[i].active)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				Main.npc[i].active = false;
				NetMessage.SendData(70, -1, -1, "", i, (float)who, 0f, 0f, 0);
				return;
			}
			if (Main.npc[i].catchItem > 0)
			{
				int arg_5F_0 = Main.npc[i].type;
				Item item = new Item();
				item.SetDefaults((int)Main.npc[i].catchItem, false);
				Item.NewItem((int)Main.player[who].center().X, (int)Main.player[who].center().Y, 0, 0, (int)Main.npc[i].catchItem, 1, false, 0, true);
				Main.npc[i].active = false;
				NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0);
			}
		}
		public static bool CanReleaseNPCs(int who)
		{
			float num = 0.7f;
			if (Main.netMode != 1)
			{
				num += 0.05f;
			}
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					num3++;
					if ((int)Main.npc[i].releaseOwner == who)
					{
						num2++;
					}
				}
			}
			int num4 = 0;
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active)
				{
					num4++;
				}
			}
			int num5 = (int)(200f * num / (float)num4);
			return (float)num3 < 200f * num && num2 < num5;
		}
		public static void ReleaseNPC(int x, int y, int Type, int Style, int who)
		{
			if (Main.netMode == 1)
			{
				NetMessage.SendData(71, -1, -1, "", x, (float)y, (float)Type, (float)Style, 0);
				return;
			}
			if (Main.npcCatchable[Type] && NPC.CanReleaseNPCs(who))
			{
				if (Type == 148)
				{
					int num = Type + Main.rand.Next(2);
					int num2 = NPC.NewNPC(x, y, num, 0);
					Main.npc[num2].releaseOwner = (short)who;
					return;
				}
				int num3 = NPC.NewNPC(x, y, Type, 0);
				if (Type == 356)
				{
					Main.npc[num3].ai[2] = (float)Style;
				}
				Main.npc[num3].releaseOwner = (short)who;
			}
		}
		public static void SpawnNPC()
		{
			if (NPC.noSpawnCycle)
			{
				NPC.noSpawnCycle = false;
				return;
			}
			bool flag = false;
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active)
				{
					num4++;
				}
			}
			for (int j = 0; j < 255; j++)
			{
				if (Main.player[j].active && !Main.player[j].dead)
				{
					bool flag2 = false;
					bool flag3 = false;
					bool flag4 = false;
					bool flag5 = false;
					bool flag6 = false;
					if (Main.player[j].active && Main.invasionType > 0 && Main.invasionDelay == 0 && Main.invasionSize > 0 && (double)Main.player[j].position.Y < Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						int num5 = 3000;
						if ((double)Main.player[j].position.X > Main.invasionX * 16.0 - (double)num5 && (double)Main.player[j].position.X < Main.invasionX * 16.0 + (double)num5)
						{
							flag4 = true;
						}
						else if (Main.invasionX >= (double)(Main.maxTilesX / 2 - 5) && Main.invasionX <= (double)(Main.maxTilesX / 2 + 5))
						{
							int k = 0;
							while (k < 200)
							{
								if (Main.npc[k].townNPC && Math.Abs(Main.player[j].position.X - Main.npc[k].center().X) < (float)num5)
								{
									if (Main.rand.Next(3) == 0)
									{
										flag4 = true;
										break;
									}
									break;
								}
								else
								{
									k++;
								}
							}
						}
					}
					bool flag7 = false;
					NPC.spawnRate = NPC.defaultSpawnRate;
					NPC.maxSpawns = NPC.defaultMaxSpawns;
					if (Main.hardMode)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.9);
						NPC.maxSpawns = NPC.defaultMaxSpawns + 1;
					}
					if (Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					else if ((double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					else if ((double)Main.player[j].position.Y > Main.worldSurface * 16.0 + (double)NPC.sHeight)
					{
						if (Main.hardMode)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.45);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						else
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
						}
					}
					else if (!Main.dayTime)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.6);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
						if (Main.bloodMoon)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.3);
							NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.8f);
						}
						if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
						{
							NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
							NPC.maxSpawns *= 2;
						}
					}
					else if (Main.dayTime && Main.eclipse)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.2);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.9f);
					}
					if (Main.player[j].zoneSnow && (double)(Main.player[j].position.Y / 16f) < Main.worldSurface)
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns + (float)NPC.maxSpawns * Main.cloudAlpha);
						NPC.spawnRate = (int)((float)NPC.spawnRate * (1f - Main.cloudAlpha + 1f) / 2f);
					}
					if (Main.player[j].zoneDungeon)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.7f);
					}
					else if (Main.player[j].zoneJungle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					else if (Main.player[j].zoneEvil || Main.player[j].zoneBlood)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					else if (Main.player[j].zoneMeteor)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.4);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.1f);
					}
					if (Main.player[j].zoneHoly && (double)Main.player[j].position.Y > Main.rockLayer * 16.0 + (double)NPC.sHeight)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.65);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.3f);
					}
					if (Main.wof >= 0 && Main.player[j].position.Y > (float)((Main.maxTilesY - 200) * 16))
					{
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.3f);
						NPC.spawnRate *= 3;
					}
					if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.6f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.6)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.8f);
					}
					else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.8)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
					}
					if ((double)(Main.player[j].position.Y / 16f) > (Main.worldSurface + Main.rockLayer) / 2.0 || Main.player[j].zoneEvil || Main.player[j].zoneBlood)
					{
						if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.2)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.7f);
						}
						else if ((double)Main.player[j].activeNPCs < (double)NPC.maxSpawns * 0.4)
						{
							NPC.spawnRate = (int)((float)NPC.spawnRate * 0.9f);
						}
					}
					if (Main.player[j].inventory[Main.player[j].selectedItem].type == 148)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					if (Main.player[j].calmed)
					{
						NPC.spawnRate = (int)((float)NPC.spawnRate * 1.2f);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 0.8f);
					}
					if (Main.player[j].enemySpawns)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.5);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 2f);
					}
					if (Main.player[j].zoneCandle)
					{
						NPC.spawnRate = (int)((double)NPC.spawnRate * 0.75);
						NPC.maxSpawns = (int)((float)NPC.maxSpawns * 1.5f);
					}
					if ((double)NPC.spawnRate < (double)NPC.defaultSpawnRate * 0.1)
					{
						NPC.spawnRate = (int)((double)NPC.defaultSpawnRate * 0.1);
					}
					if (NPC.maxSpawns > NPC.defaultMaxSpawns * 3)
					{
						NPC.maxSpawns = NPC.defaultMaxSpawns * 3;
					}
					if ((Main.pumpkinMoon || Main.snowMoon) && (double)Main.player[j].position.Y < Main.worldSurface * 16.0)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (flag4)
					{
						NPC.maxSpawns = (int)((double)NPC.defaultMaxSpawns * (2.0 + 0.3 * (double)num4));
						NPC.spawnRate = 20;
					}
					if (Main.player[j].zoneDungeon && !NPC.downedBoss3)
					{
						NPC.spawnRate = 10;
					}
					bool flag8 = false;
					if (!flag4 && ((!Main.bloodMoon && !Main.pumpkinMoon && !Main.snowMoon) || Main.dayTime) && (!Main.eclipse || !Main.dayTime) && !Main.player[j].zoneDungeon && !Main.player[j].zoneEvil && !Main.player[j].zoneBlood && !Main.player[j].zoneMeteor)
					{
						if (Main.player[j].townNPCs == 1f)
						{
							flag3 = true;
							if (Main.rand.Next(3) <= 1)
							{
								flag8 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 2f);
							}
						}
						else if (Main.player[j].townNPCs == 2f)
						{
							flag3 = true;
							if (Main.rand.Next(3) == 0)
							{
								flag8 = true;
								NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
							}
							else
							{
								NPC.spawnRate = (int)((float)NPC.spawnRate * 3f);
							}
						}
						else if (Main.player[j].townNPCs >= 3f)
						{
							flag3 = true;
							flag8 = true;
							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
						}
					}
					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
					{
						flag3 = true;
					}
					if (Main.tile[num6, num7].wall == 87)
					{
						flag2 = true;
					}
					bool flag9 = false;
					if (Main.player[j].active && !Main.player[j].dead && Main.player[j].activeNPCs < (float)NPC.maxSpawns && Main.rand.Next(NPC.spawnRate) == 0)
					{
						NPC.spawnRangeX = (int)((double)(NPC.sWidth / 16) * 0.7);
						NPC.spawnRangeY = (int)((double)(NPC.sHeight / 16) * 0.7);
						NPC.safeRangeX = (int)((double)(NPC.sWidth / 16) * 0.52);
						NPC.safeRangeY = (int)((double)(NPC.sHeight / 16) * 0.52);
						if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 || Main.player[j].inventory[Main.player[j].selectedItem].type == 1299 || Main.player[j].scope)
						{
							float num8 = 1.5f;
							if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254 && Main.player[j].scope)
							{
								num8 = 1.25f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1254)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].inventory[Main.player[j].selectedItem].type == 1299)
							{
								num8 = 1.5f;
							}
							else if (Main.player[j].scope)
							{
								num8 = 2f;
							}
							NPC.spawnRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.spawnRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
						}
						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
						int num12 = (int)(Main.player[j].position.Y / 16f) + NPC.spawnRangeY;
						int num13 = (int)(Main.player[j].position.X / 16f) - NPC.safeRangeX;
						int num14 = (int)(Main.player[j].position.X / 16f) + NPC.safeRangeX;
						int num15 = (int)(Main.player[j].position.Y / 16f) - NPC.safeRangeY;
						int num16 = (int)(Main.player[j].position.Y / 16f) + NPC.safeRangeY;
						if (num9 < 0)
						{
							num9 = 0;
						}
						if (num10 > Main.maxTilesX)
						{
							num10 = Main.maxTilesX;
						}
						if (num11 < 0)
						{
							num11 = 0;
						}
						if (num12 > Main.maxTilesY)
						{
							num12 = Main.maxTilesY;
						}
						int l = 0;
						while (l < 50)
						{
							int num17 = Main.rand.Next(num9, num10);
							int num18 = Main.rand.Next(num11, num12);
							if (Main.tile[num17, num18].nactive() && Main.tileSolid[(int)Main.tile[num17, num18].type])
							{
								goto IL_1188;
							}
							if (!Main.wallHouse[(int)Main.tile[num17, num18].wall])
							{
								if (!flag4 && (double)num18 < Main.worldSurface * 0.34999999403953552 && !flag8 && ((double)num17 < (double)Main.maxTilesX * 0.45 || (double)num17 > (double)Main.maxTilesX * 0.55 || Main.hardMode))
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag7 = true;
									flag = true;
								}
								else if (!flag4 && (double)num18 < Main.worldSurface * 0.44999998807907104 && !flag8 && Main.hardMode && Main.rand.Next(10) == 0)
								{
									num3 = (int)Main.tile[num17, num18].type;
									num = num17;
									num2 = num18;
									flag7 = true;
									flag = true;
								}
								else
								{
									int m = num18;
									while (m < Main.maxTilesY)
									{
										if (Main.tile[num17, m].nactive() && Main.tileSolid[(int)Main.tile[num17, m].type])
										{
											if (num17 < num13 || num17 > num14 || m < num15 || m > num16)
											{
												num3 = (int)Main.tile[num17, m].type;
												num = num17;
												num2 = m;
												flag7 = true;
												break;
											}
											break;
										}
										else
										{
											m++;
										}
									}
								}
								if (!flag7)
								{
									goto IL_1188;
								}
								int num19 = num - NPC.spawnSpaceX / 2;
								int num20 = num + NPC.spawnSpaceX / 2;
								int num21 = num2 - NPC.spawnSpaceY;
								int num22 = num2;
								if (num19 < 0)
								{
									flag7 = false;
								}
								if (num20 > Main.maxTilesX)
								{
									flag7 = false;
								}
								if (num21 < 0)
								{
									flag7 = false;
								}
								if (num22 > Main.maxTilesY)
								{
									flag7 = false;
								}
								if (flag7)
								{
									for (int n = num19; n < num20; n++)
									{
										for (int num23 = num21; num23 < num22; num23++)
										{
											if (Main.tile[n, num23].nactive() && Main.tileSolid[(int)Main.tile[n, num23].type])
											{
												flag7 = false;
												break;
											}
											if (Main.tile[n, num23].lava())
											{
												flag7 = false;
												break;
											}
										}
									}
								}
								if (num >= num13 && num <= num14)
								{
									flag9 = true;
									goto IL_1188;
								}
								goto IL_1188;
							}
							IL_118E:
							l++;
							continue;
							IL_1188:
							if (!flag7 && !flag7)
							{
								goto IL_118E;
							}
							break;
						}
					}
					if (flag7)
					{
						Rectangle rectangle = new Rectangle(num * 16, num2 * 16, 16, 16);
						for (int num24 = 0; num24 < 255; num24++)
						{
							if (Main.player[num24].active)
							{
								Rectangle rectangle2 = new Rectangle((int)(Main.player[num24].position.X + (float)(Main.player[num24].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num24].position.Y + (float)(Main.player[num24].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
								if (rectangle.Intersects(rectangle2))
								{
									flag7 = false;
								}
							}
						}
					}
					if (flag7)
					{
						if (Main.player[j].zoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
						{
							flag7 = false;
						}
						if (Main.tile[num, num2 - 1].liquid > 0 && Main.tile[num, num2 - 2].liquid > 0 && !Main.tile[num, num2 - 1].lava())
						{
							if (Main.tile[num, num2 - 1].honey())
							{
								flag6 = true;
							}
							else
							{
								flag5 = true;
							}
						}
					}
					if (flag6)
					{
						flag7 = false;
					}
					if (flag7)
					{
						bool flag10 = false;
						if ((double)num2 > Main.rockLayer && num2 < Main.maxTilesY - 200 && !Main.player[j].zoneDungeon && !flag4)
						{
							if (Main.rand.Next(3) == 0)
							{
								int num25 = Main.rand.Next(5, 15);
								if (num - num25 >= 0 && num + num25 < Main.maxTilesX)
								{
									for (int num26 = num - num25; num26 < num + num25; num26++)
									{
										for (int num27 = num2 - num25; num27 < num2 + num25; num27++)
										{
											if (Main.tile[num26, num27].wall == 62)
											{
												flag10 = true;
											}
										}
									}
								}
							}
							else
							{
								int num28 = (int)Main.player[j].position.X / 16;
								int num29 = (int)Main.player[j].position.Y / 16;
								if (Main.tile[num28, num29].wall == 62)
								{
									flag10 = true;
								}
							}
						}
						bool flag11 = false;
						if (NPC.downedPlantBoss && Main.hardMode)
						{
							flag11 = true;
						}
						int num30 = (int)Main.tile[num, num2].type;
						int num31 = 200;
						if (flag)
						{
							if (Main.hardMode && Main.rand.Next(10) == 0 && !NPC.AnyNPCs(87) && !flag3)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 87, 1);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 48, 0);
							}
						}
						else if (flag4)
						{
							if (Main.invasionType == 1)
							{
								if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 29, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 26, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 111, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 27, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 28, 0);
								}
							}
							else if (Main.invasionType == 2)
							{
								if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 145, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 143, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 144, 0);
								}
							}
							else if (Main.invasionType == 3)
							{
								if (Main.rand.Next(30) == 0 && !NPC.AnyNPCs(216))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 216, 0);
								}
								else if (Main.rand.Next(11) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 215, 0);
								}
								else if (Main.rand.Next(9) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 252, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 214, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 213, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 212, 0);
								}
							}
						}
						else if (Main.tile[num, num2].wall == 62 || flag10)
						{
							if (Main.tile[num, num2].wall == 62 && Main.rand.Next(8) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedStylist && !NPC.AnyNPCs(354))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 354, 0);
							}
							else if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 163, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 164, 0);
							}
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneJungle && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 157, 0);
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneBlood && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 242, 0);
						}
						else if (Main.hardMode && flag5 && Main.player[j].zoneBlood && Main.rand.Next(3) != 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 241, 0);
						}
						else if (flag5 && (num < 250 || num > Main.maxTilesX - 250) && Main.tileSand[num30] && (double)num2 < Main.rockLayer)
						{
							bool flag12 = false;
							if (!NPC.savedAngler && !NPC.AnyNPCs(376) && Main.rand.Next(7) == 0)
							{
								int num32 = -1;
								for (int num33 = num2 - 1; num33 > num2 - 50; num33--)
								{
									if (Main.tile[num, num33].liquid == 0 && !WorldGen.SolidTile(num, num33) && !WorldGen.SolidTile(num, num33 + 1) && !WorldGen.SolidTile(num, num33 + 2))
									{
										num32 = num33 + 2;
										break;
									}
								}
								if (num32 > num2)
								{
									num32 = num2;
								}
								if (num32 > 0 && !flag9)
								{
									NPC.NewNPC(num * 16 + 8, num32 * 16, 376, 0);
									flag12 = true;
								}
							}
							if (!flag12)
							{
								if (Main.rand.Next(60) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 220, 0);
								}
								else if (Main.rand.Next(25) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 221, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 65, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 67, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 64, 0);
								}
							}
						}
						else if (!flag5 && !NPC.savedAngler && !NPC.AnyNPCs(376) && (num < 340 || num > Main.maxTilesX - 340) && Main.tileSand[num30] && (double)num2 < Main.worldSurface)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 376, 0);
						}
						else if (flag5 && (((double)num2 > Main.rockLayer && Main.rand.Next(2) == 0) || num30 == 60))
						{
							if (Main.hardMode && Main.rand.Next(3) > 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 102, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 58, 0);
							}
						}
						else if (flag5 && (double)num2 > Main.worldSurface && Main.rand.Next(3) == 0)
						{
							if (Main.hardMode)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 103, 0);
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 63, 0);
							}
						}
						else if (flag5 && Main.rand.Next(4) == 0)
						{
							if (Main.player[j].zoneEvil)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 57, 0);
							}
							else if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
							{
								int num34 = -1;
								for (int num35 = num2 - 1; num35 > num2 - 50; num35--)
								{
									if (Main.tile[num, num35].liquid == 0 && !WorldGen.SolidTile(num, num35) && !WorldGen.SolidTile(num, num35 + 1) && !WorldGen.SolidTile(num, num35 + 2))
									{
										num34 = num35 + 2;
										break;
									}
								}
								if (num34 > num2)
								{
									num34 = num2;
								}
								if (num34 > 0 && !flag9)
								{
									if (Main.rand.Next(2) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num34 * 16, 362, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num34 * 16, 364, 0);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
								}
							}
							else
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
							}
						}
						else if (NPC.downedGoblins && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedGoblin && !NPC.AnyNPCs(105))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 105, 0);
						}
						else if (Main.hardMode && Main.rand.Next(20) == 0 && !flag5 && (double)num2 >= Main.rockLayer && num2 < Main.maxTilesY - 210 && !NPC.savedWizard && !NPC.AnyNPCs(106))
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 106, 0);
						}
						else if (flag8)
						{
							if (flag5)
							{
								if ((double)num2 < Main.worldSurface && num2 > 50 && Main.rand.Next(3) != 0 && Main.dayTime)
								{
									int num36 = -1;
									for (int num37 = num2 - 1; num37 > num2 - 50; num37--)
									{
										if (Main.tile[num, num37].liquid == 0 && !WorldGen.SolidTile(num, num37) && !WorldGen.SolidTile(num, num37 + 1) && !WorldGen.SolidTile(num, num37 + 2))
										{
											num36 = num37 + 2;
											break;
										}
									}
									if (num36 > num2)
									{
										num36 = num2;
									}
									if (num36 > 0 && !flag9)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num36 * 16, 362, 0);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num36 * 16, 364, 0);
										}
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
									}
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 55, 0);
								}
							}
							else if (num30 == 147 || num30 == 161)
							{
								if (Main.rand.Next(2) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0);
								}
							}
							else if (num30 == 60)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0);
							}
							else
							{
								if (num30 != 2 && num30 != 109 && (double)num2 <= Main.worldSurface)
								{
									return;
								}
								if (Main.raining)
								{
									if (Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 230, 0);
									}
								}
								else if (!Main.dayTime && Main.rand.Next(NPC.fireFlyFriendly) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num38 = 355;
									if (num30 == 109)
									{
										num38 = 358;
									}
									NPC.NewNPC(num * 16 + 8, num2 * 16, num38, 0);
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num38, 0);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num38, 0);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num38, 0);
									}
									if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num38, 0);
									}
								}
								else if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(3) != 0 && (double)num2 <= Main.worldSurface)
								{
									int num39 = Main.rand.Next(4);
									if (num39 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0);
									}
									else if (num39 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
									}
								}
								else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0);
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0);
									}
									if (Main.rand.Next(4) == 0)
									{
										NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0);
									}
								}
								else if (Main.rand.Next(2) == 0 && (double)num2 <= Main.worldSurface)
								{
									int num40 = Main.rand.Next(4);
									if (num40 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0);
									}
									else if (num40 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
									}
								}
								else if (num30 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0);
								}
								else if (Main.halloween && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0);
								}
								else if (Main.xMas && Main.rand.Next(3) != 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0);
								}
								else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 299, 0);
								}
								else
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0);
								}
							}
						}
						else if (Main.player[j].zoneDungeon)
						{
							int num41 = 0;
							if (Main.tile[num, num2].wall == 94 || Main.tile[num, num2].wall == 96 || Main.tile[num, num2].wall == 98)
							{
								num41 = 1;
							}
							if (Main.tile[num, num2].wall == 95 || Main.tile[num, num2].wall == 97 || Main.tile[num, num2].wall == 99)
							{
								num41 = 2;
							}
							if (!NPC.downedBoss3)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 68, 0);
							}
							else if (!NPC.savedMech && Main.rand.Next(5) == 0 && !flag5 && !NPC.AnyNPCs(123) && (double)num2 > Main.rockLayer)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 123, 0);
							}
							else if (flag11 && Main.rand.Next(75) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 287, 0);
							}
							else if (flag11 && num41 == 0 && Main.rand.Next(25) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 293, 0);
							}
							else if (flag11 && num41 == 1 && Main.rand.Next(25) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 291, 0);
							}
							else if (flag11 && num41 == 2 && Main.rand.Next(25) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 292, 0);
							}
							else if (flag11 && !NPC.AnyNPCs(290) && num41 == 0 && Main.rand.Next(45) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 290, 0);
							}
							else if (flag11 && (num41 == 1 || num41 == 2) && Main.rand.Next(30) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 289, 0);
							}
							else if (flag11 && Main.rand.Next(20) == 0)
							{
								int num42 = 281;
								if (num41 == 0)
								{
									num42 += 2;
								}
								if (num41 == 2)
								{
									num42 += 4;
								}
								num42 += Main.rand.Next(2);
								if (!NPC.AnyNPCs(num42))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, num42, 0);
								}
							}
							else if (flag11 && Main.rand.Next(3) != 0)
							{
								int num43 = 269;
								if (num41 == 0)
								{
									num43 += 4;
								}
								if (num41 == 2)
								{
									num43 += 8;
								}
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, num43 + Main.rand.Next(4), 0);
							}
							else if (Main.rand.Next(37) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 71, 0);
							}
							else if (num41 == 1 && Main.rand.Next(4) == 0 && !NPC.NearSpikeBall(num, num2))
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 70, 0);
							}
							else if (num41 == 2 && Main.rand.Next(15) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 72, 0);
							}
							else if (num41 == 0 && Main.rand.Next(9) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 34, 0);
							}
							else if (Main.rand.Next(7) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 32, 0);
							}
							else
							{
								int num44 = Main.rand.Next(5);
								if (num44 == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 294, 0);
								}
								else if (num44 == 1)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 295, 0);
								}
								else if (num44 == 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 296, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 31, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Boned");
									}
									else if (Main.rand.Next(5) == 0)
									{
										Main.npc[num31].SetDefaults("Short Bones");
									}
								}
							}
						}
						else if (Main.player[j].zoneMeteor)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 23, 0);
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.snowMoon)
						{
							if (Main.rand.Next(30) == 0 && NPC.CountNPCS(341) < 4)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 341, 0);
							}
							else if (NPC.waveCount >= 20)
							{
								int num45 = Main.rand.Next(3);
								if (num45 == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (num45 == 1)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
							}
							else if (NPC.waveCount >= 19)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 4)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 5)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 7)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount >= 18)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 4)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 6)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount >= 17)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 5)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount >= 16)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(345) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 4)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(346) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 343, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(345))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 345, 0);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 352, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 351, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(346))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 346, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(10) == 0 && NPC.CountNPCS(344) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 347, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(344))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 344, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 348, 0);
								}
								else if (Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 350, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 342, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(338, 341), 0);
							}
						}
						else if ((double)num2 <= Main.worldSurface && !Main.dayTime && Main.pumpkinMoon)
						{
							if (NPC.waveCount >= 15)
							{
								if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
							}
							else if (NPC.waveCount == 14)
							{
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(327) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
							}
							else if (NPC.waveCount == 13)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(5) == 0 && NPC.CountNPCS(325) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(5) == 0 && NPC.CountNPCS(315) < 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
							}
							else if (NPC.waveCount == 12)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(327) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(7) == 0 && NPC.CountNPCS(315) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 11)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(7) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 10)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 9)
							{
								if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(327))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(8) == 0 && !NPC.AnyNPCs(325))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(315))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 315, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 8)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 7)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(327))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 327, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 6)
							{
								if (Main.rand.Next(7) == 0 && NPC.CountNPCS(325) < 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(6) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
							}
							else if (NPC.waveCount == 5)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(8) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 330, 0);
								}
								else if (Main.rand.Next(5) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 4)
							{
								if (Main.rand.Next(10) == 0 && !NPC.AnyNPCs(325))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 325, 0);
								}
								else if (Main.rand.Next(10) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 3)
							{
								if (Main.rand.Next(6) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 329, 0);
								}
								else if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else if (NPC.waveCount == 2)
							{
								if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 326, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
								}
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(305, 315), 0);
							}
						}
						else if ((double)num2 <= Main.worldSurface && Main.dayTime && Main.eclipse)
						{
							if (Main.rand.Next(50) == 0 && !NPC.AnyNPCs(251))
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 251, 0);
							}
							else if (Main.rand.Next(10) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 253, 0);
							}
							else if (Main.rand.Next(12) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 158, 0);
							}
							else if (Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 162, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 166, 0);
							}
						}
						else if (Main.hardMode && num3 == 70 && flag5)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 256, 0);
						}
						else if (num3 == 70 && (double)num2 <= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if ((!Main.hardMode && Main.rand.Next(6) == 0) || Main.rand.Next(12) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0);
							}
							else if (Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(4) == 0)
								{
									if (Main.hardMode && Main.rand.Next(3) != 0)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0);
										Main.npc[num31].ai[0] = (float)num;
										Main.npc[num31].ai[1] = (float)num2;
										Main.npc[num31].netUpdate = true;
									}
									else
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0);
										Main.npc[num31].ai[0] = (float)num;
										Main.npc[num31].ai[1] = (float)num2;
										Main.npc[num31].netUpdate = true;
									}
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0);
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 254, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 255, 0);
							}
						}
						else if (num3 == 70 && Main.hardMode && (double)num2 >= Main.worldSurface && Main.rand.Next(3) != 0)
						{
							if (Main.hardMode && Main.rand.Next(7) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 374, 0);
							}
							else if ((!Main.hardMode && Main.rand.Next(4) == 0) || Main.rand.Next(8) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 360, 0);
							}
							if (Main.rand.Next(4) == 0)
							{
								if (Main.hardMode && Main.rand.Next(3) != 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 260, 0);
									Main.npc[num31].ai[0] = (float)num;
									Main.npc[num31].ai[1] = (float)num2;
									Main.npc[num31].netUpdate = true;
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 259, 0);
									Main.npc[num31].ai[0] = (float)num;
									Main.npc[num31].ai[1] = (float)num2;
									Main.npc[num31].netUpdate = true;
								}
							}
							else if (Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 257, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 258, 0);
							}
						}
						else if (Main.player[j].zoneEvil && Main.rand.Next(65) == 0 && !flag3)
						{
							if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 98, 1);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 7, 1);
							}
						}
						else if (Main.hardMode && (double)num2 > Main.worldSurface && Main.rand.Next(75) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0);
						}
						else if (Main.hardMode && Main.tile[num, num2 - 1].wall == 2 && Main.rand.Next(20) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 85, 0);
						}
						else if (Main.hardMode && (double)num2 <= Main.worldSurface && !Main.dayTime && (Main.rand.Next(20) == 0 || (Main.rand.Next(5) == 0 && Main.moonPhase == 4)))
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 82, 0);
						}
						else if (Main.hardMode && Main.halloween && (double)num2 <= Main.worldSurface && !Main.dayTime && Main.rand.Next(10) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 304, 0);
						}
						else if (num30 == 60 && Main.rand.Next(500) == 0 && !Main.dayTime)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 52, 0);
						}
						else if (num30 == 60 && (double)num2 > Main.worldSurface && Main.rand.Next(60) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 219, 0);
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].zoneSnow && !Main.player[j].zoneBlood && !Main.player[j].zoneEvil && !Main.player[j].zoneJungle && !Main.player[j].zoneHoly && Main.rand.Next(8) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 357, 0);
						}
						else if ((double)num2 > Main.worldSurface && num2 < Main.maxTilesY - 210 && !Main.player[j].zoneSnow && !Main.player[j].zoneBlood && !Main.player[j].zoneEvil && !Main.player[j].zoneJungle && !Main.player[j].zoneHoly && Main.rand.Next(13) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 300, 0);
						}
						else if ((double)num2 > Main.worldSurface && (double)num2 < (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && !Main.player[j].zoneSnow && !Main.player[j].zoneBlood && !Main.player[j].zoneEvil && !Main.player[j].zoneHoly && Main.rand.Next(13) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 359, 0);
						}
						else if ((double)num2 < Main.worldSurface && Main.player[j].zoneJungle && Main.rand.Next(9) == 0)
						{
							NPC.NewNPC(num * 16 + 8, num2 * 16, 361, 0);
						}
						else if (num30 == 60 && Main.hardMode && Main.rand.Next(3) != 0)
						{
							if ((double)num2 < Main.worldSurface && !Main.dayTime && Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 152, 0);
							}
							else if ((double)num2 < Main.worldSurface && Main.dayTime && Main.rand.Next(4) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 177, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(100) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 205, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(5) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 236, 0);
							}
							else if ((double)num2 > Main.worldSurface && Main.rand.Next(4) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 176, 0);
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num31].SetDefaults("Tiny Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num31].SetDefaults("Little Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num31].SetDefaults("Big Moss Hornet");
								}
								if (Main.rand.Next(10) == 0)
								{
									Main.npc[num31].SetDefaults("Giant Moss Hornet");
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 175, 0);
								Main.npc[num31].ai[0] = (float)num;
								Main.npc[num31].ai[1] = (float)num2;
								Main.npc[num31].netUpdate = true;
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 153, 0);
							}
						}
						else if (num30 == 226 && flag2)
						{
							if (Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 226, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 198, 0);
							}
						}
						else if (num30 == 60 && (double)num2 > (Main.worldSurface + Main.rockLayer) / 2.0)
						{
							if (Main.rand.Next(4) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 204, 0);
							}
							else if (Main.rand.Next(4) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 43, 0);
								Main.npc[num31].ai[0] = (float)num;
								Main.npc[num31].ai[1] = (float)num2;
								Main.npc[num31].netUpdate = true;
							}
							else
							{
								int num46 = Main.rand.Next(8);
								if (num46 == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 231, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Hornet Fatty");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Hornet Fatty");
									}
								}
								else if (num46 == 1)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 232, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Hornet Honey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Hornet Honey");
									}
								}
								else if (num46 == 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 233, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Hornet Leafy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Hornet Leafy");
									}
								}
								else if (num46 == 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 234, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Hornet Spikey");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Hornet Spikey");
									}
								}
								else if (num46 == 4)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 235, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Hornet Stingy");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Hornet Stingy");
									}
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 42, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Little Stinger");
									}
									else if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Big Stinger");
									}
								}
							}
						}
						else if (num30 == 60 && Main.rand.Next(4) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0);
						}
						else if (num30 == 60 && Main.rand.Next(8) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 56, 0);
							Main.npc[num31].ai[0] = (float)num;
							Main.npc[num31].ai[1] = (float)num2;
							Main.npc[num31].netUpdate = true;
						}
						else if (Main.hardMode && num30 == 53 && Main.rand.Next(3) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 78, 0);
						}
						else if (Main.hardMode && (num30 == 112 || num30 == 234) && Main.rand.Next(2) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 79, 0);
						}
						else if (Main.hardMode && num30 == 116 && Main.rand.Next(2) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 80, 0);
						}
						else if (Main.hardMode && !flag5 && (double)num2 < Main.rockLayer && (num30 == 116 || num30 == 117 || num30 == 109 || num30 == 164))
						{
							if (!Main.dayTime && Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 122, 0);
							}
							else if (Main.rand.Next(10) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 86, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 75, 0);
							}
						}
						else if (!flag3 && Main.hardMode && Main.rand.Next(50) == 0 && !flag5 && (double)num2 >= Main.rockLayer && (num30 == 116 || num30 == 117 || num30 == 109 || num30 == 164))
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 84, 0);
						}
						else if ((num30 == 204 && Main.player[j].zoneBlood) || num30 == 199 || num30 == 200 || num30 == 203 || num30 == 234)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(5) == 0 && !flag3)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 182, 0);
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 268, 0);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 183, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Little Crimslime");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Big Crimslime");
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 179, 0);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.worldSurface))
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 174, 0);
							}
							else if ((Main.tile[num, num2].wall > 0 && Main.rand.Next(4) != 0) || Main.rand.Next(8) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 239, 0);
							}
							else if (Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 181, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 173, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Little Crimera");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Big Crimera");
								}
							}
						}
						else if ((num30 == 22 && Main.player[j].zoneEvil) || num30 == 23 || num30 == 25 || num30 == 112 || num30 == 163)
						{
							if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 101, 0);
								Main.npc[num31].ai[0] = (float)num;
								Main.npc[num31].ai[1] = (float)num2;
								Main.npc[num31].netUpdate = true;
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								if (Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 121, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 81, 0);
								}
							}
							else if (Main.hardMode && (double)num2 >= Main.rockLayer && Main.rand.Next(40) == 0 && !flag3)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 83, 0);
							}
							else if (Main.hardMode && (Main.rand.Next(2) == 0 || (double)num2 > Main.rockLayer))
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 94, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 6, 0);
								if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Little Eater");
								}
								else if (Main.rand.Next(3) == 0)
								{
									Main.npc[num31].SetDefaults("Big Eater");
								}
							}
						}
						else if ((double)num2 <= Main.worldSurface)
						{
							if (Main.player[j].zoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(243) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 243, 0);
							}
							else if (Main.player[j].zoneHoly && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(244) && Main.rand.Next(20) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 244, 0);
							}
							else if (!Main.player[j].zoneSnow && Main.hardMode && Main.cloudAlpha > 0f && !NPC.AnyNPCs(250) && Main.rand.Next(14) == 0)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 250, 0);
							}
							else if (Main.dayTime)
							{
								int num47 = Math.Abs(num - Main.spawnTileX);
								if (num47 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num30 == 2 || num30 == 109 || num30 == 147 || num30 == 161))
								{
									if (num30 == 147 || num30 == 161)
									{
										if (Main.rand.Next(2) == 0)
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 148, 0);
										}
										else
										{
											NPC.NewNPC(num * 16 + 8, num2 * 16, 149, 0);
										}
									}
									else if (Main.dayTime && Main.rand.Next(NPC.butterflyChance) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 356, 0);
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, 356, 0);
										}
										if (Main.rand.Next(4) == 0)
										{
											NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, 356, 0);
										}
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 303, 0);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 337, 0);
									}
									else if (Main.rand.Next(3) == 0 && (double)num2 <= Main.worldSurface)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 299, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 46, 0);
									}
								}
								else if (num47 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && num30 == 53)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(366, 368), 0);
								}
								else if (num47 < Main.maxTilesX / 3 && Main.dayTime && Main.time < 18000.0 && (num30 == 2 || num30 == 109) && Main.rand.Next(4) == 0 && (double)num2 <= Main.worldSurface && NPC.CountNPCS(74) + NPC.CountNPCS(297) + NPC.CountNPCS(298) < 6)
								{
									int num48 = Main.rand.Next(4);
									if (num48 == 0)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 297, 0);
									}
									else if (num48 == 1)
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 298, 0);
									}
									else
									{
										NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
									}
								}
								else if (num47 < Main.maxTilesX / 3 && Main.rand.Next(15) == 0 && (num30 == 2 || num30 == 109 || num30 == 147))
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16, 74, 0);
								}
								else if (num47 > Main.maxTilesX / 3 && num30 == 2 && Main.rand.Next(300) == 0 && !NPC.AnyNPCs(50))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 50, 0);
								}
								else if (num30 == 53 && Main.rand.Next(5) == 0 && !flag5)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 69, 0);
								}
								else if (num30 == 53 && !flag5)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 61, 0);
								}
								else if (num47 > Main.maxTilesX / 3 && (Main.rand.Next(15) == 0 || (!NPC.downedGoblins && WorldGen.shadowOrbSmashed && Main.rand.Next(7) == 0)))
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 73, 0);
								}
								else if (Main.raining && Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 224, 0);
								}
								else if (Main.raining && Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 225, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
									if (num30 == 60)
									{
										Main.npc[num31].SetDefaults("Jungle Slime");
									}
									else if (num30 == 161 || num30 == 147)
									{
										Main.npc[num31].SetDefaults("Ice Slime");
									}
									else if (Main.halloween && Main.rand.Next(3) != 0)
									{
										Main.npc[num31].SetDefaults(302, -1f);
									}
									else if (Main.xMas && Main.rand.Next(3) != 0)
									{
										Main.npc[num31].SetDefaults(Main.rand.Next(333, 337), -1f);
									}
									else if (Main.rand.Next(3) == 0 || num47 < 200)
									{
										Main.npc[num31].SetDefaults("Green Slime");
									}
									else if (Main.rand.Next(10) == 0 && num47 > 400)
									{
										Main.npc[num31].SetDefaults("Purple Slime");
									}
								}
							}
							else if ((num3 == 2 || num3 == 109) && Main.rand.Next(NPC.fireFlyChance) == 0 && (double)num2 <= Main.worldSurface)
							{
								int num49 = 355;
								if (num30 == 109)
								{
									num49 = 358;
								}
								NPC.NewNPC(num * 16 + 8, num2 * 16, num49, 0);
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 - 16, num2 * 16, num49, 0);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8 + 16, num2 * 16, num49, 0);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 - 16, num49, 0);
								}
								if (Main.rand.Next(NPC.fireFlyMultiple) == 0)
								{
									NPC.NewNPC(num * 16 + 8, num2 * 16 + 16, num49, 0);
								}
							}
							else if (Main.rand.Next(10) == 0 && Main.halloween)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 301, 0);
							}
							else if (Main.rand.Next(6) == 0 || (Main.moonPhase == 4 && Main.rand.Next(2) == 0))
							{
								if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 133, 0);
								}
								else if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(317, 319), 0);
								}
								else if (Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 2, 0);
									if (Main.rand.Next(4) == 0)
									{
										Main.npc[num31].SetDefaults("Demon Eye 2");
									}
								}
								else
								{
									int num50 = Main.rand.Next(5);
									if (num50 == 0)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 190, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num31].SetDefaults("Cataract Eye 2");
										}
									}
									else if (num50 == 1)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 191, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num31].SetDefaults("Sleepy Eye 2");
										}
									}
									else if (num50 == 2)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 192, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num31].SetDefaults("Dialated Eye 2");
										}
									}
									else if (num50 == 3)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 193, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num31].SetDefaults("Green Eye 2");
										}
									}
									else if (num50 == 4)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 194, 0);
										if (Main.rand.Next(3) == 0)
										{
											Main.npc[num31].SetDefaults("Purple Eye 2");
										}
									}
								}
							}
							else if (Main.hardMode && Main.rand.Next(50) == 0 && Main.bloodMoon && !NPC.AnyNPCs(109))
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 109, 0);
							}
							else if (Main.rand.Next(250) == 0 && Main.bloodMoon)
							{
								NPC.NewNPC(num * 16 + 8, num2 * 16, 53, 0);
							}
							else if (Main.moonPhase == 0 && Main.hardMode && Main.rand.Next(3) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 104, 0);
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 163 || num3 == 164 || num3 == 162)
							{
								if (Main.hardMode && Main.rand.Next(4) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0);
								}
								else if (Main.hardMode && Main.rand.Next(3) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 155, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 161, 0);
								}
							}
							else if (Main.raining && Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 223, 0);
								if (Main.rand.Next(3) == 0)
								{
									if (Main.rand.Next(2) == 0)
									{
										Main.npc[num31].SetDefaults("Small Rain Zombie");
									}
									else
									{
										Main.npc[num31].SetDefaults("Big Rain Zombie");
									}
								}
							}
							else
							{
								int num51 = Main.rand.Next(7);
								if (Main.halloween && Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(319, 322), 0);
								}
								else if (Main.xMas && Main.rand.Next(2) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(331, 333), 0);
								}
								else if (num51 == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 3, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Zombie");
										}
									}
								}
								else if (num51 == 1)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 132, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Bald Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Bald Zombie");
										}
									}
								}
								else if (num51 == 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 186, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Pincushion Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Pincushion Zombie");
										}
									}
								}
								else if (num51 == 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 187, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Slimed Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Slimed Zombie");
										}
									}
								}
								else if (num51 == 4)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 188, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Swamp Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Swamp Zombie");
										}
									}
								}
								else if (num51 == 5)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 189, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Twiggy Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Twiggy Zombie");
										}
									}
								}
								else if (num51 == 6)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 200, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Small Female Zombie");
										}
										else
										{
											Main.npc[num31].SetDefaults("Big Female Zombie");
										}
									}
								}
							}
						}
						else if ((double)num2 <= Main.rockLayer)
						{
							if (!flag3 && Main.rand.Next(50) == 0 && !Main.player[j].zoneSnow)
							{
								if (Main.hardMode)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1);
								}
								else if (Main.player[j].zoneSnow)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1);
								}
							}
							else if (Main.hardMode && Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 140, 0);
							}
							else if (Main.hardMode && Main.rand.Next(4) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 141, 0);
							}
							else if (num30 == 147 || num30 == 161 || Main.player[j].zoneSnow)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 147, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
								if (Main.rand.Next(5) == 0)
								{
									Main.npc[num31].SetDefaults("Yellow Slime");
								}
								else if (Main.rand.Next(2) == 0)
								{
									Main.npc[num31].SetDefaults("Blue Slime");
								}
								else
								{
									Main.npc[num31].SetDefaults("Red Slime");
								}
							}
						}
						else if (num2 > Main.maxTilesY - 190)
						{
							if (Main.rand.Next(40) == 0 && !NPC.AnyNPCs(39))
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 39, 1);
							}
							else if (Main.rand.Next(14) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 24, 0);
							}
							else if (Main.rand.Next(8) == 0)
							{
								if (Main.rand.Next(7) == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 66, 0);
								}
								else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 156, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 62, 0);
								}
							}
							else if (Main.rand.Next(3) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 59, 0);
							}
							else if (Main.hardMode && NPC.downedMechBossAny && Main.rand.Next(5) != 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 151, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 60, 0);
							}
						}
						else if (Main.rand.Next(60) == 0)
						{
							if (Main.player[j].zoneSnow)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 218, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 217, 0);
							}
						}
						else if ((num30 == 116 || num30 == 117 || num30 == 164) && Main.hardMode && !flag3 && Main.rand.Next(8) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 120, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneEvil && Main.rand.Next(30) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 170, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneHoly && Main.rand.Next(30) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0);
						}
						else if ((num3 == 147 || num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164) && !flag3 && Main.hardMode && Main.player[j].zoneBlood && Main.rand.Next(30) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 171, 0);
						}
						else if (Main.hardMode && Main.player[j].zoneSnow && Main.rand.Next(10) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 154, 0);
						}
						else if (!flag3 && Main.rand.Next(100) == 0 && !Main.player[j].zoneHoly)
						{
							if (Main.hardMode)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 95, 1);
							}
							else if (Main.player[j].zoneSnow)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 10, 1);
							}
						}
						else if (Main.player[j].zoneSnow && Main.rand.Next(20) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
						}
						else if (!Main.hardMode && Main.rand.Next(10) == 0)
						{
							if (Main.player[j].zoneSnow)
							{
								Main.npc[num31].SetDefaults(184, -1f);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 16, 0);
							}
						}
						else if (!Main.hardMode && Main.rand.Next(4) == 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 1, 0);
							if (Main.player[j].zoneJungle)
							{
								Main.npc[num31].SetDefaults("Jungle Slime");
							}
							else if (Main.player[j].zoneSnow)
							{
								Main.npc[num31].SetDefaults(184, -1f);
							}
							else
							{
								Main.npc[num31].SetDefaults("Black Slime");
							}
						}
						else if (Main.rand.Next(2) == 0)
						{
							if ((!Main.hardMode && Main.rand.Next(80) == 0) || Main.rand.Next(200) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 195, 0);
							}
							else if (Main.hardMode && (double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(300) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 172, 0);
							}
							else if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(250) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 45, 0);
							}
							else if (Main.hardMode && Main.rand.Next(10) != 0)
							{
								if (Main.rand.Next(2) == 0)
								{
									if (Main.player[j].zoneSnow)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 197, 0);
									}
									else if (Main.halloween && Main.rand.Next(5) == 0)
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 316, 0);
									}
									else
									{
										num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 77, 0);
										if ((double)num2 > (Main.rockLayer + (double)Main.maxTilesY) / 2.0 && Main.rand.Next(5) == 0)
										{
											Main.npc[num31].SetDefaults("Heavy Skeleton");
										}
									}
								}
								else if (Main.player[j].zoneSnow)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 206, 0);
								}
								else
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 110, 0);
								}
							}
							else if (Main.rand.Next(20) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 44, 0);
							}
							else if (num3 == 147 || num3 == 161 || num3 == 162)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 167, 0);
							}
							else if (Main.player[j].zoneSnow)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 185, 0);
							}
							else if (Main.halloween && Main.rand.Next(2) == 0)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, Main.rand.Next(322, 325), 0);
							}
							else
							{
								int num52 = Main.rand.Next(4);
								if (num52 == 0)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 21, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Big Skeleton");
										}
										else
										{
											Main.npc[num31].SetDefaults("Small Skeleton");
										}
									}
								}
								else if (num52 == 1)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 201, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Big Headache Skeleton");
										}
										else
										{
											Main.npc[num31].SetDefaults("Small Headache Skeleton");
										}
									}
								}
								else if (num52 == 2)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 202, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Big Misassembled Skeleton");
										}
										else
										{
											Main.npc[num31].SetDefaults("Small Misassembled Skeleton");
										}
									}
								}
								else if (num52 == 3)
								{
									num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 203, 0);
									if (Main.rand.Next(3) == 0)
									{
										if (Main.rand.Next(2) == 0)
										{
											Main.npc[num31].SetDefaults("Big Pantless Skeleton");
										}
										else
										{
											Main.npc[num31].SetDefaults("Small Pantless Skeleton");
										}
									}
								}
							}
						}
						else if (Main.hardMode && (Main.player[j].zoneHoly & Main.rand.Next(2) == 0))
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 138, 0);
						}
						else if (Main.player[j].zoneJungle)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 51, 0);
						}
						else if (Main.hardMode && Main.player[j].zoneHoly)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 137, 0);
						}
						else if (Main.hardMode && Main.rand.Next(6) > 0)
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 93, 0);
						}
						else if (num3 == 147 || num3 == 161 || num3 == 162)
						{
							if (Main.hardMode)
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 169, 0);
							}
							else
							{
								num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 150, 0);
							}
						}
						else
						{
							num31 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0);
						}
						if (Main.npc[num31].type == 1 && Main.rand.Next(250) == 0)
						{
							Main.npc[num31].SetDefaults("Pinky");
						}
						if (Main.netMode == 2 && num31 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num31, 0f, 0f, 0f, 0);
							return;
						}
						break;
					}
				}
			}
		}
		public static void SpawnWOF(Vector2 pos)
		{
			if (pos.Y / 16f < (float)(Main.maxTilesY - 205))
			{
				return;
			}
			if (Main.wof >= 0)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			Player.FindClosest(pos, 16, 16);
			int num = 1;
			if (pos.X / 16f > (float)(Main.maxTilesX / 2))
			{
				num = -1;
			}
			bool flag = false;
			int num2 = (int)pos.X;
			while (!flag)
			{
				flag = true;
				for (int i = 0; i < 255; i++)
				{
					if (Main.player[i].active && Main.player[i].position.X > (float)(num2 - 1200) && Main.player[i].position.X < (float)(num2 + 1200))
					{
						num2 -= num * 16;
						flag = false;
					}
				}
				if (num2 / 16 < 20 || num2 / 16 > Main.maxTilesX - 20)
				{
					flag = true;
				}
			}
			int num3 = (int)pos.Y;
			int num4 = num2 / 16;
			int num5 = num3 / 16;
			int num6 = 0;
			try
			{
				while (WorldGen.SolidTile(num4, num5 - num6) || Main.tile[num4, num5 - num6].liquid >= 100)
				{
					if (!WorldGen.SolidTile(num4, num5 + num6) && Main.tile[num4, num5 + num6].liquid < 100)
					{
						num5 += num6;
						goto IL_162;
					}
					num6++;
				}
				num5 -= num6;
			}
			catch
			{
			}
			IL_162:
			num3 = num5 * 16;
			int num7 = NPC.NewNPC(num2, num3, 113, 0);
			if (Main.npc[num7].displayName == "")
			{
				Main.npc[num7].displayName = Main.npc[num7].name;
			}
			if (Main.netMode == 0)
			{
				Main.NewText(Main.npc[num7].displayName + " " + Lang.misc[16], 175, 75, 255, false);
				return;
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(25, -1, -1, Main.npc[num7].displayName + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
			}
		}
		public static void SpawnOnPlayer(int plr, int Type)
		{
			if (Main.netMode == 1)
			{
				return;
			}
			if (Type == 262 && NPC.AnyNPCs(262))
			{
				return;
			}
			if (Type == 245)
			{
				if (NPC.AnyNPCs(245))
				{
					return;
				}
				try
				{
					int num = (int)Main.player[plr].center().X / 16;
					int num2 = (int)Main.player[plr].center().Y / 16;
					int num3 = 0;
					int num4 = 0;
					for (int i = num - 20; i < num + 20; i++)
					{
						for (int j = num2 - 20; j < num2 + 20; j++)
						{
							if (Main.tile[i, j].active() && Main.tile[i, j].type == 237 && Main.tile[i, j].frameX == 18 && Main.tile[i, j].frameY == 0)
							{
								num3 = i;
								num4 = j;
							}
						}
					}
					if (num3 > 0 && num4 > 0)
					{
						int num5 = num4 - 15;
						int num6 = num4 - 15;
						for (int k = num4; k > num4 - 100; k--)
						{
							if (WorldGen.SolidTile(num3, k))
							{
								num5 = k;
								break;
							}
						}
						for (int l = num4; l < num4 + 100; l++)
						{
							if (WorldGen.SolidTile(num3, l))
							{
								num6 = l;
								break;
							}
						}
						num4 = (num5 + num5 + num6) / 3;
						int num7 = NPC.NewNPC(num3 * 16 + 8, num4 * 16, 245, 100);
						Main.npc[num7].target = plr;
						string str = Main.npc[num7].name;
						if (Main.netMode == 0)
						{
							Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
						}
					}
				}
				catch
				{
				}
				return;
			}
			else
			{
				if (Type != 370)
				{
					bool flag = false;
					int num8 = 0;
					int num9 = 0;
					int num10 = (int)(Main.player[plr].position.X / 16f) - NPC.spawnRangeX * 2;
					int num11 = (int)(Main.player[plr].position.X / 16f) + NPC.spawnRangeX * 2;
					int num12 = (int)(Main.player[plr].position.Y / 16f) - NPC.spawnRangeY * 2;
					int num13 = (int)(Main.player[plr].position.Y / 16f) + NPC.spawnRangeY * 2;
					int num14 = (int)(Main.player[plr].position.X / 16f) - NPC.safeRangeX;
					int num15 = (int)(Main.player[plr].position.X / 16f) + NPC.safeRangeX;
					int num16 = (int)(Main.player[plr].position.Y / 16f) - NPC.safeRangeY;
					int num17 = (int)(Main.player[plr].position.Y / 16f) + NPC.safeRangeY;
					if (num10 < 0)
					{
						num10 = 0;
					}
					if (num11 > Main.maxTilesX)
					{
						num11 = Main.maxTilesX;
					}
					if (num12 < 0)
					{
						num12 = 0;
					}
					if (num13 > Main.maxTilesY)
					{
						num13 = Main.maxTilesY;
					}
					for (int m = 0; m < 1000; m++)
					{
						int n = 0;
						while (n < 100)
						{
							int num18 = Main.rand.Next(num10, num11);
							int num19 = Main.rand.Next(num12, num13);
							if (Main.tile[num18, num19].nactive() && Main.tileSolid[(int)Main.tile[num18, num19].type])
							{
								goto IL_62B;
							}
							if (!Main.wallHouse[(int)Main.tile[num18, num19].wall] || m >= 999)
							{
								int num20 = num19;
								while (num20 < Main.maxTilesY)
								{
									if (Main.tile[num18, num20].nactive() && Main.tileSolid[(int)Main.tile[num18, num20].type])
									{
										if (num18 < num14 || num18 > num15 || num20 < num16 || num20 > num17 || m == 999)
										{
											ushort arg_54D_0 = Main.tile[num18, num20].type;
											num8 = num18;
											num9 = num20;
											flag = true;
											break;
										}
										break;
									}
									else
									{
										num20++;
									}
								}
								if (!flag || m >= 999)
								{
									goto IL_62B;
								}
								int num21 = num8 - NPC.spawnSpaceX / 2;
								int num22 = num8 + NPC.spawnSpaceX / 2;
								int num23 = num9 - NPC.spawnSpaceY;
								int num24 = num9;
								if (num21 < 0)
								{
									flag = false;
								}
								if (num22 > Main.maxTilesX)
								{
									flag = false;
								}
								if (num23 < 0)
								{
									flag = false;
								}
								if (num24 > Main.maxTilesY)
								{
									flag = false;
								}
								if (flag)
								{
									for (int num25 = num21; num25 < num22; num25++)
									{
										for (int num26 = num23; num26 < num24; num26++)
										{
											if (Main.tile[num25, num26].nactive() && Main.tileSolid[(int)Main.tile[num25, num26].type])
											{
												flag = false;
												break;
											}
										}
									}
									goto IL_62B;
								}
								goto IL_62B;
							}
							IL_633:
							n++;
							continue;
							IL_62B:
							if (!flag && !flag)
							{
								goto IL_633;
							}
							break;
						}
						if (flag && m < 999)
						{
							Rectangle rectangle = new Rectangle(num8 * 16, num9 * 16, 16, 16);
							for (int num27 = 0; num27 < 255; num27++)
							{
								if (Main.player[num27].active)
								{
									Rectangle rectangle2 = new Rectangle((int)(Main.player[num27].position.X + (float)(Main.player[num27].width / 2) - (float)(NPC.sWidth / 2) - (float)NPC.safeRangeX), (int)(Main.player[num27].position.Y + (float)(Main.player[num27].height / 2) - (float)(NPC.sHeight / 2) - (float)NPC.safeRangeY), NPC.sWidth + NPC.safeRangeX * 2, NPC.sHeight + NPC.safeRangeY * 2);
									if (rectangle.Intersects(rectangle2))
									{
										flag = false;
									}
								}
							}
						}
						if (flag)
						{
							break;
						}
					}
					if (flag)
					{
						int num28 = NPC.NewNPC(num8 * 16 + 8, num9 * 16, Type, 1);
						if (num28 == 200)
						{
							return;
						}
						Main.npc[num28].target = plr;
						Main.npc[num28].timeLeft *= 20;
						string str2 = Main.npc[num28].name;
						if (Main.npc[num28].displayName != "")
						{
							str2 = Main.npc[num28].displayName;
						}
						if (Main.netMode == 2 && num28 < 200)
						{
							NetMessage.SendData(23, -1, -1, "", num28, 0f, 0f, 0f, 0);
						}
						if (Type == 125)
						{
							if (Main.netMode == 0)
							{
								Main.NewText("The Twins " + Lang.misc[16], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
								return;
							}
						}
						else if (Type != 82 && Type != 126 && Type != 50)
						{
							if (Main.netMode == 0)
							{
								Main.NewText(str2 + " " + Lang.misc[16], 175, 75, 255, false);
								return;
							}
							if (Main.netMode == 2)
							{
								NetMessage.SendData(25, -1, -1, str2 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
							}
						}
					}
					return;
				}
				Player player = Main.player[plr];
				if (!player.active || player.dead)
				{
					return;
				}
				int num29 = 0;
				while (num29 < 1000)
				{
					Projectile projectile = Main.projectile[num29];
					if (projectile.active && projectile.bobber && projectile.owner == plr)
					{
						int num30 = NPC.NewNPC((int)projectile.center().X, (int)projectile.center().Y + 100, 370, 0);
						string str3 = Main.npc[num30].name;
						if (Main.netMode == 0)
						{
							Main.NewText(str3 + " " + Lang.misc[16], 175, 75, 255, false);
							return;
						}
						if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, str3 + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
							return;
						}
						break;
					}
					else
					{
						num29++;
					}
				}
				return;
			}
		}
		public static int NewNPC(int X, int Y, int Type, int Start = 0)
		{
			int num = -1;
			if (Type == 222)
			{
				for (int i = 199; i >= 0; i--)
				{
					if (!Main.npc[i].active)
					{
						num = i;
						break;
					}
				}
			}
			else
			{
				for (int j = Start; j < 200; j++)
				{
					if (!Main.npc[j].active)
					{
						num = j;
						break;
					}
				}
			}
			if (num >= 0)
			{
				Main.npc[num] = new NPC();
				Main.npc[num].SetDefaults(Type, -1f);
				if (NPC.TypeToNum(Type) != -1)
				{
					Main.npc[num].displayName = NPC.getNewNPCName(Type);
				}
				Main.npc[num].position.X = (float)(X - Main.npc[num].width / 2);
				Main.npc[num].position.Y = (float)(Y - Main.npc[num].height);
				Main.npc[num].active = true;
				Main.npc[num].timeLeft = (int)((double)NPC.activeTime * 1.25);
				Main.npc[num].wet = Collision.WetCollision(Main.npc[num].position, Main.npc[num].width, Main.npc[num].height);
				if (Type == 50)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Main.npc[num].name + " " + Lang.misc[16], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Main.npc[num].name + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
					}
				}
				return num;
			}
			return 200;
		}
		public void xForm(int oldType, int newType)
		{
			if ((oldType == 158 && newType == 159) || (oldType == 159 && newType == 158))
			{
				Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
				int num = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
				num = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), this.velocity, 99, this.scale);
				Main.gore[num].velocity *= 0.3f;
			}
		}
		public void Teleport(Vector2 newPos, int Style = 0)
		{
			Main.TeleportEffect(this.getRect(), Style);
			this.position = newPos;
			Main.TeleportEffect(this.getRect(), Style);
			this.teleportTime = 1f;
			if (Main.netMode == 2)
			{
				NetMessage.SendData(65, -1, -1, "", 1, (float)this.whoAmI, newPos.X, newPos.Y, Style);
			}
		}
		public void Transform(int newType)
		{
			if (Main.netMode != 1)
			{
				bool flag = false;
				if (this.value == 0f)
				{
					flag = true;
				}
				int[] array = new int[5];
				int[] array2 = new int[5];
				for (int i = 0; i < 5; i++)
				{
					array[i] = this.buffType[i];
					array2[i] = this.buffTime[i];
				}
				int oldType = this.type;
				int num = this.life;
				int num2 = this.lifeMax;
				Vector2 vector = this.velocity;
				this.position.Y = this.position.Y + (float)this.height;
				int num3 = this.spriteDirection;
				this.SetDefaults(newType, -1f);
				this.spriteDirection = num3;
				this.TargetClosest(true);
				this.velocity = vector;
				this.position.Y = this.position.Y - (float)this.height;
				if (flag)
				{
					this.value = 0f;
				}
				if (this.lifeMax == num2)
				{
					this.life = num;
				}
				if (newType == 107 || newType == 108)
				{
					this.homeTileX = (int)(this.position.X + (float)(this.width / 2)) / 16;
					this.homeTileY = (int)(this.position.Y + (float)this.height) / 16;
					this.homeless = true;
				}
				for (int j = 0; j < 5; j++)
				{
					this.buffType[j] = array[j];
					this.buffTime[j] = array2[j];
				}
				if (Main.netMode == 2)
				{
					this.netUpdate = true;
					NetMessage.SendData(23, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
				}
				this.xForm(oldType, newType);
				if (NPC.TypeToNum(this.type) != -1)
				{
					Main.npc[this.whoAmI].displayName = NPC.getNewNPCName(this.type);
				}
				this.npcNameLookup = 0;
				if (this.townNPC)
				{
					this.homeless = true;
				}
			}
		}
		public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false)
		{
			if (!this.active || this.life <= 0)
			{
				return 0.0;
			}
			double num = (double)Damage;
			if (this.ichor)
			{
				num = Main.CalculateDamage((int)num, this.defense - 20);
			}
			else
			{
				num = Main.CalculateDamage((int)num, this.defense);
			}
			if (crit)
			{
				num *= 2.0;
			}
			if (Damage != 9999 && this.lifeMax > 1)
			{
				if (this.friendly)
				{
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), new Color(255, 80, 90, 255), string.Concat((int)num), crit, false);
				}
				else
				{
					CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), new Color(255, 160, 80, 255), string.Concat((int)num), crit, false);
				}
			}
			if (num >= 1.0)
			{
				this.justHit = true;
				if (this.townNPC)
				{
					this.ai[0] = 1f;
					this.ai[1] = (float)(300 + Main.rand.Next(300));
					this.ai[2] = 0f;
					this.direction = hitDirection;
					this.netUpdate = true;
				}
				if (this.aiStyle == 8 && Main.netMode != 1)
				{
					if (this.type == 172)
					{
						this.ai[0] = 450f;
					}
					else
					{
						this.ai[0] = 400f;
					}
					this.TargetClosest(true);
				}
				if (this.type == 371)
				{
					num = 0.0;
					this.ai[0] = 1f;
					this.ai[1] = 4f;
					this.dontTakeDamage = true;
				}
				if (this.type == 346 && (double)this.life >= (double)this.lifeMax * 0.5 && (double)this.life - num < (double)this.lifeMax * 0.5)
				{
					Gore.NewGore(this.position, this.velocity, 517, 1f);
				}
				if (this.type == 184)
				{
					this.localAI[0] = 60f;
				}
				if (this.type == 185)
				{
					this.localAI[0] = 1f;
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].life -= (int)num;
					this.life = Main.npc[this.realLife].life;
					this.lifeMax = Main.npc[this.realLife].lifeMax;
				}
				else
				{
					this.life -= (int)num;
				}
				if (knockBack > 0f && this.knockBackResist > 0f)
				{
					float num2 = knockBack * this.knockBackResist;
					if (num2 > 8f)
					{
						num2 = 8f;
					}
					if (crit)
					{
						num2 *= 1.4f;
					}
					if (num * 10.0 > (double)this.lifeMax)
					{
						if (hitDirection < 0 && this.velocity.X > -num2)
						{
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num2;
							}
							this.velocity.X = this.velocity.X - num2;
							if (this.velocity.X < -num2)
							{
								this.velocity.X = -num2;
							}
						}
						else if (hitDirection > 0 && this.velocity.X < num2)
						{
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num2;
							}
							this.velocity.X = this.velocity.X + num2;
							if (this.velocity.X > num2)
							{
								this.velocity.X = num2;
							}
						}
						if (this.type == 185)
						{
							num2 *= 1.5f;
						}
						if (!this.noGravity)
						{
							num2 *= -0.75f;
						}
						else
						{
							num2 *= -0.5f;
						}
						if (this.velocity.Y > num2)
						{
							this.velocity.Y = this.velocity.Y + num2;
							if (this.velocity.Y < num2)
							{
								this.velocity.Y = num2;
							}
						}
					}
					else
					{
						if (!this.noGravity)
						{
							this.velocity.Y = -num2 * 0.75f * this.knockBackResist;
						}
						else
						{
							this.velocity.Y = -num2 * 0.5f * this.knockBackResist;
						}
						this.velocity.X = num2 * (float)hitDirection * this.knockBackResist;
					}
				}
				if ((this.type == 113 || this.type == 114) && this.life <= 0)
				{
					for (int i = 0; i < 200; i++)
					{
						if (Main.npc[i].active && (Main.npc[i].type == 113 || Main.npc[i].type == 114))
						{
							Main.npc[i].HitEffect(hitDirection, num);
						}
					}
				}
				else
				{
					this.HitEffect(hitDirection, num);
				}
				if (this.soundHit > 0)
				{
					Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, this.soundHit);
				}
				if (this.realLife >= 0)
				{
					Main.npc[this.realLife].checkDead();
				}
				else
				{
					this.checkDead();
				}
				return num;
			}
			return 0.0;
		}
		public void checkDead()
		{
			if (!this.active)
			{
				return;
			}
			if (this.realLife >= 0 && this.realLife != this.whoAmI)
			{
				return;
			}
			if (this.life <= 0)
			{
				NPC.noSpawnCycle = true;
				if (this.townNPC && this.type != 37)
				{
					string str = this.name;
					if (this.displayName != "")
					{
						str = this.displayName;
					}
					if (Main.netMode == 0)
					{
						if (this.type == 369)
						{
							Main.NewText(str + Lang.misc[36], 255, 25, 25, false);
						}
						else
						{
							Main.NewText(str + Lang.misc[19], 255, 25, 25, false);
						}
					}
					else if (Main.netMode == 2)
					{
						if (this.type == 369)
						{
							NetMessage.SendData(25, -1, -1, str + Lang.misc[36], 255, 255f, 25f, 25f, 0);
						}
						else
						{
							NetMessage.SendData(25, -1, -1, str + Lang.misc[19], 255, 255f, 25f, 25f, 0);
						}
					}
				}
				if (Main.netMode != 1 && !Main.dayTime && this.type == 54 && !NPC.AnyNPCs(35))
				{
					for (int i = 0; i < 255; i++)
					{
						if (Main.player[i].active && !Main.player[i].dead && Main.player[i].killClothier)
						{
							NPC.SpawnSkeletron();
							break;
						}
					}
				}
				if (this.townNPC && Main.netMode != 1 && this.homeless && WorldGen.spawnNPC == this.type)
				{
					WorldGen.spawnNPC = 0;
				}
				if (this.soundKilled > 0)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, this.soundKilled);
				}
				if (this.type == 134)
				{
					Vector2 vector = this.position;
					Vector2 vector2 = Main.player[this.target].center();
					float num = 1E+08f;
					Vector2 vector3 = this.position;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].active && (Main.npc[j].type == 134 || Main.npc[j].type == 135 || Main.npc[j].type == 136))
						{
							float num2 = Math.Abs(Main.npc[j].center().X - vector2.X) + Math.Abs(Main.npc[j].center().Y - vector2.Y);
							if (num2 < num)
							{
								num = num2;
								vector3 = Main.npc[j].position;
							}
						}
					}
					this.position = vector3;
					this.NPCLoot();
					this.position = vector;
				}
				else
				{
					this.NPCLoot();
				}
				this.active = false;
				if (Main.snowMoon)
				{
					float arg_317_0 = NPC.waveKills;
					if (this.type >= 338 && this.type <= 340)
					{
						NPC.waveKills += 1f;
					}
					if (this.type == 342)
					{
						NPC.waveKills += 2f;
					}
					if (this.type == 341)
					{
						NPC.waveKills += 20f;
					}
					if (this.type == 350)
					{
						NPC.waveKills += 3f;
					}
					if (this.type == 348 || this.type == 349)
					{
						NPC.waveKills += 4f;
					}
					if (this.type == 347)
					{
						NPC.waveKills += 8f;
					}
					if (this.type == 351)
					{
						NPC.waveKills += 10f;
					}
					if (this.type == 352)
					{
						NPC.waveKills += 5f;
					}
					if (this.type == 343)
					{
						NPC.waveKills += 18f;
					}
					if (this.type == 344)
					{
						NPC.waveKills += 50f;
					}
					if (this.type == 346)
					{
						NPC.waveKills += 100f;
					}
					if (this.type == 345)
					{
						NPC.waveKills += 150f;
					}
					string text = "";
					if (NPC.waveCount == 1 && NPC.waveKills >= 25f)
					{
						NPC.waveCount++;
						NPC.waveKills = 25f;
						text = "Wave 2: Zombie Elf and Elf Archer";
					}
					if (NPC.waveCount == 2 && NPC.waveKills >= 40f)
					{
						NPC.waveCount++;
						NPC.waveKills = 40f;
						text = "Wave 3: Zombie Elf, Elf Archer, Gingerbread Man, and Nutcracker";
					}
					if (NPC.waveCount == 3 && NPC.waveKills >= 50f)
					{
						NPC.waveCount++;
						NPC.waveKills = 50f;
						text = "Wave 4: Everscream, Zombie Elf, Elf Archer, and Gingerbread Man";
					}
					if (NPC.waveCount == 4 && NPC.waveKills >= 80f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 5: Everscream, Zombie Elf, Elf Archer, and Nutcracker";
					}
					if (NPC.waveCount == 5 && NPC.waveKills >= 100f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 6: Everscream, Elf Archer, Nutcracker, and Elf Copter";
					}
					if (NPC.waveCount == 6 && NPC.waveKills >= 160f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 7: Santa-NK1, Gingerbread Man, Elf Archer, and Zombie Elf";
					}
					if (NPC.waveCount == 7 && NPC.waveKills >= 180f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 8: Santa-NK1, Elf Copter, Elf Archer, Nutcracker, and Krampus";
					}
					if (NPC.waveCount == 8 && NPC.waveKills >= 200f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 9: Santa-NK1, Everscream, Nutcracker, Elf Copter, and Gingerbread Man";
					}
					if (NPC.waveCount == 9 && NPC.waveKills >= 250f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 10: Santa-NK1, Everscream, Krampus, Zombie Elf, and Elf Helicopter";
					}
					if (NPC.waveCount == 10 && NPC.waveKills >= 300f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 11: Ice Queen, Flocko, Zombie Elf, and Gingerbread Man";
					}
					if (NPC.waveCount == 11 && NPC.waveKills >= 375f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 12: Ice Queen, Everscream, Gingerbread Man, Yeti, and Zombie Elf";
					}
					if (NPC.waveCount == 12 && NPC.waveKills >= 450f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 13: Ice Queen, Santa-NK1, Gingerbread Man, Flocko, Yeti, and Elf Helicopter";
					}
					if (NPC.waveCount == 13 && NPC.waveKills >= 525f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 14: Ice Queen, Santa-NK1, Everscream, Yeti, and Krampus";
					}
					if (NPC.waveCount == 14 && NPC.waveKills >= 675f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 15: Ice Queen, Santa-NK1, Everscream, Yeti, and Elf Copter";
					}
					if (NPC.waveCount == 15 && NPC.waveKills >= 850f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 16: Ice Queen, Santa-NK1, Everscream, Yeti and Flocko";
					}
					if (NPC.waveCount == 16 && NPC.waveKills >= 1025f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 17: Ice Queen, Santa-NK1, Everscream, Yeti, Krampus, Elf Copter";
					}
					if (NPC.waveCount == 17 && NPC.waveKills >= 1325f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 18: Ice Queen, Santa-NK1, Everscream, Yeti, Nutcracker, Krampus";
					}
					if (NPC.waveCount == 18 && NPC.waveKills >= 1550f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Wave 19: Ice Queen, Santa-NK1, Everscream, Yeti";
					}
					if (NPC.waveCount == 19 && NPC.waveKills >= 2000f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text = "Final Wave: Ice Queen, Santa-NK1, and Everscream";
					}
					if (text != "")
					{
						if (Main.netMode == 0)
						{
							Main.NewText(text, 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, text, 255, 175f, 75f, 255f, 0);
						}
					}
				}
				if (Main.pumpkinMoon)
				{
					float arg_8A5_0 = NPC.waveKills;
					if (this.type >= 305 && this.type <= 314)
					{
						NPC.waveKills += 1f;
					}
					if (this.type == 326)
					{
						NPC.waveKills += 2f;
					}
					if (this.type == 329)
					{
						NPC.waveKills += 4f;
					}
					if (this.type == 330)
					{
						NPC.waveKills += 8f;
					}
					if (this.type == 315)
					{
						NPC.waveKills += 25f;
					}
					if (this.type == 325)
					{
						NPC.waveKills += 75f;
					}
					if (this.type == 327)
					{
						NPC.waveKills += 150f;
					}
					string text2 = "";
					if (NPC.waveCount == 1 && NPC.waveKills >= 25f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = "Wave 2: " + Main.npcName[305] + " and " + Main.npcName[326];
					}
					if (NPC.waveCount == 2 && NPC.waveKills >= 40f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 3: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", and ",
							Main.npcName[329]
						});
					}
					if (NPC.waveCount == 3 && NPC.waveKills >= 50f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 4: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 4 && NPC.waveKills >= 80f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 5: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 5 && NPC.waveKills >= 100f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 6: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[325]
						});
					}
					if (NPC.waveCount == 6 && NPC.waveKills >= 160f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 7: ",
							Main.npcName[305],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 7 && NPC.waveKills >= 180f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 8: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 8 && NPC.waveKills >= 200f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 9: ",
							Main.npcName[305],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 9 && NPC.waveKills >= 250f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 10: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 10 && NPC.waveKills >= 300f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 11: ",
							Main.npcName[305],
							", ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 11 && NPC.waveKills >= 375f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 12: ",
							Main.npcName[326],
							", ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 12 && NPC.waveKills >= 450f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 13: ",
							Main.npcName[329],
							", ",
							Main.npcName[330],
							", ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 13 && NPC.waveKills >= 525f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = string.Concat(new string[]
						{
							"Wave 14: ",
							Main.npcName[315],
							", ",
							Main.npcName[325],
							", and ",
							Main.npcName[327]
						});
					}
					if (NPC.waveCount == 14 && NPC.waveKills >= 675f)
					{
						NPC.waveCount++;
						NPC.waveKills = 0f;
						text2 = "Final Wave: " + Main.npcName[325] + ", and " + Main.npcName[327];
					}
					if (text2 != "")
					{
						if (Main.netMode == 0)
						{
							Main.NewText(text2, 175, 75, 255, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, text2, 255, 175f, 75f, 255f, 0);
						}
					}
				}
				if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111 || this.type == 143 || this.type == 144 || this.type == 145 || this.type == 212 || this.type == 213 || this.type == 214 || this.type == 215)
				{
					Main.invasionSize--;
				}
				if (this.type == 216)
				{
					Main.invasionSize -= 5;
				}
			}
		}
		public void NPCLoot()
		{
			bool flag = NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3;
			if (this.type == 23 && Main.hardMode)
			{
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			if (Main.hardMode && this.lifeMax > 1 && this.damage > 0 && !this.friendly && (double)this.position.Y > Main.rockLayer * 16.0 && Main.rand.Next(5) == 0 && this.type != 121 && this.value > 0f)
			{
				if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneEvil || Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneBlood)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 521, 1, false, 0, false);
				}
				if (Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneHoly)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 520, 1, false, 0, false);
				}
			}
			if (this.type == 22 && this.displayName == "Andrew")
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 867, 1, false, 0, false);
			}
			if (Main.rand.Next(200) == 0)
			{
				int num = Item.NPCtoBanner(this.type);
				if (num > 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1615 + num - 1, 1, false, 0, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (!NPC.downedMechBoss1 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 556, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss2 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 544, 1, false, 0, false);
				}
				else if (!NPC.downedMechBoss3 && Main.rand.Next(2500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 557, 1, false, 0, false);
				}
			}
			if (Main.halloween && this.value > 0f && this.value < 500f && this.damage < 40 && this.defense < 20)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1825, 1, false, 0, false);
				}
				else if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1827, 1, false, 0, false);
				}
			}
			if (Main.hardMode && this.value > 0f)
			{
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneJungle)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1803, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneEvil)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1804, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneBlood)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1805, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneHoly)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1806, 1, false, 0, false);
				}
				if (Main.rand.Next(2500) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].zoneSnow)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1807, 1, false, 0, false);
				}
			}
			if (this.type == 68)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1169, 1, false, 0, false);
			}
			if (Main.snowMoon)
			{
				int num2 = (int)((double)(30 - NPC.waveCount) / 2.5);
				if (num2 < 1)
				{
					num2 = 1;
				}
				if ((this.type == 344 || this.type == 345 || this.type == 346) && Main.rand.Next(num2) == 0 && NPC.waveCount >= 15)
				{
					int maxValue = 4;
					if (NPC.waveCount == 16)
					{
						maxValue = 4;
					}
					if (NPC.waveCount == 17)
					{
						maxValue = 3;
					}
					if (NPC.waveCount == 18)
					{
						maxValue = 3;
					}
					if (NPC.waveCount == 19)
					{
						maxValue = 2;
					}
					if (NPC.waveCount == 20)
					{
						maxValue = 2;
					}
					if (Main.rand.Next(maxValue) == 0)
					{
						if (this.type == 344)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1962, 1, false, 0, false);
						}
						if (this.type == 345)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1960, 1, false, 0, false);
						}
						if (this.type == 346)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1961, 1, false, 0, false);
						}
					}
				}
				if (Main.rand.Next(num2) == 0)
				{
					if (this.type == 344)
					{
						int num3 = Main.rand.Next(3);
						if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1871, 1, false, -1, false);
						}
						else
						{
							if (num3 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1916, 1, false, 0, false);
							}
							if (num3 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1928, 1, false, -1, false);
							}
							if (num3 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1930, 1, false, -1, false);
							}
						}
					}
					if (this.type == 346)
					{
						int num4 = Main.rand.Next(2);
						if (num4 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1910, 1, false, -1, false);
						}
						if (num4 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1929, 1, false, -1, false);
						}
					}
					if (this.type == 345)
					{
						if (NPC.waveCount >= 15 && Main.rand.Next(30) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1914, 1, false, 0, false);
						}
						else if (Main.rand.Next(15) == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1959, 1, false, 0, false);
						}
						else
						{
							int num5 = Main.rand.Next(3);
							if (num5 == 0)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1931, 1, false, -1, false);
							}
							if (num5 == 1)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1946, 1, false, -1, false);
							}
							if (num5 == 2)
							{
								Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1947, 1, false, -1, false);
							}
						}
					}
				}
			}
			if (Main.pumpkinMoon)
			{
				int num6 = (int)((double)(17 - NPC.waveCount) / 1.25);
				if (num6 < 1)
				{
					num6 = 1;
				}
				if (NPC.waveCount == 15)
				{
					if (this.type == 325)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1855, 1, false, 0, false);
					}
					if (this.type == 327)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1856, 1, false, 0, false);
					}
				}
				if (Main.rand.Next(num6) == 0)
				{
					if (this.type == 315 && Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1857, 1, false, 0, false);
					}
					if (this.type >= 305 && this.type <= 314 && Main.rand.Next(10) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(1788, 1791), 1, false, 0, false);
					}
					if (this.type == 325)
					{
						int num7 = Main.rand.Next(5);
						if (num7 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1829, 1, false, 0, false);
						}
						if (num7 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1831, 1, false, 0, false);
						}
						if (num7 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1835, 1, false, -1, false);
						}
						if (num7 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1836, Main.rand.Next(30, 61), false, 0, false);
						}
						if (num7 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1837, 1, false, 0, false);
						}
						if (num7 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1845, 1, false, -1, false);
						}
					}
					if (this.type == 327)
					{
						int num8 = Main.rand.Next(7);
						if (num8 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1782, 1, false, -1, false);
						}
						if (num8 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1783, Main.rand.Next(50, 101), false, 0, false);
						}
						if (num8 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1784, 1, false, -1, false);
						}
						if (num8 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1785, Main.rand.Next(25, 51), false, 0, false);
						}
						if (num8 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1811, 1, false, 0, false);
						}
						if (num8 == 3)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1826, 1, false, -1, false);
						}
						if (num8 == 4)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1801, 1, false, -1, false);
						}
						if (num8 == 5)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1802, 1, false, -1, false);
						}
						if (num8 == 6)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1798, 1, false, 0, false);
						}
					}
				}
			}
			if (this.type == 325)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(30, 51), false, 0, false);
			}
			if (this.type == 326)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1729, Main.rand.Next(1, 5), false, 0, false);
			}
			if (this.type >= 305 && this.type <= 314 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 326 && Main.rand.Next(6) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 329 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 330 && Main.rand.Next(4) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 315)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 341)
			{
				int num9 = Main.rand.Next(5, 11);
				for (int i = 0; i < num9; i++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
				if (Main.xMas)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
				}
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(5) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type >= 338 && this.type <= 340 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1943 + Main.rand.Next(3), 1, false, 0, false);
			}
			if (this.type == 342 && Main.rand.Next(3) != 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.lifeMax > 5 && this.value > 0f && !this.friendly && Main.hardMode && this.position.Y / 16f > (float)(Main.maxTilesY - 200) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2701, Main.rand.Next(20, 51), false, 0, false);
			}
			if (this.type == 325 || this.type == 327 || this.type == 344 || this.type == 345 || this.type == 346)
			{
				int num10 = Main.rand.Next(6) + 6;
				for (int j = 0; j < num10; j++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 156 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1518, 1, false, 0, false);
			}
			if (this.type == 243 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1519, 1, false, 0, false);
			}
			if (this.type >= 269 && this.type <= 280 && Main.rand.Next(450) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1517, 1, false, 0, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1520, 1, false, 0, false);
			}
			if (this.type == 176 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1521, 1, false, 0, false);
			}
			if (this.type == 48 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1516, 1, false, 0, false);
			}
			if (this.type == 205 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1611, 1, false, 0, false);
			}
			if (Main.halloween && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.type != 23 && this.value > 0f && Main.rand.Next(80) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1774, 1, false, 0, false);
			}
			if (Main.xMas && this.lifeMax > 1 && this.damage > 0 && !this.friendly && this.type != 121 && this.value > 0f && Main.rand.Next(13) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1869, 1, false, 0, false);
			}
			if ((this.type == 281 || this.type == 282) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1446, 1, false, -1, false);
			}
			if ((this.type == 283 || this.type == 284) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1444, 1, false, -1, false);
			}
			if ((this.type == 285 || this.type == 286) && Main.rand.Next(40) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1445, 1, false, -1, false);
			}
			if (this.lifeMax > 100 && this.type != 288 && this.target >= 0 && Main.hardMode && NPC.downedPlantBoss && Main.player[this.target].zoneDungeon && Main.rand.Next(15) == 0 && Main.wallDungeon[(int)Main.tile[(int)this.center().X / 16, (int)this.center().Y / 16].wall])
			{
				NPC.NewNPC((int)this.center().X, (int)this.center().Y, 288, 0);
			}
			if (this.type == 288)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1508, Main.rand.Next(1, 3), false, -1, false);
			}
			if ((this.type == 162 || this.type == 166) && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1570, 1, false, -1, false);
			}
			if ((this.type == 158 || this.type == 159) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 900, 1, false, -1, false);
			}
			if (this.type == 35)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1281, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1273, 1, false, -1, false);
				}
				else if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1313, 1, false, -1, false);
				}
			}
			if (Main.bloodMoon && Main.hardMode && Main.rand.Next(1000) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1314, 1, false, -1, false);
			}
			if (Main.rand.Next(100) == 0)
			{
				int num11 = -1;
				int num12 = -1;
				int num13 = this.type;
				if (num13 <= 109)
				{
					if (num13 > 42)
					{
						switch (num13)
						{
						case 75:
							if (Main.rand.Next(2) == 0)
							{
								num11 = 889;
							}
							else
							{
								num11 = 890;
							}
							if (Main.rand.Next(100) != 0)
							{
								goto IL_1E31;
							}
							if (num11 == 889)
							{
								num12 = 890;
								goto IL_1E31;
							}
							num12 = 889;
							goto IL_1E31;
						case 76:
						case 85:
						case 86:
						case 87:
						case 88:
						case 89:
						case 90:
						case 91:
						case 92:
							goto IL_1E31;
						case 77:
							goto IL_1D47;
						case 78:
						case 82:
							num11 = 889;
							goto IL_1E31;
						case 79:
							if (Main.rand.Next(2) == 0)
							{
								num11 = 888;
							}
							else
							{
								num11 = 890;
							}
							if (Main.rand.Next(100) != 0)
							{
								goto IL_1E31;
							}
							if (num11 == 888)
							{
								num12 = 890;
								goto IL_1E31;
							}
							num12 = 888;
							goto IL_1E31;
						case 80:
						case 93:
							break;
						case 81:
							num11 = 888;
							goto IL_1E31;
						case 83:
						case 84:
							goto IL_1D83;
						case 94:
							goto IL_1D8F;
						default:
							switch (num13)
							{
							case 102:
							case 104:
								goto IL_1D3B;
							case 103:
								num11 = 890;
								goto IL_1E31;
							default:
								if (num13 != 109)
								{
									goto IL_1E31;
								}
								break;
							}
							break;
						}
						num11 = 893;
						goto IL_1E31;
					}
					if (num13 == 34)
					{
						goto IL_1D83;
					}
					if (num13 != 42)
					{
						goto IL_1E31;
					}
					goto IL_1D53;
				}
				else if (num13 <= 179)
				{
					if (num13 == 141 || num13 == 176)
					{
						goto IL_1D53;
					}
					if (num13 != 179)
					{
						goto IL_1E31;
					}
					goto IL_1D83;
				}
				else
				{
					if (num13 == 182)
					{
						goto IL_1D8F;
					}
					switch (num13)
					{
					case 231:
					case 232:
					case 233:
					case 234:
					case 235:
						goto IL_1D53;
					default:
						switch (num13)
						{
						case 269:
						case 270:
						case 271:
						case 272:
							break;
						case 273:
						case 274:
						case 275:
						case 276:
							goto IL_1D47;
						default:
							goto IL_1E31;
						}
						break;
					}
				}
				IL_1D3B:
				num11 = 885;
				goto IL_1E31;
				IL_1D47:
				num11 = 886;
				goto IL_1E31;
				IL_1D53:
				num11 = 887;
				goto IL_1E31;
				IL_1D83:
				num11 = 891;
				goto IL_1E31;
				IL_1D8F:
				num11 = 892;
				IL_1E31:
				if (num11 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num11, 1, false, -1, false);
				}
				if (num12 != -1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num12, 1, false, -1, false);
				}
			}
			if (this.type == 290)
			{
				if (Main.rand.Next(35) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1513, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 938, 1, false, -1, false);
				}
			}
			if (this.type == 291)
			{
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1300, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1254, 1, false, -1, false);
				}
			}
			if (this.type == 292)
			{
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1514, 1, false, -1, false);
				}
				else if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 679, 1, false, -1, false);
				}
			}
			if (this.type == 293 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 759, 1, false, -1, false);
			}
			if (this.type == 156 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 683, 1, false, -1, false);
			}
			if (this.type == 245)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2110, 1, false, -1, false);
				}
				int num14 = Main.rand.Next(8);
				if (num14 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1258, 1, false, -1, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1261, Main.rand.Next(60, 100), false, 0, false);
				}
				else if (num14 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1122, 1, false, -1, false);
				}
				else if (num14 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 899, 1, false, -1, false);
				}
				else if (num14 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1248, 1, false, -1, false);
				}
				else if (num14 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1294, 1, false, -1, false);
				}
				else if (num14 == 5)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1295, 1, false, -1, false);
				}
				else if (num14 == 6)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1296, 1, false, -1, false);
				}
				else if (num14 == 7)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1297, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2218, Main.rand.Next(4, 9), false, -1, false);
				NPC.downedGolemBoss = true;
			}
			if (this.type == 268)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1332, Main.rand.Next(1, 4), false, 0, false);
			}
			if (this.type == 370)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2588, 1, false, -1, false);
				}
				if (Main.rand.Next(15) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2609, 1, false, -1, false);
				}
				int num15 = Main.rand.Next(5);
				if (num15 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2611, 1, false, -1, false);
				}
				else if (num15 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2624, 1, false, -1, false);
				}
				else if (num15 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2622, 1, false, -1, false);
				}
				else if (num15 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2621, 1, false, -1, false);
				}
				else if (num15 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2623, 1, false, -1, false);
				}
			}
			if (this.type == 109 && !NPC.downedClown)
			{
				NPC.downedClown = true;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
				}
			}
			if (this.type == 153 && Main.rand.Next(17) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1328, 1, false, -1, false);
			}
			if (this.type == 253 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1327, 1, false, -1, false);
			}
			if (this.type == 120 && Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1326, 1, false, -1, false);
			}
			if (this.type == 49 && Main.rand.Next(250) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1325, 1, false, -1, false);
			}
			if (this.type == 185 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 951, 1, false, -1, false);
			}
			if (this.type == 44 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1320, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1321, 1, false, -1, false);
			}
			if (this.type == 60 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 151 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1322, 1, false, -1, false);
			}
			if (this.type == 24 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1323, 1, false, -1, false);
			}
			if (this.type == 109 && Main.rand.Next(30) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1324, Main.rand.Next(1, 5), false, -1, false);
			}
			if (this.type == 163 || this.type == 238)
			{
				if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1308, 1, false, -1, false);
				}
				if (Main.rand.Next(4) != 0)
				{
					if (Main.rand.Next(3) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 4), false, 0, false);
					}
					else if (Main.rand.Next(2) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, Main.rand.Next(1, 3), false, 0, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2607, 1, false, 0, false);
					}
				}
			}
			if (this.type == 287 && Main.rand.Next(7) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 963, 1, false, -1, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 977, 1, false, -1, false);
				}
			}
			if (this.type == 77 && Main.rand.Next(150) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 723, 1, false, -1, false);
			}
			if (this.type == 251 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1311, 1, false, -1, false);
			}
			if (this.type == 197 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1306, 1, false, -1, false);
			}
			if (this.type == 244)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 6), false, 0, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 662, Main.rand.Next(30, 60), false, 0, false);
			}
			if (this.type == 250 && Main.rand.Next(15) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1244, 1, false, -1, false);
			}
			if (this.type == 172)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 754, 1, false, -1, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 755, 1, false, -1, false);
			}
			if (this.type == 110 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 682, 1, false, -1, false);
			}
			if (this.type >= 269 && this.type <= 280)
			{
				if (Main.rand.Next(600) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1183, 1, false, -1, false);
				}
				else if (Main.rand.Next(400) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1266, 1, false, -1, false);
				}
				else if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 671, 1, false, -1, false);
				}
			}
			if (this.type == 154 && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1253, 1, false, -1, false);
			}
			if ((this.type == 169 || this.type == 206) && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 726, 1, false, -1, false);
			}
			if (this.type == 243)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2161, 1, false, -1, false);
			}
			if (this.type == 198 || this.type == 199 || this.type == 226)
			{
				if (Main.rand.Next(3000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1172, 1, false, -1, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1293, 1, false, -1, false);
				}
			}
			if (this.type == 78 || this.type == 79 || this.type == 80)
			{
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 870, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 871, 1, false, -1, false);
				}
				if (Main.rand.Next(75) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 872, 1, false, -1, false);
				}
			}
			if (this.type == 85 && this.value > 0f)
			{
				if (this.ai[3] == 4f)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1312, 1, false, -1, false);
					}
					else
					{
						int num16 = Main.rand.Next(3);
						if (num16 == 0)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 676, 1, false, -1, false);
						}
						else if (num16 == 1)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 725, 1, false, -1, false);
						}
						else if (num16 == 2)
						{
							Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1264, 1, false, -1, false);
						}
					}
				}
				else
				{
					int num17 = Main.rand.Next(7);
					if (num17 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 437, 1, false, -1, false);
					}
					if (num17 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 517, 1, false, -1, false);
					}
					if (num17 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 535, 1, false, -1, false);
					}
					if (num17 == 3)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 536, 1, false, -1, false);
					}
					if (num17 == 4)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 532, 1, false, -1, false);
					}
					if (num17 == 5)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 393, 1, false, -1, false);
					}
					if (num17 == 6)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 554, 1, false, -1, false);
					}
				}
			}
			if (this.type == 87)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 575, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type >= 212 && this.type <= 215)
			{
				if (Main.rand.Next(8000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(4000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1277, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1278, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1279, 1, false, 0, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1280, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1704, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1705, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1710, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1716, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1720, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2379, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2389, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2405, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2663, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2238, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2133, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2137, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2143, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2147, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2151, 1, false, 0, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2155, 1, false, 0, false);
				}
			}
			else if (this.type == 216)
			{
				if (Main.rand.Next(2000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 905, 1, false, -1, false);
				}
				if (Main.rand.Next(1000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 855, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 854, 1, false, -1, false);
				}
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2584, 1, false, -1, false);
				}
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 672, 1, false, -1, false);
				}
			}
			if (this.type == 161 && Main.rand.Next(50) == 0)
			{
				int num18 = Main.rand.Next(3);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 803 + num18, 1, false, 0, false);
			}
			if (this.type == 217)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1115, 1, false, -1, false);
			}
			if (this.type == 218)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1116, 1, false, -1, false);
			}
			if (this.type == 219)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1117, 1, false, -1, false);
			}
			if (this.type == 220)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1118, 1, false, -1, false);
			}
			if (this.type == 221)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1119, 1, false, -1, false);
			}
			if (this.type == 167 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 879, 1, false, -1, false);
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 593, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 79)
			{
				if (Main.rand.Next(10) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 527, 1, false, 0, false);
				}
			}
			else if (this.type == 80 && Main.rand.Next(10) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 528, 1, false, 0, false);
			}
			if (this.type == 49 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 18, 1, false, -1, false);
			}
			if (this.type == 21 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324)
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 954, 1, false, -1, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 955, 1, false, -1, false);
				}
				else if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1166, 1, false, -1, false);
				}
				else if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1274, 1, false, -1, false);
				}
			}
			else if (this.type == 6)
			{
				if (Main.rand.Next(175) == 0)
				{
					int num19 = Main.rand.Next(3);
					if (num19 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 956, 1, false, -1, false);
					}
					else if (num19 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 957, 1, false, -1, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 958, 1, false, -1, false);
					}
				}
			}
			else if (this.type == 42 || this.type == 43 || (this.type >= 231 && this.type <= 235))
			{
				if (Main.rand.Next(100) == 0)
				{
					int num20 = Main.rand.Next(3);
					if (num20 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 960, 1, false, -1, false);
					}
					else if (num20 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 961, 1, false, -1, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 962, 1, false, -1, false);
					}
				}
			}
			else if (this.type == 31 || this.type == 32 || this.type == 294 || this.type == 295 || this.type == 296)
			{
				if (Main.rand.Next(450) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 959, 1, false, -1, false);
				}
				if (Main.rand.Next(300) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1307, 1, false, -1, false);
				}
			}
			if ((this.type == 174 || this.type == 179 || this.type == 182 || this.type == 183) && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 996, 1, false, 0, false);
			}
			if (this.type == 101 || this.type == 98)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 522, Main.rand.Next(2, 6), false, 0, false);
			}
			if (this.type == 86)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 526, 1, false, 0, false);
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 856, 1, false, 0, false);
				}
			}
			if (this.type == 113)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2105, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 367, 1, false, -1, false);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(489, 492), 1, false, -1, false);
				}
				else
				{
					int num21 = Main.rand.Next(3);
					if (num21 == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 514, 1, false, -1, false);
					}
					else if (num21 == 1)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 426, 1, false, -1, false);
					}
					else if (num21 == 2)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 434, 1, false, -1, false);
					}
				}
				if (Main.netMode != 1)
				{
					int num22 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num23 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					int num24 = this.width / 2 / 16 + 1;
					for (int k = num22 - num24; k <= num22 + num24; k++)
					{
						for (int l = num23 - num24; l <= num23 + num24; l++)
						{
							if ((k == num22 - num24 || k == num22 + num24 || l == num23 - num24 || l == num23 + num24) && !Main.tile[k, l].active())
							{
								Main.tile[k, l].type = 140;
								Main.tile[k, l].active(true);
							}
							Main.tile[k, l].lava(false);
							Main.tile[k, l].liquid = 0;
							if (Main.netMode == 2)
							{
								NetMessage.SendTileSquare(-1, k, l, 1);
							}
							else
							{
								WorldGen.SquareTileFrame(k, l, true);
							}
						}
					}
				}
			}
			if (this.type == 186)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, Main.rand.Next(1, 10), false, 0, false);
			}
			if (this.type == 225)
			{
				if (Main.rand.Next(45) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1243, 1, false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 6), false, 0, false);
				}
			}
			if (this.type >= 333 && this.type <= 336 && Main.rand.Next(20) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1906, 1, false, 0, false);
			}
			if (this.type == 1 || this.type == 16 || this.type == 138 || this.type == 141 || this.type == 147 || this.type == 184 || this.type == 187 || this.type == 204 || this.type == 302 || (this.type >= 333 && this.type <= 336))
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(1, 3), false, 0, false);
				if (Main.rand.Next(10000) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1309, 1, false, -1, false);
				}
			}
			if (this.type == 75)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 501, Main.rand.Next(1, 4), false, 0, false);
			}
			if (this.type == 81)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(2, 5), false, 0, false);
			}
			if (this.type == 122)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 23, Main.rand.Next(5, 11), false, 0, false);
			}
			if (this.type == 71)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
			}
			if (this.type == 2 || this.type == 317 || this.type == 318 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 38, 1, false, 0, false);
				}
				else if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 236, 1, false, 0, false);
				}
			}
			if (this.type == 104 && Main.rand.Next(60) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 485, 1, false, -1, false);
			}
			if (this.type == 58)
			{
				if (Main.rand.Next(500) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
				}
				else if (Main.rand.Next(40) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
				}
			}
			if (this.type == 102 && Main.rand.Next(500) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 263, 1, false, 0, false);
			}
			if (this.type == 3 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 319 || this.type == 320 || this.type == 321)
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 216, 1, false, -1, false);
				}
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1304, 1, false, -1, false);
				}
			}
			if (this.type == 223 && Main.rand.Next(10) == 0)
			{
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1135, 1, false, -1, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1136, 1, false, -1, false);
				}
			}
			if (this.type == 66)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 267, 1, false, 0, false);
			}
			if (this.type == 62 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 272, 1, false, -1, false);
			}
			if (this.value > 0f && Main.hardMode && (double)(this.position.Y / 16f) < Main.worldSurface + 10.0 && (this.center().X / 16f < 380f || this.center().X / 16f > (float)(Main.maxTilesX - 380)) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1315, 1, false, 0, false);
			}
			if (this.type == 52)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 251, 1, false, 0, false);
			}
			if (this.type == 53)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 239, 1, false, 0, false);
			}
			if (this.type == 54)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 260, 1, false, 0, false);
			}
			if (this.type == 368)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2222, 1, false, 0, false);
			}
			if (this.type == 69 && Main.rand.Next(7) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 323, 1, false, 0, false);
			}
			if (this.type == 73)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 362, Main.rand.Next(1, 3), false, 0, false);
			}
			if (this.type == 4)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2112, 1, false, -1, false);
				}
				if (Main.rand.Next(150) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1299, 1, false, 0, false);
				}
				if (WorldGen.crimson)
				{
					int stack = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
					stack = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
					stack = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack, false, 0, false);
					stack = Main.rand.Next(3) + 1;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2171, stack, false, 0, false);
				}
				else
				{
					int stack2 = Main.rand.Next(30) + 20;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(20) + 10;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack2, false, 0, false);
					stack2 = Main.rand.Next(3) + 1;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 59, stack2, false, 0, false);
				}
			}
			if ((this.type == 6 || this.type == 94) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, 1, false, 0, false);
			}
			if ((this.type == 181 || this.type == 173 || this.type == 239 || this.type == 182 || this.type == 240) && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1330, 1, false, 0, false);
			}
			if (this.type == 7 || this.type == 8 || this.type == 9)
			{
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 68, Main.rand.Next(1, 3), false, 0, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 69, Main.rand.Next(3, 9), false, 0, false);
			}
			if ((this.type == 10 || this.type == 11 || this.type == 12 || this.type == 95 || this.type == 96 || this.type == 97) && Main.rand.Next(100) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 215, 1, false, 0, false);
			}
			if (this.type == 47 && Main.rand.Next(75) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 243, 1, false, 0, false);
			}
			if (this.type == 222)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2108, 1, false, -1, false);
				}
				NPC.downedQueenBee = true;
				int num25 = Main.rand.Next(3);
				if (num25 == 0)
				{
					num25 = 1121;
				}
				else if (num25 == 1)
				{
					num25 = 1123;
				}
				else if (num25 == 2)
				{
					num25 = 1132;
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num25, 1, false, 0, false);
				if (Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1170, 1, false, 0, false);
				}
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2502, 1, false, 0, false);
				}
				if (Main.rand.Next(3) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1129, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					num25 = Main.rand.Next(842, 845);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num25, 1, false, 0, false);
				}
				if (Main.rand.Next(4) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1130, Main.rand.Next(10, 30), false, 0, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2431, Main.rand.Next(16, 27), false, 0, false);
			}
			if (this.type == 266)
			{
				int stack3 = Main.rand.Next(15, 41);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false);
				stack3 = Main.rand.Next(15, 41);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack3, false, 0, false);
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2104, 1, false, -1, false);
				}
			}
			if (this.type == 267 && NPC.AnyNPCs(266))
			{
				int stack4 = Main.rand.Next(2, 6);
				if (Main.rand.Next(3) != 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1329, stack4, false, 0, false);
				}
				if (Main.rand.Next(3) != 0)
				{
					stack4 = Main.rand.Next(4, 11);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 880, stack4, false, 0, false);
				}
				if (Main.rand.Next(2) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 13 || this.type == 14 || this.type == 15)
			{
				int stack5 = Main.rand.Next(1, 3);
				if (Main.rand.Next(2) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 86, stack5, false, 0, false);
				}
				if (Main.rand.Next(2) == 0)
				{
					stack5 = Main.rand.Next(2, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
				}
				if (this.boss)
				{
					stack5 = Main.rand.Next(10, 30);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
					stack5 = Main.rand.Next(10, 31);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 56, stack5, false, 0, false);
					if (Main.rand.Next(30) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 994, 1, false, 0, false);
					}
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2111, 1, false, -1, false);
					}
				}
				if (Main.rand.Next(4) == 0 && Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[(int)Player.FindClosest(this.position, this.width, this.height)].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type == 116 || this.type == 117 || this.type == 118 || this.type == 119)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 139 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				if (Main.rand.Next(100) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1303, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, Main.rand.Next(1, 5), false, 0, false);
			}
			if (this.type == 21 || this.type == 44 || this.type == 167 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 322 || this.type == 323 || this.type == 324)
			{
				if (Main.rand.Next(25) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 118, 1, false, 0, false);
				}
				else if (this.type == 44)
				{
					if (Main.rand.Next(20) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(410, 412), 1, false, 0, false);
					}
					else
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 166, Main.rand.Next(1, 4), false, 0, false);
					}
				}
			}
			if (this.type == 45)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 238, 1, false, 0, false);
			}
			if (this.type == 50)
			{
				if (Main.rand.Next(30) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2430, 1, false, 0, false);
				}
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2493, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Main.rand.Next(256, 259), 1, false, 0, false);
				int num26 = Main.rand.Next(2);
				if (num26 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2610, 1, false, 0, false);
				}
				if (num26 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2585, 1, false, 0, false);
				}
			}
			if (this.type == 23 && Main.rand.Next(50) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 116, 1, false, 0, false);
			}
			if (this.type == 24 && Main.rand.Next(300) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 244, 1, false, 0, false);
			}
			if (this.type == 31 || this.type == 32 || this.type == 34)
			{
				if (Main.rand.Next(250) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 932, 1, false, 0, false);
				}
				else if (Main.rand.Next(65) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 327, 1, false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, Main.rand.Next(1, 4), false, 0, false);
				}
			}
			if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 111)
			{
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 160, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0)
				{
					int stack6 = Main.rand.Next(1, 6);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 161, stack6, false, 0, false);
				}
			}
			if (this.type == 175 && Main.rand.Next(200) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1265, 1, false, -1, false);
			}
			if ((this.type == 42 || (this.type >= 231 && this.type <= 235)) && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
			}
			if (this.type == 204 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 209, 1, false, 0, false);
			}
			if (this.type == 43 && Main.rand.Next(3) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 210, 1, false, 0, false);
			}
			if (this.type == 65)
			{
				if (Main.rand.Next(50) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 268, 1, false, 0, false);
				}
				else
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 319, 1, false, 0, false);
				}
			}
			if (this.type == 48 && Main.rand.Next(2) == 0)
			{
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 320, 1, false, 0, false);
			}
			if (this.type == 125 || this.type == 126)
			{
				int num27 = 125;
				if (this.type == 125)
				{
					num27 = 126;
				}
				if (!NPC.AnyNPCs(num27))
				{
					if (Main.rand.Next(7) == 0)
					{
						Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2106, 1, false, -1, false);
					}
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 549, Main.rand.Next(25, 41), false, 0, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
				}
				else
				{
					this.value = 0f;
					this.boss = false;
				}
			}
			else if (this.type == 127)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2107, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 547, Main.rand.Next(25, 41), false, 0, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
			}
			else if (this.type == 134)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2113, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 548, Main.rand.Next(25, 41), false, 0, false);
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1225, Main.rand.Next(15, 31), false, 0, false);
			}
			if (this.type == 262)
			{
				if (Main.rand.Next(7) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2109, 1, false, -1, false);
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1141, 1, false, -1, false);
				if (Main.rand.Next(20) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1182, 1, false, -1, false);
				}
				if (Main.rand.Next(200) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1305, 1, false, -1, false);
				}
				if (Main.rand.Next(4) == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1157, 1, false, -1, false);
				}
				int num28 = Main.rand.Next(6);
				if (!NPC.downedPlantBoss)
				{
					num28 = 0;
				}
				if (num28 == 0)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 758, 1, false, -1, false);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 771, Main.rand.Next(20, 50), false, 0, false);
				}
				else if (num28 == 1)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1255, 1, false, -1, false);
				}
				else if (num28 == 2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 788, 1, false, -1, false);
				}
				else if (num28 == 3)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1178, 1, false, -1, false);
				}
				else if (num28 == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1259, 1, false, -1, false);
				}
				else if (num28 == 5)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1155, 1, false, -1, false);
				}
				if (!NPC.downedPlantBoss)
				{
					if (Main.netMode == 0)
					{
						Main.NewText(Lang.misc[33], 50, 255, 130, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, Lang.misc[33], 255, 50f, 255f, 130f, 0);
					}
				}
				NPC.downedPlantBoss = true;
			}
			if ((this.boss || this.type == 125 || this.type == 126) && Main.rand.Next(10) == 0)
			{
				if (this.type == 4)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1360, 1, false, 0, false);
				}
				if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1361, 1, false, 0, false);
				}
				if (this.type == 266)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1362, 1, false, 0, false);
				}
				if (this.type == 35)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1363, 1, false, 0, false);
				}
				if (this.type == 222)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1364, 1, false, 0, false);
				}
				if (this.type == 113)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1365, 1, false, 0, false);
				}
				if (this.type == 134)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1366, 1, false, 0, false);
				}
				if (this.type == 127)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1367, 1, false, 0, false);
				}
				if (this.type == 125)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1368, 1, false, 0, false);
				}
				if (this.type == 126)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1369, 1, false, 0, false);
				}
				if (this.type == 262)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1370, 1, false, 0, false);
				}
				if (this.type == 245)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1371, 1, false, 0, false);
				}
				if (this.type == 50)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2489, 1, false, 0, false);
				}
				if (this.type == 370)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2589, 1, false, 0, false);
				}
			}
			if (this.boss)
			{
				if (this.type == 4)
				{
					NPC.downedBoss1 = true;
				}
				else if (this.type == 13 || this.type == 14 || this.type == 15)
				{
					NPC.downedBoss2 = true;
					this.name = "Eater of Worlds";
				}
				else if (this.type == 266)
				{
					NPC.downedBoss2 = true;
					this.name = "Brain of Cthulu";
				}
				else if (this.type == 35)
				{
					NPC.downedBoss3 = true;
					this.name = "Skeletron";
				}
				else
				{
					this.name = this.displayName;
				}
				if (this.type == 127)
				{
					NPC.downedMechBoss3 = true;
					NPC.downedMechBossAny = true;
				}
				if (this.type == 134)
				{
					NPC.downedMechBoss1 = true;
					NPC.downedMechBossAny = true;
				}
				string str = this.name;
				if (this.displayName != "")
				{
					str = this.displayName;
				}
				int stack7 = Main.rand.Next(5, 16);
				int num29 = 28;
				if (this.type == 113)
				{
					num29 = 188;
				}
				else if (this.type == 222)
				{
					num29 = 1134;
				}
				else if (this.type > 113 && this.type < 222)
				{
					num29 = 499;
				}
				else if (this.type == 245 || this.type == 262)
				{
					num29 = 499;
				}
				else if (this.type == 370)
				{
					num29 = 499;
				}
				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num29, stack7, false, 0, false);
				int num30 = Main.rand.Next(5) + 5;
				for (int m = 0; m < num30; m++)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
				if (this.type == 125 || this.type == 126)
				{
					NPC.downedMechBoss2 = true;
					NPC.downedMechBossAny = true;
					if (Main.netMode == 0)
					{
						Main.NewText("The Twins " + Lang.misc[17], 175, 75, 255, false);
					}
					else if (Main.netMode == 2)
					{
						NetMessage.SendData(25, -1, -1, "The Twins " + Lang.misc[17], 255, 175f, 75f, 255f, 0);
					}
				}
				else if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[17], 175, 75, 255, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[17], 255, 175f, 75f, 255f, 0);
				}
				if (this.type == 113 && Main.netMode != 1)
				{
					bool hardMode = Main.hardMode;
					WorldGen.StartHardmode();
					if (NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && !hardMode)
					{
						if (Main.netMode == 0)
						{
							Main.NewText(Lang.misc[32], 50, 255, 130, false);
						}
						else if (Main.netMode == 2)
						{
							NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0);
						}
					}
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
				}
			}
			if (!flag && NPC.downedMechBoss1 && NPC.downedMechBoss2 && NPC.downedMechBoss3 && Main.hardMode)
			{
				if (Main.netMode == 0)
				{
					Main.NewText(Lang.misc[32], 50, 255, 130, false);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num31 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.rand.Next(2) == 0 && Main.player[num31].statMana < Main.player[num31].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
				}
				else if (Main.rand.Next(2) == 0 && Main.player[num31].statLife < Main.player[num31].statLifeMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 58, 1, false, 0, false);
				}
			}
			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(2) == 0 && this.lifeMax > 1 && this.damage > 0)
			{
				int num32 = (int)Player.FindClosest(this.position, this.width, this.height);
				if (Main.player[num32].statMana < Main.player[num32].statManaMax2)
				{
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 184, 1, false, 0, false);
				}
			}
			float num33 = this.value;
			if (this.midas)
			{
				num33 *= 1f + (float)Main.rand.Next(10, 50) * 0.01f;
			}
			num33 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
			if (Main.rand.Next(5) == 0)
			{
				num33 *= 1f + (float)Main.rand.Next(5, 11) * 0.01f;
			}
			if (Main.rand.Next(10) == 0)
			{
				num33 *= 1f + (float)Main.rand.Next(10, 21) * 0.01f;
			}
			if (Main.rand.Next(15) == 0)
			{
				num33 *= 1f + (float)Main.rand.Next(15, 31) * 0.01f;
			}
			if (Main.rand.Next(20) == 0)
			{
				num33 *= 1f + (float)Main.rand.Next(20, 41) * 0.01f;
			}
			while ((int)num33 > 0)
			{
				if (num33 > 1000000f)
				{
					int num34 = (int)(num33 / 1000000f);
					if (num34 > 50 && Main.rand.Next(5) == 0)
					{
						num34 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num34 /= Main.rand.Next(3) + 1;
					}
					num33 -= (float)(1000000 * num34);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 74, num34, false, 0, false);
				}
				else if (num33 > 10000f)
				{
					int num35 = (int)(num33 / 10000f);
					if (num35 > 50 && Main.rand.Next(5) == 0)
					{
						num35 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num35 /= Main.rand.Next(3) + 1;
					}
					num33 -= (float)(10000 * num35);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 73, num35, false, 0, false);
				}
				else if (num33 > 100f)
				{
					int num36 = (int)(num33 / 100f);
					if (num36 > 50 && Main.rand.Next(5) == 0)
					{
						num36 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num36 /= Main.rand.Next(3) + 1;
					}
					num33 -= (float)(100 * num36);
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 72, num36, false, 0, false);
				}
				else
				{
					int num37 = (int)num33;
					if (num37 > 50 && Main.rand.Next(5) == 0)
					{
						num37 /= Main.rand.Next(3) + 1;
					}
					if (Main.rand.Next(5) == 0)
					{
						num37 /= Main.rand.Next(4) + 1;
					}
					if (num37 < 1)
					{
						num37 = 1;
					}
					num33 -= (float)num37;
					Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 71, num37, false, 0, false);
				}
			}
		}
		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
		{
			if (!this.active)
			{
				return;
			}
			if (this.type == 372 || this.type == 373)
			{
				if (this.life > 0)
				{
					int num = 0;
					while ((double)num < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num++;
					}
				}
				else
				{
					for (int i = 0; i < 75; i++)
					{
						int num2 = Dust.NewDust(this.center() - Vector2.One * 25f, 50, 50, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Main.dust[num2].velocity /= 2f;
					}
					Gore.NewGore(this.center(), this.velocity * 0.8f, 583, 1f);
					Gore.NewGore(this.center(), this.velocity * 0.8f, 577, 1f);
					Gore.NewGore(this.center(), this.velocity * 0.9f, 578, 1f);
					Gore.NewGore(this.center(), this.velocity, 579, 1f);
				}
			}
			if (this.type == 371)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 3);
				if (this.life <= 0)
				{
					this.center();
					for (int j = 0; j < 60; j++)
					{
						int num3 = 25;
						//EDIT: ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
						int num4 = Dust.NewDust(this.center() - Vector2.One * (float)num3, num3 * 2, num3 * 2, 212, 0f, 0f, 0, default(Color), 1f);
						Dust dust = Main.dust[num4];
						Vector2 vector = Vector2.Normalize(dust.position - this.center());
						dust.position = this.center() + vector * 25f * this.scale;
						if (j < 30)
						{
							dust.velocity = vector * dust.velocity.Length();
						}
						else
						{
							dust.velocity = vector * (float)Main.rand.Next(45, 91) / 10f;
						}
						dust.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
						dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
						dust.noGravity = true;
						dust.scale = 0.7f;
					}
				}
			}
			if (this.type == 370)
			{
				if (this.life > 0)
				{
					int num5 = 0;
					while ((double)num5 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						num5++;
					}
				}
				else
				{
					for (int k = 0; k < 150; k++)
					{
						Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.center() - Vector2.UnitX * 20f * (float)this.direction, this.velocity, 576, this.scale);
					Gore.NewGore(this.center() - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(this.center(), this.velocity, 575, this.scale);
					Gore.NewGore(this.center() + Vector2.UnitX * 20f * (float)this.direction, this.velocity, 573, this.scale);
					Gore.NewGore(this.center() - Vector2.UnitY * 30f, this.velocity, 574, this.scale);
					Gore.NewGore(this.center(), this.velocity, 575, this.scale);
				}
			}
			if (this.type == 333 || this.type == 334 || this.type == 335 || this.type == 336)
			{
				Color white = Color.White;
				if (this.type == 333)
				{
					white = new Color(73, 147, 221, 200);
				}
				if (this.type == 334)
				{
					white = new Color(24, 146, 79, 200);
				}
				if (this.type == 335)
				{
					white = new Color(194, 46, 50, 200);
				}
				if (this.type == 336)
				{
					white = new Color(228, 200, 1, 200);
				}
				if (this.life > 0)
				{
					int num6 = 0;
					while ((double)num6 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 150, white, 1f);
						num6++;
					}
				}
				else
				{
					for (int l = 0; l < 50; l++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 150, white, 1f);
					}
				}
			}
			if (this.type == 1 || this.type == 16 || this.type == 71 || this.type == 244)
			{
				if (this.life > 0)
				{
					int num7 = 0;
					while ((double)num7 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, this.color, 1f);
						num7++;
					}
				}
				else
				{
					for (int m = 0; m < 50; m++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, this.color, 1f);
					}
					if (Main.netMode != 1 && this.type == 16)
					{
						int num8 = Main.rand.Next(2) + 2;
						for (int n = 0; n < num8; n++)
						{
							int num9 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0);
							Main.npc[num9].SetDefaults("Baby Slime");
							Main.npc[num9].velocity.X = this.velocity.X * 2f;
							Main.npc[num9].velocity.Y = this.velocity.Y;
							NPC expr_81F_cp_0 = Main.npc[num9];
							expr_81F_cp_0.velocity.X = expr_81F_cp_0.velocity.X + ((float)Main.rand.Next(-20, 20) * 0.1f + (float)(n * this.direction) * 0.3f);
							NPC expr_85E_cp_0 = Main.npc[num9];
							expr_85E_cp_0.velocity.Y = expr_85E_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)n);
							Main.npc[num9].ai[1] = (float)n;
							if (Main.netMode == 2 && num9 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num9, 0f, 0f, 0f, 0);
							}
						}
					}
				}
			}
			if (this.type == 352)
			{
				if (this.life > 0)
				{
					int num10 = 0;
					while ((double)num10 < dmg / (double)this.lifeMax * 100.0)
					{
						int num11 = Dust.NewDust(this.position, this.width, this.height, 67, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num11].noGravity = true;
						num10++;
					}
				}
				else
				{
					for (int num12 = 0; num12 < 60; num12++)
					{
						int num13 = Dust.NewDust(this.position, this.width, this.height, 67, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						Main.dust[num13].noGravity = true;
					}
				}
			}
			if (this.type >= 305 && this.type <= 314)
			{
				if (this.life > 0)
				{
					int num14 = 0;
					while ((double)num14 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num14++;
					}
				}
				else
				{
					for (int num15 = 0; num15 < 60; num15++)
					{
						Dust.NewDust(this.position, this.width, this.height, 194, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					Gore.NewGore(this.position, this.velocity, 441, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 442, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 443, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 444, this.scale);
					Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 445, this.scale);
				}
			}
			if (this.type == 327)
			{
				if (this.life > 0)
				{
					int num16 = 0;
					while ((double)num16 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num16++;
					}
				}
				else
				{
					for (int num17 = 0; num17 < 60; num17++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int num18 = 476; num18 <= 484; num18++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num18, this.scale);
					}
				}
			}
			if (this.type == 325)
			{
				if (this.life > 0)
				{
					int num19 = 0;
					while ((double)num19 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num19++;
					}
				}
				else
				{
					for (int num20 = 0; num20 < 60; num20++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
					for (int num21 = 469; num21 <= 475; num21++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num21, this.scale);
					}
				}
			}
			if (this.type == 345 && this.life <= 0)
			{
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 513, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 514, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 515, this.scale);
				Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, 516, this.scale);
			}
			if (this.type == 344)
			{
				if (this.life > 0)
				{
					int num22 = 0;
					while ((double)num22 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)hitDirection, -1f, 0, default(Color), 1f);
						num22++;
					}
				}
				else
				{
					for (int num23 = 0; num23 < 60; num23++)
					{
						Dust.NewDust(this.position, this.width, this.height, 196, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					for (int num24 = 508; num24 <= 512; num24++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num24, this.scale);
					}
					for (int num25 = 509; num25 <= 512; num25++)
					{
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity * 0f, num25, this.scale);
					}
				}
			}
			if (this.type == 326)
			{
				if (this.life > 0)
				{
					int num26 = 0;
					while ((double)num26 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)hitDirection, -1f, 0, default(Color), 1.1f);
						num26++;
					}
				}
				else
				{
					for (int num27 = 0; num27 < 60; num27++)
					{
						Dust.NewDust(this.position, this.width, this.height, 191, (float)(2 * hitDirection), -2f, 0, default(Color), 1.1f);
					}
				}
			}
			if (this.type == 304)
			{
				if (this.life > 0)
				{
					int num28 = 0;
					while ((double)num28 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)hitDirection, -1f, 0, default(Color), 1.3f);
						num28++;
					}
				}
				else
				{
					for (int num29 = 0; num29 < 60; num29++)
					{
						Dust.NewDust(this.position, this.width, this.height, 189, (float)(2 * hitDirection), -2f, 0, default(Color), 1.3f);
					}
				}
			}
			if (this.type == 302)
			{
				if (this.life > 0)
				{
					int num30 = 0;
					while ((double)num30 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
						num30++;
					}
				}
				else
				{
					for (int num31 = 0; num31 < 50; num31++)
					{
						Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 440, this.scale);
				}
			}
			if (this.type >= 245 && this.type <= 249)
			{
				if (this.life > 0)
				{
					int num32 = 0;
					while ((double)num32 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)hitDirection, -1f, 0, default(Color), 1f);
						num32++;
					}
				}
				else if (this.type == 246)
				{
					if (Main.netMode != 1)
					{
						NPC.NewNPC((int)this.center().X, (int)this.position.Y + this.height, 249, this.whoAmI);
					}
				}
				else
				{
					for (int num33 = 0; num33 < 50; num33++)
					{
						Dust.NewDust(this.position, this.width, this.height, 148, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					if (this.type == 245)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 360, this.scale);
						Gore.NewGore(this.position, this.velocity, 361, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 364, this.scale);
						Gore.NewGore(this.position, this.velocity, 367, this.scale);
						Gore.NewGore(this.position, this.velocity, 366, this.scale);
					}
					else if (this.type == 249)
					{
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 368, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 370, this.scale);
						Gore.NewGore(this.position, this.velocity, 365, this.scale);
						Gore.NewGore(this.position, this.velocity, 363, this.scale);
						Gore.NewGore(this.position, this.velocity, 362, this.scale);
					}
					else
					{
						Gore.NewGore(this.position, this.velocity, 369, this.scale);
						Gore.NewGore(this.position, this.velocity, 371, this.scale);
						Gore.NewGore(this.position, this.velocity, 370, this.scale);
					}
				}
			}
			if (this.type == 288 && this.life <= 0)
			{
				for (int num34 = 0; num34 < 50; num34++)
				{
					int num35 = Dust.NewDust(this.position, this.width, this.height, 180, this.velocity.X, this.velocity.Y, 0, default(Color), 1f);
					Main.dust[num35].velocity *= 2f;
					Main.dust[num35].noGravity = true;
					Main.dust[num35].scale = 1.4f;
				}
			}
			if (this.type == 204)
			{
				if (this.life > 0)
				{
					int num36 = 0;
					while ((double)num36 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(149, 208, 104), 1f);
						num36++;
					}
				}
				else
				{
					for (int num37 = 0; num37 < 50; num37++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(149, 208, 104), 1f);
					}
				}
			}
			if (this.type == 225)
			{
				if (this.life > 0)
				{
					int num38 = 0;
					while ((double)num38 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(0, 80, 255, 100), 1f);
						num38++;
					}
				}
				else
				{
					for (int num39 = 0; num39 < 50; num39++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 100, new Color(0, 80, 255, 100), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 314, this.scale);
				}
			}
			if (this.type == 243)
			{
				if (this.life > 0)
				{
					int num40 = 0;
					while ((double)num40 < dmg / (double)this.lifeMax * 150.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)hitDirection, -1f, 0, default(Color), 1f);
						num40++;
					}
				}
				else
				{
					for (int num41 = 0; num41 < 200; num41++)
					{
						Dust.NewDust(this.position, this.width, this.height, 161, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					}
					Gore.NewGore(this.position, this.velocity, 359, this.scale);
				}
			}
			if ((this.type == 210 || this.type == 211) && this.life <= 0)
			{
				for (int num42 = 0; num42 < 6; num42++)
				{
					int num43 = Dust.NewDust(this.position, this.width, this.height, 150, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num43].noGravity = true;
						Main.dust[num43].scale = 1.5f;
					}
					else
					{
						Main.dust[num43].scale = 0.8f;
					}
				}
			}
			if ((this.type == 355 || this.type == 358) && this.life <= 0)
			{
				for (int num44 = 0; num44 < 6; num44++)
				{
					int num45 = Dust.NewDust(this.position, this.width, this.height, 198, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num45].noGravity = true;
						Main.dust[num45].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num45].scale = 0.8f * this.scale;
					}
				}
			}
			if (this.type == 356 && this.life <= 0)
			{
				for (int num46 = 0; num46 < 6; num46++)
				{
					int num47 = Dust.NewDust(this.position, this.width, this.height, 199, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num47].noGravity = true;
						Main.dust[num47].scale = 1.5f * this.scale;
					}
					else
					{
						Main.dust[num47].scale = 0.8f * this.scale;
					}
				}
			}
			if (this.type == 357 && this.life <= 0)
			{
				for (int num48 = 0; num48 < 6; num48++)
				{
					int num49 = Dust.NewDust(this.position, this.width, this.height, 200, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num49].noGravity = true;
						Main.dust[num49].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num49].scale = 0.7f * this.scale;
					}
				}
			}
			if (this.type == 377 && this.life <= 0)
			{
				for (int num50 = 0; num50 < 6; num50++)
				{
					int num51 = Dust.NewDust(this.position, this.width, this.height, 40, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num51].noGravity = true;
						Main.dust[num51].scale = 1.2f * this.scale;
					}
					else
					{
						Main.dust[num51].scale = 0.7f * this.scale;
					}
				}
			}
			if (this.type == 374 || this.type == 375)
			{
				for (int num52 = 0; num52 < 6; num52++)
				{
					int num53 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
					Main.dust[num53].velocity *= 2f;
					Main.dust[num53].noGravity = true;
				}
			}
			if (this.type == 359)
			{
				if (this.life <= 0)
				{
					for (int num54 = 0; num54 < 6; num54++)
					{
						int num55 = Dust.NewDust(this.position, this.width, this.height, 201, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num55].noGravity = true;
							Main.dust[num55].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num55].scale = 0.7f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 547, this.scale);
				Gore.NewGore(this.position, this.velocity, 548, this.scale);
			}
			if (this.type == 360)
			{
				if (this.life <= 0)
				{
					for (int num56 = 0; num56 < 6; num56++)
					{
						int num57 = Dust.NewDust(this.position, this.width, this.height, 202, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num57].noGravity = true;
							Main.dust[num57].scale = 1.2f * this.scale;
						}
						else
						{
							Main.dust[num57].scale = 0.7f * this.scale;
						}
					}
				}
				Gore.NewGore(this.position, this.velocity, 549, this.scale);
				Gore.NewGore(this.position, this.velocity, 550, this.scale);
			}
			if (this.type == 154)
			{
				if (this.life > 0)
				{
					int num58 = 0;
					while ((double)num58 < dmg / (double)this.lifeMax * 50.0)
					{
						int num59 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num59].noGravity = true;
						Main.dust[num59].velocity *= 0.2f;
						num58++;
					}
				}
				else
				{
					for (int num60 = 0; num60 < 50; num60++)
					{
						int num61 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 90, default(Color), 1.5f);
						Main.dust[num61].noGravity = true;
						Main.dust[num61].velocity *= 0.2f;
					}
					Gore.NewGore(this.position, this.velocity, 180, this.scale);
				}
			}
			if (this.type == 147 || this.type == 184)
			{
				if (this.life > 0)
				{
					int num62 = 0;
					while ((double)num62 < dmg / (double)this.lifeMax * 50.0)
					{
						int num63 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num63].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 100, new Color(97, 200, 255, 100), 1f);
						num62++;
					}
				}
				else
				{
					for (int num64 = 0; num64 < 30; num64++)
					{
						int num65 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -2f, 0, default(Color), 1f);
						Main.dust[num65].noGravity = true;
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -2f, 100, new Color(97, 200, 255, 100), 1f);
					}
				}
			}
			if (this.type == 143 || this.type == 144 || this.type == 145)
			{
				if (this.life > 0)
				{
					int num66 = 0;
					while ((double)num66 < dmg / (double)this.lifeMax * 100.0)
					{
						int num67 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num67].noGravity = true;
						num66++;
					}
				}
				else
				{
					for (int num68 = 0; num68 < 50; num68++)
					{
						int num69 = Dust.NewDust(this.position, this.width, this.height, 76, (float)hitDirection, -1f, 0, default(Color), 1f);
						Main.dust[num69].noGravity = true;
						Main.dust[num69].scale *= 1.2f;
					}
				}
			}
			if (this.type == 141)
			{
				if (this.life > 0)
				{
					int num70 = 0;
					while ((double)num70 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
						num70++;
					}
				}
				else
				{
					for (int num71 = 0; num71 < 50; num71++)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
					}
				}
			}
			if (this.type == 112)
			{
				for (int num72 = 0; num72 < 20; num72++)
				{
					int num73 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 18, 0f, 0f, 100, default(Color), 2f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num73].scale *= 0.6f;
					}
					else
					{
						Main.dust[num73].velocity *= 1.4f;
						Main.dust[num73].noGravity = true;
					}
				}
			}
			if (this.type == 183)
			{
				if (this.life > 0)
				{
					int num74 = 0;
					while ((double)num74 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 136, 0f, 0f, this.alpha, this.color, 1f);
						num74++;
					}
				}
				else
				{
					for (int num75 = 0; num75 < 50; num75++)
					{
						int num76 = Dust.NewDust(this.position, this.width, this.height, 136, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num76].velocity *= 2f;
					}
				}
			}
			if (this.type == 81 || this.type == 121)
			{
				if (this.life > 0)
				{
					int num77 = 0;
					while ((double)num77 < dmg / (double)this.lifeMax * 100.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
						num77++;
					}
				}
				else
				{
					for (int num78 = 0; num78 < 50; num78++)
					{
						int num79 = Dust.NewDust(this.position, this.width, this.height, 14, (float)hitDirection, 0f, this.alpha, this.color, 1f);
						Main.dust[num79].velocity *= 2f;
					}
					if (Main.netMode != 1)
					{
						if (this.type == 121)
						{
							int num80 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 81, 0);
							Main.npc[num80].SetDefaults("Slimer2");
							Main.npc[num80].velocity.X = this.velocity.X;
							Main.npc[num80].velocity.Y = this.velocity.Y;
							Gore.NewGore(this.position, this.velocity, 94, this.scale);
							if (Main.netMode == 2 && num80 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num80, 0f, 0f, 0f, 0);
							}
						}
						else if (this.scale >= 1f)
						{
							int num81 = Main.rand.Next(2) + 2;
							for (int num82 = 0; num82 < num81; num82++)
							{
								int num83 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 1, 0);
								Main.npc[num83].SetDefaults("Slimeling");
								Main.npc[num83].velocity.X = this.velocity.X * 3f;
								Main.npc[num83].velocity.Y = this.velocity.Y;
								NPC expr_2B32_cp_0 = Main.npc[num83];
								expr_2B32_cp_0.velocity.X = expr_2B32_cp_0.velocity.X + ((float)Main.rand.Next(-10, 10) * 0.1f + (float)(num82 * this.direction) * 0.3f);
								NPC expr_2B71_cp_0 = Main.npc[num83];
								expr_2B71_cp_0.velocity.Y = expr_2B71_cp_0.velocity.Y - ((float)Main.rand.Next(0, 10) * 0.1f + (float)num82);
								Main.npc[num83].ai[1] = (float)num82;
								if (Main.netMode == 2 && num83 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num83, 0f, 0f, 0f, 0);
								}
							}
						}
					}
				}
			}
			if (this.type == 120 || this.type == 137 || this.type == 138)
			{
				if (this.life > 0)
				{
					int num84 = 0;
					while ((double)num84 < dmg / (double)this.lifeMax * 50.0)
					{
						int num85 = Dust.NewDust(this.position, this.width, this.height, 71, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num85].velocity *= 1.5f;
						num84++;
					}
				}
				else
				{
					for (int num86 = 0; num86 < 50; num86++)
					{
						int num87 = Dust.NewDust(this.position, this.width, this.height, 71, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num87].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 122)
			{
				if (this.life > 0)
				{
					int num88 = 0;
					while ((double)num88 < dmg / (double)this.lifeMax * 50.0)
					{
						int num89 = Dust.NewDust(this.position, this.width, this.height, 72, 0f, 0f, 200, default(Color), 1f);
						Main.dust[num89].velocity *= 1.5f;
						num88++;
					}
				}
				else
				{
					for (int num90 = 0; num90 < 50; num90++)
					{
						int num91 = Dust.NewDust(this.position, this.width, this.height, 72, (float)hitDirection, 0f, 200, default(Color), 1f);
						Main.dust[num91].velocity *= 1.5f;
					}
				}
			}
			if (this.type == 75)
			{
				if (this.life > 0)
				{
					int num92 = 0;
					while ((double)num92 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
						num92++;
					}
				}
				else
				{
					for (int num93 = 0; num93 < 50; num93++)
					{
						int num94 = Dust.NewDust(this.position, this.width, this.height, 55, (float)hitDirection, 0f, 200, this.color, 1f);
						Main.dust[num94].velocity *= 2f;
					}
				}
			}
			if (this.type == 63 || this.type == 64 || this.type == 103)
			{
				Color newColor = new Color(50, 120, 255, 100);
				if (this.type == 64)
				{
					newColor = new Color(225, 70, 140, 100);
				}
				if (this.type == 103)
				{
					newColor = new Color(70, 225, 140, 100);
				}
				if (this.life > 0)
				{
					int num95 = 0;
					while ((double)num95 < dmg / (double)this.lifeMax * 50.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 0, newColor, 1f);
						num95++;
					}
					return;
				}
				for (int num96 = 0; num96 < 25; num96++)
				{
					Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 0, newColor, 1f);
				}
				return;
			}
			else
			{
				if (this.type != 59 && this.type != 60 && this.type != 151)
				{
					if (this.type == 50)
					{
						if (this.life > 0)
						{
							int num97 = 0;
							while ((double)num97 < dmg / (double)this.lifeMax * 300.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 4, (float)hitDirection, -1f, 175, new Color(0, 80, 255, 100), 1f);
								num97++;
							}
							return;
						}
						for (int num98 = 0; num98 < 200; num98++)
						{
							Dust.NewDust(this.position, this.width, this.height, 4, (float)(2 * hitDirection), -2f, 175, new Color(0, 80, 255, 100), 1f);
						}
						if (Main.netMode != 1)
						{
							int num99 = Main.rand.Next(4) + 4;
							for (int num100 = 0; num100 < num99; num100++)
							{
								int x = (int)(this.position.X + (float)Main.rand.Next(this.width - 32));
								int y = (int)(this.position.Y + (float)Main.rand.Next(this.height - 32));
								int num101 = NPC.NewNPC(x, y, 1, 0);
								Main.npc[num101].SetDefaults(1, -1f);
								Main.npc[num101].velocity.X = (float)Main.rand.Next(-15, 16) * 0.1f;
								Main.npc[num101].velocity.Y = (float)Main.rand.Next(-30, 1) * 0.1f;
								Main.npc[num101].ai[1] = (float)Main.rand.Next(3);
								if (Main.netMode == 2 && num101 < 200)
								{
									NetMessage.SendData(23, -1, -1, "", num101, 0f, 0f, 0f, 0);
								}
							}
							return;
						}
					}
					else if (this.type == 153)
					{
						if (this.life > 0)
						{
							int num102 = 0;
							while ((double)num102 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num102++;
							}
							return;
						}
						for (int num103 = 0; num103 < 15; num103++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 177, 1f);
						Gore.NewGore(this.position, this.velocity, 178, 1f);
						Gore.NewGore(this.position, this.velocity, 179, 1f);
						Gore.NewGore(this.position, this.velocity, 179, 1f);
						return;
					}
					else if (this.type == 177)
					{
						if (this.life > 0)
						{
							int num104 = 0;
							while ((double)num104 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num104++;
							}
							return;
						}
						for (int num105 = 0; num105 < 15; num105++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 234, 1f);
						Gore.NewGore(this.position, this.velocity, 235, 1f);
						Gore.NewGore(this.position, this.velocity, 236, 1f);
						Gore.NewGore(this.position, this.velocity, 236, 1f);
						return;
					}
					else if (this.type == 49 || this.type == 51 || this.type == 93 || this.type == 150 || this.type == 152 || this.type == 226)
					{
						if (this.life > 0)
						{
							int num106 = 0;
							while ((double)num106 < dmg / (double)this.lifeMax * 30.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num106++;
							}
							return;
						}
						for (int num107 = 0; num107 < 15; num107++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 51)
						{
							Gore.NewGore(this.position, this.velocity, 83, 1f);
							return;
						}
						if (this.type == 93)
						{
							Gore.NewGore(this.position, this.velocity, 107, 1f);
							return;
						}
						if (this.type == 150)
						{
							Gore.NewGore(this.position, this.velocity, 164, 1f);
							Gore.NewGore(this.position, this.velocity, 165, 1f);
							return;
						}
						if (this.type == 152)
						{
							Gore.NewGore(this.position, this.velocity, 175, 1f);
							Gore.NewGore(this.position, this.velocity, 176, 1f);
							Gore.NewGore(this.position, this.velocity, 176, 1f);
							return;
						}
						if (this.type == 226)
						{
							Gore.NewGore(this.position, this.velocity, 317, 1f);
							Gore.NewGore(this.position, this.velocity, 318, 1f);
							Gore.NewGore(this.position, this.velocity, 318, 1f);
							Gore.NewGore(this.position, this.velocity, 319, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 82, 1f);
						return;
					}
					else if (this.type == 46 || this.type == 55 || this.type == 67 || this.type == 74 || this.type == 102 || this.type == 224 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 300 || this.type == 303 || this.type == 337)
					{
						if (this.life > 0)
						{
							int num108 = 0;
							while ((double)num108 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num108++;
							}
							return;
						}
						for (int num109 = 0; num109 < 10; num109++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 46 || this.type == 303 || this.type == 337)
						{
							Gore.NewGore(this.position, this.velocity, 76, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 77, 1f);
							if (this.type == 303)
							{
								for (int num110 = 0; num110 < 10; num110++)
								{
									Dust.NewDust(this.position, this.width, this.height, 193, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								return;
							}
						}
						else
						{
							if (this.type == 67)
							{
								Gore.NewGore(this.position, this.velocity, 95, 1f);
								Gore.NewGore(this.position, this.velocity, 95, 1f);
								Gore.NewGore(this.position, this.velocity, 96, 1f);
								return;
							}
							if (this.type == 55 || this.type == 230)
							{
								Gore.NewGore(this.position, this.velocity, 553, 1f);
								Gore.NewGore(this.position, this.velocity, 554, 1f);
								return;
							}
							if (this.type == 74)
							{
								Gore.NewGore(this.position, this.velocity, 100, 1f);
								return;
							}
							if (this.type == 297)
							{
								Gore.NewGore(this.position, this.velocity, 431, 1f);
								return;
							}
							if (this.type == 298)
							{
								Gore.NewGore(this.position, this.velocity, 432, 1f);
								return;
							}
							if (this.type == 299)
							{
								Gore.NewGore(this.position, this.velocity, 433, 1f);
								return;
							}
							if (this.type == 300)
							{
								Gore.NewGore(this.position, this.velocity, 434, 1f);
								return;
							}
							if (this.type == 102)
							{
								Gore.NewGore(this.position, this.velocity, 116, 1f);
								return;
							}
							if (this.type == 224)
							{
								Gore.NewGore(this.position, this.velocity, 312, 1f);
								Gore.NewGore(this.position, this.velocity, 313, 1f);
								return;
							}
						}
					}
					else if (this.type == 148 || this.type == 149 || this.type == 168)
					{
						if (this.life > 0)
						{
							int num111 = 0;
							while ((double)num111 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num111++;
							}
							return;
						}
						for (int num112 = 0; num112 < 10; num112++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 148)
						{
							Gore.NewGore(this.position, this.velocity, 160, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 161, 1f);
							return;
						}
						if (this.type == 149)
						{
							Gore.NewGore(this.position, this.velocity, 162, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 163, 1f);
							return;
						}
						if (this.type == 168)
						{
							Gore.NewGore(this.position, this.velocity, 215, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 216, 1f);
							return;
						}
					}
					else if (this.type == 361)
					{
						if (this.life > 0)
						{
							int num113 = 0;
							while ((double)num113 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num113++;
							}
							return;
						}
						for (int num114 = 0; num114 < 10; num114++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 551, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 552, 1f);
						return;
					}
					else if (this.type == 366 || this.type == 367)
					{
						if (this.life > 0)
						{
							int num115 = 0;
							while ((double)num115 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 203, (float)hitDirection, -1f, 0, default(Color), 1f);
								num115++;
							}
							return;
						}
						for (int num116 = 0; num116 < 10; num116++)
						{
							Dust.NewDust(this.position, this.width, this.height, 203, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 366)
						{
							Gore.NewGore(this.position, this.velocity, 561, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 562, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 563, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 564, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 565, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 566, 1f);
						return;
					}
					else if (this.type >= 362 && this.type <= 365)
					{
						if (this.life > 0)
						{
							int num117 = 0;
							while ((double)num117 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num117++;
							}
							return;
						}
						for (int num118 = 0; num118 < 10; num118++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 362 || this.type == 363)
						{
							Gore.NewGore(this.position, this.velocity, 555, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 556, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 557, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 558, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 559, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 560, 1f);
						return;
					}
					else if (this.type == 348 || this.type == 349)
					{
						if (this.life > 0)
						{
							int num119 = 0;
							while ((double)num119 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num119++;
							}
							return;
						}
						for (int num120 = 0; num120 < 10; num120++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 528, 1f);
						Gore.NewGore(this.position, this.velocity, 529, 1f);
						Gore.NewGore(this.position, this.velocity, 530, 1f);
						Gore.NewGore(this.position, this.velocity, 531, 1f);
						Gore.NewGore(this.position, this.velocity, 532, 1f);
						return;
					}
					else if (this.type == 351)
					{
						if (this.life > 0)
						{
							int num121 = 0;
							while ((double)num121 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num121++;
							}
							return;
						}
						for (int num122 = 0; num122 < 10; num122++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 538, 1f);
						Gore.NewGore(this.position, this.velocity, 539, 1f);
						Gore.NewGore(this.position, this.velocity, 540, 1f);
						Gore.NewGore(this.position, this.velocity, 541, 1f);
						Gore.NewGore(this.position, this.velocity, 542, 1f);
						return;
					}
					else if (this.type == 350)
					{
						if (this.life > 0)
						{
							int num123 = 0;
							while ((double)num123 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num123++;
							}
							return;
						}
						for (int num124 = 0; num124 < 10; num124++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 533, 1f);
						Gore.NewGore(this.position, this.velocity, 534, 1f);
						Gore.NewGore(this.position, this.velocity, 535, 1f);
						Gore.NewGore(this.position, this.velocity, 536, 1f);
						return;
					}
					else if (this.type == 47 || this.type == 57 || this.type == 58)
					{
						if (this.life > 0)
						{
							int num125 = 0;
							while ((double)num125 < dmg / (double)this.lifeMax * 20.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num125++;
							}
							return;
						}
						for (int num126 = 0; num126 < 10; num126++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 57)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 84, 1f);
							return;
						}
						if (this.type == 58)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 85, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 78, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 79, 1f);
						return;
					}
					else if (this.type == 173 || this.type == 174 || this.type == 181 || this.type == 182 || this.type == 268)
					{
						if (this.life > 0)
						{
							int num127 = 0;
							while ((double)num127 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, this.alpha, default(Color), 1f);
								num127++;
							}
							return;
						}
						for (int num128 = 0; num128 < 50; num128++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, this.alpha, default(Color), 1f);
						}
						if (this.type == 173)
						{
							Gore.NewGore(this.position, this.velocity, 223, 1f);
							Gore.NewGore(this.position, this.velocity, 224, 1f);
							return;
						}
						if (this.type == 174)
						{
							Gore.NewGore(this.position, this.velocity, 225, 1f);
							Gore.NewGore(this.position, this.velocity, 226, 1f);
							return;
						}
						if (this.type == 181)
						{
							Gore.NewGore(this.position, this.velocity, 237, 1f);
							return;
						}
						if (this.type == 182)
						{
							Gore.NewGore(this.position, this.velocity, 238, 1f);
							Gore.NewGore(this.position, this.velocity, 239, 1f);
							return;
						}
						if (this.type == 268)
						{
							Gore.NewGore(this.position, this.velocity, 403, 1f);
							Gore.NewGore(this.position, this.velocity, 404, 1f);
							Gore.NewGore(this.position, this.velocity, 405, 1f);
							return;
						}
					}
					else if (this.type == 2 || this.type == 190 || this.type == 191 || this.type == 192 || this.type == 193 || this.type == 194 || this.type == 317 || this.type == 318)
					{
						if (this.life > 0)
						{
							int num129 = 0;
							while ((double)num129 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num129++;
							}
							return;
						}
						for (int num130 = 0; num130 < 50; num130++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						if (this.type == 190)
						{
							Gore.NewGore(this.position, this.velocity, 249, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 191)
						{
							Gore.NewGore(this.position, this.velocity, 248, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 192)
						{
							Gore.NewGore(this.position, this.velocity, 247, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
							return;
						}
						if (this.type == 193)
						{
							Gore.NewGore(this.position, this.velocity, 252, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 253, this.scale);
							return;
						}
						if (this.type == 194)
						{
							Gore.NewGore(this.position, this.velocity, 250, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 251, this.scale);
							return;
						}
						if (this.type == 317)
						{
							Gore.NewGore(this.position, this.velocity, 447, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 448, this.scale);
							return;
						}
						if (this.type == 318)
						{
							Gore.NewGore(this.position, this.velocity, 449, this.scale);
							Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 450, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 1, this.scale);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, this.scale);
						return;
					}
					else if (this.type == 157)
					{
						if (this.life > 0)
						{
							int num131 = 0;
							while ((double)num131 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num131++;
							}
							return;
						}
						for (int num132 = 0; num132 < 50; num132++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 186, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 187, 1f);
						return;
					}
					else if (this.type == 133)
					{
						if (this.life <= 0)
						{
							for (int num133 = 0; num133 < 50; num133++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 155, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 155, 1f);
							return;
						}
						int num134 = 0;
						while ((double)num134 < dmg / (double)this.lifeMax * 100.0)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							num134++;
						}
						if ((float)this.life < (float)this.lifeMax * 0.5f && this.localAI[0] == 0f)
						{
							this.localAI[0] = 1f;
							Gore.NewGore(this.position, this.velocity, 1, 1f);
							return;
						}
					}
					else if (this.type == 69)
					{
						if (this.life > 0)
						{
							int num135 = 0;
							while ((double)num135 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num135++;
							}
							return;
						}
						for (int num136 = 0; num136 < 50; num136++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 97, 1f);
						Gore.NewGore(this.position, this.velocity, 98, 1f);
						return;
					}
					else if (this.type == 61)
					{
						if (this.life > 0)
						{
							int num137 = 0;
							while ((double)num137 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num137++;
							}
							return;
						}
						for (int num138 = 0; num138 < 50; num138++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 86, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 87, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 88, 1f);
						return;
					}
					else if (this.type == 301)
					{
						if (this.life > 0)
						{
							int num139 = 0;
							while ((double)num139 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num139++;
							}
							return;
						}
						for (int num140 = 0; num140 < 50; num140++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 438, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 439, 1f);
						return;
					}
					else if (this.type == 252)
					{
						if (this.life > 0)
						{
							int num141 = 0;
							while ((double)num141 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num141++;
							}
							return;
						}
						for (int num142 = 0; num142 < 50; num142++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 373, 1f);
						Gore.NewGore(this.position, this.velocity, 374, 1f);
						return;
					}
					else if (this.type == 65)
					{
						if (this.life > 0)
						{
							int num143 = 0;
							while ((double)num143 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num143++;
							}
							return;
						}
						for (int num144 = 0; num144 < 75; num144++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity * 0.8f, 89, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 90, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 91, 1f);
						Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity * 0.8f, 92, 1f);
						return;
					}
					else if (this.type == 195 || this.type == 196)
					{
						if (this.life > 0)
						{
							int num145 = 0;
							while ((double)num145 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num145++;
							}
							return;
						}
						for (int num146 = 0; num146 < 75; num146++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 254, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 255, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 256, this.scale);
						return;
					}
					else if (this.type == 198 || this.type == 199)
					{
						if (this.life > 0)
						{
							int num147 = 0;
							while ((double)num147 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num147++;
							}
							return;
						}
						for (int num148 = 0; num148 < 75; num148++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 258, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 259, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 260, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 261, this.scale);
						return;
					}
					else if (this.type == 206)
					{
						if (this.life > 0)
						{
							int num149 = 0;
							while ((double)num149 < dmg / (double)this.lifeMax * 150.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 137, (float)hitDirection, -1f, 0, default(Color), 1f);
								num149++;
							}
							return;
						}
						for (int num150 = 0; num150 < 75; num150++)
						{
							Dust.NewDust(this.position, this.width, this.height, 137, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 273, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 274, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 275, this.scale);
						return;
					}
					else if (this.type == 342)
					{
						if (this.life > 0)
						{
							int num151 = 0;
							while ((double)num151 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 0, (float)hitDirection, -1f, 0, default(Color), 1f);
								num151++;
							}
							return;
						}
						for (int num152 = 0; num152 < 50; num152++)
						{
							Dust.NewDust(this.position, this.width, this.height, 0, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 500, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 501, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 502, this.scale);
						return;
					}
					else if (this.type >= 338 && this.type <= 340)
					{
						if (this.life > 0)
						{
							int num153 = 0;
							while ((double)num153 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num153++;
							}
							return;
						}
						for (int num154 = 0; num154 < 50; num154++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 338)
						{
							Gore.NewGore(this.position, this.velocity, 494, this.scale);
						}
						if (this.type == 339)
						{
							Gore.NewGore(this.position, this.velocity, 495, this.scale);
						}
						if (this.type == 340)
						{
							Gore.NewGore(this.position, this.velocity, 496, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 497, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 498, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 499, this.scale);
						return;
					}
					else if (this.type == 343)
					{
						if (this.life > 0)
						{
							int num155 = 0;
							while ((double)num155 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num155++;
							}
							return;
						}
						for (int num156 = 0; num156 < 50; num156++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 503, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 504, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 505, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 506, this.scale);
						return;
					}
					else if (this.type == 3 || this.type == 52 || this.type == 53 || this.type == 104 || this.type == 109 || this.type == 331 || this.type == 332 || this.type == 132 || this.type == 161 || this.type == 162 || this.type == 186 || this.type == 187 || this.type == 188 || this.type == 189 || this.type == 200 || this.type == 223 || this.type == 251 || this.type == 319 || this.type == 320 || this.type == 321)
					{
						if (this.life > 0)
						{
							int num157 = 0;
							while ((double)num157 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num157++;
							}
							if (this.type == 186 && Main.rand.Next(5) == 0)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
							}
							if (this.type == 187)
							{
								int num158 = 0;
								while ((double)num158 < dmg / (double)this.lifeMax * 200.0)
								{
									Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
									num158++;
								}
								return;
							}
						}
						else
						{
							for (int num159 = 0; num159 < 50; num159++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							if (this.type == 187)
							{
								for (int num160 = 0; num160 < 25; num160++)
								{
									Dust.NewDust(this.position, this.width, 24, 4, (float)hitDirection, -1f, 125, new Color(0, 80, 255, 100), 1f);
								}
							}
							if (this.type == 104)
							{
								Gore.NewGore(this.position, this.velocity, 117, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 118, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 119, this.scale);
								return;
							}
							if (this.type == 331)
							{
								Gore.NewGore(this.position, this.velocity, 488, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 489, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 490, this.scale);
								return;
							}
							if (this.type == 332)
							{
								Gore.NewGore(this.position, this.velocity, 491, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 492, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 493, this.scale);
								return;
							}
							if (this.type == 109)
							{
								Gore.NewGore(this.position, this.velocity, 121, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 122, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 123, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, this.scale);
								return;
							}
							if (this.type == 161)
							{
								Gore.NewGore(this.position, this.velocity, 191, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 192, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 193, this.scale);
								return;
							}
							if (this.type == 162)
							{
								Gore.NewGore(this.position, this.velocity, 194, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 195, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 196, this.scale);
								return;
							}
							if (this.type == 188)
							{
								Gore.NewGore(this.position, this.velocity, 243, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 244, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 245, this.scale);
								return;
							}
							if (this.type == 200)
							{
								Gore.NewGore(this.position, this.velocity, 262, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 263, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 264, this.scale);
								return;
							}
							if (this.type == 319)
							{
								Gore.NewGore(this.position, this.velocity, 451, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 453, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 452, this.scale);
								return;
							}
							if (this.type == 320)
							{
								Gore.NewGore(this.position, this.velocity, 454, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 455, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 456, this.scale);
								return;
							}
							if (this.type == 321)
							{
								Gore.NewGore(this.position, this.velocity, 457, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 458, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 459, this.scale);
								return;
							}
							if (this.type == 223)
							{
								Gore.NewGore(this.position, this.velocity, 309, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 310, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 311, this.scale);
								return;
							}
							if (this.type == 132)
							{
								Gore.NewGore(this.position, this.velocity, 154, 1f);
							}
							else if (this.type == 186)
							{
								Gore.NewGore(this.position, this.velocity, 241, 1f);
							}
							else if (this.type == 189)
							{
								Gore.NewGore(this.position, this.velocity, 246, 1f);
							}
							else if (this.type == 251)
							{
								Gore.NewGore(this.position, this.velocity, 372, 1f);
							}
							else if (this.type != 187)
							{
								Gore.NewGore(this.position, this.velocity, 3, 1f);
							}
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
							if (this.type == 186)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
							}
							if (this.type == 186 && Main.rand.Next(2) == 0)
							{
								Gore.NewGore(this.position, this.velocity, 242, 1f);
								return;
							}
						}
					}
					else if (this.type == 83 || this.type == 84 || this.type == 179)
					{
						if (this.life > 0)
						{
							int num161 = 0;
							while ((double)num161 < dmg / (double)this.lifeMax * 50.0)
							{
								int num162 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num162].noGravity = true;
								num161++;
							}
							return;
						}
						for (int num163 = 0; num163 < 20; num163++)
						{
							int num164 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num164].velocity *= 2f;
							Main.dust[num164].noGravity = true;
						}
						int num165 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num165].velocity *= 0.5f;
						num165 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num165].velocity *= 0.5f;
						num165 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)Main.rand.Next(-2, 3), (float)Main.rand.Next(-2, 3)), 61, this.scale);
						Main.gore[num165].velocity *= 0.5f;
						return;
					}
					else if (this.type == 262 || this.type == 263 || this.type == 264)
					{
						if (this.life > 0)
						{
							int num166 = 0;
							while ((double)num166 < dmg / (double)this.lifeMax * 100.0)
							{
								if (this.type == 262 && this.life > this.lifeMax / 2 && Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else if (this.type == 265 && Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else
								{
									Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								num166++;
							}
							return;
						}
						for (int num167 = 0; num167 < 150; num167++)
						{
							if (this.type == 265 && Main.rand.Next(3) != 0)
							{
								Dust.NewDust(this.position, this.width, this.height, 166, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
							else
							{
								Dust.NewDust(this.position, this.width, this.height, 167, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
							}
						}
						if (this.type == 262)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 381, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 382, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 383, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 384, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 385, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 386, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 387, this.scale);
						}
						if (this.type == 263)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 390, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 391, this.scale);
						}
						if (this.type == 264)
						{
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 388, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), this.velocity, 389, this.scale);
							return;
						}
					}
					else if (this.type == 265)
					{
						if (this.life < 0)
						{
							for (int num168 = 0; num168 < 15; num168++)
							{
								if (Main.rand.Next(3) != 0)
								{
									Dust.NewDust(this.position, this.width, this.height, 166, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
								else
								{
									Dust.NewDust(this.position, this.width, this.height, 167, (float)hitDirection, -1f, 0, default(Color), 1f);
								}
							}
							return;
						}
					}
					else if (this.type == 266)
					{
						if (this.life > 0)
						{
							int num169 = 0;
							while ((double)num169 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num169++;
							}
							return;
						}
						for (int num170 = 0; num170 < 150; num170++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 396, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 397, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 398, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 399, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 400, 1f);
						Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 401, 1f);
						return;
					}
					else if (this.type == 267)
					{
						if (this.life > 0)
						{
							int num171 = 0;
							while ((double)num171 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num171++;
							}
							return;
						}
						for (int num172 = 0; num172 < 20; num172++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 402, 1f);
						return;
					}
					else if (this.type == 4 || this.type == 126 || this.type == 125)
					{
						if (this.life > 0)
						{
							int num173 = 0;
							while ((double)num173 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num173++;
							}
							return;
						}
						for (int num174 = 0; num174 < 150; num174++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						for (int num175 = 0; num175 < 2; num175++)
						{
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 2, 1f);
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 7, 1f);
							Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 9, 1f);
							if (this.type == 4)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 10, 1f);
								Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0);
							}
							else if (this.type == 125)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 146, 1f);
							}
							else if (this.type == 126)
							{
								Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-30, 31) * 0.2f, (float)Main.rand.Next(-30, 31) * 0.2f), 145, 1f);
							}
						}
						if (this.type == 125 || this.type == 126)
						{
							for (int num176 = 0; num176 < 10; num176++)
							{
								int num177 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num177].velocity *= 1.4f;
							}
							for (int num178 = 0; num178 < 5; num178++)
							{
								int num179 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num179].noGravity = true;
								Main.dust[num179].velocity *= 5f;
								num179 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num179].velocity *= 3f;
							}
							int num180 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num180].velocity *= 0.4f;
							Gore expr_8329_cp_0 = Main.gore[num180];
							expr_8329_cp_0.velocity.X = expr_8329_cp_0.velocity.X + 1f;
							Gore expr_8347_cp_0 = Main.gore[num180];
							expr_8347_cp_0.velocity.Y = expr_8347_cp_0.velocity.Y + 1f;
							num180 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num180].velocity *= 0.4f;
							Gore expr_83C5_cp_0 = Main.gore[num180];
							expr_83C5_cp_0.velocity.X = expr_83C5_cp_0.velocity.X - 1f;
							Gore expr_83E3_cp_0 = Main.gore[num180];
							expr_83E3_cp_0.velocity.Y = expr_83E3_cp_0.velocity.Y + 1f;
							num180 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num180].velocity *= 0.4f;
							Gore expr_8461_cp_0 = Main.gore[num180];
							expr_8461_cp_0.velocity.X = expr_8461_cp_0.velocity.X + 1f;
							Gore expr_847F_cp_0 = Main.gore[num180];
							expr_847F_cp_0.velocity.Y = expr_847F_cp_0.velocity.Y - 1f;
							num180 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num180].velocity *= 0.4f;
							Gore expr_84FD_cp_0 = Main.gore[num180];
							expr_84FD_cp_0.velocity.X = expr_84FD_cp_0.velocity.X - 1f;
							Gore expr_851B_cp_0 = Main.gore[num180];
							expr_851B_cp_0.velocity.Y = expr_851B_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 5)
					{
						if (this.life > 0)
						{
							int num181 = 0;
							while ((double)num181 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num181++;
							}
							return;
						}
						for (int num182 = 0; num182 < 20; num182++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 6, 1f);
						Gore.NewGore(this.position, this.velocity, 7, 1f);
						return;
					}
					else if (this.type == 113 || this.type == 114)
					{
						if (this.life > 0)
						{
							for (int num183 = 0; num183 < 20; num183++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num184 = 0; num184 < 50; num184++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -1f, 0, default(Color), 1f);
						}
						if (this.type == 114)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 139, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 139, this.scale);
							Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
							return;
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 137, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2)), this.velocity, 138, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y), this.velocity, 138, this.scale);
						Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), this.velocity, 137, this.scale);
						if (Main.player[Main.myPlayer].position.Y / 16f > (float)(Main.maxTilesY - 250))
						{
							int num185 = (int)Main.screenPosition.Y;
							int num186 = num185 + Main.screenWidth;
							int num187 = (int)this.position.X;
							if (this.direction > 0)
							{
								num187 -= 80;
							}
							int num188 = num187 + 140;
							int num189 = num187;
							for (int num190 = num185; num190 < num186; num190 += 50)
							{
								while (num189 < num188)
								{
									for (int num191 = 0; num191 < 5; num191++)
									{
										Dust.NewDust(new Vector2((float)num189, (float)num190), 32, 32, 5, (float)Main.rand.Next(-60, 61) * 0.1f, (float)Main.rand.Next(-60, 61) * 0.1f, 0, default(Color), 1f);
									}
									Vector2 vector2 = new Vector2((float)Main.rand.Next(-80, 81) * 0.1f, (float)Main.rand.Next(-60, 21) * 0.1f);
									Gore.NewGore(new Vector2((float)num189, (float)num190), vector2, Main.rand.Next(140, 143), 1f);
									num189 += 46;
								}
								num189 = num187;
							}
							return;
						}
					}
					else if (this.type == 115 || this.type == 116)
					{
						if (this.life > 0)
						{
							for (int num192 = 0; num192 < 5; num192++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						if (this.type == 115 && Main.netMode != 1)
						{
							NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 116, 0);
							for (int num193 = 0; num193 < 10; num193++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num194 = 0; num194 < 20; num194++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 132, this.scale);
						Gore.NewGore(this.position, this.velocity, 133, this.scale);
						return;
					}
					else if (this.type >= 117 && this.type <= 119)
					{
						if (this.life > 0)
						{
							for (int num195 = 0; num195 < 5; num195++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
							}
							return;
						}
						for (int num196 = 0; num196 < 10; num196++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 134 + this.type - 117, this.scale);
						return;
					}
					else if (this.type == 217 || this.type == 218 || this.type == 219)
					{
						if (this.life > 0)
						{
							int num197 = 0;
							while ((double)num197 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num197++;
							}
							return;
						}
						for (int num198 = 0; num198 < 50; num198++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						if (this.type == 217)
						{
							Gore.NewGore(this.position, this.velocity, 292, this.scale);
							Gore.NewGore(this.position, this.velocity, 293, this.scale);
						}
						if (this.type == 218)
						{
							Gore.NewGore(this.position, this.velocity, 295, this.scale);
							Gore.NewGore(this.position, this.velocity, 296, this.scale);
						}
						if (this.type == 219)
						{
							Gore.NewGore(this.position, this.velocity, 294, this.scale);
							return;
						}
					}
					else if (this.type == 222)
					{
						if (this.life > 0)
						{
							int num199 = 0;
							while ((double)num199 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num199++;
							}
							return;
						}
						for (int num200 = 0; num200 < 50; num200++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 35f), this.velocity, 303, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 45f), this.velocity, 304, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 305, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 306, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 10f), this.velocity, 307, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), this.velocity, 308, this.scale);
						return;
					}
					else if (this.type == 6 || this.type == 94 || this.type == 166)
					{
						if (this.life > 0)
						{
							int num201 = 0;
							while ((double)num201 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num201++;
							}
							return;
						}
						for (int num202 = 0; num202 < 50; num202++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num203;
						if (this.type == 94)
						{
							num203 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
							num203 = Gore.NewGore(this.position, this.velocity, 108, this.scale);
							num203 = Gore.NewGore(this.position, this.velocity, 109, this.scale);
							num203 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
							return;
						}
						if (this.type == 166)
						{
							num203 = Gore.NewGore(this.position, this.velocity, 209, this.scale);
							num203 = Gore.NewGore(this.position, this.velocity, 210, this.scale);
							num203 = Gore.NewGore(this.position, this.velocity, 211, this.scale);
							return;
						}
						num203 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
						Main.gore[num203].alpha = this.alpha;
						num203 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
						Main.gore[num203].alpha = this.alpha;
						return;
					}
					else if (this.type == 101)
					{
						if (this.life > 0)
						{
							int num204 = 0;
							while ((double)num204 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num204++;
							}
							return;
						}
						for (int num205 = 0; num205 < 50; num205++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						Gore.NewGore(this.position, this.velocity, 110, this.scale);
						Gore.NewGore(this.position, this.velocity, 114, this.scale);
						Gore.NewGore(this.position, this.velocity, 114, this.scale);
						Gore.NewGore(this.position, this.velocity, 115, this.scale);
						return;
					}
					else if (this.type == 7 || this.type == 8 || this.type == 9)
					{
						if (this.life > 0)
						{
							int num206 = 0;
							while ((double)num206 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num206++;
							}
							return;
						}
						for (int num207 = 0; num207 < 50; num207++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num208 = Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
						Main.gore[num208].alpha = this.alpha;
						return;
					}
					else if (this.type == 98 || this.type == 99 || this.type == 100)
					{
						if (this.life > 0)
						{
							int num209 = 0;
							while ((double)num209 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num209++;
							}
							return;
						}
						for (int num210 = 0; num210 < 50; num210++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						int num211 = Gore.NewGore(this.position, this.velocity, 110, 1f);
						Main.gore[num211].alpha = this.alpha;
						return;
					}
					else if (this.type == 10 || this.type == 11 || this.type == 12)
					{
						if (this.life > 0)
						{
							int num212 = 0;
							while ((double)num212 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num212++;
							}
							return;
						}
						for (int num213 = 0; num213 < 10; num213++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 7 + 18, 1f);
						return;
					}
					else if (this.type == 95 || this.type == 96 || this.type == 97)
					{
						if (this.life > 0)
						{
							int num214 = 0;
							while ((double)num214 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num214++;
							}
							return;
						}
						for (int num215 = 0; num215 < 10; num215++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 95 + 111, 1f);
						return;
					}
					else if (this.type == 13 || this.type == 14 || this.type == 15)
					{
						if (this.life > 0)
						{
							int num216 = 0;
							while ((double)num216 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
								num216++;
							}
							return;
						}
						for (int num217 = 0; num217 < 50; num217++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
						}
						if (this.type == 13)
						{
							Gore.NewGore(this.position, this.velocity, 24, 1f);
							Gore.NewGore(this.position, this.velocity, 25, 1f);
							return;
						}
						if (this.type == 14)
						{
							Gore.NewGore(this.position, this.velocity, 26, 1f);
							Gore.NewGore(this.position, this.velocity, 27, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 28, 1f);
						Gore.NewGore(this.position, this.velocity, 29, 1f);
						return;
					}
					else if (this.type == 17)
					{
						if (this.life > 0)
						{
							int num218 = 0;
							while ((double)num218 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num218++;
							}
							return;
						}
						for (int num219 = 0; num219 < 50; num219++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 30, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 31, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 32, 1f);
						return;
					}
					else if (this.type == 86)
					{
						if (this.life > 0)
						{
							int num220 = 0;
							while ((double)num220 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num220++;
							}
							return;
						}
						for (int num221 = 0; num221 < 50; num221++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 101, 1f);
						Gore.NewGore(this.position, this.velocity, 102, 1f);
						Gore.NewGore(this.position, this.velocity, 103, 1f);
						Gore.NewGore(this.position, this.velocity, 103, 1f);
						Gore.NewGore(this.position, this.velocity, 104, 1f);
						Gore.NewGore(this.position, this.velocity, 104, 1f);
						Gore.NewGore(this.position, this.velocity, 105, 1f);
						return;
					}
					else if (this.type == 155)
					{
						if (this.life > 0)
						{
							int num222 = 0;
							while ((double)num222 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num222++;
							}
							return;
						}
						for (int num223 = 0; num223 < 50; num223++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 181, 1f);
						Gore.NewGore(this.position, this.velocity, 182, 1f);
						Gore.NewGore(this.position, this.velocity, 183, 1f);
						Gore.NewGore(this.position, this.velocity, 183, 1f);
						return;
					}
					else if (this.type == 329)
					{
						if (this.life > 0)
						{
							int num224 = 0;
							while ((double)num224 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num224++;
							}
							return;
						}
						for (int num225 = 0; num225 < 50; num225++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 485, 1f);
						Gore.NewGore(this.position, this.velocity, 486, 1f);
						Gore.NewGore(this.position, this.velocity, 487, 1f);
						return;
					}
					else if (this.type == 163 || this.type == 238)
					{
						if (this.life > 0)
						{
							int num226 = 0;
							while ((double)num226 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num226++;
							}
							return;
						}
						for (int num227 = 0; num227 < 50; num227++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 205, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						Gore.NewGore(this.position, this.velocity, 206, 1f);
						return;
					}
					else if (this.type == 164 || this.type == 165)
					{
						if (this.life > 0)
						{
							int num228 = 0;
							while ((double)num228 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num228++;
							}
							return;
						}
						for (int num229 = 0; num229 < 50; num229++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 207, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						Gore.NewGore(this.position, this.velocity, 208, 1f);
						return;
					}
					else if (this.type == 239 || this.type == 240)
					{
						if (this.life > 0)
						{
							int num230 = 0;
							while ((double)num230 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num230++;
							}
							return;
						}
						for (int num231 = 0; num231 < 50; num231++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 351, 1f);
						Gore.NewGore(this.position, this.velocity, 352, 1f);
						Gore.NewGore(this.position, this.velocity, 352, 1f);
						Gore.NewGore(this.position, this.velocity, 353, 1f);
						Gore.NewGore(this.position, this.velocity, 353, 1f);
						return;
					}
					else if (this.type == 236 || this.type == 237)
					{
						if (this.life > 0)
						{
							int num232 = 0;
							while ((double)num232 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, 0, default(Color), 1f);
								num232++;
							}
							return;
						}
						for (int num233 = 0; num233 < 50; num233++)
						{
							Dust.NewDust(this.position, this.width, this.height, 18, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 332, 1f);
						Gore.NewGore(this.position, this.velocity, 333, 1f);
						Gore.NewGore(this.position, this.velocity, 334, 1f);
						Gore.NewGore(this.position, this.velocity, 335, 1f);
						Gore.NewGore(this.position, this.velocity, 335, 1f);
						return;
					}
					else if (this.type == 241)
					{
						if (this.life > 0)
						{
							int num234 = 0;
							while ((double)num234 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num234++;
							}
							return;
						}
						for (int num235 = 0; num235 < 50; num235++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 354, 1f);
						Gore.NewGore(this.position, this.velocity, 355, 1f);
						return;
					}
					else if (this.type == 242)
					{
						if (this.life > 0)
						{
							int num236 = 0;
							while ((double)num236 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num236++;
							}
							return;
						}
						for (int num237 = 0; num237 < 50; num237++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 356, 1f);
						Gore.NewGore(this.position, this.velocity, 357, 1f);
						Gore.NewGore(this.position, this.velocity, 357, 1f);
						Gore.NewGore(this.position, this.velocity, 358, 1f);
						Gore.NewGore(this.position, this.velocity, 358, 1f);
						return;
					}
					else if (this.type >= 105 && this.type <= 108)
					{
						if (this.life > 0)
						{
							int num238 = 0;
							while ((double)num238 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num238++;
							}
							return;
						}
						for (int num239 = 0; num239 < 50; num239++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 105 || this.type == 107)
						{
							Gore.NewGore(this.position, this.velocity, 124, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 125, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 126, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 127, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 128, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 129, 1f);
						return;
					}
					else if (this.type == 123 || this.type == 124)
					{
						if (this.life > 0)
						{
							int num240 = 0;
							while ((double)num240 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num240++;
							}
							return;
						}
						for (int num241 = 0; num241 < 50; num241++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 151, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 152, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 153, 1f);
						return;
					}
					else if (this.type == 22)
					{
						if (this.life > 0)
						{
							int num242 = 0;
							while ((double)num242 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num242++;
							}
							return;
						}
						for (int num243 = 0; num243 < 50; num243++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 73, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 74, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 75, 1f);
						return;
					}
					else if (this.type == 368)
					{
						if (this.life > 0)
						{
							int num244 = 0;
							while ((double)num244 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num244++;
							}
							return;
						}
						for (int num245 = 0; num245 < 50; num245++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 567, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 568, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 569, 1f);
						return;
					}
					else if (this.type == 369 || this.type == 376)
					{
						if (this.life > 0)
						{
							return;
						}
						for (int num246 = 0; num246 < 25; num246++)
						{
							int num247 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
							Main.dust[num247].velocity *= 1.4f;
							Main.dust[num247].noLight = true;
							Main.dust[num247].noGravity = true;
						}
						int num248 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num248].scale = 1f;
						Gore expr_AE70_cp_0 = Main.gore[num248];
						expr_AE70_cp_0.velocity.X = expr_AE70_cp_0.velocity.X + 1f;
						Gore expr_AE90_cp_0 = Main.gore[num248];
						expr_AE90_cp_0.velocity.Y = expr_AE90_cp_0.velocity.Y + 1f;
						num248 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num248].scale = 1f;
						Gore expr_AF29_cp_0 = Main.gore[num248];
						expr_AF29_cp_0.velocity.X = expr_AF29_cp_0.velocity.X - 1f;
						Gore expr_AF49_cp_0 = Main.gore[num248];
						expr_AF49_cp_0.velocity.Y = expr_AF49_cp_0.velocity.Y + 1f;
						num248 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num248].scale = 1f;
						Gore expr_AFE2_cp_0 = Main.gore[num248];
						expr_AFE2_cp_0.velocity.X = expr_AFE2_cp_0.velocity.X + 1f;
						Gore expr_B002_cp_0 = Main.gore[num248];
						expr_B002_cp_0.velocity.Y = expr_B002_cp_0.velocity.Y - 1f;
						num248 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num248].scale = 1f;
						Gore expr_B09B_cp_0 = Main.gore[num248];
						expr_B09B_cp_0.velocity.X = expr_B09B_cp_0.velocity.X - 1f;
						Gore expr_B0BB_cp_0 = Main.gore[num248];
						expr_B0BB_cp_0.velocity.Y = expr_B0BB_cp_0.velocity.Y - 1f;
						return;
					}
					else if (this.type == 227)
					{
						if (this.life > 0)
						{
							int num249 = 0;
							while ((double)num249 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num249++;
							}
							return;
						}
						for (int num250 = 0; num250 < 50; num250++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 320, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 321, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 322, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 323, 1f);
						return;
					}
					else if (this.type == 228)
					{
						if (this.life > 0)
						{
							int num251 = 0;
							while ((double)num251 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num251++;
							}
							return;
						}
						for (int num252 = 0; num252 < 50; num252++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 324, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 325, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 326, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 327, 1f);
						return;
					}
					else if (this.type == 229)
					{
						if (this.life > 0)
						{
							int num253 = 0;
							while ((double)num253 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num253++;
							}
							return;
						}
						for (int num254 = 0; num254 < 50; num254++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 328, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 329, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 330, 1f);
						return;
					}
					else if (this.type == 142)
					{
						if (this.life > 0)
						{
							int num255 = 0;
							while ((double)num255 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num255++;
							}
							return;
						}
						for (int num256 = 0; num256 < 50; num256++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 157, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 158, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 159, 1f);
						return;
					}
					else if (this.type == 178)
					{
						if (this.life > 0)
						{
							int num257 = 0;
							while ((double)num257 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num257++;
							}
							return;
						}
						for (int num258 = 0; num258 < 50; num258++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 231, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 232, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 233, 1f);
						return;
					}
					else if (this.type == 353 || this.type == 354)
					{
						if (this.life > 0)
						{
							int num259 = 0;
							while ((double)num259 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num259++;
							}
							return;
						}
						for (int num260 = 0; num260 < 50; num260++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 543, 1f);
						Gore.NewGore(this.position, this.velocity, 545, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 546, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 545, 1f);
						return;
					}
					else if (this.type == 37 || this.type == 54)
					{
						if (this.life > 0)
						{
							int num261 = 0;
							while ((double)num261 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num261++;
							}
							return;
						}
						for (int num262 = 0; num262 < 50; num262++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 58, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 59, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
						return;
					}
					else if (this.type == 160)
					{
						if (this.life > 0)
						{
							int num263 = 0;
							while ((double)num263 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num263++;
							}
							return;
						}
						for (int num264 = 0; num264 < 50; num264++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 188, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 189, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 190, 1f);
						return;
					}
					else if (this.type == 18)
					{
						if (this.life > 0)
						{
							int num265 = 0;
							while ((double)num265 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num265++;
							}
							return;
						}
						for (int num266 = 0; num266 < 50; num266++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 33, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 34, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 35, 1f);
						return;
					}
					else if (this.type == 19)
					{
						if (this.life > 0)
						{
							int num267 = 0;
							while ((double)num267 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num267++;
							}
							return;
						}
						for (int num268 = 0; num268 < 50; num268++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 36, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 37, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 38, 1f);
						return;
					}
					else if (this.type == 38)
					{
						if (this.life > 0)
						{
							int num269 = 0;
							while ((double)num269 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num269++;
							}
							return;
						}
						for (int num270 = 0; num270 < 50; num270++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 64, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 65, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 66, 1f);
						return;
					}
					else if (this.type == 20)
					{
						if (this.life > 0)
						{
							int num271 = 0;
							while ((double)num271 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num271++;
							}
							return;
						}
						for (int num272 = 0; num272 < 50; num272++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 39, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 41, 1f);
						return;
					}
					else if (this.type == 207)
					{
						if (this.life > 0)
						{
							int num273 = 0;
							while ((double)num273 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num273++;
							}
							return;
						}
						for (int num274 = 0; num274 < 50; num274++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 283, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 284, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 285, 1f);
						return;
					}
					else if (this.type == 208)
					{
						if (this.life > 0)
						{
							int num275 = 0;
							while ((double)num275 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num275++;
							}
							return;
						}
						for (int num276 = 0; num276 < 50; num276++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 286, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 287, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 288, 1f);
						return;
					}
					else if (this.type == 209)
					{
						if (this.life > 0)
						{
							int num277 = 0;
							while ((double)num277 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num277++;
							}
							return;
						}
						for (int num278 = 0; num278 < 50; num278++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 289, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 290, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 291, 1f);
						return;
					}
					else if (this.type >= 212 && this.type <= 216)
					{
						if (this.life > 0)
						{
							int num279 = 0;
							while ((double)num279 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
								num279++;
							}
							return;
						}
						for (int num280 = 0; num280 < 50; num280++)
						{
							Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 212)
						{
							Gore.NewGore(this.position, this.velocity, 336, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 337, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 338, 1f);
							return;
						}
						if (this.type == 213)
						{
							Gore.NewGore(this.position, this.velocity, 339, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 340, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 341, 1f);
							return;
						}
						if (this.type == 214)
						{
							Gore.NewGore(this.position, this.velocity, 342, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 343, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 344, 1f);
							return;
						}
						if (this.type == 215)
						{
							Gore.NewGore(this.position, this.velocity, 345, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 346, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 347, 1f);
							return;
						}
						if (this.type == 216)
						{
							Gore.NewGore(this.position, this.velocity, 348, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 349, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 350, 1f);
							return;
						}
					}
					else if (this.type == 220 || this.type == 221)
					{
						if (this.life > 0)
						{
							int num281 = 0;
							while ((double)num281 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 151, (float)hitDirection, -1f, 0, default(Color), 0.7f);
								num281++;
							}
							return;
						}
						for (int num282 = 0; num282 < 20; num282++)
						{
							Dust.NewDust(this.position, this.width, this.height, 151, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 0.7f);
						}
						if (this.type == 221)
						{
							Gore.NewGore(this.position, this.velocity, 298, this.scale);
							Gore.NewGore(this.position, this.velocity, 299, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 297, this.scale);
						return;
					}
					else if (this.type == 21 || this.type == 31 || this.type == 294 || this.type == 295 || this.type == 296 || this.type == 32 || this.type == 44 || this.type == 45 || this.type == 77 || this.type == 110 || this.type == 167 || this.type == 197 || this.type == 201 || this.type == 202 || this.type == 203 || this.type == 287 || this.type == 291 || this.type == 292 || this.type == 293 || (this.type >= 322 && this.type <= 324))
					{
						if (this.life > 0)
						{
							int num283 = 0;
							while ((double)num283 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num283++;
							}
							return;
						}
						for (int num284 = 0; num284 < 20; num284++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 167)
						{
							Gore.NewGore(this.position, this.velocity, 213, this.scale);
							Gore.NewGore(this.position, this.velocity, 214, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							return;
						}
						if (this.type == 197)
						{
							Gore.NewGore(this.position, this.velocity, 257, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 212, this.scale);
							return;
						}
						if (this.type == 201)
						{
							Gore.NewGore(this.position, this.velocity, 265, this.scale);
							Gore.NewGore(this.position, this.velocity, 267, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							return;
						}
						if (this.type == 202)
						{
							Gore.NewGore(this.position, this.velocity, 268, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
							return;
						}
						if (this.type == 203)
						{
							Gore.NewGore(this.position, this.velocity, 269, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 266, this.scale);
							return;
						}
						if (this.type == 322)
						{
							Gore.NewGore(this.position, this.velocity, 460, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 461, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 462, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 461, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 462, this.scale);
							return;
						}
						if (this.type == 323)
						{
							Gore.NewGore(this.position, this.velocity, 463, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 465, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 464, this.scale);
							return;
						}
						if (this.type == 324)
						{
							Gore.NewGore(this.position, this.velocity, 466, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 467, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 468, this.scale);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 42, this.scale);
						if (this.type == 77)
						{
							Gore.NewGore(this.position, this.velocity, 106, this.scale);
						}
						if (this.type == 110)
						{
							Gore.NewGore(this.position, this.velocity, 130, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						if (this.type == 110)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
						}
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						return;
					}
					else if ((this.type >= 269 && this.type <= 276) || (this.type >= 281 && this.type <= 286))
					{
						if (this.life > 0)
						{
							int num285 = 0;
							while ((double)num285 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num285++;
							}
							return;
						}
						for (int num286 = 0; num286 < 20; num286++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, 42, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 43, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 44, this.scale);
						if (this.type == 269)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 406, this.scale);
						}
						if (this.type == 270)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 407, this.scale);
						}
						if (this.type == 271 || this.type == 272)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 408, this.scale);
						}
						if (this.type == 274)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 409, this.scale);
						}
						if (this.type == 276)
						{
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 410, this.scale);
							return;
						}
					}
					else if (this.type >= 277 && this.type <= 280)
					{
						if (this.life > 0)
						{
							int num287 = 0;
							while ((double)num287 < dmg / (double)this.lifeMax * 100.0)
							{
								int num288 = Dust.NewDust(this.position, this.width, this.height, 174, (float)hitDirection, -1f, 0, default(Color), 1f);
								Main.dust[num288].scale = 1.1f;
								Main.dust[num288].noGravity = true;
								num287++;
							}
							return;
						}
						for (int num289 = 0; num289 < 75; num289++)
						{
							int num290 = Dust.NewDust(this.position, this.width, this.height, 174, 1.5f * (float)hitDirection, -0.5f, 0, default(Color), 1f);
							Main.dust[num290].velocity *= 2f;
							Main.dust[num290].scale = 1.4f;
							Main.dust[num290].noGravity = true;
						}
						return;
					}
					else if (this.type == 341)
					{
						int num291 = 196;
						if (this.life > 0)
						{
							int num292 = 0;
							while ((double)num292 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, num291, 0f, 0f, 0, default(Color), 1f);
								num292++;
							}
							return;
						}
						for (int num293 = 0; num293 < 20; num293++)
						{
							Dust.NewDust(this.position, this.width, this.height, num291, 0f, 0f, 0, default(Color), 1f);
						}
						int num294 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
						Main.gore[num294].velocity *= 0.3f;
						num294 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
						Main.gore[num294].velocity *= 0.3f;
						num294 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
						Main.gore[num294].velocity *= 0.3f;
						return;
					}
					else if (this.type == 85)
					{
						int num295 = 7;
						if (this.ai[3] == 2f)
						{
							num295 = 10;
						}
						if (this.ai[3] == 3f)
						{
							num295 = 37;
						}
						if (this.life > 0)
						{
							int num296 = 0;
							while ((double)num296 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, num295, 0f, 0f, 0, default(Color), 1f);
								num296++;
							}
							return;
						}
						for (int num297 = 0; num297 < 20; num297++)
						{
							Dust.NewDust(this.position, this.width, this.height, num295, 0f, 0f, 0, default(Color), 1f);
						}
						int num298 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
						Main.gore[num298].velocity *= 0.3f;
						num298 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
						Main.gore[num298].velocity *= 0.3f;
						num298 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
						Main.gore[num298].velocity *= 0.3f;
						return;
					}
					else if (this.type == 169)
					{
						if (this.life > 0)
						{
							int num299 = 0;
							while ((double)num299 < dmg / (double)this.lifeMax * 50.0)
							{
								int num300 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num300].velocity *= 1.5f;
								Main.dust[num300].noGravity = true;
								num299++;
							}
							return;
						}
						for (int num301 = 0; num301 < 100; num301++)
						{
							int num302 = Dust.NewDust(this.position, this.width, this.height, 92, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num302].scale = 1.5f;
							Main.dust[num302].velocity *= 2f;
							Main.dust[num302].noGravity = true;
						}
						return;
					}
					else if (this.type == 170 || this.type == 180)
					{
						if (this.life > 0)
						{
							int num303 = 0;
							while ((double)num303 < dmg / (double)this.lifeMax * 50.0)
							{
								int num304 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num304].velocity *= 1.5f;
								Main.dust[num304].noGravity = true;
								num303++;
							}
							return;
						}
						for (int num305 = 0; num305 < 10; num305++)
						{
							int num306 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num306].velocity *= 2f;
							Main.dust[num306].noGravity = true;
						}
						for (int num307 = 0; num307 < 4; num307++)
						{
							int num308 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num308].velocity *= 0.3f;
						}
						return;
					}
					else if (this.type == 171)
					{
						if (this.life > 0)
						{
							int num309 = 0;
							while ((double)num309 < dmg / (double)this.lifeMax * 50.0)
							{
								int num310 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num310].velocity *= 1.5f;
								Main.dust[num310].noGravity = true;
								num309++;
							}
							return;
						}
						for (int num311 = 0; num311 < 10; num311++)
						{
							int num312 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num312].velocity *= 2f;
							Main.dust[num312].noGravity = true;
						}
						for (int num313 = 0; num313 < 4; num313++)
						{
							int num314 = 11 + num313;
							if (num314 > 13)
							{
								num314 = Main.rand.Next(11, 14);
							}
							int num315 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), num314, this.scale);
							Main.gore[num315].velocity *= 0.3f;
						}
						return;
					}
					else if (this.type == 290)
					{
						if (this.life <= 0)
						{
							for (int num316 = 0; num316 < 10; num316++)
							{
								int num317 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num317].velocity *= 2f;
								Main.dust[num317].noGravity = true;
							}
							int num318 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num318].velocity *= 0.5f;
							num318 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num318].velocity *= 0.5f;
							num318 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + 40f), default(Vector2), Main.rand.Next(11, 14), this.scale);
							Main.gore[num318].velocity *= 0.5f;
							return;
						}
					}
					else if (this.type >= 87 && this.type <= 92)
					{
						if (this.life > 0)
						{
							int num319 = 0;
							while ((double)num319 < dmg / (double)this.lifeMax * 50.0)
							{
								int num320 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num320].velocity *= 1.5f;
								Main.dust[num320].noGravity = true;
								num319++;
							}
							return;
						}
						for (int num321 = 0; num321 < 10; num321++)
						{
							int num322 = Dust.NewDust(this.position, this.width, this.height, 16, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num322].velocity *= 2f;
							Main.dust[num322].noGravity = true;
						}
						int num323 = Main.rand.Next(1, 4);
						for (int num324 = 0; num324 < num323; num324++)
						{
							int num325 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
							Main.gore[num325].velocity *= 0.8f;
						}
						return;
					}
					else if (this.type == 78 || this.type == 79 || this.type == 80)
					{
						if (this.life > 0)
						{
							int num326 = 0;
							while ((double)num326 < dmg / (double)this.lifeMax * 50.0)
							{
								int num327 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
								Main.dust[num327].velocity *= 2f;
								Main.dust[num327].noGravity = true;
								num326++;
							}
							return;
						}
						for (int num328 = 0; num328 < 20; num328++)
						{
							int num329 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
							Main.dust[num329].velocity *= 2f;
							Main.dust[num329].noGravity = true;
						}
						int num330 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 61, this.scale);
						Main.gore[num330].velocity *= 0.3f;
						num330 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 10f), new Vector2((float)hitDirection, 0f), 62, this.scale);
						Main.gore[num330].velocity *= 0.3f;
						num330 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 10f), new Vector2((float)hitDirection, 0f), 63, this.scale);
						Main.gore[num330].velocity *= 0.3f;
						return;
					}
					else if (this.type == 82 || this.type == 158 || this.type == 159 || this.type == 250 || this.type == 253)
					{
						if (this.life > 0)
						{
							int num331 = 0;
							while ((double)num331 < dmg / (double)this.lifeMax * 50.0)
							{
								int num332 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num332].velocity *= 2f;
								Main.dust[num332].noGravity = true;
								num331++;
							}
							return;
						}
						for (int num333 = 0; num333 < 20; num333++)
						{
							int num334 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num334].velocity *= 2f;
							Main.dust[num334].noGravity = true;
						}
						int num335 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num335].velocity *= 0.3f;
						num335 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num335].velocity *= 0.3f;
						num335 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num335].velocity *= 0.3f;
						return;
					}
					else if (this.type == 316 || this.type == 330)
					{
						if (this.life > 0)
						{
							int num336 = 0;
							while ((double)num336 < dmg / (double)this.lifeMax * 100.0)
							{
								int num337 = Dust.NewDust(this.position, this.width, this.height, 192, (float)hitDirection, -1f, 100, new Color(100, 100, 100, 100), 1f);
								Main.dust[num337].noGravity = true;
								num336++;
							}
							return;
						}
						for (int num338 = 0; num338 < 50; num338++)
						{
							int num339 = Dust.NewDust(this.position, this.width, this.height, 192, (float)(2 * hitDirection), -2f, 100, new Color(100, 100, 100, 100), 1f);
							Main.dust[num339].noGravity = true;
						}
						return;
					}
					else if (this.type == 315)
					{
						if (this.life > 0)
						{
							int num340 = 0;
							while ((double)num340 < dmg / (double)this.lifeMax * 50.0)
							{
								int num341 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num341].velocity *= 2f;
								Main.dust[num341].noGravity = true;
								num340++;
							}
							return;
						}
						for (int num342 = 0; num342 < 20; num342++)
						{
							int num343 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num343].velocity *= 2f;
							Main.dust[num343].noGravity = true;
						}
						int num344 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num344].velocity *= 0.3f;
						num344 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num344].velocity *= 0.3f;
						num344 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
						Main.gore[num344].velocity *= 0.3f;
						num344 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)hitDirection, 0f), 446, this.scale);
						Main.gore[num344].velocity *= 0.1f;
						return;
					}
					else if (this.type == 254 || this.type == 255 || this.type == 256 || this.type == 257 || this.type == 258 || this.type == 259 || this.type == 260 || this.type == 261)
					{
						if (this.life > 0)
						{
							int num345 = 0;
							while ((double)num345 < dmg / (double)this.lifeMax * 50.0)
							{
								int num346 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num346].velocity *= 2f;
								Main.dust[num346].noGravity = true;
								num345++;
							}
							return;
						}
						for (int num347 = 0; num347 < 20; num347++)
						{
							int num348 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
							Main.dust[num348].velocity *= 2f;
							Main.dust[num348].noGravity = true;
						}
						if (this.type != 261)
						{
							int num349 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 375, this.scale);
							Main.gore[num349].velocity *= 0.3f;
							num349 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 376, this.scale);
							Main.gore[num349].velocity *= 0.3f;
							num349 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 377, this.scale);
							Main.gore[num349].velocity *= 0.3f;
							return;
						}
					}
					else if (this.type == 140)
					{
						if (this.life <= 0)
						{
							for (int num350 = 0; num350 < 20; num350++)
							{
								int num351 = Dust.NewDust(this.position, this.width, this.height, 54, 0f, 0f, 50, default(Color), 1.5f);
								Main.dust[num351].velocity *= 2f;
								Main.dust[num351].noGravity = true;
							}
							int num352 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num352].velocity *= 0.3f;
							num352 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)(this.height / 2) - 15f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num352].velocity *= 0.3f;
							num352 = Gore.NewGore(new Vector2(this.position.X, this.position.Y + (float)this.height - 20f), new Vector2((float)hitDirection, 0f), 99, this.scale);
							Main.gore[num352].velocity *= 0.3f;
							return;
						}
					}
					else if (this.type == 39 || this.type == 40 || this.type == 41)
					{
						if (this.life > 0)
						{
							int num353 = 0;
							while ((double)num353 < dmg / (double)this.lifeMax * 50.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num353++;
							}
							return;
						}
						for (int num354 = 0; num354 < 20; num354++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						Gore.NewGore(this.position, this.velocity, this.type - 39 + 67, 1f);
						return;
					}
					else if (this.type == 34)
					{
						if (this.life > 0)
						{
							int num355 = 0;
							while ((double)num355 < dmg / (double)this.lifeMax * 30.0)
							{
								int num356 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
								Main.dust[num356].noLight = true;
								Main.dust[num356].noGravity = true;
								Main.dust[num356].velocity *= 1.3f;
								num356 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
								Main.dust[num356].noLight = true;
								Main.dust[num356].velocity *= 1.3f;
								num355++;
							}
							return;
						}
						for (int num357 = 0; num357 < 15; num357++)
						{
							int num358 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num358].noLight = true;
							Main.dust[num358].noGravity = true;
							Main.dust[num358].velocity *= 1.3f;
							num358 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, default(Color), 0.9f);
							Main.dust[num358].noLight = true;
							Main.dust[num358].velocity *= 1.3f;
						}
						return;
					}
					else if (this.type == 289)
					{
						if (this.life > 0)
						{
							int num359 = 0;
							while ((double)num359 < dmg / (double)this.lifeMax * 30.0)
							{
								int num360 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
								Main.dust[num360].noLight = true;
								Main.dust[num360].noGravity = true;
								Main.dust[num360].velocity *= 1.3f;
								num359++;
							}
							return;
						}
						for (int num361 = 0; num361 < 50; num361++)
						{
							int num362 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.8f);
							Main.dust[num362].noLight = true;
							Main.dust[num362].noGravity = true;
							Main.dust[num362].velocity *= 1.3f;
						}
						return;
					}
					else if (this.type == 35 || this.type == 36)
					{
						if (this.life > 0)
						{
							int num363 = 0;
							while ((double)num363 < dmg / (double)this.lifeMax * 100.0)
							{
								Dust.NewDust(this.position, this.width, this.height, 26, (float)hitDirection, -1f, 0, default(Color), 1f);
								num363++;
							}
							return;
						}
						for (int num364 = 0; num364 < 150; num364++)
						{
							Dust.NewDust(this.position, this.width, this.height, 26, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
						}
						if (this.type == 35)
						{
							Gore.NewGore(this.position, this.velocity, 54, 1f);
							Gore.NewGore(this.position, this.velocity, 55, 1f);
							return;
						}
						Gore.NewGore(this.position, this.velocity, 56, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						Gore.NewGore(this.position, this.velocity, 57, 1f);
						return;
					}
					else if (this.type == 139)
					{
						if (this.life <= 0)
						{
							for (int num365 = 0; num365 < 10; num365++)
							{
								int num366 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num366].velocity *= 1.4f;
							}
							for (int num367 = 0; num367 < 5; num367++)
							{
								int num368 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num368].noGravity = true;
								Main.dust[num368].velocity *= 5f;
								num368 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num368].velocity *= 3f;
							}
							int num369 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num369].velocity *= 0.4f;
							Gore expr_10657_cp_0 = Main.gore[num369];
							expr_10657_cp_0.velocity.X = expr_10657_cp_0.velocity.X + 1f;
							Gore expr_10677_cp_0 = Main.gore[num369];
							expr_10677_cp_0.velocity.Y = expr_10677_cp_0.velocity.Y + 1f;
							num369 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num369].velocity *= 0.4f;
							Gore expr_106FB_cp_0 = Main.gore[num369];
							expr_106FB_cp_0.velocity.X = expr_106FB_cp_0.velocity.X - 1f;
							Gore expr_1071B_cp_0 = Main.gore[num369];
							expr_1071B_cp_0.velocity.Y = expr_1071B_cp_0.velocity.Y + 1f;
							num369 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num369].velocity *= 0.4f;
							Gore expr_1079F_cp_0 = Main.gore[num369];
							expr_1079F_cp_0.velocity.X = expr_1079F_cp_0.velocity.X + 1f;
							Gore expr_107BF_cp_0 = Main.gore[num369];
							expr_107BF_cp_0.velocity.Y = expr_107BF_cp_0.velocity.Y - 1f;
							num369 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num369].velocity *= 0.4f;
							Gore expr_10843_cp_0 = Main.gore[num369];
							expr_10843_cp_0.velocity.X = expr_10843_cp_0.velocity.X - 1f;
							Gore expr_10863_cp_0 = Main.gore[num369];
							expr_10863_cp_0.velocity.Y = expr_10863_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type >= 134 && this.type <= 136)
					{
						if (this.type == 135 && this.life > 0 && Main.netMode != 1 && this.ai[2] == 0f && Main.rand.Next(25) == 0)
						{
							this.ai[2] = 1f;
							int num370 = NPC.NewNPC((int)(this.position.X + (float)(this.width / 2)), (int)(this.position.Y + (float)this.height), 139, 0);
							if (Main.netMode == 2 && num370 < 200)
							{
								NetMessage.SendData(23, -1, -1, "", num370, 0f, 0f, 0f, 0);
							}
							this.netUpdate = true;
						}
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 156, 1f);
							if (Main.rand.Next(2) == 0)
							{
								for (int num371 = 0; num371 < 10; num371++)
								{
									int num372 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
									Main.dust[num372].velocity *= 1.4f;
								}
								for (int num373 = 0; num373 < 5; num373++)
								{
									int num374 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
									Main.dust[num374].noGravity = true;
									Main.dust[num374].velocity *= 5f;
									num374 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
									Main.dust[num374].velocity *= 3f;
								}
								int num375 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num375].velocity *= 0.4f;
								Gore expr_10BA4_cp_0 = Main.gore[num375];
								expr_10BA4_cp_0.velocity.X = expr_10BA4_cp_0.velocity.X + 1f;
								Gore expr_10BC4_cp_0 = Main.gore[num375];
								expr_10BC4_cp_0.velocity.Y = expr_10BC4_cp_0.velocity.Y + 1f;
								num375 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num375].velocity *= 0.4f;
								Gore expr_10C48_cp_0 = Main.gore[num375];
								expr_10C48_cp_0.velocity.X = expr_10C48_cp_0.velocity.X - 1f;
								Gore expr_10C68_cp_0 = Main.gore[num375];
								expr_10C68_cp_0.velocity.Y = expr_10C68_cp_0.velocity.Y + 1f;
								num375 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num375].velocity *= 0.4f;
								Gore expr_10CEC_cp_0 = Main.gore[num375];
								expr_10CEC_cp_0.velocity.X = expr_10CEC_cp_0.velocity.X + 1f;
								Gore expr_10D0C_cp_0 = Main.gore[num375];
								expr_10D0C_cp_0.velocity.Y = expr_10D0C_cp_0.velocity.Y - 1f;
								num375 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num375].velocity *= 0.4f;
								Gore expr_10D90_cp_0 = Main.gore[num375];
								expr_10D90_cp_0.velocity.X = expr_10D90_cp_0.velocity.X - 1f;
								Gore expr_10DB0_cp_0 = Main.gore[num375];
								expr_10DB0_cp_0.velocity.Y = expr_10DB0_cp_0.velocity.Y - 1f;
								return;
							}
						}
					}
					else if (this.type == 347)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 524, 1f);
							Gore.NewGore(this.position, this.velocity, 525, 1f);
							Gore.NewGore(this.position, this.velocity, 526, 1f);
							Gore.NewGore(this.position, this.velocity, 527, 1f);
							for (int num376 = 0; num376 < 7; num376++)
							{
								int num377 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num377].velocity *= 1.4f;
							}
							for (int num378 = 0; num378 < 4; num378++)
							{
								int num379 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num379].noGravity = true;
								Main.dust[num379].velocity *= 5f;
								num379 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num379].velocity *= 3f;
							}
							int num380 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num380].velocity *= 0.4f;
							Gore expr_11058_cp_0 = Main.gore[num380];
							expr_11058_cp_0.velocity.X = expr_11058_cp_0.velocity.X + 1f;
							Gore expr_11078_cp_0 = Main.gore[num380];
							expr_11078_cp_0.velocity.Y = expr_11078_cp_0.velocity.Y + 1f;
							num380 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num380].velocity *= 0.4f;
							Gore expr_110FC_cp_0 = Main.gore[num380];
							expr_110FC_cp_0.velocity.X = expr_110FC_cp_0.velocity.X - 1f;
							Gore expr_1111C_cp_0 = Main.gore[num380];
							expr_1111C_cp_0.velocity.Y = expr_1111C_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 346)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 518, 1f);
							Gore.NewGore(this.position, this.velocity, 519, 1f);
							Gore.NewGore(this.position, this.velocity, 520, 1f);
							Gore.NewGore(this.position, this.velocity, 521, 1f);
							Gore.NewGore(this.position, this.velocity, 522, 1f);
							Gore.NewGore(this.position, this.velocity, 523, 1f);
							for (int num381 = 0; num381 < 10; num381++)
							{
								int num382 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num382].velocity *= 1.4f;
							}
							for (int num383 = 0; num383 < 5; num383++)
							{
								int num384 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num384].noGravity = true;
								Main.dust[num384].velocity *= 5f;
								num384 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num384].velocity *= 3f;
							}
							int num385 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num385].velocity *= 0.4f;
							Gore expr_113FD_cp_0 = Main.gore[num385];
							expr_113FD_cp_0.velocity.X = expr_113FD_cp_0.velocity.X + 1f;
							Gore expr_1141D_cp_0 = Main.gore[num385];
							expr_1141D_cp_0.velocity.Y = expr_1141D_cp_0.velocity.Y + 1f;
							num385 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num385].velocity *= 0.4f;
							Gore expr_114A1_cp_0 = Main.gore[num385];
							expr_114A1_cp_0.velocity.X = expr_114A1_cp_0.velocity.X - 1f;
							Gore expr_114C1_cp_0 = Main.gore[num385];
							expr_114C1_cp_0.velocity.Y = expr_114C1_cp_0.velocity.Y + 1f;
							num385 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num385].velocity *= 0.4f;
							Gore expr_11545_cp_0 = Main.gore[num385];
							expr_11545_cp_0.velocity.X = expr_11545_cp_0.velocity.X + 1f;
							Gore expr_11565_cp_0 = Main.gore[num385];
							expr_11565_cp_0.velocity.Y = expr_11565_cp_0.velocity.Y - 1f;
							num385 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num385].velocity *= 0.4f;
							Gore expr_115E9_cp_0 = Main.gore[num385];
							expr_115E9_cp_0.velocity.X = expr_115E9_cp_0.velocity.X - 1f;
							Gore expr_11609_cp_0 = Main.gore[num385];
							expr_11609_cp_0.velocity.Y = expr_11609_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 127)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 149, 1f);
							Gore.NewGore(this.position, this.velocity, 150, 1f);
							for (int num386 = 0; num386 < 10; num386++)
							{
								int num387 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num387].velocity *= 1.4f;
							}
							for (int num388 = 0; num388 < 5; num388++)
							{
								int num389 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num389].noGravity = true;
								Main.dust[num389].velocity *= 5f;
								num389 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num389].velocity *= 3f;
							}
							int num390 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num390].velocity *= 0.4f;
							Gore expr_11877_cp_0 = Main.gore[num390];
							expr_11877_cp_0.velocity.X = expr_11877_cp_0.velocity.X + 1f;
							Gore expr_11897_cp_0 = Main.gore[num390];
							expr_11897_cp_0.velocity.Y = expr_11897_cp_0.velocity.Y + 1f;
							num390 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num390].velocity *= 0.4f;
							Gore expr_1191B_cp_0 = Main.gore[num390];
							expr_1191B_cp_0.velocity.X = expr_1191B_cp_0.velocity.X - 1f;
							Gore expr_1193B_cp_0 = Main.gore[num390];
							expr_1193B_cp_0.velocity.Y = expr_1193B_cp_0.velocity.Y + 1f;
							num390 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num390].velocity *= 0.4f;
							Gore expr_119BF_cp_0 = Main.gore[num390];
							expr_119BF_cp_0.velocity.X = expr_119BF_cp_0.velocity.X + 1f;
							Gore expr_119DF_cp_0 = Main.gore[num390];
							expr_119DF_cp_0.velocity.Y = expr_119DF_cp_0.velocity.Y - 1f;
							num390 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num390].velocity *= 0.4f;
							Gore expr_11A63_cp_0 = Main.gore[num390];
							expr_11A63_cp_0.velocity.X = expr_11A63_cp_0.velocity.X - 1f;
							Gore expr_11A83_cp_0 = Main.gore[num390];
							expr_11A83_cp_0.velocity.Y = expr_11A83_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type >= 128 && this.type <= 131)
					{
						if (this.life <= 0)
						{
							Gore.NewGore(this.position, this.velocity, 147, 1f);
							Gore.NewGore(this.position, this.velocity, 148, 1f);
							for (int num391 = 0; num391 < 10; num391++)
							{
								int num392 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num392].velocity *= 1.4f;
							}
							for (int num393 = 0; num393 < 5; num393++)
							{
								int num394 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
								Main.dust[num394].noGravity = true;
								Main.dust[num394].velocity *= 5f;
								num394 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num394].velocity *= 3f;
							}
							int num395 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num395].velocity *= 0.4f;
							Gore expr_11D04_cp_0 = Main.gore[num395];
							expr_11D04_cp_0.velocity.X = expr_11D04_cp_0.velocity.X + 1f;
							Gore expr_11D24_cp_0 = Main.gore[num395];
							expr_11D24_cp_0.velocity.Y = expr_11D24_cp_0.velocity.Y + 1f;
							num395 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num395].velocity *= 0.4f;
							Gore expr_11DA8_cp_0 = Main.gore[num395];
							expr_11DA8_cp_0.velocity.X = expr_11DA8_cp_0.velocity.X - 1f;
							Gore expr_11DC8_cp_0 = Main.gore[num395];
							expr_11DC8_cp_0.velocity.Y = expr_11DC8_cp_0.velocity.Y + 1f;
							num395 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num395].velocity *= 0.4f;
							Gore expr_11E4C_cp_0 = Main.gore[num395];
							expr_11E4C_cp_0.velocity.X = expr_11E4C_cp_0.velocity.X + 1f;
							Gore expr_11E6C_cp_0 = Main.gore[num395];
							expr_11E6C_cp_0.velocity.Y = expr_11E6C_cp_0.velocity.Y - 1f;
							num395 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
							Main.gore[num395].velocity *= 0.4f;
							Gore expr_11EF0_cp_0 = Main.gore[num395];
							expr_11EF0_cp_0.velocity.X = expr_11EF0_cp_0.velocity.X - 1f;
							Gore expr_11F10_cp_0 = Main.gore[num395];
							expr_11F10_cp_0.velocity.Y = expr_11F10_cp_0.velocity.Y - 1f;
							return;
						}
					}
					else if (this.type == 23)
					{
						if (this.life > 0)
						{
							int num396 = 0;
							while ((double)num396 < dmg / (double)this.lifeMax * 100.0)
							{
								int num397 = 25;
								if (Main.rand.Next(2) == 0)
								{
									num397 = 6;
								}
								Dust.NewDust(this.position, this.width, this.height, num397, (float)hitDirection, -1f, 0, default(Color), 1f);
								int num398 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num398].noGravity = true;
								num396++;
							}
							return;
						}
						for (int num399 = 0; num399 < 50; num399++)
						{
							int num400 = 25;
							if (Main.rand.Next(2) == 0)
							{
								num400 = 6;
							}
							Dust.NewDust(this.position, this.width, this.height, num400, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
						}
						for (int num401 = 0; num401 < 50; num401++)
						{
							int num402 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
							Main.dust[num402].velocity *= 6f;
							Main.dust[num402].noGravity = true;
						}
						return;
					}
					else if (this.type == 24)
					{
						if (this.life > 0)
						{
							int num403 = 0;
							while ((double)num403 < dmg / (double)this.lifeMax * 100.0)
							{
								int num404 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
								Main.dust[num404].noGravity = true;
								num403++;
							}
							return;
						}
						for (int num405 = 0; num405 < 50; num405++)
						{
							int num406 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 2.5f);
							Main.dust[num406].noGravity = true;
							Main.dust[num406].velocity *= 2f;
						}
						Gore.NewGore(this.position, this.velocity, 45, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 46, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
						Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 47, 1f);
						return;
					}
					else
					{
						if (this.type == 25)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
							for (int num407 = 0; num407 < 20; num407++)
							{
								int num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
								Main.dust[num408].noGravity = true;
								Main.dust[num408].velocity *= 2f;
								num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
								Main.dust[num408].velocity *= 2f;
							}
							return;
						}
						if (this.type == 33)
						{
							Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
							for (int num409 = 0; num409 < 20; num409++)
							{
								int num410 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
								Main.dust[num410].noGravity = true;
								Main.dust[num410].velocity *= 2f;
								num410 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 0.6f);
								Main.dust[num410].velocity *= 2f;
							}
							return;
						}
						if (this.type == 26 || this.type == 27 || this.type == 28 || this.type == 29 || this.type == 73 || this.type == 111)
						{
							if (this.life > 0)
							{
								int num411 = 0;
								while ((double)num411 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num411++;
								}
								return;
							}
							for (int num412 = 0; num412 < 50; num412++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 48, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 49, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 49, this.scale);
							if (this.type == 111)
							{
								Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 131, this.scale);
							}
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
							Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
							return;
						}
						else if (this.type == 185)
						{
							if (this.life > 0)
							{
								int num413 = 0;
								while ((double)num413 < dmg / (double)this.lifeMax * 100.0)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
									num413++;
								}
								return;
							}
							for (int num414 = 0; num414 < 50; num414++)
							{
								Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * (float)hitDirection, -2.5f, 0, default(Color), 1f);
							}
							Gore.NewGore(this.position, this.velocity, 240, this.scale);
							return;
						}
						else
						{
							if (this.type == 30)
							{
								Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
								for (int num415 = 0; num415 < 20; num415++)
								{
									int num416 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
									Main.dust[num416].noGravity = true;
									Main.dust[num416].velocity *= 2f;
									num416 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
									Main.dust[num416].velocity *= 2f;
								}
								return;
							}
							if (this.type == 42 || this.type == 176 || this.type == 205 || (this.type >= 231 && this.type <= 235))
							{
								if (this.life > 0)
								{
									int num417 = 0;
									while ((double)num417 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -1f, this.alpha, this.color, this.scale);
										num417++;
									}
									return;
								}
								for (int num418 = 0; num418 < 50; num418++)
								{
									Dust.NewDust(this.position, this.width, this.height, 18, (float)hitDirection, -2f, this.alpha, this.color, this.scale);
								}
								if (this.type == 205)
								{
									Gore.NewGore(this.position, this.velocity, 270, this.scale);
									Gore.NewGore(this.position, this.velocity, 271, this.scale);
									Gore.NewGore(this.position, this.velocity, 271, this.scale);
									Gore.NewGore(this.position, this.velocity, 272, this.scale);
									return;
								}
								if (this.type == 176)
								{
									Gore.NewGore(this.position, this.velocity, 229, this.scale);
									Gore.NewGore(this.position, this.velocity, 230, this.scale);
									return;
								}
								Gore.NewGore(this.position, this.velocity, 70, this.scale);
								Gore.NewGore(this.position, this.velocity, 71, this.scale);
								return;
							}
							else if (this.type == 43 || this.type == 56)
							{
								if (this.life > 0)
								{
									int num419 = 0;
									while ((double)num419 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
										num419++;
									}
									return;
								}
								for (int num420 = 0; num420 < 50; num420++)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								}
								Gore.NewGore(this.position, this.velocity, 72, 1f);
								Gore.NewGore(this.position, this.velocity, 72, 1f);
								return;
							}
							else if (this.type == 175)
							{
								if (this.life > 0)
								{
									int num421 = 0;
									while ((double)num421 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -1f, this.alpha, this.color, 1.2f);
										num421++;
									}
									return;
								}
								for (int num422 = 0; num422 < 50; num422++)
								{
									Dust.NewDust(this.position, this.width, this.height, 40, (float)hitDirection, -2f, this.alpha, this.color, 1.2f);
								}
								Gore.NewGore(this.position, this.velocity, 227, 1f);
								Gore.NewGore(this.position, this.velocity, 228, 1f);
								return;
							}
							else if (this.type == 48)
							{
								if (this.life > 0)
								{
									int num423 = 0;
									while ((double)num423 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num423++;
									}
									return;
								}
								for (int num424 = 0; num424 < 50; num424++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 80, 1f);
								Gore.NewGore(this.position, this.velocity, 81, 1f);
								return;
							}
							else if (this.type == 62 || this.type == 66)
							{
								if (this.life > 0)
								{
									int num425 = 0;
									while ((double)num425 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num425++;
									}
									return;
								}
								for (int num426 = 0; num426 < 50; num426++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 93, 1f);
								Gore.NewGore(this.position, this.velocity, 94, 1f);
								Gore.NewGore(this.position, this.velocity, 94, 1f);
								return;
							}
							else if (this.type == 156)
							{
								if (this.life > 0)
								{
									int num427 = 0;
									while ((double)num427 < dmg / (double)this.lifeMax * 100.0)
									{
										Dust.NewDust(this.position, this.width, this.height, 5, (float)hitDirection, -1f, 0, default(Color), 1f);
										num427++;
									}
									return;
								}
								for (int num428 = 0; num428 < 50; num428++)
								{
									Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
								}
								Gore.NewGore(this.position, this.velocity, 184, 1f);
								Gore.NewGore(this.position, this.velocity, 185, 1f);
								Gore.NewGore(this.position, this.velocity, 185, 1f);
							}
						}
					}
					return;
				}
				if (this.life > 0)
				{
					int num429 = 0;
					while ((double)num429 < dmg / (double)this.lifeMax * 80.0)
					{
						Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
						num429++;
					}
					return;
				}
				for (int num430 = 0; num430 < 40; num430++)
				{
					Dust.NewDust(this.position, this.width, this.height, 6, (float)(hitDirection * 2), -1f, this.alpha, default(Color), 1.5f);
				}
				return;
			}
		}
		public static int CountNPCS(int Type)
		{
			int num = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					num++;
				}
			}
			return num;
		}
		public static bool AnyNPCs(int Type)
		{
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == Type)
				{
					return true;
				}
			}
			return false;
		}
		public static void SpawnSkeletron()
		{
			bool flag = true;
			bool flag2 = false;
			Vector2 zero = Vector2.Zero;
			int num = 0;
			int num2 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].type == 35)
				{
					flag = false;
					break;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active)
				{
					if (Main.npc[j].type == 37)
					{
						flag2 = true;
						Main.npc[j].ai[3] = 1f;
						zero = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
						if (Main.netMode == 2)
						{
							NetMessage.SendData(23, -1, -1, "", j, 0f, 0f, 0f, 0);
						}
					}
					else if (Main.npc[j].type == 54)
					{
						flag2 = true;
						zero = Main.npc[j].position;
						num = Main.npc[j].width;
						num2 = Main.npc[j].height;
					}
				}
			}
			if (flag && flag2)
			{
				int num3 = NPC.NewNPC((int)zero.X + num / 2, (int)zero.Y + num2 / 2, 35, 0);
				Main.npc[num3].netUpdate = true;
				string str = "Skeletron";
				if (Main.netMode == 0)
				{
					Main.NewText(str + " " + Lang.misc[16], 175, 75, 255, false);
					return;
				}
				if (Main.netMode == 2)
				{
					NetMessage.SendData(25, -1, -1, str + " " + Lang.misc[16], 255, 175f, 75f, 255f, 0);
				}
			}
		}
		public static bool NearSpikeBall(int x, int y)
		{
			Rectangle rectangle = new Rectangle(x * 16 - 300, y * 16 - 300, 600, 600);
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active && Main.npc[i].aiStyle == 20)
				{
					Rectangle rectangle2 = new Rectangle((int)Main.npc[i].ai[1], (int)Main.npc[i].ai[2], 20, 20);
					if (rectangle.Intersects(rectangle2))
					{
						return true;
					}
				}
			}
			return false;
		}
		public int HasBuff(int type)
		{
			if (this.buffImmune[type])
			{
				return -1;
			}
			for (int i = 0; i < 5; i++)
			{
				if (this.buffTime[i] >= 1 && this.buffType[i] == type)
				{
					return i;
				}
			}
			return -1;
		}
		public void AddBuff(int type, int time, bool quiet = false)
		{
			if (this.buffImmune[type])
			{
				return;
			}
			if (!quiet)
			{
				if (Main.netMode == 1)
				{
					NetMessage.SendData(53, -1, -1, "", this.whoAmI, (float)type, (float)time, 0f, 0);
				}
				else if (Main.netMode == 2)
				{
					NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
				}
			}
			int num = -1;
			for (int i = 0; i < 5; i++)
			{
				if (this.buffType[i] == type)
				{
					if (this.buffTime[i] < time)
					{
						this.buffTime[i] = time;
					}
					return;
				}
			}
			while (num == -1)
			{
				int num2 = -1;
				for (int j = 0; j < 5; j++)
				{
					if (!Main.debuff[this.buffType[j]])
					{
						num2 = j;
						break;
					}
				}
				if (num2 == -1)
				{
					return;
				}
				for (int k = num2; k < 5; k++)
				{
					if (this.buffType[k] == 0)
					{
						num = k;
						break;
					}
				}
				if (num == -1)
				{
					this.DelBuff(num2);
				}
			}
			this.buffType[num] = type;
			this.buffTime[num] = time;
		}
		public void DelBuff(int b)
		{
			this.buffTime[b] = 0;
			this.buffType[b] = 0;
			for (int i = 0; i < 4; i++)
			{
				if (this.buffTime[i] == 0 || this.buffType[i] == 0)
				{
					for (int j = i + 1; j < 5; j++)
					{
						this.buffTime[j - 1] = this.buffTime[j];
						this.buffType[j - 1] = this.buffType[j];
						this.buffTime[j] = 0;
						this.buffType[j] = 0;
					}
				}
			}
			if (Main.netMode == 2)
			{
				NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
			}
		}
		public Vector2 center()
		{
			return new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
		}
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}
		public void UpdateNPC(int i)
		{
			this.whoAmI = i;
			if (this.active)
			{
				if (this.type == 368)
				{
					NPC.travelNPC = true;
				}
				if (Main.netMode == 1 && this.townNPC && this.type != 37 && this.npcNameLookup == 0)
				{
					this.npcNameLookup = 1;
					int number = -1;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j] == this)
						{
							number = j;
							break;
						}
					}
					NetMessage.SendData(56, -1, -1, "", number, 0f, 0f, 0f, 0);
				}
				if (this.displayName == "" && Main.netMode != 1)
				{
					this.displayName = this.name;
				}
				if (this.realLife >= 0)
				{
					this.life = Main.npc[this.realLife].life;
				}
				if (Main.netMode == 1)
				{
					bool flag = false;
					int num = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					try
					{
						if (num >= 4 && num <= Main.maxTilesX - 4 && num2 >= 4 && num2 <= Main.maxTilesY - 4)
						{
							if (Main.tile[num, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num - 3, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num + 3, num2] == null)
							{
								flag = true;
							}
							else if (Main.tile[num, num2 - 3] == null)
							{
								flag = true;
							}
							else if (Main.tile[num, num2 + 3] == null)
							{
								flag = true;
							}
						}
					}
					catch
					{
						flag = true;
					}
					if (flag)
					{
						return;
					}
				}
				this.lifeRegen = 0;
				this.poisoned = false;
				this.venom = false;
				this.onFire = false;
				this.midas = false;
				this.ichor = false;
				this.onFrostBurn = false;
				this.onFire2 = false;
				this.confused = false;
				this.loveStruck = false;
				this.stinky = false;
				this.dripping = false;
				this.drippingSlime = false;
				for (int k = 0; k < 5; k++)
				{
					if (this.buffType[k] > 0 && this.buffTime[k] > 0)
					{
						this.buffTime[k]--;
						if (this.buffType[k] == 20)
						{
							this.poisoned = true;
						}
						if (this.buffType[k] == 70)
						{
							this.venom = true;
						}
						if (this.buffType[k] == 24)
						{
							this.onFire = true;
						}
						if (this.buffType[k] == 72)
						{
							this.midas = true;
						}
						if (this.buffType[k] == 69)
						{
							this.ichor = true;
						}
						if (this.buffType[k] == 31)
						{
							this.confused = true;
						}
						if (this.buffType[k] == 39)
						{
							this.onFire2 = true;
						}
						if (this.buffType[k] == 44)
						{
							this.onFrostBurn = true;
						}
						if (this.buffType[k] == 103)
						{
							this.dripping = true;
						}
						if (this.buffType[k] == 137)
						{
							this.drippingSlime = true;
						}
						if (this.buffType[k] == 119)
						{
							this.loveStruck = true;
						}
						if (this.buffType[k] == 120)
						{
							this.stinky = true;
						}
					}
				}
				if (Main.netMode != 1)
				{
					for (int l = 0; l < 5; l++)
					{
						if (this.buffType[l] > 0 && this.buffTime[l] <= 0)
						{
							this.DelBuff(l);
							if (Main.netMode == 2)
							{
								NetMessage.SendData(54, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
							}
						}
					}
				}
				if (this.teleportTime > 0f)
				{
					if ((float)Main.rand.Next(100) <= 100f * this.teleportTime * 2f)
					{
						int num3 = Dust.NewDust(new Vector2((float)this.getRect().X, (float)this.getRect().Y), this.getRect().Width, this.getRect().Height, 159, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num3].scale = this.teleportTime * 1.5f;
						Main.dust[num3].noGravity = true;
						Main.dust[num3].velocity *= 1.1f;
					}
					this.teleportTime -= 0.005f;
				}
				if (this.type >= 254 && this.type <= 261)
				{
					float num4 = (float)Main.rand.Next(28, 42) * 0.005f;
					num4 += (float)(270 - (int)Main.mouseTextColor) / 500f;
					float num5 = 0.1f;
					float num6 = 0.3f + num4 / 2f;
					float num7 = 0.6f + num4;
					float num8 = 0.35f;
					num5 *= num8;
					num6 *= num8;
					num7 *= num8;
					Lighting.addLight((int)this.center().X / 16, (int)this.center().Y / 16, num5, num6, num7);
				}
				if (!this.dontTakeDamage)
				{
					if (this.poisoned)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 4;
					}
					if (this.onFire)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 8;
					}
					if (this.onFrostBurn)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 16;
					}
					if (this.onFire2)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					if (this.venom)
					{
						if (this.lifeRegen > 0)
						{
							this.lifeRegen = 0;
						}
						this.lifeRegen -= 12;
					}
					this.lifeRegenCount += this.lifeRegen;
					while (this.lifeRegenCount >= 120)
					{
						this.lifeRegenCount -= 120;
						if (this.life < this.lifeMax)
						{
							this.life++;
						}
						if (this.life > this.lifeMax)
						{
							this.life = this.lifeMax;
						}
					}
					if (!this.onFrostBurn)
					{
						if (!this.venom)
						{
							while (this.lifeRegenCount <= -120)
							{
								this.lifeRegenCount += 120;
								int num9 = this.whoAmI;
								if (this.realLife >= 0)
								{
									num9 = this.realLife;
								}
								Main.npc[num9].life--;
								CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), new Color(255, 140, 40, 255), string.Concat(1), false, true);
								if (Main.npc[num9].life <= 0)
								{
									Main.npc[num9].life = 1;
									if (Main.netMode != 1)
									{
										Main.npc[num9].StrikeNPC(9999, 0f, 0, false, false);
										if (Main.netMode == 2)
										{
											NetMessage.SendData(28, -1, -1, "", num9, 9999f, 0f, 0f, 0);
										}
									}
								}
							}
							goto IL_898;
						}
					}
					while (this.lifeRegenCount <= -240)
					{
						this.lifeRegenCount += 240;
						int num10 = this.whoAmI;
						if (this.realLife >= 0)
						{
							num10 = this.realLife;
						}
						Main.npc[num10].life -= 2;
						CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), new Color(255, 140, 40, 255), string.Concat(2), false, true);
						if (Main.npc[num10].life <= 0)
						{
							Main.npc[num10].life = 1;
							if (Main.netMode != 1)
							{
								Main.npc[num10].StrikeNPC(9999, 0f, 0, false, false);
								if (Main.netMode == 2)
								{
									NetMessage.SendData(28, -1, -1, "", num10, 9999f, 0f, 0f, 0);
								}
							}
						}
					}
				}
				IL_898:
				if (Main.netMode != 1 && Main.bloodMoon)
				{
					bool flag2 = false;
					if (this.value == 0f)
					{
						flag2 = true;
					}
					if (this.type == 46 || this.type == 303)
					{
						this.Transform(47);
					}
					else if (this.type == 55)
					{
						this.Transform(57);
					}
					else if (this.type == 148 || this.type == 149)
					{
						this.Transform(168);
					}
					if (flag2)
					{
						this.value = 0f;
					}
				}
				float num11 = 10f;
				NPC.gravity = 0.3f;
				if (this.type == 258)
				{
					NPC.gravity = 0.1f;
					if (this.velocity.Y > 3f)
					{
						this.velocity.Y = 3f;
					}
				}
				float num12 = (float)(Main.maxTilesX / 4200);
				num12 *= num12;
				float num13 = (float)((double)(this.position.Y / 16f - (60f + 10f * num12)) / (Main.worldSurface / 6.0));
				if ((double)num13 < 0.25)
				{
					num13 = 0.25f;
				}
				if (num13 > 1f)
				{
					num13 = 1f;
				}
				NPC.gravity *= num13;
				if (this.wet)
				{
					if (this.honeyWet)
					{
						NPC.gravity = 0.1f;
						num11 = 4f;
					}
					else
					{
						NPC.gravity = 0.2f;
						num11 = 7f;
					}
				}
				if (this.soundDelay > 0)
				{
					this.soundDelay--;
				}
				if (this.life <= 0)
				{
					this.active = false;
				}
				this.oldTarget = this.target;
				this.oldDirection = this.direction;
				this.oldDirectionY = this.directionY;
				float num14 = 1f + Math.Abs(this.velocity.X) / 3f;
				if (this.gfxOffY > 0f)
				{
					this.gfxOffY -= num14 * this.stepSpeed;
					if (this.gfxOffY < 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				else if (this.gfxOffY < 0f)
				{
					this.gfxOffY += num14 * this.stepSpeed;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY = 0f;
					}
				}
				if (this.gfxOffY > 16f)
				{
					this.gfxOffY = 16f;
				}
				if (this.gfxOffY < -16f)
				{
					this.gfxOffY = -16f;
				}
				this.AI();
				if (Main.netMode != 2)
				{
					if (this.type >= 362 && this.type <= 365)
					{
						if (Main.dayTime && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(30, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 361)
					{
						if ((double)Math.Abs(this.velocity.X) < 0.5 && (!Main.dayTime || (double)this.position.Y > Main.worldSurface * 16.0) && Main.rand.Next(200) == 0)
						{
							Main.PlaySound(31, (int)this.position.X, (int)this.position.Y, 1);
						}
					}
					else if (this.type == 74 || this.type == 297 || this.type == 298)
					{
						if (Main.dayTime && Main.time < 18000.0 && Main.rand.Next(400) == 0)
						{
							if (this.type == 74)
							{
								if (Main.rand.Next(3) != 0)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 14);
								}
								else
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 18);
								}
							}
							if (this.type == 297)
							{
								Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 16);
							}
							if (this.type == 298)
							{
								if (Main.rand.Next(3) != 0)
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 17);
								}
								else
								{
									Main.PlaySound(32, (int)this.position.X, (int)this.position.Y, 19);
								}
							}
						}
					}
					else if (this.type == 300 && Main.rand.Next(1800) == 0)
					{
						Main.PlaySound(33, (int)this.position.X, (int)this.position.Y, 1);
					}
				}
				if (this.type == 44)
				{
					Lighting.addLight((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + 4f) / 16, 0.9f, 0.75f, 0.5f);
				}
				for (int m = 0; m < 256; m++)
				{
					if (this.immune[m] > 0)
					{
						this.immune[m]--;
					}
				}
				if (!this.noGravity && !this.noTileCollide)
				{
					int num15 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int num16 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (Main.tile[num15, num16] == null)
					{
						NPC.gravity = 0f;
						this.velocity.X = 0f;
						this.velocity.Y = 0f;
					}
				}
				if (!this.noGravity)
				{
					this.velocity.Y = this.velocity.Y + NPC.gravity;
					if (this.velocity.Y > num11)
					{
						this.velocity.Y = num11;
					}
				}
				if ((double)this.velocity.X < 0.005 && (double)this.velocity.X > -0.005)
				{
					this.velocity.X = 0f;
				}
				if (Main.netMode != 1 && this.type != 37 && (this.friendly || this.type == 46 || this.type == 55 || this.type == 74 || this.type == 148 || this.type == 149 || this.type == 230 || this.type == 297 || this.type == 298 || this.type == 299 || this.type == 303 || this.type == 355 || this.type == 356 || this.type == 358 || this.type == 359 || this.type == 360 || this.type == 361 || this.type == 362 || this.type == 363 || this.type == 364 || this.type == 365 || this.type == 366 || this.type == 367))
				{
					if (this.life < this.lifeMax)
					{
						this.friendlyRegen++;
						if (this.friendlyRegen > 300)
						{
							this.friendlyRegen = 0;
							this.life++;
							this.netUpdate = true;
						}
					}
					if (this.immune[255] == 0)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						for (int n = 0; n < 200; n++)
						{
							if (Main.npc[n].active && !Main.npc[n].friendly && Main.npc[n].damage > 0)
							{
								Rectangle rectangle2 = new Rectangle((int)Main.npc[n].position.X, (int)Main.npc[n].position.Y, Main.npc[n].width, Main.npc[n].height);
								if (rectangle.Intersects(rectangle2))
								{
									int num17 = Main.npc[n].damage;
									int num18 = 6;
									int num19 = 1;
									if (Main.npc[n].position.X + (float)(Main.npc[n].width / 2) > this.position.X + (float)(this.width / 2))
									{
										num19 = -1;
									}
									Main.npc[i].StrikeNPC(num17, (float)num18, num19, false, false);
									if (Main.netMode != 0)
									{
										NetMessage.SendData(28, -1, -1, "", i, (float)num17, (float)num18, (float)num19, 0);
									}
									this.netUpdate = true;
									this.immune[255] = 30;
								}
							}
						}
					}
				}
				if (!this.noTileCollide)
				{
					Vector4 vector = Collision.WalkDownSlope(this.position, this.velocity, this.width, this.height, NPC.gravity);
					this.position.X = vector.X;
					this.position.Y = vector.Y;
					this.velocity.X = vector.Z;
					this.velocity.Y = vector.W;
					bool flag3 = Collision.LavaCollision(this.position, this.width, this.height);
					if (flag3)
					{
						this.lavaWet = true;
						if (!this.lavaImmune && !this.dontTakeDamage && Main.netMode != 1 && this.immune[255] == 0)
						{
							this.AddBuff(24, 420, false);
							this.immune[255] = 30;
							this.StrikeNPC(50, 0f, 0, false, false);
							if (Main.netMode == 2 && Main.netMode != 0)
							{
								NetMessage.SendData(28, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0);
							}
						}
					}
					bool flag4;
					if (this.type == 72 || this.aiStyle == 21 || this.aiStyle == 67 || this.type == 376)
					{
						flag4 = false;
						this.wetCount = 0;
						flag3 = false;
					}
					else
					{
						flag4 = Collision.WetCollision(this.position, this.width, this.height);
						if (Collision.honey)
						{
							this.honeyWet = true;
						}
					}
					if (flag4)
					{
						if (this.onFire && !this.lavaWet && Main.netMode != 1)
						{
							for (int num20 = 0; num20 < 5; num20++)
							{
								if (this.buffType[num20] == 24)
								{
									this.DelBuff(num20);
								}
							}
						}
						if (!this.wet && this.wetCount == 0)
						{
							this.wetCount = 10;
							if (!flag3)
							{
								if (this.honeyWet)
								{
									for (int num21 = 0; num21 < 10; num21++)
									{
										int num22 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
										Dust expr_14C1_cp_0 = Main.dust[num22];
										expr_14C1_cp_0.velocity.Y = expr_14C1_cp_0.velocity.Y - 1f;
										Dust expr_14DF_cp_0 = Main.dust[num22];
										expr_14DF_cp_0.velocity.X = expr_14DF_cp_0.velocity.X * 2.5f;
										Main.dust[num22].scale = 1.3f;
										Main.dust[num22].alpha = 100;
										Main.dust[num22].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int num23 = 0; num23 < 30; num23++)
									{
										int num24 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
										Dust expr_1634_cp_0 = Main.dust[num24];
										expr_1634_cp_0.velocity.Y = expr_1634_cp_0.velocity.Y - 4f;
										Dust expr_1652_cp_0 = Main.dust[num24];
										expr_1652_cp_0.velocity.X = expr_1652_cp_0.velocity.X * 2.5f;
										Main.dust[num24].scale *= 0.8f;
										Main.dust[num24].alpha = 100;
										Main.dust[num24].noGravity = true;
									}
									if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
							}
							else
							{
								for (int num25 = 0; num25 < 10; num25++)
								{
									int num26 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
									Dust expr_17F8_cp_0 = Main.dust[num26];
									expr_17F8_cp_0.velocity.Y = expr_17F8_cp_0.velocity.Y - 1.5f;
									Dust expr_1816_cp_0 = Main.dust[num26];
									expr_1816_cp_0.velocity.X = expr_1816_cp_0.velocity.X * 2.5f;
									Main.dust[num26].scale = 1.3f;
									Main.dust[num26].alpha = 100;
									Main.dust[num26].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
						this.wet = true;
					}
					else if (this.wet)
					{
						this.velocity.X = this.velocity.X * 0.5f;
						this.wet = false;
						if (this.wetCount == 0)
						{
							this.wetCount = 10;
							if (!this.lavaWet)
							{
								if (this.honeyWet)
								{
									for (int num27 = 0; num27 < 10; num27++)
									{
										int num28 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
										Dust expr_19AC_cp_0 = Main.dust[num28];
										expr_19AC_cp_0.velocity.Y = expr_19AC_cp_0.velocity.Y - 1f;
										Dust expr_19CA_cp_0 = Main.dust[num28];
										expr_19CA_cp_0.velocity.X = expr_19CA_cp_0.velocity.X * 2.5f;
										Main.dust[num28].scale = 1.3f;
										Main.dust[num28].alpha = 100;
										Main.dust[num28].noGravity = true;
									}
									if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 147 && this.type != 300 && this.type != 59 && this.aiStyle != 39 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
									}
								}
								else
								{
									for (int num29 = 0; num29 < 30; num29++)
									{
										int num30 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
										Dust expr_1B1F_cp_0 = Main.dust[num30];
										expr_1B1F_cp_0.velocity.Y = expr_1B1F_cp_0.velocity.Y - 4f;
										Dust expr_1B3D_cp_0 = Main.dust[num30];
										expr_1B3D_cp_0.velocity.X = expr_1B3D_cp_0.velocity.X * 2.5f;
										Main.dust[num30].scale *= 0.8f;
										Main.dust[num30].alpha = 100;
										Main.dust[num30].noGravity = true;
									}
									if (this.type != 376 && this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && this.aiStyle != 68 && this.type != 362 && this.type != 364 && this.type != 361 && !this.noGravity)
									{
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0);
									}
								}
							}
							else
							{
								for (int num31 = 0; num31 < 10; num31++)
								{
									int num32 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
									Dust expr_1CD3_cp_0 = Main.dust[num32];
									expr_1CD3_cp_0.velocity.Y = expr_1CD3_cp_0.velocity.Y - 1.5f;
									Dust expr_1CF1_cp_0 = Main.dust[num32];
									expr_1CF1_cp_0.velocity.X = expr_1CF1_cp_0.velocity.X * 2.5f;
									Main.dust[num32].scale = 1.3f;
									Main.dust[num32].alpha = 100;
									Main.dust[num32].noGravity = true;
								}
								if (this.aiStyle != 1 && this.type != 1 && this.type != 16 && this.type != 59 && this.type != 300 && this.aiStyle != 39 && !this.noGravity)
								{
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
								}
							}
						}
					}
					if (!this.wet)
					{
						this.lavaWet = false;
						this.honeyWet = false;
					}
					if (this.wetCount > 0)
					{
						this.wetCount = (byte)(this.wetCount - 1);
					}
					bool flag5 = false;
					if (this.aiStyle == 10)
					{
						flag5 = true;
					}
					if (this.aiStyle == 14)
					{
						flag5 = true;
					}
					if (this.aiStyle == 3 && this.directionY == 1)
					{
						flag5 = true;
					}
					if (this.type == 247 || this.type == 248)
					{
						flag5 = true;
					}
					if (this.type == 245 && this.target >= 0 && Main.player[this.target].position.Y > this.position.Y + (float)this.height)
					{
						flag5 = true;
					}
					this.oldVelocity = this.velocity;
					this.collideX = false;
					this.collideY = false;
					int num33 = 16;
					if (this.aiStyle == 7)
					{
						bool flag6 = false;
						if (!Main.dayTime || Main.invasionType > 0 || Main.eclipse)
						{
							flag6 = true;
						}
						else
						{
							int num34 = (int)(this.position.Y + (float)this.height) / 16;
							if (this.homeTileY - num34 > num33)
							{
								flag5 = true;
							}
						}
						if (flag6 && (this.position.Y + (float)this.height - 8f) / 16f < (float)(this.homeTileY - 1))
						{
							flag5 = true;
						}
					}
					if (Main.netMode != 1)
					{
						if (this.type == 230 && this.wet)
						{
							int num35 = this.direction;
							Vector2 vector2 = this.velocity;
							this.Transform(55);
							this.direction = num35;
							this.velocity = vector2;
							this.wet = true;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						else if (this.type == 55 && !this.wet && Main.raining)
						{
							int num36 = this.direction;
							Vector2 vector3 = this.velocity;
							this.Transform(230);
							this.direction = num36;
							this.velocity = vector3;
							this.homeTileX = (int)(this.position.X / 16f) + 10 * this.direction;
						}
					}
					Vector2 vector4 = this.position;
					int num37 = this.width;
					int num38 = this.height;
					if (this.type == 243)
					{
						num38 = 90;
					}
					if (this.type == 290)
					{
						num38 = 40;
					}
					if (this.type == 351)
					{
						num38 = 40;
					}
					if (this.type == 351 || this.type == 343 || this.type == 348 || this.type == 349)
					{
						num38 = 40;
					}
					if (num38 != this.height)
					{
						vector4.Y += (float)(this.height - num38);
					}
					if (this.wet)
					{
						if (this.honeyWet)
						{
							Vector2 vector5 = this.velocity;
							this.velocity = Collision.TileCollision(vector4, this.velocity, num37, num38, flag5, flag5, 1);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value = this.velocity * 0.25f;
							if (this.velocity.X != vector5.X)
							{
								value.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != vector5.Y)
							{
								value.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.position += value;
						}
						else
						{
							Vector2 vector6 = this.velocity;
							this.velocity = Collision.TileCollision(vector4, this.velocity, num37, num38, flag5, flag5, 1);
							if (Collision.up)
							{
								this.velocity.Y = 0.01f;
							}
							Vector2 value2 = this.velocity * 0.5f;
							if (this.velocity.X != vector6.X)
							{
								value2.X = this.velocity.X;
								this.collideX = true;
							}
							if (this.velocity.Y != vector6.Y)
							{
								value2.Y = this.velocity.Y;
								this.collideY = true;
							}
							this.oldPosition = this.position;
							this.position += value2;
						}
					}
					else
					{
						if (this.type == 72)
						{
							Vector2 vector7 = new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2));
							int num39 = 12;
							int num40 = 12;
							vector7.X -= (float)(num39 / 2);
							vector7.Y -= (float)(num40 / 2);
							this.velocity = Collision.noSlopeCollision(vector7, this.velocity, num39, num40, true, true);
						}
						else
						{
							this.velocity = Collision.TileCollision(vector4, this.velocity, num37, num38, flag5, flag5, 1);
						}
						if (Collision.up)
						{
							this.velocity.Y = 0.01f;
						}
						if (this.oldVelocity.X != this.velocity.X)
						{
							this.collideX = true;
						}
						if (this.oldVelocity.Y != this.velocity.Y)
						{
							this.collideY = true;
						}
						this.oldPosition = this.position;
						this.position += this.velocity;
					}
					if (this.aiStyle == 67)
					{
						Vector4 vector8 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, false);
						if (this.position.X != vector8.X || this.position.Y != vector8.Y)
						{
							if (this.ai[2] == 0f && this.velocity.Y > 0f && ((this.direction < 0 && this.rotation == 1.57f && this.spriteDirection == 1) || (this.direction > 0 && this.rotation == 4.71f && this.spriteDirection == -1)))
							{
								this.direction *= -this.direction;
							}
							this.ai[2] = 2f;
							this.directionY = 1;
							this.rotation = 0f;
						}
						this.position.X = vector8.X;
						this.position.Y = vector8.Y;
						this.velocity.X = vector8.Z;
						this.velocity.Y = vector8.W;
					}
					else if (this.type != 72 && this.type != 247 && this.type != 248)
					{
						if (flag5)
						{
							this.stairFall = true;
						}
						if (this.aiStyle == 7)
						{
							bool flag7 = false;
							if (!Main.dayTime || Main.eclipse)
							{
								flag7 = true;
							}
							else
							{
								int num41 = (int)(this.position.Y + (float)this.height) / 16;
								if (this.homeTileY - num41 > num33)
								{
									flag7 = true;
								}
							}
							if (flag7)
							{
								if ((this.position.Y + (float)this.height - 8f) / 16f < (float)this.homeTileY)
								{
									this.stairFall = true;
								}
								else
								{
									this.stairFall = false;
								}
							}
						}
						Vector4 vector9 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, NPC.gravity, this.stairFall);
						if (Collision.stairFall)
						{
							this.stairFall = true;
						}
						else if (!flag5)
						{
							this.stairFall = false;
						}
						if (Collision.stair && Math.Abs(vector9.Y - this.position.Y) > 8f)
						{
							this.gfxOffY -= vector9.Y - this.position.Y;
							this.stepSpeed = 2f;
						}
						this.position.X = vector9.X;
						this.position.Y = vector9.Y;
						this.velocity.X = vector9.Z;
						this.velocity.Y = vector9.W;
					}
				}
				else
				{
					this.oldPosition = this.position;
					this.position += this.velocity;
				}
				if (Main.netMode != 1 && !this.noTileCollide && this.lifeMax > 1 && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 2) && (this.type == 46 || this.type == 148 || this.type == 149 || this.type == 303 || this.type == 361 || this.type == 362 || this.type == 364 || this.type == 366 || this.type == 367))
				{
					this.ai[0] = 1f;
					this.ai[1] = 400f;
					this.ai[2] = 0f;
				}
				this.FindFrame();
				if (this.type == 370 || this.type == 372 || this.type == 373)
				{
					for (int num42 = this.oldPos.Length - 1; num42 > 0; num42--)
					{
						this.oldPos[num42] = this.oldPos[num42 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (this.type == 120 || this.type == 137 || this.type == 138)
				{
					for (int num43 = this.oldPos.Length - 1; num43 > 0; num43--)
					{
						this.oldPos[num43] = this.oldPos[num43 - 1];
						Lighting.addLight((int)this.position.X / 16, (int)this.position.Y / 16, 0.3f, 0f, 0.2f);
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 94)
				{
					for (int num44 = this.oldPos.Length - 1; num44 > 0; num44--)
					{
						this.oldPos[num44] = this.oldPos[num44 - 1];
					}
					this.oldPos[0] = this.position;
				}
				else if (this.type == 125 || this.type == 126 || this.type == 127 || this.type == 128 || this.type == 129 || this.type == 130 || this.type == 131 || this.type == 139 || this.type == 140)
				{
					for (int num45 = this.oldPos.Length - 1; num45 > 0; num45--)
					{
						this.oldPos[num45] = this.oldPos[num45 - 1];
					}
					this.oldPos[0] = this.position;
				}
				if (!this.active)
				{
					this.netUpdate = true;
				}
				if (Main.netMode == 2)
				{
					if (Main.npcStreamSpeed > 0 && !this.townNPC && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 1f)
					{
						this.netStream = (byte)(this.netStream + 1);
						if ((int)this.netStream > Main.npcStreamSpeed)
						{
							for (int num46 = 0; num46 < 255; num46++)
							{
								if (Main.player[num46].active)
								{
									float num47 = Math.Abs(this.center().X - Main.player[num46].center().X) + Math.Abs(this.center().Y - Main.player[num46].center().Y);
									if (num47 < 250f)
									{
										byte[] expr_2A71_cp_0 = this.streamPlayer;
										int expr_2A71_cp_1 = num46;
										expr_2A71_cp_0[expr_2A71_cp_1] = (byte)(expr_2A71_cp_0[expr_2A71_cp_1] - 8);
									}
									else if (num47 < 500f)
									{
										byte[] expr_2A97_cp_0 = this.streamPlayer;
										int expr_2A97_cp_1 = num46;
										expr_2A97_cp_0[expr_2A97_cp_1] = (byte)(expr_2A97_cp_0[expr_2A97_cp_1] - 4);
									}
									else if (num47 < 1000f)
									{
										byte[] expr_2ABD_cp_0 = this.streamPlayer;
										int expr_2ABD_cp_1 = num46;
										expr_2ABD_cp_0[expr_2ABD_cp_1] = (byte)(expr_2ABD_cp_0[expr_2ABD_cp_1] - 2);
									}
									else if (num47 < 1500f)
									{
										byte[] expr_2AE3_cp_0 = this.streamPlayer;
										int expr_2AE3_cp_1 = num46;
										expr_2AE3_cp_0[expr_2AE3_cp_1] = (byte)(expr_2AE3_cp_0[expr_2AE3_cp_1] - 1);
									}
									if (this.streamPlayer[num46] <= 0)
									{
										this.streamPlayer[num46] = 8;
										NetMessage.SendData(23, num46, -1, "", i, 0f, 0f, 0f, 0);
									}
								}
							}
						}
					}
					if (this.townNPC)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate2)
					{
						this.netUpdate = true;
					}
					if (!this.active)
					{
						this.netSpam = 0;
					}
					if (this.netUpdate)
					{
						if (this.netSpam <= 90)
						{
							this.netSpam += 30;
							NetMessage.SendData(23, -1, -1, "", i, 0f, 0f, 0f, 0);
							this.netUpdate2 = false;
						}
						else
						{
							this.netUpdate2 = true;
						}
					}
					if (this.netSpam > 0)
					{
						this.netSpam--;
					}
					if (this.active && this.townNPC && NPC.TypeToNum(this.type) != -1)
					{
						if (this.homeless != this.oldHomeless || this.homeTileX != this.oldHomeTileX || this.homeTileY != this.oldHomeTileY)
						{
							int num48 = 0;
							if (this.homeless)
							{
								num48 = 1;
							}
							NetMessage.SendData(60, -1, -1, "", i, (float)Main.npc[i].homeTileX, (float)Main.npc[i].homeTileY, (float)num48, 0);
						}
						this.oldHomeless = this.homeless;
						this.oldHomeTileX = this.homeTileX;
						this.oldHomeTileY = this.homeTileY;
					}
				}
				this.CheckActive();
				this.netUpdate = false;
				this.justHit = false;
			}
		}
		public static void setFireFlyChance()
		{
			if (Main.rand == null)
			{
				Main.rand = new Random((int)DateTime.Now.Ticks);
			}
			if (WorldGen.genRand.Next(9) == 0)
			{
				NPC.fireFlyChance = Main.rand.Next(5, 10);
				NPC.fireFlyFriendly = Main.rand.Next(1, 4);
				NPC.fireFlyMultiple = Main.rand.Next(3, 8);
			}
			else if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.fireFlyChance = 999999;
				NPC.fireFlyFriendly = 999999;
				NPC.fireFlyMultiple = 999999;
			}
			else
			{
				NPC.fireFlyChance = Main.rand.Next(10, 60);
				NPC.fireFlyFriendly = Main.rand.Next(2, 15);
				NPC.fireFlyMultiple = Main.rand.Next(6, 30);
			}
			NPC.butterflyChance = Main.rand.Next(1, 25);
			if (WorldGen.genRand.Next(3) == 0)
			{
				NPC.butterflyChance = 999999;
			}
		}
		public Color GetAlpha(Color newColor)
		{
			float num = (float)(255 - this.alpha) / 255f;
			int num2 = (int)((float)newColor.R * num);
			int num3 = (int)((float)newColor.G * num);
			int num4 = (int)((float)newColor.B * num);
			int num5 = (int)newColor.A - this.alpha;
			if (this.type == 370 && this.ai[0] != -1f)
			{
				float num6 = MathHelper.Lerp(num, 1f, 0.25f);
				if (num6 > 1f)
				{
					num6 = 1f;
				}
				num4 = (int)((float)newColor.B * num6);
			}
			if (this.type == 25 || this.type == 30 || this.type == 59 || this.type == 60)
			{
				return new Color(200, 200, 200, 0);
			}
			if (this.type == 360)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
				if (num2 < 75)
				{
					num2 = 75;
				}
				if (num3 < 175)
				{
					num3 = 175;
				}
				if (num4 < 255)
				{
					num4 = 255;
				}
				return new Color(num2, num3, num4, 255);
			}
			if (this.type == 352)
			{
				return new Color(255, 255, 255, 200);
			}
			if (this.type == 72)
			{
				num2 = (int)newColor.R;
				num3 = (int)newColor.G;
				num4 = (int)newColor.B;
			}
			else
			{
				if (this.type == 288)
				{
					return new Color(200, 200, 200, 0);
				}
				if (this.type == 289)
				{
					return new Color(250, 250, 250, 50);
				}
				if (this.type >= 254 && this.type <= 261)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 374)
				{
					num4 = 255;
					if (num2 < 100)
					{
						num2 = 100;
					}
					if (num3 < 150)
					{
						num3 = 150;
					}
				}
				else if (this.type == 64 || this.type == 63 || this.type == 75 || this.type == 103)
				{
					num2 = (int)((double)newColor.R * 1.5);
					num3 = (int)((double)newColor.G * 1.5);
					num4 = (int)((double)newColor.B * 1.5);
					if (num2 > 255)
					{
						num2 = 255;
					}
					if (num3 > 255)
					{
						num3 = 255;
					}
					if (num4 > 255)
					{
						num4 = 255;
					}
				}
			}
			if (num5 < 0)
			{
				num5 = 0;
			}
			if (num5 > 255)
			{
				num5 = 255;
			}
			return new Color(num2, num3, num4, num5);
		}
		public Color GetColor(Color newColor)
		{
			int num = (int)this.color.R - (255 - newColor.R);
			int num2 = (int)this.color.G - (255 - newColor.G);
			int num3 = (int)this.color.B - (255 - newColor.B);
			int num4 = (int)this.color.A - (255 - newColor.A);
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}
		public string GetChat()
		{
			Recipe.FindRecipes();
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			bool flag8 = false;
			bool flag9 = false;
			bool flag10 = false;
			bool flag11 = false;
			bool flag12 = false;
			bool flag13 = false;
			bool flag14 = false;
			bool flag15 = false;
			bool flag16 = false;
			bool flag17 = false;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].active)
				{
					if (Main.npc[i].type == 17)
					{
						flag = true;
					}
					else if (Main.npc[i].type == 18)
					{
						flag2 = true;
					}
					else if (Main.npc[i].type == 19)
					{
						flag3 = true;
					}
					else if (Main.npc[i].type == 20)
					{
						flag4 = true;
					}
					else if (Main.npc[i].type == 37)
					{
						flag5 = true;
					}
					else if (Main.npc[i].type == 38)
					{
						flag6 = true;
					}
					else if (Main.npc[i].type == 124)
					{
						flag7 = true;
					}
					else if (Main.npc[i].type == 107)
					{
						flag8 = true;
					}
					else if (Main.npc[i].type == 54)
					{
						flag9 = true;
					}
					else if (Main.npc[i].type == 160)
					{
						flag10 = true;
					}
					else if (Main.npc[i].type == 178)
					{
						flag11 = true;
					}
					else if (Main.npc[i].type == 229)
					{
						flag12 = true;
					}
					else if (Main.npc[i].type == 209)
					{
						flag13 = true;
					}
					else if (Main.npc[i].type == 208)
					{
						flag14 = true;
					}
					else if (Main.npc[i].type == 353)
					{
						flag15 = true;
					}
					else if (Main.npc[i].type == 22)
					{
						flag16 = true;
					}
					else if (Main.npc[i].type == 2)
					{
						flag17 = true;
					}
				}
			}
			string result = "";
			if (this.type == 17)
			{
				if (!NPC.downedBoss1 && Main.rand.Next(3) == 0)
				{
					if (Main.player[Main.myPlayer].statLifeMax < 200)
					{
						result = Lang.dialog(1, false);
					}
					else if (Main.player[Main.myPlayer].statDefense <= 10)
					{
						result = Lang.dialog(2, false);
					}
					else
					{
						result = Lang.dialog(3, false);
					}
				}
				else if (Main.dayTime)
				{
					if (Main.time < 16200.0)
					{
						int num = Main.rand.Next(3);
						if (num == 0)
						{
							result = Lang.dialog(4, false);
						}
						else if (num == 1)
						{
							result = Lang.dialog(5, false);
						}
						else
						{
							result = Lang.dialog(6, false);
						}
					}
					else if (Main.time > 37800.0)
					{
						int num2 = Main.rand.Next(3);
						if (num2 == 0)
						{
							result = Lang.dialog(7, false);
						}
						else if (num2 == 1)
						{
							result = Lang.dialog(8, false);
						}
						else
						{
							result = Lang.dialog(9, false);
						}
					}
					else
					{
						int num3 = Main.rand.Next(3);
						if (num3 == 0)
						{
							result = Lang.dialog(10, false);
						}
						else if (num3 == 1)
						{
							result = Lang.dialog(11, false);
						}
						else
						{
							result = Lang.dialog(12, false);
						}
					}
				}
				else if (Main.bloodMoon)
				{
					if (flag2 && flag7 && Main.rand.Next(3) == 0)
					{
						result = Lang.dialog(13, false);
					}
					else
					{
						int num4 = Main.rand.Next(4);
						if (num4 == 0)
						{
							result = Lang.dialog(14, false);
						}
						else if (num4 == 1)
						{
							result = Lang.dialog(15, false);
						}
						else if (num4 == 2)
						{
							result = Lang.dialog(16, false);
						}
						else
						{
							result = Lang.dialog(17, false);
						}
					}
				}
				else if (Main.time < 9720.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(18, false);
					}
					else
					{
						result = Lang.dialog(19, false);
					}
				}
				else if (Main.time > 22680.0)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(20, false);
					}
					else
					{
						result = Lang.dialog(21, false);
					}
				}
				else
				{
					int num5 = Main.rand.Next(3);
					if (num5 == 0)
					{
						result = Lang.dialog(22, false);
					}
					else if (num5 == 1)
					{
						result = Lang.dialog(23, false);
					}
					else
					{
						result = Lang.dialog(24, false);
					}
				}
			}
			else if (this.type == 18)
			{
				if (Main.bloodMoon)
				{
					if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
					{
						int num6 = Main.rand.Next(3);
						if (num6 == 0)
						{
							result = Lang.dialog(25, false);
						}
						else if (num6 == 1)
						{
							result = Lang.dialog(26, false);
						}
						else
						{
							result = Lang.dialog(27, false);
						}
					}
					else
					{
						int num7 = Main.rand.Next(4);
						if (num7 == 0)
						{
							result = Lang.dialog(28, false);
						}
						else if (num7 == 1)
						{
							result = Lang.dialog(29, false);
						}
						else if (num7 == 2)
						{
							result = Lang.dialog(30, false);
						}
						else
						{
							result = Lang.dialog(31, false);
						}
					}
				}
				else if (Main.rand.Next(3) == 0 && !NPC.downedBoss3)
				{
					result = Lang.dialog(32, false);
				}
				else if (flag6 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(33, false);
				}
				else if (flag3 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(34, false);
				}
				else if (flag17 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(35, false);
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.33)
				{
					int num8 = Main.rand.Next(5);
					if (num8 == 0)
					{
						result = Lang.dialog(36, false);
					}
					else if (num8 == 1)
					{
						result = Lang.dialog(37, false);
					}
					else if (num8 == 2)
					{
						result = Lang.dialog(38, false);
					}
					else if (num8 == 3)
					{
						result = Lang.dialog(39, false);
					}
					else
					{
						result = Lang.dialog(40, false);
					}
				}
				else if ((double)Main.player[Main.myPlayer].statLife < (double)Main.player[Main.myPlayer].statLifeMax2 * 0.66)
				{
					int num9 = Main.rand.Next(7);
					if (num9 == 0)
					{
						result = Lang.dialog(41, false);
					}
					else if (num9 == 1)
					{
						result = Lang.dialog(42, false);
					}
					else if (num9 == 2)
					{
						result = Lang.dialog(43, false);
					}
					else if (num9 == 3)
					{
						result = Lang.dialog(44, false);
					}
					else if (num9 == 4)
					{
						result = Lang.dialog(45, false);
					}
					else if (num9 == 5)
					{
						result = Lang.dialog(46, false);
					}
					else
					{
						result = Lang.dialog(47, false);
					}
				}
				else
				{
					int num10 = Main.rand.Next(4);
					if (num10 == 0)
					{
						result = Lang.dialog(48, false);
					}
					else if (num10 == 1)
					{
						result = Lang.dialog(49, false);
					}
					else if (num10 == 2)
					{
						result = Lang.dialog(50, false);
					}
					else
					{
						result = Lang.dialog(51, false);
					}
				}
			}
			else if (this.type == 19)
			{
				if (NPC.downedBoss3 && !Main.hardMode)
				{
					result = Lang.dialog(58, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(59, false);
				}
				else if (flag2 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(60, false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(61, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(62, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(63, false);
				}
				else if (Main.bloodMoon)
				{
					if (Main.rand.Next(2) == 0)
					{
						result = Lang.dialog(64, false);
					}
					else
					{
						result = Lang.dialog(65, false);
					}
				}
				else
				{
					int num11 = Main.rand.Next(3);
					if (num11 == 0)
					{
						result = Lang.dialog(66, false);
					}
					else if (num11 == 1)
					{
						result = Lang.dialog(67, false);
					}
					else
					{
						result = Lang.dialog(68, false);
					}
				}
			}
			else if (this.type == 20)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					if (WorldGen.crimson)
					{
						result = Lang.dialog(332, false);
					}
					else
					{
						result = Lang.dialog(69, false);
					}
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(70, false);
				}
				else if (flag && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(71, false);
				}
				else if (flag5 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(72, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(238, false);
				}
				else if (Main.bloodMoon)
				{
					int num12 = Main.rand.Next(4);
					if (num12 == 0)
					{
						result = Lang.dialog(73, false);
					}
					else if (num12 == 1)
					{
						result = Lang.dialog(74, false);
					}
					else if (num12 == 2)
					{
						result = Lang.dialog(75, false);
					}
					else
					{
						result = Lang.dialog(76, false);
					}
				}
				else
				{
					int num13 = Main.rand.Next(5);
					if (num13 == 0)
					{
						if (WorldGen.crimson)
						{
							result = Lang.dialog(333, false);
						}
						else
						{
							result = Lang.dialog(77, false);
						}
					}
					else if (num13 == 1)
					{
						result = Lang.dialog(78, false);
					}
					else if (num13 == 2)
					{
						result = Lang.dialog(79, false);
					}
					else if (num13 == 3)
					{
						result = Lang.dialog(80, false);
					}
					else
					{
						result = Lang.dialog(81, false);
					}
				}
			}
			else if (this.type == 37)
			{
				if (Main.dayTime)
				{
					int num14 = Main.rand.Next(3);
					if (num14 == 0)
					{
						result = Lang.dialog(82, false);
					}
					else if (num14 == 1)
					{
						result = Lang.dialog(83, false);
					}
					else
					{
						result = Lang.dialog(84, false);
					}
				}
				else if (Main.player[Main.myPlayer].statLifeMax < 300 || Main.player[Main.myPlayer].statDefense < 10)
				{
					int num15 = Main.rand.Next(4);
					if (num15 == 0)
					{
						result = Lang.dialog(85, false);
					}
					else if (num15 == 1)
					{
						result = Lang.dialog(86, false);
					}
					else if (num15 == 2)
					{
						result = Lang.dialog(87, false);
					}
					else
					{
						result = Lang.dialog(88, false);
					}
				}
				else
				{
					int num16 = Main.rand.Next(4);
					if (num16 == 0)
					{
						result = Lang.dialog(89, false);
					}
					else if (num16 == 1)
					{
						result = Lang.dialog(90, false);
					}
					else if (num16 == 2)
					{
						result = Lang.dialog(91, false);
					}
					else
					{
						result = Lang.dialog(92, false);
					}
				}
			}
			else if (this.type == 38)
			{
				if (!NPC.downedBoss2 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(93, false);
				}
				if (Main.bloodMoon)
				{
					int num17 = Main.rand.Next(3);
					if (num17 == 0)
					{
						result = Lang.dialog(94, false);
					}
					else if (num17 == 1)
					{
						result = Lang.dialog(95, false);
					}
					else
					{
						result = Lang.dialog(96, false);
					}
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(97, false);
				}
				else if (flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(98, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(99, false);
				}
				else if (flag4 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(100, false);
				}
				else if (!Main.dayTime)
				{
					int num18 = Main.rand.Next(4);
					if (num18 == 0)
					{
						result = Lang.dialog(101, false);
					}
					else if (num18 == 1)
					{
						result = Lang.dialog(102, false);
					}
					else if (num18 == 2)
					{
						result = Lang.dialog(103, false);
					}
					else
					{
						result = Lang.dialog(104, false);
					}
				}
				else
				{
					int num19 = Main.rand.Next(5);
					if (num19 == 0)
					{
						result = Lang.dialog(105, false);
					}
					else if (num19 == 1)
					{
						result = Lang.dialog(106, false);
					}
					else if (num19 == 2)
					{
						result = Lang.dialog(107, false);
					}
					else if (num19 == 3)
					{
						result = Lang.dialog(108, false);
					}
					else
					{
						result = Lang.dialog(109, false);
					}
				}
			}
			else if (this.type == 54)
			{
				if (!flag7 && Main.rand.Next(2) == 0)
				{
					result = Lang.dialog(110, false);
				}
				else if (flag10 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(237, false);
				}
				else if (Main.bloodMoon)
				{
					result = Lang.dialog(111, false);
				}
				else if (flag2 && Main.rand.Next(4) == 0)
				{
					result = Lang.dialog(112, false);
				}
				else if (Main.player[Main.myPlayer].head == 24)
				{
					result = Lang.dialog(113, false);
				}
				else
				{
					int num20 = Main.rand.Next(6);
					if (num20 == 0)
					{
						result = Lang.dialog(114, false);
					}
					else if (num20 == 1)
					{
						result = Lang.dialog(115, false);
					}
					else if (num20 == 2)
					{
						result = Lang.dialog(116, false);
					}
					else if (num20 == 3)
					{
						result = Lang.dialog(117, false);
					}
					else if (num20 == 4)
					{
						result = Lang.dialog(118, false);
					}
					else
					{
						result = Lang.dialog(119, false);
					}
				}
			}
			else if (this.type == 105)
			{
				result = Lang.dialog(120, false);
			}
			else if (this.type == 107)
			{
				if (this.homeless)
				{
					int num21 = Main.rand.Next(5);
					if (num21 == 0)
					{
						result = Lang.dialog(121, false);
					}
					else if (num21 == 1)
					{
						result = Lang.dialog(122, false);
					}
					else if (num21 == 2)
					{
						result = Lang.dialog(123, false);
					}
					else if (num21 == 3)
					{
						result = Lang.dialog(124, false);
					}
					else
					{
						result = Lang.dialog(125, false);
					}
				}
				else if (flag7 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(126, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(309, false);
				}
				else if (!Main.dayTime)
				{
					int num22 = Main.rand.Next(5);
					if (num22 == 0)
					{
						result = Lang.dialog(127, false);
					}
					else if (num22 == 1)
					{
						result = Lang.dialog(128, false);
					}
					else if (num22 == 2)
					{
						result = Lang.dialog(129, false);
					}
					else if (num22 == 3)
					{
						result = Lang.dialog(130, false);
					}
					else
					{
						result = Lang.dialog(131, false);
					}
				}
				else
				{
					int num23 = Main.rand.Next(5);
					if (num23 == 0)
					{
						result = Lang.dialog(132, false);
					}
					else if (num23 == 1)
					{
						result = Lang.dialog(133, false);
					}
					else if (num23 == 2)
					{
						result = Lang.dialog(134, false);
					}
					else if (num23 == 3)
					{
						result = Lang.dialog(135, false);
					}
					else
					{
						result = Lang.dialog(136, false);
					}
				}
			}
			else if (this.type == 106)
			{
				result = Lang.dialog(137, false);
			}
			else if (this.type == 108)
			{
				if (this.homeless)
				{
					int num24 = Main.rand.Next(3);
					if (num24 == 0)
					{
						result = Lang.dialog(138, false);
					}
					else if (num24 == 1 && !Main.player[Main.myPlayer].male)
					{
						result = Lang.dialog(139, false);
					}
					else if (num24 == 1)
					{
						result = Lang.dialog(140, false);
					}
					else if (num24 == 2)
					{
						result = Lang.dialog(141, false);
					}
				}
				else if (Main.player[Main.myPlayer].male && flag17 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(142, false);
				}
				else if (Main.player[Main.myPlayer].male && flag6 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(143, false);
				}
				else if (Main.player[Main.myPlayer].male && flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(144, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(145, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag7 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(146, false);
				}
				else if (!Main.player[Main.myPlayer].male && flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(147, false);
				}
				else if (!Main.dayTime)
				{
					int num25 = Main.rand.Next(3);
					if (num25 == 0)
					{
						result = Lang.dialog(148, false);
					}
					else if (num25 == 1)
					{
						result = Lang.dialog(149, false);
					}
					else if (num25 == 2)
					{
						result = Lang.dialog(150, false);
					}
				}
				else
				{
					int num26 = Main.rand.Next(5);
					if (num26 == 0)
					{
						result = Lang.dialog(151, false);
					}
					else if (num26 == 1)
					{
						result = Lang.dialog(152, false);
					}
					else if (num26 == 2)
					{
						result = Lang.dialog(153, false);
					}
					else if (num26 == 3)
					{
						result = Lang.dialog(154, false);
					}
					else
					{
						result = Lang.dialog(155, false);
					}
				}
			}
			else if (this.type == 123)
			{
				result = Lang.dialog(156, false);
			}
			else if (this.type == 124)
			{
				if (this.homeless)
				{
					int num27 = Main.rand.Next(4);
					if (num27 == 0)
					{
						result = Lang.dialog(157, false);
					}
					else if (num27 == 1)
					{
						result = Lang.dialog(158, false);
					}
					else if (num27 == 2)
					{
						result = Lang.dialog(159, false);
					}
					else
					{
						result = Lang.dialog(160, false);
					}
				}
				else if (Main.bloodMoon)
				{
					int num28 = Main.rand.Next(4);
					if (num28 == 0)
					{
						result = Lang.dialog(161, false);
					}
					else if (num28 == 1)
					{
						result = Lang.dialog(162, false);
					}
					else if (num28 == 2)
					{
						result = Lang.dialog(163, false);
					}
					else
					{
						result = Lang.dialog(164, false);
					}
				}
				else if (flag8 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(165, false);
				}
				else if (flag3 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(166, false);
				}
				else
				{
					int num29 = Main.rand.Next(3);
					if (num29 == 0)
					{
						result = Lang.dialog(167, false);
					}
					else if (num29 == 1)
					{
						result = Lang.dialog(168, false);
					}
					else
					{
						result = Lang.dialog(169, false);
					}
				}
			}
			else if (this.type == 22)
			{
				if (Main.bloodMoon)
				{
					int num30 = Main.rand.Next(3);
					if (num30 == 0)
					{
						result = Lang.dialog(170, false);
					}
					else if (num30 == 1)
					{
						result = Lang.dialog(171, false);
					}
					else
					{
						result = Lang.dialog(172, false);
					}
				}
				else if (!Main.dayTime)
				{
					result = Lang.dialog(173, false);
				}
				else
				{
					int num31 = Main.rand.Next(3);
					if (num31 == 0)
					{
						result = Lang.dialog(174, false);
					}
					else if (num31 == 1)
					{
						result = Lang.dialog(175, false);
					}
					else
					{
						result = Lang.dialog(176, false);
					}
				}
			}
			else if (this.type == 142)
			{
				int num32 = Main.rand.Next(3);
				if (num32 == 0)
				{
					result = Lang.dialog(224, false);
				}
				else if (num32 == 1)
				{
					result = Lang.dialog(225, false);
				}
				else if (num32 == 2)
				{
					result = Lang.dialog(226, false);
				}
			}
			else if (this.type == 160)
			{
				int num33 = Main.rand.Next(6);
				if (flag4 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(232, false);
				}
				else if (flag9 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(236, false);
				}
				else if (num33 == 0)
				{
					result = Lang.dialog(231, false);
				}
				else if (num33 == 1)
				{
					result = Lang.dialog(233, false);
				}
				else if (num33 == 2)
				{
					result = Lang.dialog(234, false);
				}
				else if (num33 == 3)
				{
					result = Lang.dialog(235, false);
				}
				else if (num33 == 4)
				{
					result = Lang.dialog(240, false);
				}
				else if (num33 == 5)
				{
					result = Lang.dialog(241, false);
				}
			}
			else if (this.type == 178)
			{
				int num34 = Main.rand.Next(5);
				if (Main.bloodMoon && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(245, false);
				}
				else if (flag13 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(246, false);
				}
				else if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(247, false);
				}
				else if (num34 == 0)
				{
					result = Lang.dialog(242, false);
				}
				else if (num34 == 1)
				{
					result = Lang.dialog(243, false);
				}
				else if (num34 == 2)
				{
					result = Lang.dialog(244, false);
				}
				else if (num34 == 3)
				{
					result = Lang.dialog(248, false);
				}
				else if (num34 == 4)
				{
					result = Lang.dialog(249, false);
				}
			}
			else if (this.type == 207)
			{
				int num35 = Main.rand.Next(3);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(260, false);
				}
				else if (num35 == 0)
				{
					result = Lang.dialog(257, false);
				}
				else if (num35 == 1)
				{
					result = Lang.dialog(258, false);
				}
				else if (num35 == 2)
				{
					result = Lang.dialog(259, false);
				}
			}
			else if (this.type == 208)
			{
				int num36 = Main.rand.Next(7);
				if (Main.player[Main.myPlayer].male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(268, false);
				}
				else if (flag15 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(310, false);
				}
				else if (num36 == 0)
				{
					result = Lang.dialog(265, false);
				}
				else if (num36 == 1)
				{
					result = Lang.dialog(266, false);
				}
				else if (num36 == 2)
				{
					result = Lang.dialog(267, false);
				}
				else if (num36 == 3)
				{
					result = Lang.dialog(269, false);
				}
				else if (num36 == 4)
				{
					result = Lang.dialog(270, false);
				}
				else if (num36 == 5)
				{
					result = Lang.dialog(271, false);
				}
				else if (num36 == 6)
				{
					result = Lang.dialog(272, false);
				}
			}
			else if (this.type == 209)
			{
				int num37 = Main.rand.Next(5);
				if (flag12 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(284, false);
				}
				else if (flag11 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(283, false);
				}
				else if (num37 == 0)
				{
					result = Lang.dialog(280, false);
				}
				else if (num37 == 1)
				{
					result = Lang.dialog(281, false);
				}
				else if (num37 == 2)
				{
					result = Lang.dialog(282, false);
				}
				else if (num37 == 3)
				{
					result = Lang.dialog(285, false);
				}
				else if (num37 == 4)
				{
					result = Lang.dialog(286, false);
				}
			}
			else if (this.type == 227)
			{
				int num38 = Main.rand.Next(5);
				if (Main.hardMode && Main.rand.Next(7) == 0)
				{
					result = Lang.dialog(250, false);
				}
				else if (flag14 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(251, false);
				}
				else if (num38 == 0)
				{
					result = Lang.dialog(252, false);
				}
				else if (num38 == 1)
				{
					result = Lang.dialog(253, false);
				}
				else if (num38 == 2)
				{
					result = Lang.dialog(254, false);
				}
				else if (num38 == 3)
				{
					result = Lang.dialog(255, false);
				}
				else if (num38 == 4)
				{
					result = Lang.dialog(256, false);
				}
			}
			else if (this.type == 228)
			{
				int num39 = Main.rand.Next(3);
				if (flag2 && Main.rand.Next(6) == 0)
				{
					result = Lang.dialog(263, false);
				}
				else if (num39 == 0)
				{
					result = Lang.dialog(261, false);
				}
				else if (num39 == 1)
				{
					result = Lang.dialog(262, false);
				}
				else if (num39 == 2)
				{
					result = Lang.dialog(264, false);
				}
			}
			else if (this.type == 229)
			{
				int num40 = Main.rand.Next(6);
				if (!Main.player[Main.myPlayer].male && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(276, false);
				}
				else if (num40 == 0)
				{
					result = Lang.dialog(273, false);
				}
				else if (num40 == 1)
				{
					result = Lang.dialog(274, false);
				}
				else if (num40 == 2)
				{
					result = Lang.dialog(275, false);
				}
				else if (num40 == 3)
				{
					result = Lang.dialog(277, false);
				}
				else if (num40 == 4)
				{
					result = Lang.dialog(278, false);
				}
				else if (num40 == 5)
				{
					result = Lang.dialog(279, false);
				}
			}
			else if (this.type == 354)
			{
				result = Lang.dialog(Main.rand.Next(315, 319), false);
			}
			else if (this.type == 353)
			{
				if (Main.bloodMoon)
				{
					int num41 = Main.rand.Next(3);
					if (num41 == 0)
					{
						result = Lang.dialog(304, false);
					}
					else if (num41 == 1)
					{
						result = Lang.dialog(305, false);
					}
					else if (num41 == 2)
					{
						result = Lang.dialog(306, false);
					}
				}
				else if (Main.dayTime && Main.time < 16200.0 && Main.rand.Next(3) == 0)
				{
					result = Lang.dialog(311, false);
				}
				else if (Main.player[Main.myPlayer].male && Main.rand.Next(3) == 0)
				{
					int num42 = Main.rand.Next(2);
					if (num42 == 0)
					{
						result = Lang.dialog(293, false);
					}
					else if (num42 == 1)
					{
						result = Lang.dialog(300, false);
					}
				}
				else if (!Main.player[Main.myPlayer].male && Main.rand.Next(3) == 0)
				{
					int num43 = Main.rand.Next(3);
					if (num43 == 0)
					{
						result = Lang.dialog(291, false);
					}
					else if (num43 == 1)
					{
						result = Lang.dialog(292, false);
					}
					else if (num43 == 2)
					{
						result = Lang.dialog(312, false);
					}
				}
				else if (flag14 && flag7 && flag2 && flag3 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(307, false);
				}
				else if (flag14 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(302, false);
				}
				else if (flag6 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(303, false);
				}
				else if (flag13 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(308, false);
				}
				else if (Main.moonPhase < 3)
				{
					int num44 = Main.rand.Next(5);
					if (num44 == 0)
					{
						result = Lang.dialog(287, false);
					}
					else if (num44 == 1)
					{
						result = Lang.dialog(288, false);
					}
					else if (num44 == 2)
					{
						result = Lang.dialog(289, false);
					}
					else if (num44 == 3)
					{
						result = Lang.dialog(290, false);
					}
					else if (num44 == 4)
					{
						result = Lang.dialog(294, false);
					}
				}
				else if (Main.moonPhase < 6)
				{
					int num45 = Main.rand.Next(4);
					if (num45 == 0)
					{
						result = Lang.dialog(295, false);
					}
					else if (num45 == 1)
					{
						result = Lang.dialog(296, false);
					}
					else if (num45 == 2)
					{
						result = Lang.dialog(297, false);
					}
					else if (num45 == 3)
					{
						result = Lang.dialog(298, false);
					}
				}
				else
				{
					int num46 = Main.rand.Next(4);
					if (num46 == 0)
					{
						result = Lang.dialog(299, false);
					}
					else if (num46 == 1)
					{
						result = Lang.dialog(301, false);
					}
					else if (num46 == 2)
					{
						result = Lang.dialog(313, false);
					}
					else if (num46 == 3)
					{
						result = Lang.dialog(314, false);
					}
				}
			}
			else if (this.type == 368)
			{
				if (flag16 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(319, false);
				}
				else if (flag && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(320, false);
				}
				else if (flag9 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(321, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(322, 331), false);
				}
			}
			else if (this.type == 376)
			{
				result = Lang.dialog(Main.rand.Next(353, 356), false);
			}
			else if (this.type == 369)
			{
				if (Main.bloodMoon)
				{
					if (!Main.anglerQuestFinished)
					{
						result = Lang.dialog(Main.rand.Next(348, 350), false);
					}
					else
					{
						result = Lang.dialog(Main.rand.Next(350, 353), false);
					}
				}
				else if (!Main.anglerQuestFinished)
				{
					result = Lang.dialog(Main.rand.Next(334, 338), false);
				}
				else if (flag4 && Main.rand.Next(5) == 0)
				{
					result = Lang.dialog(347, false);
				}
				else
				{
					result = Lang.dialog(Main.rand.Next(338, 347), false);
				}
			}
			return result;
		}
		public object Clone()
		{
			return base.MemberwiseClone();
		}
	}
}
